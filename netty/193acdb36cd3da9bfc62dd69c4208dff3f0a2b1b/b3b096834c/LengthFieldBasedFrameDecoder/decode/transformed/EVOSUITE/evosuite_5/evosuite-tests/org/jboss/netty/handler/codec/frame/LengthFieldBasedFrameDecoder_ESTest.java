/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 04 14:16:32 GMT 2021
 */

package org.jboss.netty.handler.codec.frame;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.SocketAddress;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.charset.Charset;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.concurrent.ForkJoinPool;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.stream.Stream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jboss.netty.buffer.BigEndianHeapChannelBuffer;
import org.jboss.netty.buffer.ByteBufferBackedChannelBuffer;
import org.jboss.netty.buffer.ChannelBuffer;
import org.jboss.netty.buffer.ChannelBufferFactory;
import org.jboss.netty.buffer.CompositeChannelBuffer;
import org.jboss.netty.buffer.DirectChannelBufferFactory;
import org.jboss.netty.buffer.DuplicatedChannelBuffer;
import org.jboss.netty.buffer.DynamicChannelBuffer;
import org.jboss.netty.buffer.HeapChannelBufferFactory;
import org.jboss.netty.buffer.LittleEndianHeapChannelBuffer;
import org.jboss.netty.buffer.SlicedChannelBuffer;
import org.jboss.netty.buffer.TruncatedChannelBuffer;
import org.jboss.netty.channel.Channel;
import org.jboss.netty.channel.ChannelEvent;
import org.jboss.netty.channel.ChannelFuture;
import org.jboss.netty.channel.ChannelHandler;
import org.jboss.netty.channel.ChannelHandlerContext;
import org.jboss.netty.channel.ChannelPipeline;
import org.jboss.netty.channel.ChannelPipelineException;
import org.jboss.netty.channel.ChannelState;
import org.jboss.netty.channel.DefaultChannelPipeline;
import org.jboss.netty.channel.DefaultExceptionEvent;
import org.jboss.netty.channel.DefaultWriteCompletionEvent;
import org.jboss.netty.channel.DownstreamMessageEvent;
import org.jboss.netty.channel.SimpleChannelDownstreamHandler;
import org.jboss.netty.channel.StaticChannelPipeline;
import org.jboss.netty.channel.UpstreamChannelStateEvent;
import org.jboss.netty.channel.UpstreamMessageEvent;
import org.jboss.netty.channel.iostream.IOStreamChannel;
import org.jboss.netty.channel.iostream.IOStreamChannelFactory;
import org.jboss.netty.channel.local.DefaultLocalClientChannelFactory;
import org.jboss.netty.channel.local.DefaultLocalServerChannelFactory;
import org.jboss.netty.channel.local.LocalChannel;
import org.jboss.netty.channel.rxtx.RXTXChannelFactory;
import org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LengthFieldBasedFrameDecoder_ESTest extends LengthFieldBasedFrameDecoder_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      int int0 = 2847;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int0);
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2847, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2847, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2847, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2847, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2847, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2847, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      lengthFieldBasedFrameDecoder0.setdiscardingTooLongFrame(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2847, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2847, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2847, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2847, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2847, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2847, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      lengthFieldBasedFrameDecoder0.setbytesToDiscard(lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2847, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2847, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2847, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2847, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2847, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2847, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      int int0 = 6;
      int int1 = (-358);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldOffset must be a non-negative integer: -358
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      int int0 = (-18);
      byte byte0 = (byte)66;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, byte0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: -18
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      int int0 = 975;
      int int1 = 3;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int1, int0);
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(6, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(6, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      int int2 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(6, int2);
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(6, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(6, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      byte[] byteArray0 = new byte[15];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      try { 
        lengthFieldBasedFrameDecoder0.decodeLast(defaultChannelPipeline0.tail, defaultChannelPipeline0.channel, bigEndianHeapChannelBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Adjusted frame length (9) is less than initialBytesToStrip: 975
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      int int0 = 975;
      int int1 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int0);
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      long long0 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals(0L, long0);
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      int int2 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals(975, int2);
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertTrue(int2 == int0);
      
      lengthFieldBasedFrameDecoder0.settooLongFrameLength(lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(int0 == int1);
      assertTrue(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      
      int int3 = lengthFieldBasedFrameDecoder0.getmaxFrameLength();
      assertEquals(975, int3);
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(int0 == int1);
      assertTrue(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertTrue(int3 == int0);
      assertFalse(int3 == int1);
      assertTrue(int3 == int2);
      
      int int4 = lengthFieldBasedFrameDecoder0.getinitialBytesToStrip();
      assertEquals(975, int4);
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(int0 == int1);
      assertTrue(int0 == int3);
      assertTrue(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertTrue(int4 == int3);
      assertTrue(int4 == int2);
      assertFalse(int4 == int1);
      assertTrue(int4 == int0);
      
      long long1 = lengthFieldBasedFrameDecoder0.getbytesToDiscard();
      assertEquals(0L, long1);
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertTrue(int0 == int4);
      assertFalse(int0 == int1);
      assertTrue(int0 == int3);
      assertTrue(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertTrue(long1 == long0);
      
      int int5 = lengthFieldBasedFrameDecoder0.getlengthFieldLength();
      assertEquals(4, int5);
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertTrue(int0 == int4);
      assertFalse(int0 == int1);
      assertTrue(int0 == int3);
      assertTrue(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int5 == int0);
      assertFalse(int5 == int4);
      assertTrue(int5 == int1);
      assertFalse(int5 == int2);
      assertFalse(int5 == int3);
      
      long long2 = 55L;
      ChannelHandler[] channelHandlerArray0 = new ChannelHandler[5];
      channelHandlerArray0[0] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[2] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[3] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      StaticChannelPipeline staticChannelPipeline0 = new StaticChannelPipeline(channelHandlerArray0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals(5, channelHandlerArray0.length);
      assertNotNull(staticChannelPipeline0);
      
      Class<ChannelHandler> class0 = ChannelHandler.class;
      ChannelHandlerContext channelHandlerContext0 = staticChannelPipeline0.getContext(class0);
      assertFalse(channelHandlerContext0.canHandleDownstream());
      assertTrue(channelHandlerContext0.canHandleUpstream());
      assertEquals("0", channelHandlerContext0.getName());
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals(5, channelHandlerArray0.length);
      assertNotNull(channelHandlerContext0);
      
      Channel channel0 = staticChannelPipeline0.getChannel();
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals(5, channelHandlerArray0.length);
      assertNull(channel0);
      
      int int6 = 3348;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(int6);
      assertTrue(littleEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, littleEndianHeapChannelBuffer0.readerIndex());
      assertFalse(littleEndianHeapChannelBuffer0.readable());
      assertFalse(littleEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, littleEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(3348, littleEndianHeapChannelBuffer0.capacity());
      assertEquals(0, littleEndianHeapChannelBuffer0.readableBytes());
      assertEquals(0, littleEndianHeapChannelBuffer0.writerIndex());
      assertNotNull(littleEndianHeapChannelBuffer0);
      assertFalse(int6 == int4);
      assertFalse(int6 == int5);
      assertFalse(int6 == int2);
      assertFalse(int6 == int1);
      assertFalse(int6 == int3);
      assertFalse(int6 == int0);
      
      ChannelBuffer channelBuffer0 = littleEndianHeapChannelBuffer0.copy(int3, int4);
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertTrue(littleEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, littleEndianHeapChannelBuffer0.readerIndex());
      assertFalse(littleEndianHeapChannelBuffer0.readable());
      assertFalse(littleEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, littleEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(3348, littleEndianHeapChannelBuffer0.capacity());
      assertEquals(0, littleEndianHeapChannelBuffer0.readableBytes());
      assertEquals(0, littleEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(975, channelBuffer0.capacity());
      assertEquals(975, channelBuffer0.readableBytes());
      assertEquals(0, channelBuffer0.readerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertFalse(channelBuffer0.isDirect());
      assertTrue(channelBuffer0.readable());
      assertEquals(975, channelBuffer0.writerIndex());
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertNotNull(channelBuffer0);
      assertTrue(int0 == int4);
      assertFalse(int0 == int1);
      assertTrue(int0 == int3);
      assertFalse(int0 == int6);
      assertTrue(int0 == int2);
      assertFalse(int0 == int5);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertTrue(int1 == int5);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int6);
      assertFalse(int6 == int4);
      assertFalse(int6 == int5);
      assertFalse(int6 == int2);
      assertFalse(int6 == int1);
      assertFalse(int6 == int3);
      assertFalse(int6 == int0);
      assertFalse(channelBuffer0.equals((Object)littleEndianHeapChannelBuffer0));
      assertFalse(int3 == int5);
      assertTrue(int3 == int0);
      assertTrue(int3 == int4);
      assertFalse(int3 == int1);
      assertTrue(int3 == int2);
      assertFalse(int3 == int6);
      assertTrue(int4 == int3);
      assertTrue(int4 == int2);
      assertFalse(int4 == int6);
      assertFalse(int4 == int5);
      assertFalse(int4 == int1);
      assertTrue(int4 == int0);
      assertNotSame(littleEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, littleEndianHeapChannelBuffer0);
      
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      assertFalse(channelHandlerContext0.canHandleDownstream());
      assertTrue(channelHandlerContext0.canHandleUpstream());
      assertEquals("0", channelHandlerContext0.getName());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(983L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertTrue(littleEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, littleEndianHeapChannelBuffer0.readerIndex());
      assertFalse(littleEndianHeapChannelBuffer0.readable());
      assertFalse(littleEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, littleEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(3348, littleEndianHeapChannelBuffer0.capacity());
      assertEquals(0, littleEndianHeapChannelBuffer0.readableBytes());
      assertEquals(0, littleEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(975, channelBuffer0.capacity());
      assertEquals(975, channelBuffer0.readerIndex());
      assertFalse(channelBuffer0.readable());
      assertEquals(0, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.hasArray());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(975, channelBuffer0.writerIndex());
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(983L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(5, channelHandlerArray0.length);
      assertNull(object0);
      assertTrue(int0 == int4);
      assertFalse(int0 == int1);
      assertTrue(int0 == int3);
      assertFalse(int0 == int6);
      assertTrue(int0 == int2);
      assertFalse(int0 == int5);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertTrue(int1 == int5);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int6);
      assertFalse(int6 == int4);
      assertFalse(int6 == int5);
      assertFalse(int6 == int2);
      assertFalse(int6 == int1);
      assertFalse(int6 == int3);
      assertFalse(int6 == int0);
      assertTrue(littleEndianHeapChannelBuffer0.equals((Object)channelBuffer0));
      assertTrue(channelBuffer0.equals((Object)littleEndianHeapChannelBuffer0));
      assertFalse(int3 == int5);
      assertTrue(int3 == int0);
      assertTrue(int3 == int4);
      assertFalse(int3 == int1);
      assertTrue(int3 == int2);
      assertFalse(int3 == int6);
      assertTrue(int4 == int3);
      assertTrue(int4 == int2);
      assertFalse(int4 == int6);
      assertFalse(int4 == int5);
      assertFalse(int4 == int1);
      assertTrue(int4 == int0);
      assertNotSame(littleEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, littleEndianHeapChannelBuffer0);
      
      int int7 = lengthFieldBasedFrameDecoder0.getlengthFieldOffset();
      assertEquals(4, int7);
      assertEquals(8L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(983L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(983L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertTrue(int0 == int4);
      assertFalse(int0 == int1);
      assertTrue(int0 == int3);
      assertFalse(int0 == int6);
      assertTrue(int0 == int2);
      assertFalse(int0 == int5);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertTrue(int1 == int5);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int6);
      assertFalse(int7 == int4);
      assertFalse(int7 == int6);
      assertFalse(int7 == int0);
      assertTrue(int7 == int1);
      assertFalse(int7 == int2);
      assertFalse(int7 == int3);
      assertTrue(int7 == int5);
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      int int0 = 959;
      int int1 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int1, int1);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(959, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(959, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline0.getContext((ChannelHandler) lengthFieldBasedFrameDecoder0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(959, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(959, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertNull(channelHandlerContext0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      byte[] byteArray0 = new byte[15];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer1 = (BigEndianHeapChannelBuffer)lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, defaultChannelPipeline0.channel, bigEndianHeapChannelBuffer0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(959, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(3, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(12, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer1.arrayOffset());
      assertEquals(2, bigEndianHeapChannelBuffer1.capacity());
      assertFalse(bigEndianHeapChannelBuffer1.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer1.readerIndex());
      assertTrue(bigEndianHeapChannelBuffer1.hasArray());
      assertEquals(2, bigEndianHeapChannelBuffer1.readableBytes());
      assertEquals(2, bigEndianHeapChannelBuffer1.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer1.readable());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(959, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(bigEndianHeapChannelBuffer1.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, bigEndianHeapChannelBuffer1);
      assertNotSame(bigEndianHeapChannelBuffer1, bigEndianHeapChannelBuffer0);
      
      boolean boolean0 = lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame();
      assertFalse(boolean0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(959, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(959, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      boolean boolean1 = lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength();
      assertFalse(boolean1);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(959, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(959, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertTrue(boolean1 == boolean0);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer2 = (BigEndianHeapChannelBuffer)lengthFieldBasedFrameDecoder0.decode(defaultChannelPipeline0.head, defaultChannelPipeline0.channel, bigEndianHeapChannelBuffer1);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(959, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(3, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(12, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer1.arrayOffset());
      assertEquals(2, bigEndianHeapChannelBuffer1.capacity());
      assertFalse(bigEndianHeapChannelBuffer1.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer1.readerIndex());
      assertTrue(bigEndianHeapChannelBuffer1.hasArray());
      assertEquals(2, bigEndianHeapChannelBuffer1.readableBytes());
      assertEquals(2, bigEndianHeapChannelBuffer1.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer1.readable());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(959, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(15, byteArray0.length);
      assertNull(bigEndianHeapChannelBuffer2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(bigEndianHeapChannelBuffer0.equals((Object)bigEndianHeapChannelBuffer1));
      assertFalse(bigEndianHeapChannelBuffer1.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, bigEndianHeapChannelBuffer1);
      assertNotSame(bigEndianHeapChannelBuffer1, bigEndianHeapChannelBuffer0);
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      int int0 = 2838;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int1);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int0);
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertNotNull(dynamicChannelBuffer0);
      assertFalse(int0 == int1);
      
      Object object0 = lengthFieldBasedFrameDecoder0.decode(defaultChannelPipeline0.head, defaultChannelPipeline0.channel, dynamicChannelBuffer0);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNull(object0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      String string0 = "CfwvOl#}'f6U-E@$_";
      defaultChannelPipeline0.addFirst(string0, lengthFieldBasedFrameDecoder0);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(defaultChannelPipeline0.head);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      int int0 = 931;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldLength must be either 1, 2, 3, 4, or 8: 931
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      boolean boolean1 = false;
      int int0 = 8;
      int int1 = 1073741824;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0, int1, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength (8) must be equal to or greater than lengthFieldOffset (8) + lengthFieldLength (8).
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      int int0 = 16;
      int int1 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(16, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(16, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      ChannelHandler[] channelHandlerArray0 = new ChannelHandler[6];
      channelHandlerArray0[0] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      StaticChannelPipeline staticChannelPipeline0 = new StaticChannelPipeline(channelHandlerArray0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals(6, channelHandlerArray0.length);
      assertNotNull(staticChannelPipeline0);
      
      Class<ChannelHandler> class0 = ChannelHandler.class;
      ChannelHandlerContext channelHandlerContext0 = staticChannelPipeline0.getContext(class0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals("0", channelHandlerContext0.getName());
      assertTrue(channelHandlerContext0.canHandleUpstream());
      assertFalse(channelHandlerContext0.canHandleDownstream());
      assertEquals(6, channelHandlerArray0.length);
      assertNotNull(channelHandlerContext0);
      
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, int1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      int int0 = 2838;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int1);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int0);
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertNotNull(dynamicChannelBuffer0);
      assertFalse(int0 == int1);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = (BigEndianHeapChannelBuffer)dynamicChannelBuffer0.buffer;
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertEquals(2838, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      dynamicChannelBuffer0.writeFloat(lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertTrue(dynamicChannelBuffer0.readable());
      assertEquals(4, dynamicChannelBuffer0.readableBytes());
      assertEquals(4, dynamicChannelBuffer0.writerIndex());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      Object object0 = lengthFieldBasedFrameDecoder0.decode(defaultChannelPipeline0.head, defaultChannelPipeline0.channel, dynamicChannelBuffer0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2842L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(4, dynamicChannelBuffer0.writerIndex());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(4, dynamicChannelBuffer0.readerIndex());
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2842L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertNull(object0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      Object object1 = lengthFieldBasedFrameDecoder0.decode(defaultChannelPipeline0.tail, defaultChannelPipeline0.channel, bigEndianHeapChannelBuffer0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2842L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(4, dynamicChannelBuffer0.writerIndex());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(4, dynamicChannelBuffer0.readerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertEquals(2838, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2842L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertNull(object1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      int int0 = 418;
      int int1 = (-322);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0, int0, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // initialBytesToStrip must be a non-negative integer: -322
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      int int0 = 986;
      int int1 = 1;
      int int2 = (-23);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int0);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(986, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(986, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals((-23), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals((-23), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(986, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(986, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      byte[] byteArray0 = new byte[7];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertEquals(7, bigEndianHeapChannelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(7, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(7, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(7, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      
      try { 
        lengthFieldBasedFrameDecoder0.decodeLast(defaultChannelPipeline0.tail, defaultChannelPipeline0.channel, bigEndianHeapChannelBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Adjusted frame length (-21) is less than lengthFieldEndOffset: 2
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      int int0 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0, int0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: 0
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      int int0 = (-1777);
      int int1 = 0;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1, int1, int1, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: -1777
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      int int2 = 82;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1, int2, int2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: 0
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      int int0 = (-3437);
      int int1 = 1895;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: -3437
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      int int0 = 877;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldLength must be either 1, 2, 3, 4, or 8: 877
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      int int0 = 2134;
      int int1 = (-909);
      int int2 = 1135;
      int int3 = 0;
      int int4 = 4171;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int3, int4);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldOffset must be a non-negative integer: -909
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      int int0 = 8;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength (8) must be equal to or greater than lengthFieldOffset (8) + lengthFieldLength (8).
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      int int0 = 52;
      int int1 = 395;
      int int2 = (-1957);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0, int1, int2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // initialBytesToStrip must be a non-negative integer: -1957
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      int int0 = 4;
      int int1 = 313;
      boolean boolean0 = false;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0, int1, int1, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength (4) must be equal to or greater than lengthFieldOffset (4) + lengthFieldLength (4).
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      int int0 = 635;
      int int1 = 2668;
      int int2 = 2112;
      int int3 = 0;
      boolean boolean0 = false;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int3, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldLength must be either 1, 2, 3, 4, or 8: 2668
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      int int0 = 980;
      int int1 = (-1347);
      int int2 = 817;
      int int3 = (-2526);
      boolean boolean0 = false;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1, int2, int3, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // initialBytesToStrip must be a non-negative integer: -2526
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      int int0 = 8;
      int int1 = 2;
      int int2 = 116;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1, int0, int2, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength (8) must be equal to or greater than lengthFieldOffset (8) + lengthFieldLength (2).
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      int int0 = 1;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0, int0, int0, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength (1) must be equal to or greater than lengthFieldOffset (1) + lengthFieldLength (1).
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      int int0 = 3;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0, int0, int0, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength (3) must be equal to or greater than lengthFieldOffset (3) + lengthFieldLength (3).
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      int int0 = 8;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      String string0 = "";
      DefaultChannelPipeline.DefaultChannelHandlerContext defaultChannelPipeline_DefaultChannelHandlerContext0 = defaultChannelPipeline0.new DefaultChannelHandlerContext(defaultChannelPipeline0.tail, defaultChannelPipeline0.tail, string0, lengthFieldBasedFrameDecoder0);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals("", defaultChannelPipeline_DefaultChannelHandlerContext0.getName());
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleUpstream());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleDownstream());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.getcanHandleDownstream());
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.getcanHandleUpstream());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleUpstream);
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleDownstream);
      assertNotNull(defaultChannelPipeline_DefaultChannelHandlerContext0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = (long) int0;
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(defaultChannelPipeline0.tail, int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      int int0 = 975;
      int int1 = 1;
      int int2 = 0;
      int int3 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int3);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      
      int int4 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int4);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int4 == int2);
      assertFalse(int4 == int0);
      assertFalse(int4 == int3);
      assertFalse(int4 == int1);
      
      ChannelHandlerContext channelHandlerContext0 = null;
      DefaultLocalClientChannelFactory defaultLocalClientChannelFactory0 = new DefaultLocalClientChannelFactory();
      assertNotNull(defaultLocalClientChannelFactory0);
      
      ChannelPipeline channelPipeline0 = null;
      // Undeclared exception!
      try { 
        defaultLocalClientChannelFactory0.newChannel(channelPipeline0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.AbstractChannel", e);
      }
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      int int0 = 8;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      String string0 = "";
      DefaultChannelPipeline.DefaultChannelHandlerContext defaultChannelPipeline_DefaultChannelHandlerContext0 = defaultChannelPipeline0.new DefaultChannelHandlerContext(defaultChannelPipeline0.tail, defaultChannelPipeline0.tail, string0, lengthFieldBasedFrameDecoder0);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals("", defaultChannelPipeline_DefaultChannelHandlerContext0.getName());
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.getcanHandleUpstream());
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleUpstream());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.getcanHandleDownstream());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleDownstream());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleDownstream);
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleUpstream);
      assertNotNull(defaultChannelPipeline_DefaultChannelHandlerContext0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = (long) int0;
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      
      DefaultChannelPipeline.DefaultChannelHandlerContext defaultChannelPipeline_DefaultChannelHandlerContext1 = defaultChannelPipeline0.remove(defaultChannelPipeline_DefaultChannelHandlerContext0);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals("", defaultChannelPipeline_DefaultChannelHandlerContext0.getName());
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.getcanHandleUpstream());
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleUpstream());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.getcanHandleDownstream());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleDownstream());
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext1.canHandleUpstream());
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext1.getcanHandleUpstream());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext1.getcanHandleDownstream());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext1.canHandleDownstream());
      assertEquals("", defaultChannelPipeline_DefaultChannelHandlerContext1.getName());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleDownstream);
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleUpstream);
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext1.canHandleUpstream);
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext1.canHandleDownstream);
      assertNotNull(defaultChannelPipeline_DefaultChannelHandlerContext1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertSame(defaultChannelPipeline_DefaultChannelHandlerContext0, defaultChannelPipeline_DefaultChannelHandlerContext1);
      assertSame(defaultChannelPipeline_DefaultChannelHandlerContext1, defaultChannelPipeline_DefaultChannelHandlerContext0);
      
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(defaultChannelPipeline0.tail, int0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      int int0 = 8;
      int int1 = (-1602);
      int int2 = 2;
      int int3 = 1010;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int3, int0, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldOffset must be a non-negative integer: -1602
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      int int0 = 0;
      int int1 = 8;
      int int2 = 0;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int1, int2, int1, int2, int1);
      assertEquals(8, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      
      long long0 = lengthFieldBasedFrameDecoder0.getbytesToDiscard();
      assertEquals(0L, long0);
      assertEquals(8, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      Class<ChannelHandler> class0 = ChannelHandler.class;
      // Undeclared exception!
      try { 
        defaultChannelPipeline0.getContextOrDie(class0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // org.jboss.netty.channel.ChannelHandler
         //
         verifyException("org.jboss.netty.channel.DefaultChannelPipeline", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      int int0 = 2838;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int1);
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      DefaultChannelPipeline.DefaultChannelHandlerContext defaultChannelPipeline_DefaultChannelHandlerContext0 = defaultChannelPipeline0.head;
      assertNull(defaultChannelPipeline_DefaultChannelHandlerContext0);
      
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int0);
      assertFalse(dynamicChannelBuffer0.readable());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertNotNull(dynamicChannelBuffer0);
      assertFalse(int0 == int1);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = (BigEndianHeapChannelBuffer)dynamicChannelBuffer0.buffer;
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertEquals(2838, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      int int2 = 2;
      int int3 = (-666);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(bigEndianHeapChannelBuffer0, int2, int3);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.HeapChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      int int0 = 975;
      int int1 = 1;
      int int2 = 0;
      int int3 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int3);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      
      int int4 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int4);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int4 == int2);
      assertFalse(int4 == int0);
      assertFalse(int4 == int3);
      assertFalse(int4 == int1);
      
      ChannelHandlerContext channelHandlerContext0 = null;
      DefaultLocalClientChannelFactory defaultLocalClientChannelFactory0 = new DefaultLocalClientChannelFactory();
      assertNotNull(defaultLocalClientChannelFactory0);
      
      ChannelPipeline channelPipeline0 = null;
      ByteOrder byteOrder0 = null;
      long long0 = (-3012L);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      int int0 = 975;
      int int1 = 1;
      int int2 = 0;
      int int3 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int3);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      
      int int4 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int4);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int4 == int3);
      assertFalse(int4 == int2);
      assertFalse(int4 == int1);
      assertFalse(int4 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline0.getContext((ChannelHandler) lengthFieldBasedFrameDecoder0);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertNull(channelHandlerContext0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int0 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int1 == int0);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int4);
      assertFalse(int3 == int0);
      
      byte[] byteArray0 = new byte[0];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      assertArrayEquals(new byte[] {}, byteArray0);
      
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.slice();
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(0, channelBuffer0.readerIndex());
      assertEquals(0, channelBuffer0.capacity());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(0, channelBuffer0.writerIndex());
      assertFalse(channelBuffer0.readable());
      assertEquals(0, channelBuffer0.readableBytes());
      assertEquals(0, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertArrayEquals(new byte[] {}, byteArray0);
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      Object object0 = lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, defaultChannelPipeline0.channel, channelBuffer0);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(0, channelBuffer0.readerIndex());
      assertEquals(0, channelBuffer0.capacity());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(0, channelBuffer0.writerIndex());
      assertFalse(channelBuffer0.readable());
      assertEquals(0, channelBuffer0.readableBytes());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0, byteArray0.length);
      assertNull(object0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int0 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int1 == int0);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int4);
      assertFalse(int3 == int0);
      assertTrue(bigEndianHeapChannelBuffer0.equals((Object)channelBuffer0));
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertArrayEquals(new byte[] {}, byteArray0);
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      ChannelHandlerContext channelHandlerContext1 = null;
      DefaultLocalClientChannelFactory defaultLocalClientChannelFactory0 = new DefaultLocalClientChannelFactory();
      assertNotNull(defaultLocalClientChannelFactory0);
      
      ChannelPipeline channelPipeline0 = null;
      // Undeclared exception!
      try { 
        defaultLocalClientChannelFactory0.newChannel(channelPipeline0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.AbstractChannel", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      int int0 = 2838;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int1);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      DefaultChannelPipeline.DefaultChannelHandlerContext defaultChannelPipeline_DefaultChannelHandlerContext0 = defaultChannelPipeline0.head;
      assertNull(defaultChannelPipeline_DefaultChannelHandlerContext0);
      
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int0);
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertNotNull(dynamicChannelBuffer0);
      assertFalse(int0 == int1);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = (BigEndianHeapChannelBuffer)dynamicChannelBuffer0.buffer;
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(2838, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      int int2 = 2;
      int int3 = (-666);
      Object object0 = lengthFieldBasedFrameDecoder0.decodeLast(defaultChannelPipeline0.tail, defaultChannelPipeline0.channel, bigEndianHeapChannelBuffer0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(2838, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNull(object0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      
      Object object1 = lengthFieldBasedFrameDecoder0.decode(defaultChannelPipeline_DefaultChannelHandlerContext0, defaultChannelPipeline0.channel, dynamicChannelBuffer0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNull(object1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      
      Object object2 = lengthFieldBasedFrameDecoder0.decode(defaultChannelPipeline0.head, defaultChannelPipeline0.channel, dynamicChannelBuffer0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNull(object2);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      
      long long0 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals(0L, long0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      int int0 = 975;
      int int1 = 1;
      int int2 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int0);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int3);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      
      ChannelHandlerContext channelHandlerContext0 = null;
      ChannelPipeline channelPipeline0 = null;
      ByteOrder byteOrder0 = null;
      int int4 = 255;
      double double0 = 0.0;
      long long0 = (-1787L);
      long long1 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals(0L, long1);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(int0 == int1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int4);
      assertFalse(long1 == long0);
      
      int int5 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals(0, int5);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(int0 == int1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int4);
      assertTrue(int5 == int2);
      assertFalse(int5 == int3);
      assertFalse(int5 == int1);
      assertFalse(int5 == int4);
      assertFalse(int5 == int0);
      
      lengthFieldBasedFrameDecoder0.settooLongFrameLength(long0);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-1787L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals((-1787L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int5);
      assertFalse(int0 == int1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int5);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      assertTrue(int2 == int5);
      assertFalse(int2 == int0);
      assertFalse(int2 == int4);
      assertFalse(long0 == long1);
      
      int int6 = lengthFieldBasedFrameDecoder0.getmaxFrameLength();
      assertEquals(975, int6);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-1787L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals((-1787L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int5);
      assertFalse(int0 == int1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int5);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      assertTrue(int2 == int5);
      assertFalse(int2 == int0);
      assertFalse(int2 == int4);
      assertFalse(int6 == int1);
      assertFalse(int6 == int4);
      assertFalse(int6 == int3);
      assertTrue(int6 == int0);
      assertFalse(int6 == int5);
      assertFalse(int6 == int2);
      
      long long2 = 3162L;
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = long2;
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      
      int int7 = lengthFieldBasedFrameDecoder0.getinitialBytesToStrip();
      assertEquals(975, int7);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(int0 == int5);
      assertFalse(int0 == int1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertTrue(int0 == int6);
      assertFalse(int0 == int2);
      assertFalse(int7 == int4);
      assertFalse(int7 == int3);
      assertTrue(int7 == int6);
      assertFalse(int7 == int1);
      assertTrue(int7 == int0);
      assertFalse(int7 == int2);
      assertFalse(int7 == int5);
      assertFalse(int1 == int0);
      assertFalse(int1 == int5);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int6);
      assertFalse(int1 == int4);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      assertTrue(int2 == int5);
      assertFalse(int2 == int6);
      assertFalse(int2 == int0);
      assertFalse(int2 == int4);
      
      int int8 = lengthFieldBasedFrameDecoder0.getlengthFieldOffset();
      assertEquals(1, int8);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(int0 == int5);
      assertTrue(int0 == int7);
      assertFalse(int0 == int1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertTrue(int0 == int6);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int5);
      assertFalse(int1 == int3);
      assertFalse(int1 == int7);
      assertFalse(int1 == int2);
      assertFalse(int1 == int6);
      assertFalse(int1 == int4);
      assertFalse(int8 == int0);
      assertFalse(int8 == int5);
      assertTrue(int8 == int1);
      assertFalse(int8 == int4);
      assertFalse(int8 == int3);
      assertFalse(int8 == int2);
      assertFalse(int8 == int6);
      assertFalse(int8 == int7);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      assertTrue(int2 == int5);
      assertFalse(int2 == int6);
      assertFalse(int2 == int7);
      assertFalse(int2 == int0);
      assertFalse(int2 == int4);
      
      long long3 = lengthFieldBasedFrameDecoder0.getbytesToDiscard();
      assertEquals(0L, long3);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(int0 == int5);
      assertTrue(int0 == int7);
      assertFalse(int0 == int1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertTrue(int0 == int6);
      assertFalse(int0 == int8);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int5);
      assertTrue(int1 == int8);
      assertFalse(int1 == int3);
      assertFalse(int1 == int7);
      assertFalse(int1 == int2);
      assertFalse(int1 == int6);
      assertFalse(int1 == int4);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      assertTrue(int2 == int5);
      assertFalse(int2 == int6);
      assertFalse(int2 == int7);
      assertFalse(int2 == int0);
      assertFalse(int2 == int8);
      assertFalse(int2 == int4);
      assertFalse(long3 == long0);
      assertFalse(long3 == long2);
      assertTrue(long3 == long1);
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      int int0 = 8;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      String string0 = "";
      DefaultChannelPipeline.DefaultChannelHandlerContext defaultChannelPipeline_DefaultChannelHandlerContext0 = defaultChannelPipeline0.new DefaultChannelHandlerContext(defaultChannelPipeline0.tail, defaultChannelPipeline0.tail, string0, lengthFieldBasedFrameDecoder0);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleUpstream());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.getcanHandleDownstream());
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.getcanHandleUpstream());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleDownstream());
      assertEquals("", defaultChannelPipeline_DefaultChannelHandlerContext0.getName());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleDownstream);
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleUpstream);
      assertNotNull(defaultChannelPipeline_DefaultChannelHandlerContext0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = (long) int0;
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      
      DefaultChannelPipeline.DefaultChannelHandlerContext defaultChannelPipeline_DefaultChannelHandlerContext1 = defaultChannelPipeline0.getActualUpstreamContext(defaultChannelPipeline0.tail);
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNull(defaultChannelPipeline_DefaultChannelHandlerContext1);
      
      ChannelState channelState0 = ChannelState.BOUND;
      DirectChannelBufferFactory directChannelBufferFactory0 = new DirectChannelBufferFactory(lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(8L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNotNull(directChannelBufferFactory0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      byte[] byteArray0 = new byte[0];
      int int2 = 2026;
      ChannelBuffer channelBuffer0 = directChannelBufferFactory0.getBuffer(byteArray0, int2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(0, channelBuffer0.writerIndex());
      assertEquals(0, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.hasArray());
      assertFalse(channelBuffer0.readable());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(0, channelBuffer0.capacity());
      assertEquals(0, channelBuffer0.readerIndex());
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(8L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertArrayEquals(new byte[] {}, byteArray0);
      
      Object object0 = lengthFieldBasedFrameDecoder0.decodeLast(defaultChannelPipeline_DefaultChannelHandlerContext1, defaultChannelPipeline0.channel, channelBuffer0);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(0, channelBuffer0.writerIndex());
      assertEquals(0, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.hasArray());
      assertFalse(channelBuffer0.readable());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(0, channelBuffer0.capacity());
      assertEquals(0, channelBuffer0.readerIndex());
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(8L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, byteArray0.length);
      assertNull(object0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertArrayEquals(new byte[] {}, byteArray0);
      
      Integer integer0 = new Integer(int1);
      assertEquals(2, (int)integer0);
      assertNotNull(integer0);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertTrue(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int2));
      assertFalse(integer0.equals((Object)int0));
      
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(defaultChannelPipeline0.head);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      int int0 = 8;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = (long) int0;
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      
      ChannelState channelState0 = ChannelState.BOUND;
      Integer integer0 = new Integer(int1);
      assertEquals(2, (int)integer0);
      assertNotNull(integer0);
      assertFalse(int1 == int0);
      assertFalse(integer0.equals((Object)int0));
      assertTrue(integer0.equals((Object)int1));
      
      int int2 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals(0, int2);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      int int3 = new Integer(int2);
      assertEquals(0, int3);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertTrue(int3 == int2);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      
      boolean boolean0 = true;
      lengthFieldBasedFrameDecoder0.setdiscardingTooLongFrame(boolean0);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      
      int int4 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals(0, int4);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertTrue(int4 == int3);
      assertTrue(int4 == int2);
      assertFalse(int4 == int0);
      assertFalse(int4 == int1);
      
      int int5 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(4, int5);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(8L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int5 == int4);
      assertFalse(int5 == int3);
      assertFalse(int5 == int1);
      assertFalse(int5 == int2);
      assertFalse(int5 == int0);
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      int int0 = 8;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      String string0 = "";
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = (long) int0;
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      
      ChannelState channelState0 = ChannelState.BOUND;
      Integer integer0 = new Integer(int1);
      assertEquals(2, (int)integer0);
      assertNotNull(integer0);
      assertFalse(int1 == int0);
      assertTrue(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int0));
      
      int int2 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals(0, int2);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(8L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      boolean boolean0 = lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength();
      assertFalse(boolean0);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(8L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldOffset();
      assertEquals(2, int3);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(8L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertTrue(int3 == int1);
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      
      int int4 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals(0, int4);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(8L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertTrue(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int4 == int1);
      assertFalse(int4 == int0);
      assertTrue(int4 == int2);
      assertFalse(int4 == int3);
      
      int int5 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(4, int5);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(8L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(8, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertTrue(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int5 == int2);
      assertFalse(int5 == int4);
      assertFalse(int5 == int1);
      assertFalse(int5 == int3);
      assertFalse(int5 == int0);
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      int int0 = 975;
      int int1 = 1;
      int int2 = (-33);
      int int3 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int3);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals((-33), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals((-33), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int2 == int3);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      
      int int4 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int4);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals((-33), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals((-33), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int2 == int3);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertFalse(int4 == int1);
      assertFalse(int4 == int2);
      assertFalse(int4 == int3);
      assertFalse(int4 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline0.getContext((ChannelHandler) lengthFieldBasedFrameDecoder0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals((-33), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals((-33), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertNull(channelHandlerContext0);
      assertFalse(int0 == int4);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int2 == int3);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int4);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int4);
      assertFalse(int3 == int2);
      
      byte[] byteArray0 = new byte[0];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      assertArrayEquals(new byte[] {}, byteArray0);
      
      String string0 = ").";
      defaultChannelPipeline0.addFirst(string0, lengthFieldBasedFrameDecoder0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals((-33), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals((-33), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int4);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int2 == int3);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int4);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int4);
      assertFalse(int3 == int2);
      
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.slice();
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, channelBuffer0.readableBytes());
      assertEquals(0, channelBuffer0.readerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertFalse(channelBuffer0.isDirect());
      assertFalse(channelBuffer0.readable());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(0, channelBuffer0.capacity());
      assertEquals(0, channelBuffer0.writerIndex());
      assertEquals(0, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertArrayEquals(new byte[] {}, byteArray0);
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      Object object0 = lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, defaultChannelPipeline0.channel, channelBuffer0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals((-33), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, channelBuffer0.readableBytes());
      assertEquals(0, channelBuffer0.readerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertFalse(channelBuffer0.isDirect());
      assertFalse(channelBuffer0.readable());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(0, channelBuffer0.capacity());
      assertEquals(0, channelBuffer0.writerIndex());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals((-33), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(0, byteArray0.length);
      assertNull(object0);
      assertFalse(int0 == int4);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int2 == int3);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int4);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int4);
      assertFalse(int3 == int2);
      assertTrue(bigEndianHeapChannelBuffer0.equals((Object)channelBuffer0));
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertArrayEquals(new byte[] {}, byteArray0);
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      ChannelHandlerContext channelHandlerContext1 = null;
      DefaultLocalClientChannelFactory defaultLocalClientChannelFactory0 = new DefaultLocalClientChannelFactory();
      assertNotNull(defaultLocalClientChannelFactory0);
      
      int int5 = (-3186);
      int int6 = 8388608;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int5, int6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      int int0 = 313;
      int int1 = 1;
      int int2 = 2;
      boolean boolean0 = false;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int0, int0, boolean0);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(313, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(313, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(313, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(313, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(313, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(313, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = (long) int1;
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(313, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(313, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(313, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      
      boolean boolean1 = false;
      lengthFieldBasedFrameDecoder0.discardingTooLongFrame = boolean1;
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(313, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(313, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(313, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      
      boolean boolean2 = lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength();
      assertFalse(boolean2);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(313, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(313, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(313, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(313, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(313, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(313, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldOffset();
      assertEquals(1, int3);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(313, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(313, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(313, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(313, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(313, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(313, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertTrue(boolean0 == boolean2);
      assertFalse(int3 == int0);
      assertTrue(int3 == int1);
      assertFalse(int3 == int2);
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      int int0 = 315;
      int int1 = 1;
      int int2 = 2;
      boolean boolean0 = false;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int0, int0, boolean0);
      assertEquals(315, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(315, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(315, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(315, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(315, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(315, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = (long) int1;
      assertEquals(315, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(315, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(315, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      
      boolean boolean1 = false;
      lengthFieldBasedFrameDecoder0.discardingTooLongFrame = boolean1;
      assertEquals(315, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(315, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(315, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      
      boolean boolean2 = lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength();
      assertFalse(boolean2);
      assertEquals(315, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(315, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(315, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(315, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(315, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(315, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldOffset();
      assertEquals(1, int3);
      assertEquals(315, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(315, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(315, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(315, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(315, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(315, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertTrue(boolean0 == boolean2);
      assertTrue(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      
      int int4 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals(315, int4);
      assertEquals(315, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(315, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(315, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(315, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(315, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(315, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertTrue(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int3);
      assertTrue(boolean0 == boolean2);
      assertFalse(int4 == int2);
      assertTrue(int4 == int0);
      assertFalse(int4 == int1);
      assertFalse(int4 == int3);
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      int int0 = 8;
      int int1 = 313;
      boolean boolean0 = false;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0, int1, int1, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength (8) must be equal to or greater than lengthFieldOffset (8) + lengthFieldLength (8).
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      int int0 = 2838;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int1);
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int0);
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertNotNull(dynamicChannelBuffer0);
      assertFalse(int0 == int1);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = (BigEndianHeapChannelBuffer)dynamicChannelBuffer0.buffer;
      assertEquals(2838, bigEndianHeapChannelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      int int2 = 2;
      int int3 = (-666);
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline0.getContext((ChannelHandler) lengthFieldBasedFrameDecoder0);
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNull(channelHandlerContext0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      
      DynamicChannelBuffer dynamicChannelBuffer1 = new DynamicChannelBuffer(dynamicChannelBuffer0.endianness, int0);
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertEquals(0, dynamicChannelBuffer1.readableBytes());
      assertTrue(dynamicChannelBuffer1.hasArray());
      assertEquals(0, dynamicChannelBuffer1.readerIndex());
      assertFalse(dynamicChannelBuffer1.readable());
      assertEquals(0, dynamicChannelBuffer1.writerIndex());
      assertEquals(2838, dynamicChannelBuffer1.capacity());
      assertFalse(dynamicChannelBuffer1.isDirect());
      assertNotNull(dynamicChannelBuffer1);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertTrue(dynamicChannelBuffer1.equals((Object)dynamicChannelBuffer0));
      
      int int4 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(4, int4);
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int4 == int3);
      assertFalse(int4 == int2);
      assertFalse(int4 == int1);
      assertFalse(int4 == int0);
      
      Object object0 = lengthFieldBasedFrameDecoder0.decode(defaultChannelPipeline0.head, defaultChannelPipeline0.channel, dynamicChannelBuffer1);
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertEquals(0, dynamicChannelBuffer1.readableBytes());
      assertTrue(dynamicChannelBuffer1.hasArray());
      assertEquals(0, dynamicChannelBuffer1.readerIndex());
      assertFalse(dynamicChannelBuffer1.readable());
      assertEquals(0, dynamicChannelBuffer1.writerIndex());
      assertEquals(2838, dynamicChannelBuffer1.capacity());
      assertFalse(dynamicChannelBuffer1.isDirect());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNull(object0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int4);
      assertFalse(int1 == int0);
      assertTrue(dynamicChannelBuffer0.equals((Object)dynamicChannelBuffer1));
      assertTrue(dynamicChannelBuffer1.equals((Object)dynamicChannelBuffer0));
      assertNotSame(dynamicChannelBuffer0, dynamicChannelBuffer1);
      assertNotSame(dynamicChannelBuffer1, dynamicChannelBuffer0);
      
      long long0 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals(0L, long0);
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int4);
      assertFalse(int1 == int0);
      
      int int5 = 2030;
      int int6 = 3;
      ChannelBuffer channelBuffer0 = lengthFieldBasedFrameDecoder0.extractFrame(dynamicChannelBuffer0, int5, int6);
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertTrue(channelBuffer0.readable());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(3, channelBuffer0.readableBytes());
      assertEquals(3, channelBuffer0.writerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(3, channelBuffer0.capacity());
      assertEquals(0, channelBuffer0.readerIndex());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNotNull(channelBuffer0);
      assertFalse(int0 == int5);
      assertFalse(int0 == int1);
      assertFalse(int0 == int6);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int6);
      assertFalse(int1 == int5);
      assertFalse(int1 == int4);
      assertFalse(int1 == int0);
      assertTrue(dynamicChannelBuffer0.equals((Object)dynamicChannelBuffer1));
      assertFalse(int5 == int1);
      assertFalse(int5 == int2);
      assertFalse(int5 == int0);
      assertFalse(int5 == int3);
      assertFalse(int5 == int4);
      assertFalse(int5 == int6);
      assertFalse(int6 == int0);
      assertFalse(int6 == int4);
      assertFalse(int6 == int2);
      assertFalse(int6 == int1);
      assertFalse(int6 == int5);
      assertFalse(int6 == int3);
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(dynamicChannelBuffer0, dynamicChannelBuffer1);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      int int0 = 25;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      assertEquals(25, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(25, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      lengthFieldBasedFrameDecoder0.bytesToDiscard = (long) int0;
      assertEquals(25, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(25L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      
      DefaultChannelPipeline.DefaultChannelHandlerContext defaultChannelPipeline_DefaultChannelHandlerContext0 = defaultChannelPipeline0.getActualUpstreamContext(defaultChannelPipeline0.tail);
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNull(defaultChannelPipeline_DefaultChannelHandlerContext0);
      
      ChannelState channelState0 = ChannelState.BOUND;
      byte[] byteArray0 = new byte[0];
      int int2 = 2026;
      Integer integer0 = new Integer(int1);
      assertEquals(2, (int)integer0);
      assertNotNull(integer0);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(integer0.equals((Object)int2));
      assertTrue(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int0));
      
      lengthFieldBasedFrameDecoder0.failIfNecessary(defaultChannelPipeline0.head);
      assertEquals(25, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(25L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(25L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(25, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      
      UpstreamChannelStateEvent upstreamChannelStateEvent0 = null;
      try {
        upstreamChannelStateEvent0 = new UpstreamChannelStateEvent(defaultChannelPipeline0.channel, channelState0, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // channel
         //
         verifyException("org.jboss.netty.channel.UpstreamChannelStateEvent", e);
      }
  }

  @Test(timeout = 11000)
  public void test46()  throws Throwable  {
      int int0 = 65280;
      int int1 = 2102;
      int int2 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int1, int1);
      assertEquals(2102, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2103, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(65280, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2102, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2102, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2102, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2102, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2103, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(65280, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2102, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      ChannelBuffer channelBuffer0 = null;
      int int3 = 4;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int0, int3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test47()  throws Throwable  {
      int int0 = 2838;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      boolean boolean0 = true;
      lengthFieldBasedFrameDecoder0.setdiscardingTooLongFrame(boolean0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int0);
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertNotNull(dynamicChannelBuffer0);
      assertFalse(int0 == int1);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = (BigEndianHeapChannelBuffer)dynamicChannelBuffer0.buffer;
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertEquals(2838, bigEndianHeapChannelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      int int2 = 2;
      ChannelBuffer channelBuffer0 = lengthFieldBasedFrameDecoder0.extractFrame(bigEndianHeapChannelBuffer0, int2, int2);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertEquals(2838, bigEndianHeapChannelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(2, channelBuffer0.writerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(2, channelBuffer0.capacity());
      assertTrue(channelBuffer0.readable());
      assertEquals(2, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(0, channelBuffer0.readerIndex());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertNotNull(channelBuffer0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      try { 
        lengthFieldBasedFrameDecoder0.decode(defaultChannelPipeline0.head, defaultChannelPipeline0.channel, channelBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test48()  throws Throwable  {
      int int0 = 65535;
      int int1 = 8;
      int int2 = 3;
      boolean boolean0 = false;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int2, boolean0);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(65535, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(16, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(16, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(65535, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      long long0 = 7L;
      lengthFieldBasedFrameDecoder0.setbytesToDiscard(long0);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(7L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(65535, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(16, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(16, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(7L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(65535, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      ChannelHandler[] channelHandlerArray0 = new ChannelHandler[8];
      channelHandlerArray0[0] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[1] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[2] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      SimpleChannelDownstreamHandler simpleChannelDownstreamHandler0 = new SimpleChannelDownstreamHandler();
      assertNotNull(simpleChannelDownstreamHandler0);
      
      channelHandlerArray0[3] = (ChannelHandler) simpleChannelDownstreamHandler0;
      channelHandlerArray0[4] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[5] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[6] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[7] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      StaticChannelPipeline staticChannelPipeline0 = new StaticChannelPipeline(channelHandlerArray0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals(8, channelHandlerArray0.length);
      assertNotNull(staticChannelPipeline0);
      
      ChannelHandlerContext channelHandlerContext0 = staticChannelPipeline0.getContext((ChannelHandler) simpleChannelDownstreamHandler0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals("3", channelHandlerContext0.getName());
      assertFalse(channelHandlerContext0.canHandleUpstream());
      assertTrue(channelHandlerContext0.canHandleDownstream());
      assertEquals(8, channelHandlerArray0.length);
      assertNotNull(channelHandlerContext0);
      
      ForkJoinPool forkJoinPool0 = ForkJoinPool.commonPool();
      assertNotNull(forkJoinPool0);
      
      IOStreamChannelFactory iOStreamChannelFactory0 = new IOStreamChannelFactory(forkJoinPool0);
      assertNotNull(iOStreamChannelFactory0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      String string0 = "h:ntSm+AB5Z$\"S%8a";
      DefaultChannelPipeline.DefaultChannelHandlerContext defaultChannelPipeline_DefaultChannelHandlerContext0 = defaultChannelPipeline0.new DefaultChannelHandlerContext(defaultChannelPipeline0.tail, defaultChannelPipeline0.tail, string0, channelHandlerArray0[0]);
      assertFalse(defaultChannelPipeline0.isAttached());
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.getcanHandleUpstream());
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleUpstream());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleDownstream());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.getcanHandleDownstream());
      assertEquals("h:ntSm+AB5Z$\"S%8a", defaultChannelPipeline_DefaultChannelHandlerContext0.getName());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleDownstream);
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleUpstream);
      assertEquals(8, channelHandlerArray0.length);
      assertNotNull(defaultChannelPipeline_DefaultChannelHandlerContext0);
      
      ChannelPipeline channelPipeline0 = defaultChannelPipeline_DefaultChannelHandlerContext0.getPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.getcanHandleUpstream());
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleUpstream());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleDownstream());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.getcanHandleDownstream());
      assertEquals("h:ntSm+AB5Z$\"S%8a", defaultChannelPipeline_DefaultChannelHandlerContext0.getName());
      assertFalse(channelPipeline0.isAttached());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleDownstream);
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleUpstream);
      assertEquals(8, channelHandlerArray0.length);
      assertNotNull(channelPipeline0);
      assertSame(defaultChannelPipeline0, channelPipeline0);
      assertSame(channelPipeline0, defaultChannelPipeline0);
      
      IOStreamChannel iOStreamChannel0 = new IOStreamChannel(iOStreamChannelFactory0, channelPipeline0, defaultChannelPipeline0.discardingSink);
      assertTrue(defaultChannelPipeline0.isAttached());
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.getcanHandleUpstream());
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleUpstream());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleDownstream());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.getcanHandleDownstream());
      assertEquals("h:ntSm+AB5Z$\"S%8a", defaultChannelPipeline_DefaultChannelHandlerContext0.getName());
      assertTrue(channelPipeline0.isAttached());
      assertTrue(iOStreamChannel0.isOpen());
      assertEquals(1, iOStreamChannel0.getInterestOps());
      assertTrue(iOStreamChannel0.isWritable());
      assertTrue(iOStreamChannel0.isReadable());
      assertEquals(53, (int)iOStreamChannel0.getId());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleDownstream);
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleUpstream);
      assertEquals(8, channelHandlerArray0.length);
      assertNotNull(iOStreamChannel0);
      
      Channel channel0 = iOStreamChannel0.getParent();
      assertTrue(defaultChannelPipeline0.isAttached());
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.getcanHandleUpstream());
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleUpstream());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleDownstream());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.getcanHandleDownstream());
      assertEquals("h:ntSm+AB5Z$\"S%8a", defaultChannelPipeline_DefaultChannelHandlerContext0.getName());
      assertTrue(channelPipeline0.isAttached());
      assertTrue(iOStreamChannel0.isOpen());
      assertEquals(1, iOStreamChannel0.getInterestOps());
      assertTrue(iOStreamChannel0.isWritable());
      assertTrue(iOStreamChannel0.isReadable());
      assertEquals(53, (int)iOStreamChannel0.getId());
      assertFalse(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleDownstream);
      assertTrue(defaultChannelPipeline_DefaultChannelHandlerContext0.canHandleUpstream);
      assertEquals(8, channelHandlerArray0.length);
      assertNull(channel0);
      assertSame(defaultChannelPipeline0, channelPipeline0);
      assertSame(channelPipeline0, defaultChannelPipeline0);
      
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      assertEquals(1, byteBuffer0.limit());
      assertFalse(byteBuffer0.isDirect());
      assertEquals(0, byteBuffer0.position());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=1 cap=1]", byteBuffer0.toString());
      assertEquals(1, byteBuffer0.capacity());
      assertTrue(byteBuffer0.hasArray());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(1, byteBuffer0.remaining());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(1, byteArray0.length);
      assertNotNull(byteBuffer0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      assertEquals(1, byteBuffer0.limit());
      assertFalse(byteBuffer0.isDirect());
      assertEquals(0, byteBuffer0.position());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=1 cap=1]", byteBuffer0.toString());
      assertEquals(1, byteBuffer0.capacity());
      assertTrue(byteBuffer0.hasArray());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(1, byteBuffer0.remaining());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(0, byteBufferBackedChannelBuffer0.readerIndex());
      assertTrue(byteBufferBackedChannelBuffer0.hasArray());
      assertEquals(1, byteBufferBackedChannelBuffer0.readableBytes());
      assertFalse(byteBufferBackedChannelBuffer0.isDirect());
      assertEquals(1, byteBufferBackedChannelBuffer0.capacity());
      assertEquals(1, byteBufferBackedChannelBuffer0.writerIndex());
      assertTrue(byteBufferBackedChannelBuffer0.readable());
      assertEquals(0, byteBufferBackedChannelBuffer0.arrayOffset());
      assertEquals(1, byteArray0.length);
      assertNotNull(byteBufferBackedChannelBuffer0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      
      ByteOrder byteOrder0 = byteBufferBackedChannelBuffer0.order();
      assertEquals("BIG_ENDIAN", byteOrder0.toString());
      assertEquals(1, byteBuffer0.limit());
      assertFalse(byteBuffer0.isDirect());
      assertEquals(0, byteBuffer0.position());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=1 cap=1]", byteBuffer0.toString());
      assertEquals(1, byteBuffer0.capacity());
      assertTrue(byteBuffer0.hasArray());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(1, byteBuffer0.remaining());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(0, byteBufferBackedChannelBuffer0.readerIndex());
      assertTrue(byteBufferBackedChannelBuffer0.hasArray());
      assertEquals(1, byteBufferBackedChannelBuffer0.readableBytes());
      assertFalse(byteBufferBackedChannelBuffer0.isDirect());
      assertEquals(1, byteBufferBackedChannelBuffer0.capacity());
      assertEquals(1, byteBufferBackedChannelBuffer0.writerIndex());
      assertTrue(byteBufferBackedChannelBuffer0.readable());
      assertEquals(0, byteBufferBackedChannelBuffer0.arrayOffset());
      assertEquals(1, byteArray0.length);
      assertNotNull(byteOrder0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(byteOrder0, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals("BIG_ENDIAN", byteOrder0.toString());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertEquals(16, dynamicChannelBuffer0.capacity());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(7L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(65535, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(16, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(1, byteBuffer0.limit());
      assertFalse(byteBuffer0.isDirect());
      assertEquals(0, byteBuffer0.position());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=1 cap=1]", byteBuffer0.toString());
      assertEquals(1, byteBuffer0.capacity());
      assertTrue(byteBuffer0.hasArray());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(1, byteBuffer0.remaining());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(0, byteBufferBackedChannelBuffer0.readerIndex());
      assertTrue(byteBufferBackedChannelBuffer0.hasArray());
      assertEquals(1, byteBufferBackedChannelBuffer0.readableBytes());
      assertFalse(byteBufferBackedChannelBuffer0.isDirect());
      assertEquals(1, byteBufferBackedChannelBuffer0.capacity());
      assertEquals(1, byteBufferBackedChannelBuffer0.writerIndex());
      assertTrue(byteBufferBackedChannelBuffer0.readable());
      assertEquals(0, byteBufferBackedChannelBuffer0.arrayOffset());
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(16, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(7L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(65535, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, byteArray0.length);
      assertNotNull(dynamicChannelBuffer0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      
      int int3 = 387;
      int int4 = 65280;
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.copy(int3, int4);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.BigEndianHeapChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test49()  throws Throwable  {
      int int0 = 975;
      int int1 = 1;
      int int2 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int0);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int3);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      
      ChannelHandlerContext channelHandlerContext0 = null;
      ChannelPipeline channelPipeline0 = null;
      ByteOrder byteOrder0 = null;
      int int4 = 255;
      double double0 = 0.0;
      long long0 = (-1787L);
      long long1 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals(0L, long1);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(long1 == long0);
      
      int int5 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals(0, int5);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int5 == int3);
      assertTrue(int5 == int2);
      assertFalse(int5 == int4);
      assertFalse(int5 == int1);
      assertFalse(int5 == int0);
      
      long long2 = (-1001L);
      lengthFieldBasedFrameDecoder0.bytesToDiscard = long2;
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals((-1001L), lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      
      lengthFieldBasedFrameDecoder0.settooLongFrameLength(long0);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals((-1787L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals((-1001L), lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals((-1001L), lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals((-1787L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int4);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int5);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int2 == int4);
      assertTrue(int2 == int5);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(long0 == long1);
      assertFalse(long0 == long2);
      
      int int6 = lengthFieldBasedFrameDecoder0.getmaxFrameLength();
      assertEquals(975, int6);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals((-1787L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals((-1001L), lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals((-1001L), lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals((-1787L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int6 == int4);
      assertTrue(int6 == int0);
      assertFalse(int6 == int5);
      assertFalse(int6 == int3);
      assertFalse(int6 == int2);
      assertFalse(int6 == int1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int5);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int2 == int4);
      assertTrue(int2 == int5);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      
      long long3 = 3162L;
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = long3;
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals((-1001L), lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      
      int int7 = lengthFieldBasedFrameDecoder0.getinitialBytesToStrip();
      assertEquals(975, int7);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals((-1001L), lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals((-1001L), lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int4);
      assertTrue(int0 == int6);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int5);
      assertFalse(int1 == int2);
      assertFalse(int1 == int6);
      assertFalse(int1 == int4);
      assertFalse(int2 == int6);
      assertFalse(int2 == int4);
      assertTrue(int2 == int5);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int7 == int3);
      assertFalse(int7 == int1);
      assertTrue(int7 == int6);
      assertFalse(int7 == int4);
      assertFalse(int7 == int2);
      assertFalse(int7 == int5);
      assertTrue(int7 == int0);
      
      int int8 = lengthFieldBasedFrameDecoder0.getlengthFieldOffset();
      assertEquals(1, int8);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals((-1001L), lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals((-1001L), lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int4);
      assertTrue(int0 == int6);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertTrue(int0 == int7);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int7);
      assertFalse(int1 == int5);
      assertFalse(int1 == int2);
      assertFalse(int1 == int6);
      assertFalse(int1 == int4);
      assertFalse(int2 == int6);
      assertFalse(int2 == int4);
      assertTrue(int2 == int5);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int7);
      assertFalse(int2 == int3);
      assertFalse(int8 == int0);
      assertFalse(int8 == int7);
      assertTrue(int8 == int1);
      assertFalse(int8 == int5);
      assertFalse(int8 == int3);
      assertFalse(int8 == int2);
      assertFalse(int8 == int6);
      assertFalse(int8 == int4);
      
      long long4 = lengthFieldBasedFrameDecoder0.getbytesToDiscard();
      assertEquals((-1001L), long4);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals((-1001L), lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals((-1001L), lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int4);
      assertTrue(int0 == int6);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int8);
      assertFalse(int0 == int2);
      assertTrue(int0 == int7);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int7);
      assertFalse(int1 == int5);
      assertFalse(int1 == int2);
      assertFalse(int1 == int6);
      assertFalse(int1 == int4);
      assertTrue(int1 == int8);
      assertFalse(int2 == int6);
      assertFalse(int2 == int4);
      assertTrue(int2 == int5);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int7);
      assertFalse(int2 == int3);
      assertFalse(int2 == int8);
      assertTrue(long4 == long2);
      assertFalse(long4 == long3);
      assertFalse(long4 == long1);
      assertFalse(long4 == long0);
      
      int int9 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals(0, int9);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals((-1001L), lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals((-1001L), lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int4);
      assertTrue(int0 == int6);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int8);
      assertFalse(int0 == int2);
      assertTrue(int0 == int7);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int7);
      assertFalse(int1 == int5);
      assertFalse(int1 == int2);
      assertFalse(int1 == int6);
      assertFalse(int1 == int4);
      assertTrue(int1 == int8);
      assertFalse(int2 == int6);
      assertFalse(int2 == int4);
      assertTrue(int2 == int5);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int7);
      assertFalse(int2 == int3);
      assertFalse(int2 == int8);
      assertFalse(int9 == int7);
      assertFalse(int9 == int6);
      assertFalse(int9 == int0);
      assertFalse(int9 == int1);
      assertTrue(int9 == int5);
      assertFalse(int9 == int3);
      assertFalse(int9 == int4);
      assertFalse(int9 == int8);
      assertTrue(int9 == int2);
      
      long long5 = 38L;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test50()  throws Throwable  {
      int int0 = 25;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(25, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(25, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = (long) int0;
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(25, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(25L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      
      ChannelState channelState0 = ChannelState.BOUND;
      byte[] byteArray0 = new byte[0];
      int int2 = 2026;
      Integer integer0 = new Integer(int1);
      assertEquals(2, (int)integer0);
      assertNotNull(integer0);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertTrue(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int2));
      assertFalse(integer0.equals((Object)int0));
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals(0, int3);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(25, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(25L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(25, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(25L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      
      int int4 = lengthFieldBasedFrameDecoder0.getlengthFieldOffset();
      assertEquals(2, int4);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(25, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(25L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(25, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(25L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertTrue(int4 == int1);
      assertFalse(int4 == int0);
      assertFalse(int4 == int3);
      assertFalse(int4 == int2);
      
      int int5 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals(0, int5);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(25, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(25L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(25, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(25L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int4);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertTrue(int1 == int4);
      assertFalse(int5 == int0);
      assertTrue(int5 == int3);
      assertFalse(int5 == int4);
      assertFalse(int5 == int2);
      assertFalse(int5 == int1);
      
      int int6 = lengthFieldBasedFrameDecoder0.getinitialBytesToStrip();
      assertEquals(0, int6);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(25, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(25L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(25, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(25L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int4);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int1 == int5);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertTrue(int1 == int4);
      assertTrue(int6 == int5);
      assertTrue(int6 == int3);
      assertFalse(int6 == int1);
      assertFalse(int6 == int0);
      assertFalse(int6 == int4);
      assertFalse(int6 == int2);
      
      int int7 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(4, int7);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(25, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(25L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(25, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(25L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int4);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int0 == int5);
      assertFalse(int0 == int6);
      assertFalse(int0 == int3);
      assertFalse(int1 == int5);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int6);
      assertTrue(int1 == int4);
      assertFalse(int7 == int3);
      assertFalse(int7 == int6);
      assertFalse(int7 == int5);
      assertFalse(int7 == int2);
      assertFalse(int7 == int1);
      assertFalse(int7 == int0);
      assertFalse(int7 == int4);
  }

  @Test(timeout = 11000)
  public void test51()  throws Throwable  {
      int int0 = 975;
      int int1 = 1;
      int int2 = 0;
      int int3 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int3);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      
      int int4 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int4);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int4 == int3);
      assertFalse(int4 == int0);
      assertFalse(int4 == int2);
      assertFalse(int4 == int1);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline0.getContext((ChannelHandler) lengthFieldBasedFrameDecoder0);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertNull(channelHandlerContext0);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int2 == int4);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int4);
      
      byte[] byteArray0 = new byte[15];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.slice();
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(15, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.readable());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(15, channelBuffer0.writerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(15, channelBuffer0.capacity());
      assertEquals(0, channelBuffer0.readerIndex());
      assertEquals(15, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer1 = (BigEndianHeapChannelBuffer)lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, defaultChannelPipeline0.channel, channelBuffer0);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(13, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.readable());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(2, channelBuffer0.readerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(15, channelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer1.readable());
      assertEquals(2, bigEndianHeapChannelBuffer1.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer1.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer1.readerIndex());
      assertEquals(2, bigEndianHeapChannelBuffer1.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer1.isDirect());
      assertEquals(2, bigEndianHeapChannelBuffer1.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer1.arrayOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int2 == int4);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int4);
      assertFalse(bigEndianHeapChannelBuffer0.equals((Object)channelBuffer0));
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertFalse(bigEndianHeapChannelBuffer1.equals((Object)bigEndianHeapChannelBuffer0));
      assertFalse(bigEndianHeapChannelBuffer1.equals((Object)channelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, bigEndianHeapChannelBuffer1);
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer1);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      assertNotSame(bigEndianHeapChannelBuffer1, bigEndianHeapChannelBuffer0);
      assertNotSame(bigEndianHeapChannelBuffer1, channelBuffer0);
      
      ChannelHandlerContext channelHandlerContext1 = null;
      DefaultLocalClientChannelFactory defaultLocalClientChannelFactory0 = new DefaultLocalClientChannelFactory();
      assertNotNull(defaultLocalClientChannelFactory0);
      
      ChannelPipeline channelPipeline0 = null;
      // Undeclared exception!
      try { 
        defaultLocalClientChannelFactory0.newChannel(channelPipeline0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.AbstractChannel", e);
      }
  }

  @Test(timeout = 11000)
  public void test52()  throws Throwable  {
      int int0 = 975;
      int int1 = 1;
      int int2 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      long long0 = 1241L;
      lengthFieldBasedFrameDecoder0.bytesToDiscard = long0;
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1241L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int3);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1241L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1241L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      
      ChannelHandlerContext channelHandlerContext0 = null;
      ChannelPipeline channelPipeline0 = null;
      ByteOrder byteOrder0 = null;
      int int4 = 255;
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "AG5!";
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      assertFalse(boolean0);
      
      double double0 = 0.0;
      long long1 = (-1805L);
      long long2 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals(0L, long2);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1241L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1241L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(long2 == long0);
      assertFalse(long2 == long1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      
      int int5 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals(0, int5);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1241L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1241L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int5 == int4);
      assertFalse(int5 == int1);
      assertFalse(int5 == int3);
      assertFalse(int5 == int0);
      assertTrue(int5 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      
      lengthFieldBasedFrameDecoder0.settooLongFrameLength(long1);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1241L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1241L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int5);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertTrue(int2 == int5);
      assertFalse(int2 == int3);
      assertFalse(long1 == long0);
      assertFalse(long1 == long2);
      
      int int6 = lengthFieldBasedFrameDecoder0.getmaxFrameLength();
      assertEquals(975, int6);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1241L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1241L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int5);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertTrue(int2 == int5);
      assertFalse(int2 == int3);
      assertFalse(int6 == int4);
      assertFalse(int6 == int1);
      assertFalse(int6 == int3);
      assertFalse(int6 == int2);
      assertTrue(int6 == int0);
      assertFalse(int6 == int5);
      
      long long3 = 3162L;
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = long3;
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1241L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      
      int int7 = lengthFieldBasedFrameDecoder0.getinitialBytesToStrip();
      assertEquals(975, int7);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1241L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1241L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertTrue(int0 == int6);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int6);
      assertFalse(int1 == int2);
      assertFalse(int1 == int5);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertTrue(int2 == int5);
      assertFalse(int2 == int6);
      assertFalse(int2 == int3);
      assertFalse(int7 == int2);
      assertFalse(int7 == int1);
      assertFalse(int7 == int3);
      assertFalse(int7 == int4);
      assertFalse(int7 == int5);
      assertTrue(int7 == int6);
      assertTrue(int7 == int0);
      
      int int8 = lengthFieldBasedFrameDecoder0.getlengthFieldOffset();
      assertEquals(1, int8);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1241L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1241L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertTrue(int0 == int7);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertTrue(int0 == int6);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int6);
      assertFalse(int1 == int2);
      assertFalse(int1 == int5);
      assertFalse(int1 == int4);
      assertFalse(int1 == int7);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int2 == int4);
      assertFalse(int2 == int7);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertTrue(int2 == int5);
      assertFalse(int2 == int6);
      assertFalse(int2 == int3);
      assertFalse(int8 == int6);
      assertFalse(int8 == int3);
      assertFalse(int8 == int0);
      assertFalse(int8 == int4);
      assertFalse(int8 == int7);
      assertFalse(int8 == int5);
      assertTrue(int8 == int1);
      assertFalse(int8 == int2);
      
      long long4 = lengthFieldBasedFrameDecoder0.getbytesToDiscard();
      assertEquals(1241L, long4);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1241L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1241L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertTrue(int0 == int7);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int0 == int8);
      assertTrue(int0 == int6);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int6);
      assertFalse(int1 == int2);
      assertTrue(int1 == int8);
      assertFalse(int1 == int5);
      assertFalse(int1 == int4);
      assertFalse(int1 == int7);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int2 == int8);
      assertFalse(int2 == int4);
      assertFalse(int2 == int7);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertTrue(int2 == int5);
      assertFalse(int2 == int6);
      assertFalse(int2 == int3);
      assertFalse(long4 == long3);
      assertTrue(long4 == long0);
      assertFalse(long4 == long2);
      assertFalse(long4 == long1);
      
      long long5 = 38L;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test53()  throws Throwable  {
      int int0 = 975;
      int int1 = 1;
      int int2 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int0);
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int3);
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      
      ChannelHandlerContext channelHandlerContext0 = null;
      ChannelPipeline channelPipeline0 = null;
      ByteOrder byteOrder0 = null;
      int int4 = 255;
      double double0 = 0.0;
      long long0 = (-1805L);
      boolean boolean0 = false;
      lengthFieldBasedFrameDecoder0.setdiscardingTooLongFrame(boolean0);
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      long long1 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals(0L, long1);
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(long1 == long0);
      
      int int5 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals(0, int5);
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int5 == int0);
      assertFalse(int5 == int4);
      assertFalse(int5 == int1);
      assertFalse(int5 == int3);
      assertTrue(int5 == int2);
      
      lengthFieldBasedFrameDecoder0.settooLongFrameLength(long0);
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int1);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int5);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertTrue(int2 == int5);
      assertFalse(long0 == long1);
      
      int int6 = lengthFieldBasedFrameDecoder0.getmaxFrameLength();
      assertEquals(975, int6);
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int6 == int2);
      assertFalse(int6 == int4);
      assertFalse(int6 == int5);
      assertFalse(int6 == int1);
      assertFalse(int6 == int3);
      assertTrue(int6 == int0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int5);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertTrue(int2 == int5);
      
      long long2 = 3162L;
      int int7 = lengthFieldBasedFrameDecoder0.getinitialBytesToStrip();
      assertEquals(975, int7);
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int1);
      assertTrue(int0 == int6);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int5);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int6);
      assertFalse(int1 == int0);
      assertFalse(int7 == int4);
      assertFalse(int7 == int5);
      assertTrue(int7 == int6);
      assertFalse(int7 == int3);
      assertTrue(int7 == int0);
      assertFalse(int7 == int1);
      assertFalse(int7 == int2);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int6);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertTrue(int2 == int5);
      
      int int8 = lengthFieldBasedFrameDecoder0.getlengthFieldOffset();
      assertEquals(1, int8);
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int1);
      assertTrue(int0 == int7);
      assertTrue(int0 == int6);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int5);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int6);
      assertFalse(int1 == int0);
      assertFalse(int1 == int7);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int6);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int7);
      assertTrue(int2 == int5);
      assertFalse(int8 == int2);
      assertFalse(int8 == int3);
      assertFalse(int8 == int7);
      assertFalse(int8 == int0);
      assertFalse(int8 == int5);
      assertFalse(int8 == int6);
      assertFalse(int8 == int4);
      assertTrue(int8 == int1);
      
      long long3 = lengthFieldBasedFrameDecoder0.getbytesToDiscard();
      assertEquals(0L, long3);
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int1);
      assertTrue(int0 == int7);
      assertTrue(int0 == int6);
      assertFalse(int0 == int8);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int5);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int6);
      assertFalse(int1 == int0);
      assertTrue(int1 == int8);
      assertFalse(int1 == int7);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int6);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int8);
      assertFalse(int2 == int7);
      assertTrue(int2 == int5);
      assertFalse(long3 == long2);
      assertTrue(long3 == long1);
      assertFalse(long3 == long0);
      
      long long4 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals((-1805L), long4);
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int1);
      assertTrue(int0 == int7);
      assertTrue(int0 == int6);
      assertFalse(int0 == int8);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int5);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int6);
      assertFalse(int1 == int0);
      assertTrue(int1 == int8);
      assertFalse(int1 == int7);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int6);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int8);
      assertFalse(int2 == int7);
      assertTrue(int2 == int5);
      assertTrue(long4 == long0);
      assertFalse(long4 == long1);
      assertFalse(long4 == long3);
      assertFalse(long4 == long2);
      
      int int9 = lengthFieldBasedFrameDecoder0.getlengthFieldOffset();
      assertEquals(1, int9);
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int1);
      assertTrue(int0 == int7);
      assertTrue(int0 == int6);
      assertFalse(int0 == int8);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int5);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int6);
      assertFalse(int1 == int0);
      assertTrue(int1 == int8);
      assertFalse(int1 == int7);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int6);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int8);
      assertFalse(int2 == int7);
      assertTrue(int2 == int5);
      assertFalse(int9 == int0);
      assertFalse(int9 == int4);
      assertFalse(int9 == int5);
      assertFalse(int9 == int3);
      assertTrue(int9 == int1);
      assertTrue(int9 == int8);
      assertFalse(int9 == int6);
      assertFalse(int9 == int2);
      assertFalse(int9 == int7);
      
      long long5 = 38L;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test54()  throws Throwable  {
      int int0 = 975;
      int int1 = 1;
      int int2 = 0;
      int int3 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int3);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      
      int int4 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int4);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int4 == int0);
      assertFalse(int4 == int1);
      assertFalse(int4 == int3);
      assertFalse(int4 == int2);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline0.getContext((ChannelHandler) lengthFieldBasedFrameDecoder0);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertNull(channelHandlerContext0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int0 == int1);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int4);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int4);
      
      byte[] byteArray0 = new byte[15];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.slice();
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(15, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.hasArray());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(15, channelBuffer0.writerIndex());
      assertTrue(channelBuffer0.readable());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(15, channelBuffer0.capacity());
      assertEquals(0, channelBuffer0.readerIndex());
      assertEquals(15, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer1 = (BigEndianHeapChannelBuffer)lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, defaultChannelPipeline0.channel, channelBuffer0);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(13, channelBuffer0.readableBytes());
      assertEquals(15, channelBuffer0.writerIndex());
      assertTrue(channelBuffer0.readable());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(2, channelBuffer0.readerIndex());
      assertEquals(15, channelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer1.arrayOffset());
      assertEquals(2, bigEndianHeapChannelBuffer1.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer1.readerIndex());
      assertFalse(bigEndianHeapChannelBuffer1.isDirect());
      assertEquals(2, bigEndianHeapChannelBuffer1.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer1.hasArray());
      assertEquals(2, bigEndianHeapChannelBuffer1.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer1.readable());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int0 == int1);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int4);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int4);
      assertFalse(bigEndianHeapChannelBuffer0.equals((Object)channelBuffer0));
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertFalse(bigEndianHeapChannelBuffer1.equals((Object)bigEndianHeapChannelBuffer0));
      assertFalse(bigEndianHeapChannelBuffer1.equals((Object)channelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, bigEndianHeapChannelBuffer1);
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer1);
      assertNotSame(bigEndianHeapChannelBuffer1, bigEndianHeapChannelBuffer0);
      assertNotSame(bigEndianHeapChannelBuffer1, channelBuffer0);
      
      ChannelHandlerContext channelHandlerContext1 = null;
      ChannelPipeline channelPipeline0 = null;
      ByteOrder byteOrder0 = null;
      int int5 = 255;
      int int6 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals(0, int6);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int6 == int5);
      assertFalse(int6 == int1);
      assertTrue(int6 == int3);
      assertTrue(int6 == int2);
      assertFalse(int6 == int4);
      assertFalse(int6 == int0);
      assertFalse(int0 == int5);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int0 == int1);
      assertFalse(int1 == int3);
      assertFalse(int1 == int5);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int2 == int5);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int4);
      assertFalse(int3 == int1);
      assertFalse(int3 == int5);
      assertFalse(int3 == int0);
      assertFalse(int3 == int4);
      
      int int7 = lengthFieldBasedFrameDecoder0.getmaxFrameLength();
      assertEquals(975, int7);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int5);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int0 == int6);
      assertFalse(int0 == int1);
      assertFalse(int7 == int3);
      assertFalse(int7 == int4);
      assertFalse(int7 == int6);
      assertTrue(int7 == int0);
      assertFalse(int7 == int5);
      assertFalse(int7 == int2);
      assertFalse(int7 == int1);
      assertFalse(int1 == int3);
      assertFalse(int1 == int5);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int6);
      assertFalse(int1 == int2);
      assertFalse(int2 == int5);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int4);
      assertTrue(int2 == int6);
      assertFalse(int3 == int1);
      assertFalse(int3 == int5);
      assertTrue(int3 == int6);
      assertFalse(int3 == int0);
      assertFalse(int3 == int4);
      
      DynamicChannelBuffer dynamicChannelBuffer0 = null;
      try {
        dynamicChannelBuffer0 = new DynamicChannelBuffer(byteOrder0, int5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // endianness
         //
         verifyException("org.jboss.netty.buffer.HeapChannelBufferFactory", e);
      }
  }

  @Test(timeout = 11000)
  public void test55()  throws Throwable  {
      int int0 = 975;
      int int1 = 1;
      int int2 = 0;
      int int3 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int3);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      
      int int4 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int4);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int4 == int2);
      assertFalse(int4 == int1);
      assertFalse(int4 == int0);
      assertFalse(int4 == int3);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline0.getContext((ChannelHandler) lengthFieldBasedFrameDecoder0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNull(channelHandlerContext0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int0 == int2);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int2 == int1);
      assertFalse(int2 == int4);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int4);
      assertFalse(int3 == int0);
      
      byte[] byteArray0 = new byte[15];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.slice();
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(15, channelBuffer0.readableBytes());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(15, channelBuffer0.capacity());
      assertTrue(channelBuffer0.readable());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(0, channelBuffer0.readerIndex());
      assertEquals(15, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer1 = (BigEndianHeapChannelBuffer)lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, defaultChannelPipeline0.channel, channelBuffer0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(13, channelBuffer0.readableBytes());
      assertEquals(2, channelBuffer0.readerIndex());
      assertEquals(15, channelBuffer0.capacity());
      assertTrue(channelBuffer0.readable());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(2, bigEndianHeapChannelBuffer1.readableBytes());
      assertEquals(0, bigEndianHeapChannelBuffer1.readerIndex());
      assertTrue(bigEndianHeapChannelBuffer1.readable());
      assertEquals(2, bigEndianHeapChannelBuffer1.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer1.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer1.arrayOffset());
      assertEquals(2, bigEndianHeapChannelBuffer1.capacity());
      assertFalse(bigEndianHeapChannelBuffer1.isDirect());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer1);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int0 == int2);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int2 == int1);
      assertFalse(int2 == int4);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int4);
      assertFalse(int3 == int0);
      assertFalse(bigEndianHeapChannelBuffer0.equals((Object)channelBuffer0));
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertFalse(bigEndianHeapChannelBuffer1.equals((Object)channelBuffer0));
      assertFalse(bigEndianHeapChannelBuffer1.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, bigEndianHeapChannelBuffer1);
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer1);
      assertNotSame(bigEndianHeapChannelBuffer1, channelBuffer0);
      assertNotSame(bigEndianHeapChannelBuffer1, bigEndianHeapChannelBuffer0);
      
      ChannelPipeline channelPipeline0 = null;
      ByteOrder byteOrder0 = null;
      int int5 = 255;
      boolean boolean1 = lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame();
      assertFalse(boolean1);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(boolean1 == boolean0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int0 == int5);
      assertFalse(int0 == int2);
      assertFalse(int1 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int5);
      assertFalse(int1 == int3);
      assertFalse(int2 == int1);
      assertFalse(int2 == int5);
      assertFalse(int2 == int4);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int5);
      assertFalse(int3 == int4);
      assertFalse(int3 == int0);
      
      DynamicChannelBuffer dynamicChannelBuffer0 = null;
      try {
        dynamicChannelBuffer0 = new DynamicChannelBuffer(byteOrder0, int5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // endianness
         //
         verifyException("org.jboss.netty.buffer.HeapChannelBufferFactory", e);
      }
  }

  @Test(timeout = 11000)
  public void test56()  throws Throwable  {
      int int0 = 975;
      int int1 = 1;
      int int2 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int1, int2);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int3);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline0.getContext((ChannelHandler) lengthFieldBasedFrameDecoder0);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertNull(channelHandlerContext0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int3);
      assertFalse(int2 == int0);
      
      byte[] byteArray0 = new byte[15];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.slice();
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(15, channelBuffer0.capacity());
      assertTrue(channelBuffer0.readable());
      assertFalse(channelBuffer0.isDirect());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(15, channelBuffer0.readableBytes());
      assertEquals(0, channelBuffer0.readerIndex());
      assertEquals(15, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      long long0 = channelBuffer0.readUnsignedInt();
      assertEquals(0L, long0);
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(15, channelBuffer0.capacity());
      assertTrue(channelBuffer0.readable());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(11, channelBuffer0.readableBytes());
      assertEquals(4, channelBuffer0.readerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(15, byteArray0.length);
      assertFalse(bigEndianHeapChannelBuffer0.equals((Object)channelBuffer0));
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer1 = (BigEndianHeapChannelBuffer)lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, defaultChannelPipeline0.channel, channelBuffer0);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(8, channelBuffer0.readableBytes());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(7, channelBuffer0.readerIndex());
      assertEquals(15, channelBuffer0.capacity());
      assertTrue(channelBuffer0.readable());
      assertFalse(channelBuffer0.isDirect());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(3, bigEndianHeapChannelBuffer1.readableBytes());
      assertEquals(0, bigEndianHeapChannelBuffer1.arrayOffset());
      assertEquals(0, bigEndianHeapChannelBuffer1.readerIndex());
      assertFalse(bigEndianHeapChannelBuffer1.isDirect());
      assertEquals(3, bigEndianHeapChannelBuffer1.capacity());
      assertEquals(3, bigEndianHeapChannelBuffer1.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer1.readable());
      assertTrue(bigEndianHeapChannelBuffer1.hasArray());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer1);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int3);
      assertFalse(int2 == int0);
      assertFalse(bigEndianHeapChannelBuffer0.equals((Object)channelBuffer0));
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertFalse(bigEndianHeapChannelBuffer1.equals((Object)bigEndianHeapChannelBuffer0));
      assertFalse(bigEndianHeapChannelBuffer1.equals((Object)channelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, bigEndianHeapChannelBuffer1);
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer1);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      assertNotSame(bigEndianHeapChannelBuffer1, bigEndianHeapChannelBuffer0);
      assertNotSame(bigEndianHeapChannelBuffer1, channelBuffer0);
      
      ChannelHandlerContext channelHandlerContext1 = null;
      ByteOrder byteOrder0 = null;
      int int4 = 255;
      DynamicChannelBuffer dynamicChannelBuffer0 = null;
      try {
        dynamicChannelBuffer0 = new DynamicChannelBuffer(byteOrder0, int4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // endianness
         //
         verifyException("org.jboss.netty.buffer.HeapChannelBufferFactory", e);
      }
  }

  @Test(timeout = 11000)
  public void test57()  throws Throwable  {
      int int0 = 975;
      int int1 = 1;
      int int2 = (-3218);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int3);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      
      ChannelHandlerContext channelHandlerContext0 = null;
      ChannelPipeline channelPipeline0 = null;
      ByteOrder byteOrder0 = null;
      int int4 = 255;
      double double0 = 0.0;
      long long0 = (-1805L);
      long long1 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals(0L, long1);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int4);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int3);
      assertFalse(int2 == int0);
      assertFalse(long1 == long0);
      
      int int5 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals((-3218), int5);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int4);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int3);
      assertFalse(int2 == int0);
      assertFalse(int5 == int1);
      assertFalse(int5 == int3);
      assertTrue(int5 == int2);
      assertFalse(int5 == int0);
      assertFalse(int5 == int4);
      
      lengthFieldBasedFrameDecoder0.settooLongFrameLength(long0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int4);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int5);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int5);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertTrue(int2 == int5);
      assertFalse(int2 == int3);
      assertFalse(int2 == int0);
      assertFalse(long0 == long1);
      
      int int6 = lengthFieldBasedFrameDecoder0.getmaxFrameLength();
      assertEquals(975, int6);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int4);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int5);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int5);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertTrue(int2 == int5);
      assertFalse(int2 == int3);
      assertFalse(int2 == int0);
      assertFalse(int6 == int4);
      assertTrue(int6 == int0);
      assertFalse(int6 == int1);
      assertFalse(int6 == int5);
      assertFalse(int6 == int2);
      assertFalse(int6 == int3);
      
      long long2 = 3162L;
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = long2;
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      
      int int7 = lengthFieldBasedFrameDecoder0.getinitialBytesToStrip();
      assertEquals(975, int7);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertTrue(int0 == int6);
      assertFalse(int0 == int1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int5);
      assertFalse(int0 == int2);
      assertFalse(int7 == int3);
      assertFalse(int7 == int5);
      assertFalse(int7 == int1);
      assertTrue(int7 == int6);
      assertFalse(int7 == int4);
      assertFalse(int7 == int2);
      assertTrue(int7 == int0);
      assertFalse(int1 == int0);
      assertFalse(int1 == int6);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int5);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int6);
      assertTrue(int2 == int5);
      assertFalse(int2 == int3);
      assertFalse(int2 == int0);
      
      int int8 = lengthFieldBasedFrameDecoder0.getlengthFieldOffset();
      assertEquals(1, int8);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertTrue(int0 == int6);
      assertFalse(int0 == int1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int5);
      assertFalse(int0 == int2);
      assertTrue(int0 == int7);
      assertFalse(int1 == int0);
      assertFalse(int1 == int6);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int7);
      assertFalse(int1 == int5);
      assertFalse(int8 == int5);
      assertFalse(int8 == int3);
      assertFalse(int8 == int6);
      assertFalse(int8 == int0);
      assertTrue(int8 == int1);
      assertFalse(int8 == int7);
      assertFalse(int8 == int2);
      assertFalse(int8 == int4);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int6);
      assertTrue(int2 == int5);
      assertFalse(int2 == int7);
      assertFalse(int2 == int3);
      assertFalse(int2 == int0);
      
      long long3 = lengthFieldBasedFrameDecoder0.getbytesToDiscard();
      assertEquals(0L, long3);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(int0 == int8);
      assertTrue(int0 == int6);
      assertFalse(int0 == int1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int5);
      assertFalse(int0 == int2);
      assertTrue(int0 == int7);
      assertFalse(int1 == int0);
      assertFalse(int1 == int6);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertTrue(int1 == int8);
      assertFalse(int1 == int2);
      assertFalse(int1 == int7);
      assertFalse(int1 == int5);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int6);
      assertTrue(int2 == int5);
      assertFalse(int2 == int8);
      assertFalse(int2 == int7);
      assertFalse(int2 == int3);
      assertFalse(int2 == int0);
      assertFalse(long3 == long2);
      assertFalse(long3 == long0);
      assertTrue(long3 == long1);
      
      long long4 = 38L;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test58()  throws Throwable  {
      int int0 = 2838;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int0);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      boolean boolean0 = true;
      lengthFieldBasedFrameDecoder0.setdiscardingTooLongFrame(boolean0);
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int0);
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertFalse(dynamicChannelBuffer0.readable());
      assertNotNull(dynamicChannelBuffer0);
      assertFalse(int0 == int1);
      
      int int2 = 2;
      long long0 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals(0L, long0);
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldLength();
      assertEquals(2, int3);
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertTrue(int3 == int1);
      assertTrue(int3 == int2);
      assertFalse(int3 == int0);
  }

  @Test(timeout = 11000)
  public void test59()  throws Throwable  {
      int int0 = 2838;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int0);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      boolean boolean0 = true;
      lengthFieldBasedFrameDecoder0.setdiscardingTooLongFrame(boolean0);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int0);
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertFalse(dynamicChannelBuffer0.readable());
      assertNotNull(dynamicChannelBuffer0);
      assertFalse(int0 == int1);
      
      lengthFieldBasedFrameDecoder0.setbytesToDiscard(int0);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = (BigEndianHeapChannelBuffer)dynamicChannelBuffer0.buffer;
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(2838, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      int int2 = 2;
      ChannelBuffer channelBuffer0 = lengthFieldBasedFrameDecoder0.extractFrame(bigEndianHeapChannelBuffer0, int2, int2);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(2838, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertEquals(2, channelBuffer0.writerIndex());
      assertEquals(2, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.hasArray());
      assertTrue(channelBuffer0.readable());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(2, channelBuffer0.capacity());
      assertEquals(0, channelBuffer0.readerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertNotNull(channelBuffer0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      Object object0 = lengthFieldBasedFrameDecoder0.decode(defaultChannelPipeline0.head, defaultChannelPipeline0.channel, channelBuffer0);
      assertEquals(2836L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(2838, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertEquals(2, channelBuffer0.writerIndex());
      assertFalse(channelBuffer0.readable());
      assertEquals(0, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(2, channelBuffer0.capacity());
      assertEquals(2, channelBuffer0.readerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2836L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertNull(object0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertTrue(bigEndianHeapChannelBuffer0.equals((Object)channelBuffer0));
      assertFalse(int2 == int0);
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      long long0 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals(0L, long0);
      assertEquals(2836L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2836L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      boolean boolean1 = lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame();
      assertTrue(boolean1);
      assertEquals(2836L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2836L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 11000)
  public void test60()  throws Throwable  {
      int int0 = 975;
      int int1 = 1;
      int int2 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int0);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int3);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline0.getContext((ChannelHandler) lengthFieldBasedFrameDecoder0);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertNull(channelHandlerContext0);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      byte[] byteArray0 = new byte[15];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.slice();
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(15, channelBuffer0.capacity());
      assertTrue(channelBuffer0.readable());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(0, channelBuffer0.readerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(15, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(15, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      try { 
        lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, defaultChannelPipeline0.channel, channelBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Adjusted frame length (2) is less than initialBytesToStrip: 975
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test61()  throws Throwable  {
      int int0 = 972;
      int int1 = 1;
      int int2 = (-15);
      int int3 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int3);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(972, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals((-15), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(972, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals((-15), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      
      int int4 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int4);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(972, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals((-15), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(972, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals((-15), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      assertFalse(int4 == int0);
      assertFalse(int4 == int3);
      assertFalse(int4 == int2);
      assertFalse(int4 == int1);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline0.getContext((ChannelHandler) lengthFieldBasedFrameDecoder0);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(972, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals((-15), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(972, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals((-15), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertNull(channelHandlerContext0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int4);
      assertFalse(int1 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int4);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertFalse(int3 == int4);
      assertFalse(int3 == int0);
      
      byte[] byteArray0 = new byte[15];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.slice();
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(15, channelBuffer0.capacity());
      assertEquals(0, channelBuffer0.readerIndex());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(15, channelBuffer0.writerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(15, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.readable());
      assertEquals(15, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      try { 
        lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, defaultChannelPipeline0.channel, channelBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Adjusted frame length (-13) is less than lengthFieldEndOffset: 2
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test62()  throws Throwable  {
      int int0 = 2838;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int0);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      boolean boolean0 = true;
      lengthFieldBasedFrameDecoder0.setdiscardingTooLongFrame(boolean0);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int0);
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertNotNull(dynamicChannelBuffer0);
      assertFalse(int0 == int1);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = (BigEndianHeapChannelBuffer)dynamicChannelBuffer0.buffer;
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertEquals(2838, bigEndianHeapChannelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      int int2 = 2;
      ChannelBuffer channelBuffer0 = lengthFieldBasedFrameDecoder0.extractFrame(bigEndianHeapChannelBuffer0, int2, int2);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertEquals(2838, bigEndianHeapChannelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertEquals(2, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.hasArray());
      assertTrue(channelBuffer0.readable());
      assertEquals(0, channelBuffer0.readerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(2, channelBuffer0.capacity());
      assertEquals(2, channelBuffer0.writerIndex());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertNotNull(channelBuffer0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      long long0 = (-1L);
      boolean boolean1 = lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength();
      assertFalse(boolean1);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(boolean1 == boolean0);
      
      lengthFieldBasedFrameDecoder0.settooLongFrameLength(long0);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals((-1L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals((-1L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      try { 
        lengthFieldBasedFrameDecoder0.decode(defaultChannelPipeline0.head, defaultChannelPipeline0.channel, channelBuffer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test63()  throws Throwable  {
      int int0 = 975;
      int int1 = 1;
      int int2 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int1, int2);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int3);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline0.getContext((ChannelHandler) lengthFieldBasedFrameDecoder0);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertNull(channelHandlerContext0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      
      byte[] byteArray0 = new byte[15];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      ByteBuffer byteBuffer0 = bigEndianHeapChannelBuffer0.toByteBuffer();
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertEquals(0, byteBuffer0.position());
      assertEquals(15, byteBuffer0.limit());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(15, byteBuffer0.capacity());
      assertFalse(byteBuffer0.isDirect());
      assertFalse(byteBuffer0.isReadOnly());
      assertTrue(byteBuffer0.hasArray());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=15 cap=15]", byteBuffer0.toString());
      assertEquals(15, byteBuffer0.remaining());
      assertEquals(15, byteArray0.length);
      assertNotNull(byteBuffer0);
      
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.slice();
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, channelBuffer0.readableBytes());
      assertEquals(0, channelBuffer0.readerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(15, channelBuffer0.capacity());
      assertTrue(channelBuffer0.readable());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(15, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer1 = (BigEndianHeapChannelBuffer)lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, defaultChannelPipeline0.channel, channelBuffer0);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(15, channelBuffer0.capacity());
      assertTrue(channelBuffer0.readable());
      assertEquals(12, channelBuffer0.readableBytes());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(3, channelBuffer0.readerIndex());
      assertEquals(3, bigEndianHeapChannelBuffer1.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer1.readable());
      assertEquals(0, bigEndianHeapChannelBuffer1.arrayOffset());
      assertEquals(3, bigEndianHeapChannelBuffer1.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer1.readerIndex());
      assertFalse(bigEndianHeapChannelBuffer1.isDirect());
      assertEquals(3, bigEndianHeapChannelBuffer1.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer1.hasArray());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer1);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      assertFalse(bigEndianHeapChannelBuffer0.equals((Object)channelBuffer0));
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertFalse(bigEndianHeapChannelBuffer1.equals((Object)channelBuffer0));
      assertFalse(bigEndianHeapChannelBuffer1.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(bigEndianHeapChannelBuffer0, bigEndianHeapChannelBuffer1);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer1);
      assertNotSame(bigEndianHeapChannelBuffer1, channelBuffer0);
      assertNotSame(bigEndianHeapChannelBuffer1, bigEndianHeapChannelBuffer0);
      
      ChannelHandlerContext channelHandlerContext1 = null;
      DefaultLocalClientChannelFactory defaultLocalClientChannelFactory0 = new DefaultLocalClientChannelFactory();
      assertNotNull(defaultLocalClientChannelFactory0);
      
      LocalChannel localChannel0 = defaultLocalClientChannelFactory0.newChannel(defaultChannelPipeline0);
      assertTrue(defaultChannelPipeline0.isAttached());
      assertEquals(1, localChannel0.getInterestOps());
      assertTrue(localChannel0.isReadable());
      assertTrue(localChannel0.isWritable());
      assertTrue(localChannel0.isOpen());
      assertEquals(11, (int)localChannel0.getId());
      assertNotNull(localChannel0);
      
      ChannelPipeline channelPipeline0 = null;
      boolean boolean0 = lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame();
      assertFalse(boolean0);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      
      boolean boolean1 = lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength();
      assertFalse(boolean1);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertTrue(boolean1 == boolean0);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer2 = (BigEndianHeapChannelBuffer)lengthFieldBasedFrameDecoder0.decode(defaultChannelPipeline0.tail, localChannel0, channelBuffer0);
      assertTrue(bigEndianHeapChannelBuffer2.readable());
      assertEquals(3, bigEndianHeapChannelBuffer2.readableBytes());
      assertEquals(3, bigEndianHeapChannelBuffer2.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer2.hasArray());
      assertEquals(3, bigEndianHeapChannelBuffer2.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer2.readerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer2.arrayOffset());
      assertFalse(bigEndianHeapChannelBuffer2.isDirect());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertTrue(defaultChannelPipeline0.isAttached());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(6, channelBuffer0.readerIndex());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(15, channelBuffer0.capacity());
      assertTrue(channelBuffer0.readable());
      assertEquals(9, channelBuffer0.readableBytes());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(1, localChannel0.getInterestOps());
      assertTrue(localChannel0.isReadable());
      assertTrue(localChannel0.isWritable());
      assertTrue(localChannel0.isOpen());
      assertEquals(11, (int)localChannel0.getId());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer2);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(bigEndianHeapChannelBuffer2.equals((Object)bigEndianHeapChannelBuffer0));
      assertFalse(bigEndianHeapChannelBuffer2.equals((Object)channelBuffer0));
      assertTrue(bigEndianHeapChannelBuffer2.equals((Object)bigEndianHeapChannelBuffer1));
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      assertFalse(bigEndianHeapChannelBuffer0.equals((Object)channelBuffer0));
      assertFalse(bigEndianHeapChannelBuffer0.equals((Object)bigEndianHeapChannelBuffer1));
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer1));
      assertNotSame(bigEndianHeapChannelBuffer2, bigEndianHeapChannelBuffer1);
      assertNotSame(bigEndianHeapChannelBuffer2, bigEndianHeapChannelBuffer0);
      assertNotSame(bigEndianHeapChannelBuffer2, channelBuffer0);
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(bigEndianHeapChannelBuffer0, bigEndianHeapChannelBuffer2);
      assertNotSame(bigEndianHeapChannelBuffer0, bigEndianHeapChannelBuffer1);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer2);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer1);
      
      // Undeclared exception!
      try { 
        defaultLocalClientChannelFactory0.newChannel(channelPipeline0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.AbstractChannel", e);
      }
  }

  @Test(timeout = 11000)
  public void test64()  throws Throwable  {
      int int0 = 975;
      int int1 = 1;
      int int2 = (-3218);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int3);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      
      ChannelPipeline channelPipeline0 = null;
      ByteOrder byteOrder0 = null;
      int int4 = 255;
      double double0 = 0.0;
      long long0 = (-1805L);
      long long1 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals(0L, long1);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(long1 == long0);
      
      int int5 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals((-3218), int5);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertTrue(int5 == int2);
      assertFalse(int5 == int0);
      assertFalse(int5 == int3);
      assertFalse(int5 == int4);
      assertFalse(int5 == int1);
      
      lengthFieldBasedFrameDecoder0.settooLongFrameLength(long0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(int0 == int5);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int1 == int4);
      assertFalse(int1 == int5);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertTrue(int2 == int5);
      assertFalse(long0 == long1);
      
      int int6 = lengthFieldBasedFrameDecoder0.getmaxFrameLength();
      assertEquals(975, int6);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(int0 == int5);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int1 == int4);
      assertFalse(int1 == int5);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertTrue(int2 == int5);
      assertFalse(int6 == int3);
      assertFalse(int6 == int5);
      assertFalse(int6 == int2);
      assertTrue(int6 == int0);
      assertFalse(int6 == int1);
      assertFalse(int6 == int4);
      
      long long2 = 3162L;
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = long2;
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      
      int int7 = lengthFieldBasedFrameDecoder0.getinitialBytesToStrip();
      assertEquals(975, int7);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int7 == int5);
      assertFalse(int7 == int3);
      assertFalse(int7 == int1);
      assertFalse(int7 == int2);
      assertFalse(int7 == int4);
      assertTrue(int7 == int0);
      assertTrue(int7 == int6);
      assertFalse(int0 == int5);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertTrue(int0 == int6);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int1 == int4);
      assertFalse(int1 == int6);
      assertFalse(int1 == int5);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertTrue(int2 == int5);
      assertFalse(int2 == int6);
      
      int int8 = lengthFieldBasedFrameDecoder0.getlengthFieldOffset();
      assertEquals(1, int8);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int5);
      assertTrue(int0 == int7);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertTrue(int0 == int6);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertTrue(int8 == int1);
      assertFalse(int8 == int0);
      assertFalse(int8 == int4);
      assertFalse(int8 == int3);
      assertFalse(int8 == int6);
      assertFalse(int8 == int2);
      assertFalse(int8 == int5);
      assertFalse(int8 == int7);
      assertFalse(int1 == int4);
      assertFalse(int1 == int6);
      assertFalse(int1 == int5);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int7);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int7);
      assertTrue(int2 == int5);
      assertFalse(int2 == int6);
      
      long long3 = lengthFieldBasedFrameDecoder0.getbytesToDiscard();
      assertEquals(0L, long3);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int5);
      assertTrue(int0 == int7);
      assertFalse(int0 == int2);
      assertFalse(int0 == int8);
      assertFalse(int0 == int1);
      assertTrue(int0 == int6);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int1 == int4);
      assertTrue(int1 == int8);
      assertFalse(int1 == int6);
      assertFalse(int1 == int5);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int7);
      assertFalse(int1 == int0);
      assertFalse(long3 == long0);
      assertTrue(long3 == long1);
      assertFalse(long3 == long2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int7);
      assertTrue(int2 == int5);
      assertFalse(int2 == int6);
      assertFalse(int2 == int8);
      
      long long4 = 38L;
      long long5 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals(3162L, long5);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(3162L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int5);
      assertTrue(int0 == int7);
      assertFalse(int0 == int2);
      assertFalse(int0 == int8);
      assertFalse(int0 == int1);
      assertTrue(int0 == int6);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int1 == int4);
      assertTrue(int1 == int8);
      assertFalse(int1 == int6);
      assertFalse(int1 == int5);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int7);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int7);
      assertTrue(int2 == int5);
      assertFalse(int2 == int6);
      assertFalse(int2 == int8);
      assertFalse(long5 == long1);
      assertTrue(long5 == long2);
      assertFalse(long5 == long0);
      assertFalse(long5 == long3);
      assertFalse(long5 == long4);
  }

  @Test(timeout = 11000)
  public void test65()  throws Throwable  {
      int int0 = 975;
      int int1 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int1, int1);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      int int2 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int2);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline0.getContext((ChannelHandler) lengthFieldBasedFrameDecoder0);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertNull(channelHandlerContext0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      
      byte[] byteArray0 = new byte[15];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      ByteBuffer byteBuffer0 = bigEndianHeapChannelBuffer0.toByteBuffer();
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(byteBuffer0.isReadOnly());
      assertTrue(byteBuffer0.hasArray());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=15 cap=15]", byteBuffer0.toString());
      assertEquals(15, byteBuffer0.remaining());
      assertEquals(15, byteBuffer0.capacity());
      assertFalse(byteBuffer0.isDirect());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertEquals(15, byteBuffer0.limit());
      assertEquals(0, byteBuffer0.position());
      assertEquals(15, byteArray0.length);
      assertNotNull(byteBuffer0);
      
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.slice();
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertTrue(channelBuffer0.readable());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(15, channelBuffer0.readableBytes());
      assertEquals(0, channelBuffer0.readerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(15, channelBuffer0.capacity());
      assertEquals(15, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer1 = (BigEndianHeapChannelBuffer)lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, defaultChannelPipeline0.channel, channelBuffer0);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(12, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.readable());
      assertEquals(3, channelBuffer0.readerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(15, channelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer1.isDirect());
      assertEquals(2, bigEndianHeapChannelBuffer1.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer1.hasArray());
      assertEquals(2, bigEndianHeapChannelBuffer1.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer1.readable());
      assertEquals(0, bigEndianHeapChannelBuffer1.readerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer1.arrayOffset());
      assertEquals(2, bigEndianHeapChannelBuffer1.capacity());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(bigEndianHeapChannelBuffer0.equals((Object)channelBuffer0));
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertFalse(bigEndianHeapChannelBuffer1.equals((Object)channelBuffer0));
      assertFalse(bigEndianHeapChannelBuffer1.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, bigEndianHeapChannelBuffer1);
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer1);
      assertNotSame(bigEndianHeapChannelBuffer1, channelBuffer0);
      assertNotSame(bigEndianHeapChannelBuffer1, bigEndianHeapChannelBuffer0);
      
      ChannelHandlerContext channelHandlerContext1 = null;
      DefaultLocalClientChannelFactory defaultLocalClientChannelFactory0 = new DefaultLocalClientChannelFactory();
      assertNotNull(defaultLocalClientChannelFactory0);
      
      boolean boolean0 = lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame();
      assertFalse(boolean0);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      
      boolean boolean1 = lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength();
      assertFalse(boolean1);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertTrue(boolean1 == boolean0);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer2 = (BigEndianHeapChannelBuffer)lengthFieldBasedFrameDecoder0.decode(defaultChannelPipeline0.head, defaultChannelPipeline0.channel, bigEndianHeapChannelBuffer1);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(12, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.readable());
      assertEquals(3, channelBuffer0.readerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(15, channelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer1.isDirect());
      assertEquals(2, bigEndianHeapChannelBuffer1.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer1.hasArray());
      assertEquals(2, bigEndianHeapChannelBuffer1.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer1.readable());
      assertEquals(0, bigEndianHeapChannelBuffer1.readerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer1.arrayOffset());
      assertEquals(2, bigEndianHeapChannelBuffer1.capacity());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(1, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(15, byteArray0.length);
      assertNull(bigEndianHeapChannelBuffer2);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(bigEndianHeapChannelBuffer0.equals((Object)bigEndianHeapChannelBuffer1));
      assertFalse(bigEndianHeapChannelBuffer0.equals((Object)channelBuffer0));
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer1));
      assertFalse(bigEndianHeapChannelBuffer1.equals((Object)channelBuffer0));
      assertFalse(bigEndianHeapChannelBuffer1.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, bigEndianHeapChannelBuffer1);
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer1);
      assertNotSame(bigEndianHeapChannelBuffer1, channelBuffer0);
      assertNotSame(bigEndianHeapChannelBuffer1, bigEndianHeapChannelBuffer0);
      
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(defaultChannelPipeline0.head, int1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test66()  throws Throwable  {
      int int0 = 975;
      int int1 = 1;
      int int2 = (-3218);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int0);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      long long0 = 285L;
      lengthFieldBasedFrameDecoder0.settooLongFrameLength(long0);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(285L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(285L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int3);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(285L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(285L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      
      ChannelHandlerContext channelHandlerContext0 = null;
      ChannelPipeline channelPipeline0 = null;
      ByteOrder byteOrder0 = null;
      int int4 = 255;
      double double0 = 0.0;
      long long1 = (-1805L);
      long long2 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals(285L, long2);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(285L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(285L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertTrue(long2 == long0);
      assertFalse(long2 == long1);
      
      int int5 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals((-3218), int5);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(285L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(285L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertTrue(int5 == int2);
      assertFalse(int5 == int1);
      assertFalse(int5 == int3);
      assertFalse(int5 == int0);
      assertFalse(int5 == int4);
      
      lengthFieldBasedFrameDecoder0.settooLongFrameLength(long1);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int0 == int5);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int5);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertTrue(int2 == int5);
      assertFalse(long1 == long2);
      assertFalse(long1 == long0);
      
      int int6 = lengthFieldBasedFrameDecoder0.getmaxFrameLength();
      assertEquals(975, int6);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals((-1805L), lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals((-3218), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int6 == int1);
      assertFalse(int6 == int5);
      assertFalse(int6 == int3);
      assertFalse(int6 == int2);
      assertTrue(int6 == int0);
      assertFalse(int6 == int4);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int0 == int5);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int5);
      assertFalse(int2 == int3);
      assertFalse(int2 == int4);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertTrue(int2 == int5);
      
      long long3 = 3162L;
      ChannelHandler[] channelHandlerArray0 = new ChannelHandler[8];
      channelHandlerArray0[0] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[1] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[2] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[3] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[4] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[5] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[6] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[7] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      StaticChannelPipeline staticChannelPipeline0 = new StaticChannelPipeline(channelHandlerArray0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals(8, channelHandlerArray0.length);
      assertNotNull(staticChannelPipeline0);
      
      Class<ChannelHandler> class0 = ChannelHandler.class;
      ChannelHandlerContext channelHandlerContext1 = staticChannelPipeline0.getContext(class0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals("0", channelHandlerContext1.getName());
      assertFalse(channelHandlerContext1.canHandleDownstream());
      assertTrue(channelHandlerContext1.canHandleUpstream());
      assertEquals(8, channelHandlerArray0.length);
      assertNotNull(channelHandlerContext1);
      
      long long4 = 975L;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext1, long4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test67()  throws Throwable  {
      int int0 = 2838;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int1);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int0);
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertFalse(dynamicChannelBuffer0.readable());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertNotNull(dynamicChannelBuffer0);
      assertFalse(int0 == int1);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = (BigEndianHeapChannelBuffer)dynamicChannelBuffer0.buffer;
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertEquals(2838, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      int int2 = 2;
      int int3 = (-666);
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline0.getContext((ChannelHandler) lengthFieldBasedFrameDecoder0);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertNull(channelHandlerContext0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      
      DynamicChannelBuffer dynamicChannelBuffer1 = new DynamicChannelBuffer(dynamicChannelBuffer0.endianness, int0);
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertFalse(dynamicChannelBuffer0.readable());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertEquals(0, dynamicChannelBuffer1.readableBytes());
      assertEquals(0, dynamicChannelBuffer1.readerIndex());
      assertTrue(dynamicChannelBuffer1.hasArray());
      assertEquals(2838, dynamicChannelBuffer1.capacity());
      assertFalse(dynamicChannelBuffer1.isDirect());
      assertEquals(0, dynamicChannelBuffer1.writerIndex());
      assertFalse(dynamicChannelBuffer1.readable());
      assertNotNull(dynamicChannelBuffer1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertTrue(dynamicChannelBuffer1.equals((Object)dynamicChannelBuffer0));
      
      dynamicChannelBuffer1.writeFloat(lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertFalse(dynamicChannelBuffer0.readable());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertEquals(0, dynamicChannelBuffer1.readerIndex());
      assertTrue(dynamicChannelBuffer1.hasArray());
      assertEquals(2838, dynamicChannelBuffer1.capacity());
      assertFalse(dynamicChannelBuffer1.isDirect());
      assertTrue(dynamicChannelBuffer1.readable());
      assertEquals(4, dynamicChannelBuffer1.readableBytes());
      assertEquals(4, dynamicChannelBuffer1.writerIndex());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(dynamicChannelBuffer0.equals((Object)dynamicChannelBuffer1));
      assertFalse(dynamicChannelBuffer1.equals((Object)dynamicChannelBuffer0));
      assertNotSame(dynamicChannelBuffer0, dynamicChannelBuffer1);
      assertNotSame(dynamicChannelBuffer1, dynamicChannelBuffer0);
      
      int int4 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(4, int4);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int4 == int2);
      assertFalse(int4 == int1);
      assertFalse(int4 == int3);
      assertFalse(int4 == int0);
      
      Object object0 = lengthFieldBasedFrameDecoder0.decode(defaultChannelPipeline0.head, defaultChannelPipeline0.channel, dynamicChannelBuffer1);
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2842L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertFalse(dynamicChannelBuffer0.readable());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertEquals(0, dynamicChannelBuffer1.readableBytes());
      assertTrue(dynamicChannelBuffer1.hasArray());
      assertEquals(2838, dynamicChannelBuffer1.capacity());
      assertFalse(dynamicChannelBuffer1.isDirect());
      assertEquals(4, dynamicChannelBuffer1.readerIndex());
      assertFalse(dynamicChannelBuffer1.readable());
      assertEquals(4, dynamicChannelBuffer1.writerIndex());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2842L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertNull(object0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int3);
      assertFalse(int1 == int4);
      assertFalse(int1 == int0);
      assertTrue(dynamicChannelBuffer0.equals((Object)dynamicChannelBuffer1));
      assertTrue(dynamicChannelBuffer1.equals((Object)dynamicChannelBuffer0));
      assertNotSame(dynamicChannelBuffer0, dynamicChannelBuffer1);
      assertNotSame(dynamicChannelBuffer1, dynamicChannelBuffer0);
      
      long long0 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals(2842L, long0);
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2842L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2842L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int3);
      assertFalse(int1 == int4);
      assertFalse(int1 == int0);
      
      int int5 = 2030;
      int int6 = 3;
      ChannelBuffer channelBuffer0 = lengthFieldBasedFrameDecoder0.extractFrame(dynamicChannelBuffer0, int5, int6);
      assertEquals(3, channelBuffer0.writerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(0, channelBuffer0.readerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(3, channelBuffer0.readableBytes());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertTrue(channelBuffer0.readable());
      assertEquals(3, channelBuffer0.capacity());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2842L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertFalse(dynamicChannelBuffer0.readable());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(2838, dynamicChannelBuffer0.capacity());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2842L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertNotNull(channelBuffer0);
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertFalse(int0 == int2);
      assertFalse(int0 == int6);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int5);
      assertFalse(int0 == int1);
      assertFalse(int1 == int6);
      assertFalse(int1 == int5);
      assertFalse(int1 == int3);
      assertFalse(int1 == int4);
      assertFalse(int1 == int0);
      assertTrue(dynamicChannelBuffer0.equals((Object)dynamicChannelBuffer1));
      assertFalse(int5 == int3);
      assertFalse(int5 == int4);
      assertFalse(int5 == int0);
      assertFalse(int5 == int2);
      assertFalse(int5 == int1);
      assertFalse(int5 == int6);
      assertFalse(int6 == int1);
      assertFalse(int6 == int5);
      assertFalse(int6 == int2);
      assertFalse(int6 == int3);
      assertFalse(int6 == int4);
      assertFalse(int6 == int0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      assertNotSame(dynamicChannelBuffer0, dynamicChannelBuffer1);
      
      int int7 = lengthFieldBasedFrameDecoder0.getmaxFrameLength();
      assertEquals(2838, int7);
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2842L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2842L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int2);
      assertFalse(int0 == int6);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int5);
      assertFalse(int0 == int1);
      assertFalse(int7 == int2);
      assertFalse(int7 == int6);
      assertFalse(int7 == int4);
      assertTrue(int7 == int0);
      assertFalse(int7 == int5);
      assertFalse(int7 == int1);
      assertFalse(int7 == int3);
      assertFalse(int1 == int6);
      assertFalse(int1 == int5);
      assertFalse(int1 == int3);
      assertFalse(int1 == int4);
      assertFalse(int1 == int0);
      
      lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2842L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2842L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int2);
      assertFalse(int0 == int6);
      assertTrue(int0 == int7);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int5);
      assertFalse(int0 == int1);
      assertFalse(int1 == int6);
      assertFalse(int1 == int5);
      assertFalse(int1 == int3);
      assertFalse(int1 == int4);
      assertFalse(int1 == int0);
      assertFalse(int1 == int7);
  }

  @Test(timeout = 11000)
  public void test68()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      int int0 = 16;
      int int1 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(16, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(16, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      ChannelHandler[] channelHandlerArray0 = new ChannelHandler[1];
      channelHandlerArray0[0] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      StaticChannelPipeline staticChannelPipeline0 = new StaticChannelPipeline(channelHandlerArray0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals(1, channelHandlerArray0.length);
      assertNotNull(staticChannelPipeline0);
      
      Class<ChannelHandler> class0 = ChannelHandler.class;
      ChannelHandlerContext channelHandlerContext0 = staticChannelPipeline0.getContext(class0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertFalse(channelHandlerContext0.canHandleDownstream());
      assertEquals("0", channelHandlerContext0.getName());
      assertTrue(channelHandlerContext0.canHandleUpstream());
      assertEquals(1, channelHandlerArray0.length);
      assertNotNull(channelHandlerContext0);
      
      long long0 = 1000000L;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test69()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      int int0 = 11;
      int int1 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(11, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(11, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      ChannelHandler[] channelHandlerArray0 = new ChannelHandler[1];
      channelHandlerArray0[0] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      StaticChannelPipeline staticChannelPipeline0 = new StaticChannelPipeline(channelHandlerArray0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals(1, channelHandlerArray0.length);
      assertNotNull(staticChannelPipeline0);
      
      Class<ChannelHandler> class0 = ChannelHandler.class;
      ChannelHandlerContext channelHandlerContext0 = staticChannelPipeline0.getContext(class0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals("0", channelHandlerContext0.getName());
      assertFalse(channelHandlerContext0.canHandleDownstream());
      assertTrue(channelHandlerContext0.canHandleUpstream());
      assertEquals(1, channelHandlerArray0.length);
      assertNotNull(channelHandlerContext0);
      
      long long0 = 1000000L;
      int int2 = 2146726692;
      long long1 = (-13L);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test70()  throws Throwable  {
      int int0 = 18;
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      DefaultChannelPipeline.DefaultChannelHandlerContext defaultChannelPipeline_DefaultChannelHandlerContext0 = defaultChannelPipeline0.getActualUpstreamContext(defaultChannelPipeline0.tail);
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNull(defaultChannelPipeline_DefaultChannelHandlerContext0);
      
      ChannelState channelState0 = ChannelState.CONNECTED;
      int int1 = 2026;
      Integer integer0 = new Integer(int0);
      assertEquals(18, (int)integer0);
      assertNotNull(integer0);
      assertFalse(int0 == int1);
      assertFalse(integer0.equals((Object)int1));
      assertTrue(integer0.equals((Object)int0));
      
      int int2 = 1868;
      int int3 = 3;
      int int4 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int2, int0, int3, int4, int3);
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1868, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(18, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(21, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(21, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(18, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(3, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1868, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int3);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      assertFalse(int3 == int4);
      assertFalse(int4 == int0);
      assertFalse(int4 == int3);
      assertFalse(int4 == int1);
      assertFalse(int4 == int2);
      
      int int5 = lengthFieldBasedFrameDecoder0.getmaxFrameLength();
      assertEquals(1868, int5);
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1868, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(18, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(21, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(21, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(18, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(3, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1868, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int3);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      assertFalse(int3 == int4);
      assertFalse(int4 == int0);
      assertFalse(int4 == int3);
      assertFalse(int4 == int1);
      assertFalse(int4 == int2);
      assertFalse(int5 == int3);
      assertTrue(int5 == int2);
      assertFalse(int5 == int0);
      assertFalse(int5 == int4);
      assertFalse(int5 == int1);
      
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)54;
      byteArray0[0] = byte0;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      assertTrue(littleEndianHeapChannelBuffer0.hasArray());
      assertEquals(1, littleEndianHeapChannelBuffer0.readableBytes());
      assertEquals(1, littleEndianHeapChannelBuffer0.writerIndex());
      assertTrue(littleEndianHeapChannelBuffer0.readable());
      assertFalse(littleEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, littleEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(1, littleEndianHeapChannelBuffer0.capacity());
      assertEquals(0, littleEndianHeapChannelBuffer0.readerIndex());
      assertEquals(1, byteArray0.length);
      assertNotNull(littleEndianHeapChannelBuffer0);
      assertArrayEquals(new byte[] {(byte)54}, byteArray0);
      
      ByteOrder byteOrder0 = littleEndianHeapChannelBuffer0.order();
      assertTrue(littleEndianHeapChannelBuffer0.hasArray());
      assertEquals(1, littleEndianHeapChannelBuffer0.readableBytes());
      assertEquals(1, littleEndianHeapChannelBuffer0.writerIndex());
      assertTrue(littleEndianHeapChannelBuffer0.readable());
      assertFalse(littleEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, littleEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(1, littleEndianHeapChannelBuffer0.capacity());
      assertEquals(0, littleEndianHeapChannelBuffer0.readerIndex());
      assertEquals("LITTLE_ENDIAN", byteOrder0.toString());
      assertEquals(1, byteArray0.length);
      assertNotNull(byteOrder0);
      assertArrayEquals(new byte[] {(byte)54}, byteArray0);
      
      DirectChannelBufferFactory directChannelBufferFactory0 = new DirectChannelBufferFactory(byteOrder0);
      assertTrue(littleEndianHeapChannelBuffer0.hasArray());
      assertEquals(1, littleEndianHeapChannelBuffer0.readableBytes());
      assertEquals(1, littleEndianHeapChannelBuffer0.writerIndex());
      assertTrue(littleEndianHeapChannelBuffer0.readable());
      assertFalse(littleEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, littleEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(1, littleEndianHeapChannelBuffer0.capacity());
      assertEquals(0, littleEndianHeapChannelBuffer0.readerIndex());
      assertEquals("LITTLE_ENDIAN", byteOrder0.toString());
      assertEquals(1, byteArray0.length);
      assertNotNull(directChannelBufferFactory0);
      assertArrayEquals(new byte[] {(byte)54}, byteArray0);
      
      ChannelBuffer channelBuffer0 = directChannelBufferFactory0.getBuffer(byteOrder0, (int) byteArray0[0]);
      assertEquals(0, channelBuffer0.readableBytes());
      assertFalse(channelBuffer0.readable());
      assertFalse(channelBuffer0.hasArray());
      assertEquals(0, channelBuffer0.readerIndex());
      assertTrue(channelBuffer0.isDirect());
      assertEquals(54, channelBuffer0.capacity());
      assertEquals(0, channelBuffer0.writerIndex());
      assertTrue(littleEndianHeapChannelBuffer0.hasArray());
      assertEquals(1, littleEndianHeapChannelBuffer0.readableBytes());
      assertEquals(1, littleEndianHeapChannelBuffer0.writerIndex());
      assertTrue(littleEndianHeapChannelBuffer0.readable());
      assertFalse(littleEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, littleEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(1, littleEndianHeapChannelBuffer0.capacity());
      assertEquals(0, littleEndianHeapChannelBuffer0.readerIndex());
      assertEquals("LITTLE_ENDIAN", byteOrder0.toString());
      assertEquals(1, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertArrayEquals(new byte[] {(byte)54}, byteArray0);
      
      ChannelBuffer channelBuffer1 = directChannelBufferFactory0.getBuffer(byteOrder0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0, channelBuffer1.readableBytes());
      assertEquals(0, channelBuffer1.readerIndex());
      assertFalse(channelBuffer1.readable());
      assertTrue(channelBuffer1.isDirect());
      assertFalse(channelBuffer1.hasArray());
      assertEquals(3, channelBuffer1.capacity());
      assertEquals(0, channelBuffer1.writerIndex());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1868, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(18, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(21, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertTrue(littleEndianHeapChannelBuffer0.hasArray());
      assertEquals(1, littleEndianHeapChannelBuffer0.readableBytes());
      assertEquals(1, littleEndianHeapChannelBuffer0.writerIndex());
      assertTrue(littleEndianHeapChannelBuffer0.readable());
      assertFalse(littleEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, littleEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(1, littleEndianHeapChannelBuffer0.capacity());
      assertEquals(0, littleEndianHeapChannelBuffer0.readerIndex());
      assertEquals("LITTLE_ENDIAN", byteOrder0.toString());
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(21, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(18, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(3, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1868, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(1, byteArray0.length);
      assertNotNull(channelBuffer1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int5);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertTrue(channelBuffer1.equals((Object)channelBuffer0));
      assertFalse(int2 == int0);
      assertFalse(int2 == int4);
      assertTrue(int2 == int5);
      assertFalse(int2 == int1);
      assertFalse(int2 == int3);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertFalse(int3 == int5);
      assertFalse(int3 == int0);
      assertFalse(int3 == int4);
      assertFalse(int4 == int5);
      assertFalse(int4 == int0);
      assertFalse(int4 == int3);
      assertFalse(int4 == int1);
      assertFalse(int4 == int2);
      assertArrayEquals(new byte[] {(byte)54}, byteArray0);
      assertNotSame(channelBuffer1, channelBuffer0);
      
      int int6 = 6;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, byteArray0[0], int6);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test71()  throws Throwable  {
      int int0 = 975;
      int int1 = 2;
      int int2 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int0);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(4, int3);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline0.getContext((ChannelHandler) lengthFieldBasedFrameDecoder0);
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertNull(channelHandlerContext0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      byte[] byteArray0 = new byte[15];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.slice();
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, channelBuffer0.readerIndex());
      assertEquals(15, channelBuffer0.capacity());
      assertTrue(channelBuffer0.readable());
      assertTrue(channelBuffer0.hasArray());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(15, channelBuffer0.readableBytes());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(15, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      try { 
        lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, defaultChannelPipeline0.channel, channelBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Adjusted frame length (4) is less than initialBytesToStrip: 975
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test72()  throws Throwable  {
      int int0 = 18;
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      DefaultChannelPipeline.DefaultChannelHandlerContext defaultChannelPipeline_DefaultChannelHandlerContext0 = defaultChannelPipeline0.getActualDownstreamContext(defaultChannelPipeline0.head);
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNull(defaultChannelPipeline_DefaultChannelHandlerContext0);
      
      ChannelState channelState0 = ChannelState.CONNECTED;
      int int1 = 0;
      Integer integer0 = new Integer(int0);
      assertEquals(18, (int)integer0);
      assertNotNull(integer0);
      assertFalse(int0 == int1);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      
      int int2 = 1868;
      int int3 = 3;
      int int4 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int2, int0, int3, int4, int3);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(18, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(21, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(1868, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1868, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(3, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(18, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(21, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int0 == int1);
      assertFalse(int2 == int4);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int4);
      assertFalse(int4 == int1);
      assertFalse(int4 == int0);
      assertFalse(int4 == int3);
      assertFalse(int4 == int2);
      
      int int5 = lengthFieldBasedFrameDecoder0.getmaxFrameLength();
      assertEquals(1868, int5);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(18, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(21, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(1868, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1868, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(3, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(18, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(21, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int0 == int1);
      assertFalse(int2 == int4);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int4);
      assertFalse(int4 == int1);
      assertFalse(int4 == int0);
      assertFalse(int4 == int3);
      assertFalse(int4 == int2);
      assertFalse(int5 == int3);
      assertTrue(int5 == int2);
      assertFalse(int5 == int1);
      assertFalse(int5 == int4);
      assertFalse(int5 == int0);
      
      int int6 = lengthFieldBasedFrameDecoder0.getlengthFieldLength();
      assertEquals(3, int6);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(18, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(21, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(1868, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1868, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(3, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(18, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(21, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(int0 == int5);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int0 == int1);
      assertFalse(int2 == int4);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      assertTrue(int2 == int5);
      assertFalse(int3 == int5);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int4);
      assertFalse(int4 == int1);
      assertFalse(int4 == int0);
      assertFalse(int4 == int5);
      assertFalse(int4 == int3);
      assertFalse(int4 == int2);
      assertFalse(int6 == int0);
      assertFalse(int6 == int1);
      assertFalse(int6 == int5);
      assertFalse(int6 == int4);
      assertTrue(int6 == int3);
      assertFalse(int6 == int2);
      
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)10;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-25);
      byteArray0[1] = byte1;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertEquals(2, bigEndianHeapChannelBuffer0.readableBytes());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(2, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(2, bigEndianHeapChannelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(2, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      assertArrayEquals(new byte[] {(byte)10, (byte) (-25)}, byteArray0);
      
      int int7 = (-9);
      int int8 = 5;
      // Undeclared exception!
      try { 
        bigEndianHeapChannelBuffer0.copy(int7, int8);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.BigEndianHeapChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test73()  throws Throwable  {
      int int0 = 2838;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int0);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      boolean boolean0 = true;
      DefaultChannelPipeline defaultChannelPipeline1 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline1.isAttached());
      assertNotNull(defaultChannelPipeline1);
      assertFalse(defaultChannelPipeline1.equals((Object)defaultChannelPipeline0));
      
      Class<ChannelHandler> class0 = ChannelHandler.class;
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline1.getContext(class0);
      assertFalse(defaultChannelPipeline1.isAttached());
      assertNull(channelHandlerContext0);
      assertFalse(defaultChannelPipeline1.equals((Object)defaultChannelPipeline0));
      assertNotSame(defaultChannelPipeline1, defaultChannelPipeline0);
      
      Channel channel0 = null;
      ByteOrder byteOrder0 = null;
      LinkedList<ChannelBuffer> linkedList0 = new LinkedList<ChannelBuffer>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      Stream<ChannelBuffer> stream0 = linkedList0.parallelStream();
      assertEquals(0, linkedList0.size());
      assertNotNull(stream0);
      
      CompositeChannelBuffer compositeChannelBuffer0 = new CompositeChannelBuffer(byteOrder0, linkedList0);
      assertEquals(0, linkedList0.size());
      assertEquals(0, compositeChannelBuffer0.capacity());
      assertFalse(compositeChannelBuffer0.hasArray());
      assertEquals(0, compositeChannelBuffer0.writerIndex());
      assertEquals(0, compositeChannelBuffer0.readableBytes());
      assertFalse(compositeChannelBuffer0.isDirect());
      assertFalse(compositeChannelBuffer0.readable());
      assertEquals(0, compositeChannelBuffer0.readerIndex());
      assertNotNull(compositeChannelBuffer0);
      
      ChannelBuffer channelBuffer0 = compositeChannelBuffer0.duplicate();
      assertEquals(0, linkedList0.size());
      assertEquals(0, compositeChannelBuffer0.capacity());
      assertFalse(compositeChannelBuffer0.hasArray());
      assertEquals(0, compositeChannelBuffer0.writerIndex());
      assertEquals(0, compositeChannelBuffer0.readableBytes());
      assertFalse(compositeChannelBuffer0.isDirect());
      assertFalse(compositeChannelBuffer0.readable());
      assertEquals(0, compositeChannelBuffer0.readerIndex());
      assertFalse(channelBuffer0.readable());
      assertFalse(channelBuffer0.isDirect());
      assertFalse(channelBuffer0.hasArray());
      assertEquals(0, channelBuffer0.writerIndex());
      assertEquals(0, channelBuffer0.capacity());
      assertEquals(0, channelBuffer0.readableBytes());
      assertEquals(0, channelBuffer0.readerIndex());
      assertNotNull(channelBuffer0);
      assertTrue(channelBuffer0.equals((Object)compositeChannelBuffer0));
      assertNotSame(compositeChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, compositeChannelBuffer0);
      
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(defaultChannelPipeline1.isAttached());
      assertEquals(0, linkedList0.size());
      assertEquals(0, compositeChannelBuffer0.capacity());
      assertFalse(compositeChannelBuffer0.hasArray());
      assertEquals(0, compositeChannelBuffer0.writerIndex());
      assertEquals(0, compositeChannelBuffer0.readableBytes());
      assertFalse(compositeChannelBuffer0.isDirect());
      assertFalse(compositeChannelBuffer0.readable());
      assertEquals(0, compositeChannelBuffer0.readerIndex());
      assertFalse(channelBuffer0.readable());
      assertFalse(channelBuffer0.isDirect());
      assertFalse(channelBuffer0.hasArray());
      assertEquals(0, channelBuffer0.writerIndex());
      assertEquals(0, channelBuffer0.capacity());
      assertEquals(0, channelBuffer0.readableBytes());
      assertEquals(0, channelBuffer0.readerIndex());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertNull(object0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(defaultChannelPipeline1.equals((Object)defaultChannelPipeline0));
      assertTrue(compositeChannelBuffer0.equals((Object)channelBuffer0));
      assertTrue(channelBuffer0.equals((Object)compositeChannelBuffer0));
      assertNotSame(defaultChannelPipeline1, defaultChannelPipeline0);
      assertNotSame(compositeChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, compositeChannelBuffer0);
      
      lengthFieldBasedFrameDecoder0.setdiscardingTooLongFrame(boolean0);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      lengthFieldBasedFrameDecoder0.setbytesToDiscard(int0);
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      int int2 = 2;
      long long0 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals(0L, long0);
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      
      int int3 = lengthFieldBasedFrameDecoder0.getmaxFrameLength();
      assertEquals(2838, int3);
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2838, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2838L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2838, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertTrue(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      
      int int4 = 8;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int4, int3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // endianness
         //
         verifyException("org.jboss.netty.buffer.HeapChannelBufferFactory", e);
      }
  }

  @Test(timeout = 11000)
  public void test74()  throws Throwable  {
      int int0 = 2821;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int1);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2821, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2821, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int0);
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertEquals(2821, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertNotNull(dynamicChannelBuffer0);
      assertFalse(int0 == int1);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = (BigEndianHeapChannelBuffer)dynamicChannelBuffer0.buffer;
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readableBytes());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(2821, bigEndianHeapChannelBuffer0.capacity());
      assertFalse(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      int int2 = 2;
      int int3 = (-666);
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline0.getContext((ChannelHandler) lengthFieldBasedFrameDecoder0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2821, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2821, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertNull(channelHandlerContext0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      
      DynamicChannelBuffer dynamicChannelBuffer1 = new DynamicChannelBuffer(dynamicChannelBuffer0.endianness, int0);
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertEquals(2821, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertEquals(0, dynamicChannelBuffer1.readableBytes());
      assertTrue(dynamicChannelBuffer1.hasArray());
      assertEquals(0, dynamicChannelBuffer1.readerIndex());
      assertFalse(dynamicChannelBuffer1.isDirect());
      assertEquals(0, dynamicChannelBuffer1.writerIndex());
      assertEquals(2821, dynamicChannelBuffer1.capacity());
      assertFalse(dynamicChannelBuffer1.readable());
      assertNotNull(dynamicChannelBuffer1);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertTrue(dynamicChannelBuffer1.equals((Object)dynamicChannelBuffer0));
      
      dynamicChannelBuffer1.writeFloat(lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertEquals(2821, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertTrue(dynamicChannelBuffer1.hasArray());
      assertEquals(0, dynamicChannelBuffer1.readerIndex());
      assertFalse(dynamicChannelBuffer1.isDirect());
      assertEquals(2821, dynamicChannelBuffer1.capacity());
      assertTrue(dynamicChannelBuffer1.readable());
      assertEquals(4, dynamicChannelBuffer1.readableBytes());
      assertEquals(4, dynamicChannelBuffer1.writerIndex());
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(2821, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2821, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(dynamicChannelBuffer0.equals((Object)dynamicChannelBuffer1));
      assertFalse(dynamicChannelBuffer1.equals((Object)dynamicChannelBuffer0));
      assertNotSame(dynamicChannelBuffer0, dynamicChannelBuffer1);
      assertNotSame(dynamicChannelBuffer1, dynamicChannelBuffer0);
      
      Object object0 = lengthFieldBasedFrameDecoder0.decode(defaultChannelPipeline0.head, defaultChannelPipeline0.channel, dynamicChannelBuffer1);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2825L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2821L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertEquals(2821, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.isDirect());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertTrue(dynamicChannelBuffer0.hasArray());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertEquals(0, dynamicChannelBuffer1.readableBytes());
      assertTrue(dynamicChannelBuffer1.hasArray());
      assertFalse(dynamicChannelBuffer1.isDirect());
      assertEquals(4, dynamicChannelBuffer1.readerIndex());
      assertEquals(2821, dynamicChannelBuffer1.capacity());
      assertFalse(dynamicChannelBuffer1.readable());
      assertEquals(4, dynamicChannelBuffer1.writerIndex());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2821, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2821L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2825L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertNull(object0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertTrue(dynamicChannelBuffer0.equals((Object)dynamicChannelBuffer1));
      assertTrue(dynamicChannelBuffer1.equals((Object)dynamicChannelBuffer0));
      assertNotSame(dynamicChannelBuffer0, dynamicChannelBuffer1);
      assertNotSame(dynamicChannelBuffer1, dynamicChannelBuffer0);
      
      long long0 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals(2825L, long0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2825L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2821L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2821, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2821L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2825L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      
      int int4 = 2039;
      int int5 = lengthFieldBasedFrameDecoder0.getmaxFrameLength();
      assertEquals(2821, int5);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2825L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2821L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2821, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2821L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2825L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int5 == int4);
      assertFalse(int5 == int1);
      assertFalse(int5 == int3);
      assertTrue(int5 == int0);
      assertFalse(int5 == int2);
      
      long long1 = (-1219L);
      lengthFieldBasedFrameDecoder0.setbytesToDiscard(long1);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals((-1219L), lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2825L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2821, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals((-1219L), lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2825L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertTrue(int0 == int5);
      assertFalse(int0 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int5);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(long1 == long0);
      
      lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals((-1219L), lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2825L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2821, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals((-1219L), lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2825L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertTrue(int0 == int5);
      assertFalse(int0 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int5);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      
      boolean boolean0 = lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength();
      assertFalse(boolean0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals((-1219L), lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2825L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2821, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals((-1219L), lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2825L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertTrue(int0 == int5);
      assertFalse(int0 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int5);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      
      int int6 = lengthFieldBasedFrameDecoder0.getlengthFieldLength();
      assertEquals(2, int6);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals((-1219L), lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2825L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(2821, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(2821, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals((-1219L), lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(2825L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(int0 == int1);
      assertFalse(int0 == int4);
      assertFalse(int0 == int3);
      assertTrue(int0 == int5);
      assertFalse(int0 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int5);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int6 == int3);
      assertTrue(int6 == int1);
      assertFalse(int6 == int5);
      assertTrue(int6 == int2);
      assertFalse(int6 == int0);
      assertFalse(int6 == int4);
  }

  @Test(timeout = 11000)
  public void test75()  throws Throwable  {
      int int0 = 975;
      int int1 = 3;
      int int2 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int0);
      assertEquals(6, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(6, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(6, int3);
      assertEquals(6, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(6, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      byte[] byteArray0 = new byte[15];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.slice();
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(15, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.readable());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(0, channelBuffer0.readerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(15, channelBuffer0.capacity());
      assertEquals(15, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      try { 
        lengthFieldBasedFrameDecoder0.decodeLast(defaultChannelPipeline0.tail, defaultChannelPipeline0.channel, channelBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Adjusted frame length (6) is less than initialBytesToStrip: 975
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test76()  throws Throwable  {
      int int0 = 975;
      int int1 = 3;
      int int2 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int0);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(6, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(6, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(6, int3);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(6, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(6, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      byte[] byteArray0 = new byte[15];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.slice();
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(15, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.readable());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(0, channelBuffer0.readerIndex());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(15, channelBuffer0.capacity());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(15, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      int int4 = 974;
      try { 
        lengthFieldBasedFrameDecoder0.decode(defaultChannelPipeline0.tail, defaultChannelPipeline0.channel, channelBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Adjusted frame length (6) is less than initialBytesToStrip: 975
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test77()  throws Throwable  {
      int int0 = 975;
      int int1 = 4;
      int int2 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int0);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(8, int3);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      byte[] byteArray0 = new byte[15];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.slice();
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(15, channelBuffer0.capacity());
      assertEquals(0, channelBuffer0.readerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(15, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.readable());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(15, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      try { 
        lengthFieldBasedFrameDecoder0.decodeLast(defaultChannelPipeline0.tail, defaultChannelPipeline0.channel, channelBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Adjusted frame length (8) is less than initialBytesToStrip: 975
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test78()  throws Throwable  {
      int int0 = 975;
      int int1 = 3;
      int int2 = 16;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int0);
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(6, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(16, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(6, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(16, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(6, int3);
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(6, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(16, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(6, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(16, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      byte[] byteArray0 = new byte[15];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.slice();
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(15, channelBuffer0.capacity());
      assertFalse(channelBuffer0.isDirect());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(0, channelBuffer0.readerIndex());
      assertTrue(channelBuffer0.readable());
      assertEquals(15, channelBuffer0.readableBytes());
      assertEquals(15, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      int int4 = channelBuffer0.readUnsignedMedium();
      assertEquals(0, int4);
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(12, channelBuffer0.readableBytes());
      assertEquals(15, channelBuffer0.capacity());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(3, channelBuffer0.readerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertTrue(channelBuffer0.readable());
      assertEquals(15, byteArray0.length);
      assertFalse(bigEndianHeapChannelBuffer0.equals((Object)channelBuffer0));
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertFalse(int4 == int3);
      assertFalse(int4 == int2);
      assertFalse(int4 == int0);
      assertFalse(int4 == int1);
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      Object object0 = lengthFieldBasedFrameDecoder0.decodeLast(defaultChannelPipeline0.tail, defaultChannelPipeline0.channel, channelBuffer0);
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(6, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(16, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(12, channelBuffer0.readableBytes());
      assertEquals(15, channelBuffer0.capacity());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(3, channelBuffer0.readerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertTrue(channelBuffer0.readable());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(6, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(16, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(15, byteArray0.length);
      assertNull(object0);
      assertFalse(int0 == int4);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(bigEndianHeapChannelBuffer0.equals((Object)channelBuffer0));
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      int int5 = lengthFieldBasedFrameDecoder0.getmaxFrameLength();
      assertEquals(975, int5);
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(6, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(16, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(6, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(16, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(int0 == int4);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int2 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int5 == int1);
      assertFalse(int5 == int3);
      assertFalse(int5 == int4);
      assertFalse(int5 == int2);
      assertTrue(int5 == int0);
      
      ChannelHandlerContext channelHandlerContext0 = null;
      DefaultLocalClientChannelFactory defaultLocalClientChannelFactory0 = new DefaultLocalClientChannelFactory();
      assertNotNull(defaultLocalClientChannelFactory0);
      
      ChannelPipeline channelPipeline0 = null;
      // Undeclared exception!
      try { 
        defaultLocalClientChannelFactory0.newChannel(channelPipeline0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.AbstractChannel", e);
      }
  }

  @Test(timeout = 11000)
  public void test79()  throws Throwable  {
      int int0 = 972;
      int int1 = 1;
      int int2 = (-15);
      int int3 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int3);
      assertEquals(972, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals((-15), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals((-15), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(972, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int3);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      
      int int4 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int4);
      assertEquals(972, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals((-15), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals((-15), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(972, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int3);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      assertFalse(int4 == int3);
      assertFalse(int4 == int2);
      assertFalse(int4 == int0);
      assertFalse(int4 == int1);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      List<String> list0 = defaultChannelPipeline0.getNames();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertNotNull(list0);
      
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline0.getContext((ChannelHandler) lengthFieldBasedFrameDecoder0);
      assertEquals(972, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals((-15), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals((-15), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(972, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertNull(channelHandlerContext0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int4);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int4);
      assertFalse(int2 == int3);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int4);
      assertFalse(int3 == int1);
      
      byte[] byteArray0 = new byte[15];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.slice();
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, channelBuffer0.capacity());
      assertTrue(channelBuffer0.readable());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(0, channelBuffer0.readerIndex());
      assertEquals(15, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.hasArray());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(15, channelBuffer0.writerIndex());
      assertEquals(15, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertTrue(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      ChannelHandlerContext channelHandlerContext1 = defaultChannelPipeline0.getContext((ChannelHandler) lengthFieldBasedFrameDecoder0);
      assertEquals(972, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals((-15), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals((-15), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(972, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertNull(channelHandlerContext1);
      assertFalse(int0 == int1);
      assertFalse(int0 == int3);
      assertFalse(int0 == int4);
      assertFalse(int0 == int2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int4);
      assertFalse(int1 == int0);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int4);
      assertFalse(int2 == int3);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int4);
      assertFalse(int3 == int1);
      
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, defaultChannelPipeline0.channel, channelBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Adjusted frame length (-13) is less than lengthFieldEndOffset: 2
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test80()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "";
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      assertFalse(boolean0);
      
      int int0 = 972;
      int int1 = 1;
      int int2 = (-15);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int0);
      assertEquals((-15), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(972, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(972, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals((-15), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(972, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(972, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(2, int3);
      assertEquals((-15), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(972, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(972, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals((-15), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(972, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(972, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      ChannelHandlerContext channelHandlerContext0 = defaultChannelPipeline0.getContext((ChannelHandler) lengthFieldBasedFrameDecoder0);
      assertEquals((-15), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(972, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(972, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals((-15), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(972, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(972, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertNull(channelHandlerContext0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      
      byte[] byteArray0 = new byte[15];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      int int4 = 0;
      ChannelBuffer channelBuffer0 = lengthFieldBasedFrameDecoder0.extractFrame(bigEndianHeapChannelBuffer0, int4, int4);
      assertEquals((-15), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(972, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(972, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertFalse(channelBuffer0.isDirect());
      assertFalse(channelBuffer0.readable());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(0, channelBuffer0.writerIndex());
      assertEquals(0, channelBuffer0.readableBytes());
      assertEquals(0, channelBuffer0.readerIndex());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(0, channelBuffer0.capacity());
      assertEquals((-15), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(972, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(972, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(15, byteArray0.length);
      assertNotNull(channelBuffer0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int0 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int4);
      assertFalse(int2 == int3);
      assertFalse(int4 == int0);
      assertFalse(int4 == int2);
      assertFalse(int4 == int3);
      assertFalse(int4 == int1);
      assertFalse(channelBuffer0.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, bigEndianHeapChannelBuffer0);
      
      boolean boolean2 = false;
      lengthFieldBasedFrameDecoder0.setdiscardingTooLongFrame(boolean2);
      assertEquals((-15), lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(972, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(972, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals((-15), lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(972, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(972, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int0 == int4);
      assertFalse(int1 == int2);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int4);
      assertFalse(int2 == int3);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      try { 
        lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, defaultChannelPipeline0.channel, bigEndianHeapChannelBuffer0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Adjusted frame length (-13) is less than lengthFieldEndOffset: 2
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test81()  throws Throwable  {
      int int0 = 975;
      int int1 = 3;
      int int2 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int2, int1);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      int int3 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(3, int3);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertTrue(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      byte[] byteArray0 = new byte[15];
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(15, bigEndianHeapChannelBuffer0.readableBytes());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer1 = (BigEndianHeapChannelBuffer)lengthFieldBasedFrameDecoder0.decodeLast(defaultChannelPipeline0.tail, defaultChannelPipeline0.channel, bigEndianHeapChannelBuffer0);
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(15, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(15, bigEndianHeapChannelBuffer0.writerIndex());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(12, bigEndianHeapChannelBuffer0.readableBytes());
      assertEquals(3, bigEndianHeapChannelBuffer0.readerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(3, bigEndianHeapChannelBuffer1.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer1.readable());
      assertTrue(bigEndianHeapChannelBuffer1.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer1.readerIndex());
      assertEquals(3, bigEndianHeapChannelBuffer1.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer1.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer1.arrayOffset());
      assertEquals(3, bigEndianHeapChannelBuffer1.capacity());
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(15, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertTrue(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int3);
      assertFalse(bigEndianHeapChannelBuffer1.equals((Object)bigEndianHeapChannelBuffer0));
      assertNotSame(bigEndianHeapChannelBuffer0, bigEndianHeapChannelBuffer1);
      assertNotSame(bigEndianHeapChannelBuffer1, bigEndianHeapChannelBuffer0);
  }

  @Test(timeout = 11000)
  public void test82()  throws Throwable  {
      int int0 = 975;
      int int1 = 3;
      int int2 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int0);
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(6, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(6, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      assertEquals("BIG_ENDIAN", byteOrder0.toString());
      assertNotNull(byteOrder0);
      
      int int3 = 2338;
      DirectChannelBufferFactory directChannelBufferFactory0 = new DirectChannelBufferFactory(byteOrder0);
      assertEquals("BIG_ENDIAN", byteOrder0.toString());
      assertNotNull(directChannelBufferFactory0);
      
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(byteOrder0, int3, directChannelBufferFactory0);
      assertEquals("BIG_ENDIAN", byteOrder0.toString());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertEquals(2338, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.hasArray());
      assertTrue(dynamicChannelBuffer0.isDirect());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertNotNull(dynamicChannelBuffer0);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      
      int int4 = 128;
      ChannelBuffer channelBuffer0 = lengthFieldBasedFrameDecoder0.extractFrame(dynamicChannelBuffer0, int4, int4);
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(6, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals("BIG_ENDIAN", byteOrder0.toString());
      assertEquals(0, dynamicChannelBuffer0.readableBytes());
      assertEquals(0, dynamicChannelBuffer0.writerIndex());
      assertEquals(2338, dynamicChannelBuffer0.capacity());
      assertFalse(dynamicChannelBuffer0.hasArray());
      assertTrue(dynamicChannelBuffer0.isDirect());
      assertFalse(dynamicChannelBuffer0.readable());
      assertEquals(0, dynamicChannelBuffer0.readerIndex());
      assertTrue(channelBuffer0.isDirect());
      assertFalse(channelBuffer0.hasArray());
      assertEquals(128, channelBuffer0.capacity());
      assertTrue(channelBuffer0.readable());
      assertEquals(128, channelBuffer0.readableBytes());
      assertEquals(0, channelBuffer0.readerIndex());
      assertEquals(128, channelBuffer0.writerIndex());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(6, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertNotNull(channelBuffer0);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int4);
      assertFalse(int2 == int3);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int4);
      assertFalse(int3 == int1);
      assertFalse(int4 == int0);
      assertFalse(int4 == int3);
      assertFalse(int4 == int2);
      assertFalse(int4 == int1);
      
      int int5 = lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset();
      assertEquals(6, int5);
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(6, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(3, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(6, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(3, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int4);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int4);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int4);
      assertFalse(int2 == int3);
      assertFalse(int5 == int1);
      assertFalse(int5 == int0);
      assertFalse(int5 == int3);
      assertFalse(int5 == int2);
      assertFalse(int5 == int4);
      
      byte[] byteArray0 = new byte[15];
  }

  @Test(timeout = 11000)
  public void test83()  throws Throwable  {
      int int0 = 975;
      int int1 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int0);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      long long0 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals(0L, long0);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      int int2 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals(975, int2);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertTrue(int2 == int0);
      assertFalse(int2 == int1);
      
      lengthFieldBasedFrameDecoder0.settooLongFrameLength(lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertTrue(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      
      int int3 = lengthFieldBasedFrameDecoder0.getmaxFrameLength();
      assertEquals(975, int3);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertTrue(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int3 == int1);
      assertTrue(int3 == int0);
      assertTrue(int3 == int2);
      
      int int4 = lengthFieldBasedFrameDecoder0.getinitialBytesToStrip();
      assertEquals(975, int4);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertTrue(int0 == int2);
      assertTrue(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertTrue(int4 == int0);
      assertTrue(int4 == int2);
      assertFalse(int4 == int1);
      assertTrue(int4 == int3);
      
      int int5 = lengthFieldBasedFrameDecoder0.getlengthFieldOffset();
      assertEquals(4, int5);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertTrue(int0 == int2);
      assertTrue(int0 == int4);
      assertTrue(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertTrue(int5 == int1);
      assertFalse(int5 == int2);
      assertFalse(int5 == int4);
      assertFalse(int5 == int0);
      assertFalse(int5 == int3);
      
      long long1 = lengthFieldBasedFrameDecoder0.getbytesToDiscard();
      assertEquals(0L, long1);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertTrue(int0 == int2);
      assertTrue(int0 == int4);
      assertFalse(int0 == int5);
      assertTrue(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertTrue(int1 == int5);
      assertFalse(int1 == int2);
      assertTrue(long1 == long0);
      
      int int6 = lengthFieldBasedFrameDecoder0.getlengthFieldLength();
      assertEquals(4, int6);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertTrue(int0 == int2);
      assertTrue(int0 == int4);
      assertFalse(int0 == int5);
      assertTrue(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertTrue(int1 == int5);
      assertFalse(int1 == int2);
      assertFalse(int6 == int4);
      assertTrue(int6 == int5);
      assertFalse(int6 == int0);
      assertTrue(int6 == int1);
      assertFalse(int6 == int3);
      assertFalse(int6 == int2);
      
      long long2 = 55L;
      ChannelHandler[] channelHandlerArray0 = new ChannelHandler[5];
      channelHandlerArray0[0] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[1] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[2] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[3] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[4] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      StaticChannelPipeline staticChannelPipeline0 = new StaticChannelPipeline(channelHandlerArray0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals(5, channelHandlerArray0.length);
      assertNotNull(staticChannelPipeline0);
      
      Class<ChannelHandler> class0 = ChannelHandler.class;
      ChannelHandlerContext channelHandlerContext0 = staticChannelPipeline0.getContext(class0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertFalse(channelHandlerContext0.canHandleDownstream());
      assertEquals("0", channelHandlerContext0.getName());
      assertTrue(channelHandlerContext0.canHandleUpstream());
      assertEquals(5, channelHandlerArray0.length);
      assertNotNull(channelHandlerContext0);
      
      Channel channel0 = staticChannelPipeline0.getChannel();
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals(5, channelHandlerArray0.length);
      assertNull(channel0);
      
      int int7 = 3348;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(int7);
      assertTrue(littleEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, littleEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, littleEndianHeapChannelBuffer0.readableBytes());
      assertEquals(0, littleEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(0, littleEndianHeapChannelBuffer0.writerIndex());
      assertFalse(littleEndianHeapChannelBuffer0.readable());
      assertEquals(3348, littleEndianHeapChannelBuffer0.capacity());
      assertFalse(littleEndianHeapChannelBuffer0.isDirect());
      assertNotNull(littleEndianHeapChannelBuffer0);
      assertFalse(int7 == int3);
      assertFalse(int7 == int5);
      assertFalse(int7 == int6);
      assertFalse(int7 == int0);
      assertFalse(int7 == int2);
      assertFalse(int7 == int1);
      assertFalse(int7 == int4);
      
      int int8 = 1683;
      ChannelBuffer channelBuffer0 = littleEndianHeapChannelBuffer0.copy(int8, int4);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertTrue(littleEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, littleEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, littleEndianHeapChannelBuffer0.readableBytes());
      assertEquals(0, littleEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(0, littleEndianHeapChannelBuffer0.writerIndex());
      assertFalse(littleEndianHeapChannelBuffer0.readable());
      assertEquals(3348, littleEndianHeapChannelBuffer0.capacity());
      assertFalse(littleEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, channelBuffer0.readerIndex());
      assertTrue(channelBuffer0.readable());
      assertEquals(975, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(975, channelBuffer0.writerIndex());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(975, channelBuffer0.capacity());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertNotNull(channelBuffer0);
      assertFalse(int0 == int6);
      assertTrue(int0 == int2);
      assertTrue(int0 == int4);
      assertFalse(int0 == int8);
      assertFalse(int0 == int5);
      assertFalse(int0 == int7);
      assertTrue(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int8);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertTrue(int1 == int5);
      assertFalse(int1 == int2);
      assertFalse(int1 == int7);
      assertTrue(int1 == int6);
      assertFalse(int7 == int3);
      assertFalse(int7 == int5);
      assertFalse(int7 == int6);
      assertFalse(int7 == int8);
      assertFalse(int7 == int0);
      assertFalse(int7 == int2);
      assertFalse(int7 == int1);
      assertFalse(int7 == int4);
      assertFalse(int4 == int6);
      assertTrue(int4 == int0);
      assertTrue(int4 == int2);
      assertFalse(int4 == int1);
      assertTrue(int4 == int3);
      assertFalse(int4 == int7);
      assertFalse(int4 == int5);
      assertFalse(int4 == int8);
      assertFalse(int8 == int6);
      assertFalse(int8 == int5);
      assertFalse(int8 == int0);
      assertFalse(int8 == int2);
      assertFalse(int8 == int3);
      assertFalse(int8 == int7);
      assertFalse(int8 == int4);
      assertFalse(int8 == int1);
      assertFalse(channelBuffer0.equals((Object)littleEndianHeapChannelBuffer0));
      assertNotSame(littleEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, littleEndianHeapChannelBuffer0);
      
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(983L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertFalse(channelHandlerContext0.canHandleDownstream());
      assertEquals("0", channelHandlerContext0.getName());
      assertTrue(channelHandlerContext0.canHandleUpstream());
      assertTrue(littleEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, littleEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, littleEndianHeapChannelBuffer0.readableBytes());
      assertEquals(0, littleEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(0, littleEndianHeapChannelBuffer0.writerIndex());
      assertFalse(littleEndianHeapChannelBuffer0.readable());
      assertEquals(3348, littleEndianHeapChannelBuffer0.capacity());
      assertFalse(littleEndianHeapChannelBuffer0.isDirect());
      assertEquals(975, channelBuffer0.readerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(0, channelBuffer0.readableBytes());
      assertEquals(975, channelBuffer0.writerIndex());
      assertFalse(channelBuffer0.readable());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(975, channelBuffer0.capacity());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(983L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(8L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(5, channelHandlerArray0.length);
      assertNull(object0);
      assertFalse(int0 == int6);
      assertTrue(int0 == int2);
      assertTrue(int0 == int4);
      assertFalse(int0 == int8);
      assertFalse(int0 == int5);
      assertFalse(int0 == int7);
      assertTrue(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int8);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertTrue(int1 == int5);
      assertFalse(int1 == int2);
      assertFalse(int1 == int7);
      assertTrue(int1 == int6);
      assertFalse(int7 == int3);
      assertFalse(int7 == int5);
      assertFalse(int7 == int6);
      assertFalse(int7 == int8);
      assertFalse(int7 == int0);
      assertFalse(int7 == int2);
      assertFalse(int7 == int1);
      assertFalse(int7 == int4);
      assertTrue(littleEndianHeapChannelBuffer0.equals((Object)channelBuffer0));
      assertFalse(int4 == int6);
      assertTrue(int4 == int0);
      assertTrue(int4 == int2);
      assertFalse(int4 == int1);
      assertTrue(int4 == int3);
      assertFalse(int4 == int7);
      assertFalse(int4 == int5);
      assertFalse(int4 == int8);
      assertFalse(int8 == int6);
      assertFalse(int8 == int5);
      assertFalse(int8 == int0);
      assertFalse(int8 == int2);
      assertFalse(int8 == int3);
      assertFalse(int8 == int7);
      assertFalse(int8 == int4);
      assertFalse(int8 == int1);
      assertTrue(channelBuffer0.equals((Object)littleEndianHeapChannelBuffer0));
      assertNotSame(littleEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, littleEndianHeapChannelBuffer0);
      
      int int9 = lengthFieldBasedFrameDecoder0.getlengthFieldOffset();
      assertEquals(4, int9);
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(983L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(8L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(983L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(8L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertFalse(int0 == int6);
      assertTrue(int0 == int2);
      assertTrue(int0 == int4);
      assertFalse(int0 == int8);
      assertFalse(int0 == int5);
      assertFalse(int0 == int7);
      assertTrue(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int8);
      assertFalse(int1 == int0);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertTrue(int1 == int5);
      assertFalse(int1 == int2);
      assertFalse(int1 == int7);
      assertTrue(int1 == int6);
      assertFalse(int9 == int3);
      assertFalse(int9 == int7);
      assertTrue(int9 == int5);
      assertTrue(int9 == int6);
      assertFalse(int9 == int4);
      assertFalse(int9 == int2);
      assertFalse(int9 == int8);
      assertFalse(int9 == int0);
      assertTrue(int9 == int1);
  }

  @Test(timeout = 11000)
  public void test84()  throws Throwable  {
      int int0 = 16;
      int int1 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(16, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(16, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      ChannelHandler[] channelHandlerArray0 = new ChannelHandler[1];
      channelHandlerArray0[0] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      StaticChannelPipeline staticChannelPipeline0 = new StaticChannelPipeline(channelHandlerArray0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals(1, channelHandlerArray0.length);
      assertNotNull(staticChannelPipeline0);
      
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNotNull(defaultChannelPipeline0);
      
      DefaultChannelPipeline.DefaultChannelHandlerContext defaultChannelPipeline_DefaultChannelHandlerContext0 = defaultChannelPipeline0.gettail();
      assertFalse(defaultChannelPipeline0.isAttached());
      assertNull(defaultChannelPipeline_DefaultChannelHandlerContext0);
      
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(16, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertTrue(byteBuffer0.hasArray());
      assertEquals(16, byteBuffer0.remaining());
      assertEquals(16, byteBuffer0.capacity());
      assertFalse(byteBuffer0.isDirect());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(0, byteBuffer0.position());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=16 cap=16]", byteBuffer0.toString());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertEquals(16, byteBuffer0.limit());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(16, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertNotNull(byteBuffer0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(16, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertTrue(byteBuffer0.hasArray());
      assertEquals(16, byteBuffer0.remaining());
      assertEquals(16, byteBuffer0.capacity());
      assertFalse(byteBuffer0.isDirect());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(0, byteBuffer0.position());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=16 cap=16]", byteBuffer0.toString());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertEquals(16, byteBuffer0.limit());
      assertFalse(byteBufferBackedChannelBuffer0.isDirect());
      assertEquals(0, byteBufferBackedChannelBuffer0.arrayOffset());
      assertEquals(16, byteBufferBackedChannelBuffer0.readableBytes());
      assertEquals(16, byteBufferBackedChannelBuffer0.writerIndex());
      assertTrue(byteBufferBackedChannelBuffer0.hasArray());
      assertEquals(16, byteBufferBackedChannelBuffer0.capacity());
      assertTrue(byteBufferBackedChannelBuffer0.readable());
      assertEquals(0, byteBufferBackedChannelBuffer0.readerIndex());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(16, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertNotNull(byteBufferBackedChannelBuffer0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      ChannelBuffer channelBuffer0 = byteBufferBackedChannelBuffer0.duplicate();
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(16, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertTrue(byteBuffer0.hasArray());
      assertEquals(16, byteBuffer0.remaining());
      assertEquals(16, byteBuffer0.capacity());
      assertFalse(byteBuffer0.isDirect());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(0, byteBuffer0.position());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=16 cap=16]", byteBuffer0.toString());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertEquals(16, byteBuffer0.limit());
      assertFalse(byteBufferBackedChannelBuffer0.isDirect());
      assertEquals(0, byteBufferBackedChannelBuffer0.arrayOffset());
      assertEquals(16, byteBufferBackedChannelBuffer0.readableBytes());
      assertEquals(16, byteBufferBackedChannelBuffer0.writerIndex());
      assertTrue(byteBufferBackedChannelBuffer0.hasArray());
      assertEquals(16, byteBufferBackedChannelBuffer0.capacity());
      assertTrue(byteBufferBackedChannelBuffer0.readable());
      assertEquals(0, byteBufferBackedChannelBuffer0.readerIndex());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(16, channelBuffer0.writerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(16, channelBuffer0.capacity());
      assertEquals(0, channelBuffer0.readerIndex());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(16, channelBuffer0.readableBytes());
      assertTrue(channelBuffer0.readable());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(16, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertNotNull(channelBuffer0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertTrue(channelBuffer0.equals((Object)byteBufferBackedChannelBuffer0));
      assertNotSame(byteBufferBackedChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, byteBufferBackedChannelBuffer0);
      
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = (BigEndianHeapChannelBuffer)lengthFieldBasedFrameDecoder0.decode(defaultChannelPipeline_DefaultChannelHandlerContext0, defaultChannelPipeline0.channel, channelBuffer0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(16, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(defaultChannelPipeline0.isAttached());
      assertTrue(byteBuffer0.hasArray());
      assertEquals(16, byteBuffer0.remaining());
      assertEquals(16, byteBuffer0.capacity());
      assertFalse(byteBuffer0.isDirect());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(0, byteBuffer0.position());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=16 cap=16]", byteBuffer0.toString());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertEquals(16, byteBuffer0.limit());
      assertFalse(byteBufferBackedChannelBuffer0.isDirect());
      assertEquals(0, byteBufferBackedChannelBuffer0.arrayOffset());
      assertEquals(16, byteBufferBackedChannelBuffer0.readableBytes());
      assertEquals(16, byteBufferBackedChannelBuffer0.writerIndex());
      assertTrue(byteBufferBackedChannelBuffer0.hasArray());
      assertEquals(16, byteBufferBackedChannelBuffer0.capacity());
      assertTrue(byteBufferBackedChannelBuffer0.readable());
      assertEquals(0, byteBufferBackedChannelBuffer0.readerIndex());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(16, channelBuffer0.writerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(16, channelBuffer0.capacity());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(2, channelBuffer0.readerIndex());
      assertTrue(channelBuffer0.readable());
      assertEquals(14, channelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(2, bigEndianHeapChannelBuffer0.readableBytes());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(2, bigEndianHeapChannelBuffer0.capacity());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertEquals(2, bigEndianHeapChannelBuffer0.writerIndex());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(16, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertNotNull(bigEndianHeapChannelBuffer0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(byteBufferBackedChannelBuffer0.equals((Object)channelBuffer0));
      assertFalse(channelBuffer0.equals((Object)byteBufferBackedChannelBuffer0));
      assertNotSame(byteBufferBackedChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, byteBufferBackedChannelBuffer0);
      
      TruncatedChannelBuffer truncatedChannelBuffer0 = new TruncatedChannelBuffer(channelBuffer0, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(16, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertTrue(byteBuffer0.hasArray());
      assertEquals(16, byteBuffer0.remaining());
      assertEquals(16, byteBuffer0.capacity());
      assertFalse(byteBuffer0.isDirect());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(0, byteBuffer0.position());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=16 cap=16]", byteBuffer0.toString());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertEquals(16, byteBuffer0.limit());
      assertFalse(byteBufferBackedChannelBuffer0.isDirect());
      assertEquals(0, byteBufferBackedChannelBuffer0.arrayOffset());
      assertEquals(16, byteBufferBackedChannelBuffer0.readableBytes());
      assertEquals(16, byteBufferBackedChannelBuffer0.writerIndex());
      assertTrue(byteBufferBackedChannelBuffer0.hasArray());
      assertEquals(16, byteBufferBackedChannelBuffer0.capacity());
      assertTrue(byteBufferBackedChannelBuffer0.readable());
      assertEquals(0, byteBufferBackedChannelBuffer0.readerIndex());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(16, channelBuffer0.writerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(16, channelBuffer0.capacity());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(2, channelBuffer0.readerIndex());
      assertTrue(channelBuffer0.readable());
      assertEquals(14, channelBuffer0.readableBytes());
      assertTrue(truncatedChannelBuffer0.hasArray());
      assertEquals(1, truncatedChannelBuffer0.capacity());
      assertTrue(truncatedChannelBuffer0.readable());
      assertEquals(1, truncatedChannelBuffer0.writerIndex());
      assertEquals(0, truncatedChannelBuffer0.readerIndex());
      assertEquals(1, truncatedChannelBuffer0.readableBytes());
      assertFalse(truncatedChannelBuffer0.isDirect());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(16, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertNotNull(truncatedChannelBuffer0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(byteBufferBackedChannelBuffer0.equals((Object)channelBuffer0));
      assertFalse(channelBuffer0.equals((Object)byteBufferBackedChannelBuffer0));
      
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(truncatedChannelBuffer0, int0, int1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.TruncatedChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test85()  throws Throwable  {
      int int0 = 30;
      int int1 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(30, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(30, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      ChannelHandler[] channelHandlerArray0 = new ChannelHandler[1];
      channelHandlerArray0[0] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      StaticChannelPipeline staticChannelPipeline0 = new StaticChannelPipeline(channelHandlerArray0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals(1, channelHandlerArray0.length);
      assertNotNull(staticChannelPipeline0);
      
      Class<ChannelHandler> class0 = ChannelHandler.class;
      ChannelHandlerContext channelHandlerContext0 = staticChannelPipeline0.getContext(class0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals("0", channelHandlerContext0.getName());
      assertFalse(channelHandlerContext0.canHandleDownstream());
      assertTrue(channelHandlerContext0.canHandleUpstream());
      assertEquals(1, channelHandlerArray0.length);
      assertNotNull(channelHandlerContext0);
      
      DefaultLocalServerChannelFactory defaultLocalServerChannelFactory0 = new DefaultLocalServerChannelFactory();
      assertNotNull(defaultLocalServerChannelFactory0);
      
      DefaultChannelPipeline.DiscardingChannelSink defaultChannelPipeline_DiscardingChannelSink0 = (DefaultChannelPipeline.DiscardingChannelSink)DefaultChannelPipeline.discardingSink;
      assertNotNull(defaultChannelPipeline_DiscardingChannelSink0);
      
      IOStreamChannel iOStreamChannel0 = new IOStreamChannel(defaultLocalServerChannelFactory0, staticChannelPipeline0, defaultChannelPipeline_DiscardingChannelSink0);
      assertTrue(staticChannelPipeline0.isAttached());
      assertEquals(1, iOStreamChannel0.getInterestOps());
      assertTrue(iOStreamChannel0.isOpen());
      assertTrue(iOStreamChannel0.isWritable());
      assertTrue(iOStreamChannel0.isReadable());
      assertEquals(12, (int)iOStreamChannel0.getId());
      assertEquals(1, channelHandlerArray0.length);
      assertNotNull(iOStreamChannel0);
      
      ChannelState channelState0 = ChannelState.OPEN;
      UpstreamChannelStateEvent upstreamChannelStateEvent0 = new UpstreamChannelStateEvent(iOStreamChannel0, channelState0, iOStreamChannel0);
      assertTrue(staticChannelPipeline0.isAttached());
      assertEquals(1, iOStreamChannel0.getInterestOps());
      assertTrue(iOStreamChannel0.isOpen());
      assertTrue(iOStreamChannel0.isWritable());
      assertTrue(iOStreamChannel0.isReadable());
      assertEquals(12, (int)iOStreamChannel0.getId());
      assertEquals(ChannelState.OPEN, upstreamChannelStateEvent0.getState());
      assertEquals(1, channelHandlerArray0.length);
      assertNotNull(upstreamChannelStateEvent0);
      
      staticChannelPipeline0.sendDownstream(upstreamChannelStateEvent0);
      assertTrue(staticChannelPipeline0.isAttached());
      assertEquals(1, iOStreamChannel0.getInterestOps());
      assertTrue(iOStreamChannel0.isOpen());
      assertTrue(iOStreamChannel0.isWritable());
      assertTrue(iOStreamChannel0.isReadable());
      assertEquals(12, (int)iOStreamChannel0.getId());
      assertEquals(ChannelState.OPEN, upstreamChannelStateEvent0.getState());
      assertEquals(1, channelHandlerArray0.length);
      
      long long0 = 1000000L;
      lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long0);
      assertEquals(2, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(30, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(0, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(1, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertTrue(staticChannelPipeline0.isAttached());
      assertEquals("0", channelHandlerContext0.getName());
      assertFalse(channelHandlerContext0.canHandleDownstream());
      assertTrue(channelHandlerContext0.canHandleUpstream());
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(30, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(0, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(1, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(2, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(1, channelHandlerArray0.length);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 11000)
  public void test86()  throws Throwable  {
      int int0 = 975;
      int int1 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int0);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      long long0 = lengthFieldBasedFrameDecoder0.gettooLongFrameLength();
      assertEquals(0L, long0);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      
      int int2 = lengthFieldBasedFrameDecoder0.getlengthAdjustment();
      assertEquals(975, int2);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertTrue(int2 == int0);
      assertFalse(int2 == int1);
      
      lengthFieldBasedFrameDecoder0.settooLongFrameLength(lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertTrue(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      
      int int3 = lengthFieldBasedFrameDecoder0.getmaxFrameLength();
      assertEquals(975, int3);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertTrue(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertTrue(int3 == int2);
      assertFalse(int3 == int1);
      assertTrue(int3 == int0);
      
      int int4 = lengthFieldBasedFrameDecoder0.getinitialBytesToStrip();
      assertEquals(975, int4);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertTrue(int0 == int2);
      assertTrue(int0 == int3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int4 == int1);
      assertTrue(int4 == int2);
      assertTrue(int4 == int3);
      assertTrue(int4 == int0);
      
      int int5 = lengthFieldBasedFrameDecoder0.getlengthFieldOffset();
      assertEquals(4, int5);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertTrue(int0 == int2);
      assertTrue(int0 == int3);
      assertFalse(int0 == int1);
      assertTrue(int0 == int4);
      assertFalse(int1 == int4);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int5 == int0);
      assertFalse(int5 == int2);
      assertFalse(int5 == int4);
      assertTrue(int5 == int1);
      assertFalse(int5 == int3);
      
      long long1 = lengthFieldBasedFrameDecoder0.getbytesToDiscard();
      assertEquals(0L, long1);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertTrue(int0 == int2);
      assertTrue(int0 == int3);
      assertFalse(int0 == int5);
      assertFalse(int0 == int1);
      assertTrue(int0 == int4);
      assertFalse(int1 == int4);
      assertTrue(int1 == int5);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertTrue(long1 == long0);
      
      int int6 = lengthFieldBasedFrameDecoder0.getlengthFieldLength();
      assertEquals(4, int6);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertTrue(int0 == int2);
      assertTrue(int0 == int3);
      assertFalse(int0 == int5);
      assertFalse(int0 == int1);
      assertTrue(int0 == int4);
      assertFalse(int1 == int4);
      assertTrue(int1 == int5);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int6 == int0);
      assertFalse(int6 == int2);
      assertTrue(int6 == int5);
      assertFalse(int6 == int3);
      assertFalse(int6 == int4);
      assertTrue(int6 == int1);
      
      long long2 = 55L;
      ChannelHandler[] channelHandlerArray0 = new ChannelHandler[5];
      channelHandlerArray0[0] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[1] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[2] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[3] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      channelHandlerArray0[4] = (ChannelHandler) lengthFieldBasedFrameDecoder0;
      StaticChannelPipeline staticChannelPipeline0 = new StaticChannelPipeline(channelHandlerArray0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals(5, channelHandlerArray0.length);
      assertNotNull(staticChannelPipeline0);
      
      Class<ChannelHandler> class0 = ChannelHandler.class;
      ChannelHandlerContext channelHandlerContext0 = staticChannelPipeline0.getContext(class0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals("0", channelHandlerContext0.getName());
      assertTrue(channelHandlerContext0.canHandleUpstream());
      assertFalse(channelHandlerContext0.canHandleDownstream());
      assertEquals(5, channelHandlerArray0.length);
      assertNotNull(channelHandlerContext0);
      
      Channel channel0 = staticChannelPipeline0.getChannel();
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals(5, channelHandlerArray0.length);
      assertNull(channel0);
      
      int int7 = 3348;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(int7);
      assertFalse(littleEndianHeapChannelBuffer0.isDirect());
      assertFalse(littleEndianHeapChannelBuffer0.readable());
      assertEquals(0, littleEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, littleEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, littleEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(3348, littleEndianHeapChannelBuffer0.capacity());
      assertTrue(littleEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, littleEndianHeapChannelBuffer0.readableBytes());
      assertNotNull(littleEndianHeapChannelBuffer0);
      assertFalse(int7 == int4);
      assertFalse(int7 == int6);
      assertFalse(int7 == int2);
      assertFalse(int7 == int5);
      assertFalse(int7 == int3);
      assertFalse(int7 == int1);
      assertFalse(int7 == int0);
      
      int int8 = 1683;
      ChannelBuffer channelBuffer0 = littleEndianHeapChannelBuffer0.copy(int8, int4);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(littleEndianHeapChannelBuffer0.isDirect());
      assertFalse(littleEndianHeapChannelBuffer0.readable());
      assertEquals(0, littleEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, littleEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, littleEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(3348, littleEndianHeapChannelBuffer0.capacity());
      assertTrue(littleEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, littleEndianHeapChannelBuffer0.readableBytes());
      assertEquals(975, channelBuffer0.readableBytes());
      assertEquals(0, channelBuffer0.readerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(975, channelBuffer0.capacity());
      assertEquals(975, channelBuffer0.writerIndex());
      assertTrue(channelBuffer0.readable());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertNotNull(channelBuffer0);
      assertTrue(int0 == int2);
      assertTrue(int0 == int3);
      assertFalse(int0 == int6);
      assertFalse(int0 == int7);
      assertFalse(int0 == int5);
      assertFalse(int0 == int1);
      assertTrue(int0 == int4);
      assertFalse(int0 == int8);
      assertFalse(int1 == int4);
      assertFalse(int1 == int7);
      assertTrue(int1 == int5);
      assertFalse(int1 == int8);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertTrue(int1 == int6);
      assertFalse(int7 == int4);
      assertFalse(int7 == int6);
      assertFalse(int7 == int2);
      assertFalse(int7 == int5);
      assertFalse(int7 == int3);
      assertFalse(int7 == int1);
      assertFalse(int7 == int0);
      assertFalse(int7 == int8);
      assertFalse(int4 == int5);
      assertFalse(int4 == int1);
      assertFalse(int4 == int8);
      assertTrue(int4 == int2);
      assertTrue(int4 == int3);
      assertTrue(int4 == int0);
      assertFalse(int4 == int7);
      assertFalse(int4 == int6);
      assertFalse(int8 == int6);
      assertFalse(int8 == int7);
      assertFalse(int8 == int0);
      assertFalse(int8 == int3);
      assertFalse(int8 == int2);
      assertFalse(int8 == int1);
      assertFalse(int8 == int5);
      assertFalse(int8 == int4);
      assertFalse(channelBuffer0.equals((Object)littleEndianHeapChannelBuffer0));
      assertNotSame(littleEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, littleEndianHeapChannelBuffer0);
      
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte) (-93);
      byteArray0[0] = byte0;
      byte byte1 = (byte)30;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-64);
      byteArray0[2] = byte2;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      assertEquals(3, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(3, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(3, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(3, byteArray0.length);
      assertNotNull(bigEndianHeapChannelBuffer0);
      assertArrayEquals(new byte[] {(byte) (-93), (byte)30, (byte) (-64)}, byteArray0);
      
      ByteBuffer byteBuffer0 = bigEndianHeapChannelBuffer0.toByteBuffer();
      assertEquals(3, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(3, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(3, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertFalse(byteBuffer0.isDirect());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(3, byteBuffer0.limit());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertEquals(3, byteBuffer0.remaining());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals(3, byteBuffer0.capacity());
      assertEquals(0, byteBuffer0.position());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=3 cap=3]", byteBuffer0.toString());
      assertTrue(byteBuffer0.hasArray());
      assertEquals(3, byteArray0.length);
      assertNotNull(byteBuffer0);
      assertArrayEquals(new byte[] {(byte) (-93), (byte)30, (byte) (-64)}, byteArray0);
      
      channelBuffer0.readBytes(byteBuffer0);
      assertEquals(3, bigEndianHeapChannelBuffer0.readableBytes());
      assertTrue(bigEndianHeapChannelBuffer0.readable());
      assertTrue(bigEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, bigEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(3, bigEndianHeapChannelBuffer0.capacity());
      assertEquals(3, bigEndianHeapChannelBuffer0.writerIndex());
      assertFalse(bigEndianHeapChannelBuffer0.isDirect());
      assertEquals(0, bigEndianHeapChannelBuffer0.readerIndex());
      assertEquals(3, byteBuffer0.position());
      assertFalse(byteBuffer0.isDirect());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(3, byteBuffer0.limit());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertEquals(0, byteBuffer0.remaining());
      assertEquals("java.nio.HeapByteBuffer[pos=3 lim=3 cap=3]", byteBuffer0.toString());
      assertEquals(3, byteBuffer0.capacity());
      assertFalse(byteBuffer0.hasRemaining());
      assertTrue(byteBuffer0.hasArray());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertFalse(littleEndianHeapChannelBuffer0.isDirect());
      assertFalse(littleEndianHeapChannelBuffer0.readable());
      assertEquals(0, littleEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, littleEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, littleEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(3348, littleEndianHeapChannelBuffer0.capacity());
      assertTrue(littleEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, littleEndianHeapChannelBuffer0.readableBytes());
      assertEquals(3, channelBuffer0.readerIndex());
      assertEquals(972, channelBuffer0.readableBytes());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(975, channelBuffer0.capacity());
      assertEquals(975, channelBuffer0.writerIndex());
      assertTrue(channelBuffer0.readable());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(975L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(3, byteArray0.length);
      assertTrue(int0 == int2);
      assertTrue(int0 == int3);
      assertFalse(int0 == int6);
      assertFalse(int0 == int7);
      assertFalse(int0 == int5);
      assertFalse(int0 == int1);
      assertTrue(int0 == int4);
      assertFalse(int0 == int8);
      assertFalse(int1 == int4);
      assertFalse(int1 == int7);
      assertTrue(int1 == int5);
      assertFalse(int1 == int8);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertTrue(int1 == int6);
      assertFalse(int7 == int4);
      assertFalse(int7 == int6);
      assertFalse(int7 == int2);
      assertFalse(int7 == int5);
      assertFalse(int7 == int3);
      assertFalse(int7 == int1);
      assertFalse(int7 == int0);
      assertFalse(int7 == int8);
      assertFalse(littleEndianHeapChannelBuffer0.equals((Object)channelBuffer0));
      assertFalse(int4 == int5);
      assertFalse(int4 == int1);
      assertFalse(int4 == int8);
      assertTrue(int4 == int2);
      assertTrue(int4 == int3);
      assertTrue(int4 == int0);
      assertFalse(int4 == int7);
      assertFalse(int4 == int6);
      assertFalse(int8 == int6);
      assertFalse(int8 == int7);
      assertFalse(int8 == int0);
      assertFalse(int8 == int3);
      assertFalse(int8 == int2);
      assertFalse(int8 == int1);
      assertFalse(int8 == int5);
      assertFalse(int8 == int4);
      assertFalse(channelBuffer0.equals((Object)littleEndianHeapChannelBuffer0));
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotSame(littleEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, littleEndianHeapChannelBuffer0);
      
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      assertFalse(staticChannelPipeline0.isAttached());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(11L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(983L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals("0", channelHandlerContext0.getName());
      assertTrue(channelHandlerContext0.canHandleUpstream());
      assertFalse(channelHandlerContext0.canHandleDownstream());
      assertFalse(littleEndianHeapChannelBuffer0.isDirect());
      assertFalse(littleEndianHeapChannelBuffer0.readable());
      assertEquals(0, littleEndianHeapChannelBuffer0.writerIndex());
      assertEquals(0, littleEndianHeapChannelBuffer0.readerIndex());
      assertEquals(0, littleEndianHeapChannelBuffer0.arrayOffset());
      assertEquals(3348, littleEndianHeapChannelBuffer0.capacity());
      assertTrue(littleEndianHeapChannelBuffer0.hasArray());
      assertEquals(0, littleEndianHeapChannelBuffer0.readableBytes());
      assertEquals(0, channelBuffer0.readableBytes());
      assertEquals(975, channelBuffer0.readerIndex());
      assertFalse(channelBuffer0.isDirect());
      assertEquals(0, channelBuffer0.arrayOffset());
      assertEquals(975, channelBuffer0.capacity());
      assertEquals(975, channelBuffer0.writerIndex());
      assertFalse(channelBuffer0.readable());
      assertTrue(channelBuffer0.hasArray());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(983L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(11L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertEquals(5, channelHandlerArray0.length);
      assertNull(object0);
      assertTrue(int0 == int2);
      assertTrue(int0 == int3);
      assertFalse(int0 == int6);
      assertFalse(int0 == int7);
      assertFalse(int0 == int5);
      assertFalse(int0 == int1);
      assertTrue(int0 == int4);
      assertFalse(int0 == int8);
      assertFalse(int1 == int4);
      assertFalse(int1 == int7);
      assertTrue(int1 == int5);
      assertFalse(int1 == int8);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertTrue(int1 == int6);
      assertFalse(int7 == int4);
      assertFalse(int7 == int6);
      assertFalse(int7 == int2);
      assertFalse(int7 == int5);
      assertFalse(int7 == int3);
      assertFalse(int7 == int1);
      assertFalse(int7 == int0);
      assertFalse(int7 == int8);
      assertTrue(littleEndianHeapChannelBuffer0.equals((Object)channelBuffer0));
      assertFalse(int4 == int5);
      assertFalse(int4 == int1);
      assertFalse(int4 == int8);
      assertTrue(int4 == int2);
      assertTrue(int4 == int3);
      assertTrue(int4 == int0);
      assertFalse(int4 == int7);
      assertFalse(int4 == int6);
      assertFalse(int8 == int6);
      assertFalse(int8 == int7);
      assertFalse(int8 == int0);
      assertFalse(int8 == int3);
      assertFalse(int8 == int2);
      assertFalse(int8 == int1);
      assertFalse(int8 == int5);
      assertFalse(int8 == int4);
      assertTrue(channelBuffer0.equals((Object)littleEndianHeapChannelBuffer0));
      assertNotSame(littleEndianHeapChannelBuffer0, channelBuffer0);
      assertNotSame(channelBuffer0, littleEndianHeapChannelBuffer0);
      
      int int9 = lengthFieldBasedFrameDecoder0.getlengthFieldOffset();
      assertEquals(4, int9);
      assertEquals(975, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertEquals(11L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertFalse(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(983L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(8, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertTrue(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertEquals(975, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(975, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(983L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(975, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(975, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertTrue(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(8, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(11L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertFalse(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertTrue(int0 == int2);
      assertTrue(int0 == int3);
      assertFalse(int0 == int6);
      assertFalse(int0 == int7);
      assertFalse(int0 == int5);
      assertFalse(int0 == int1);
      assertTrue(int0 == int4);
      assertFalse(int0 == int8);
      assertFalse(int1 == int4);
      assertFalse(int1 == int7);
      assertTrue(int1 == int5);
      assertFalse(int1 == int8);
      assertFalse(int1 == int3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertTrue(int1 == int6);
      assertFalse(int9 == int2);
      assertTrue(int9 == int5);
      assertTrue(int9 == int1);
      assertFalse(int9 == int8);
      assertFalse(int9 == int7);
      assertFalse(int9 == int4);
      assertTrue(int9 == int6);
      assertFalse(int9 == int0);
      assertFalse(int9 == int3);
  }

  @Test(timeout = 11000)
  public void test87()  throws Throwable  {
      int int0 = (-18);
      byte byte0 = (byte)66;
      int int1 = 31;
      int int2 = 27;
      int int3 = 4;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int1, int2, int3, int2, byte0, boolean0);
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(27, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(66, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(27, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertTrue(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(31, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(31, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertTrue(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(27, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(31, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(27, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(31, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(66, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertNotNull(lengthFieldBasedFrameDecoder0);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      
      boolean boolean1 = lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength();
      assertTrue(boolean1);
      assertFalse(lengthFieldBasedFrameDecoder0.getdiscardingTooLongFrame());
      assertEquals(4, lengthFieldBasedFrameDecoder0.getlengthFieldLength());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.gettooLongFrameLength());
      assertEquals(27, lengthFieldBasedFrameDecoder0.getlengthFieldOffset());
      assertEquals(66, lengthFieldBasedFrameDecoder0.getinitialBytesToStrip());
      assertEquals(0L, lengthFieldBasedFrameDecoder0.getbytesToDiscard());
      assertEquals(27, lengthFieldBasedFrameDecoder0.getlengthAdjustment());
      assertTrue(lengthFieldBasedFrameDecoder0.getlengthFieldIncludedInFrameLength());
      assertEquals(31, lengthFieldBasedFrameDecoder0.getlengthFieldEndOffset());
      assertEquals(31, lengthFieldBasedFrameDecoder0.getmaxFrameLength());
      assertTrue(lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength);
      assertEquals(27, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      assertEquals(31, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      assertEquals(27, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.bytesToDiscard);
      assertEquals(0L, lengthFieldBasedFrameDecoder0.tooLongFrameLength);
      assertEquals(31, lengthFieldBasedFrameDecoder0.maxFrameLength);
      assertEquals(66, lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      assertEquals(4, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      assertFalse(lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      assertFalse(int1 == int3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertTrue(boolean1 == boolean0);
      
      int int4 = (-4414);
      int int5 = (-705);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder1 = null;
      try {
        lengthFieldBasedFrameDecoder1 = new LengthFieldBasedFrameDecoder(int0, int1, int4, int5, byte0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: -18
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }
}
