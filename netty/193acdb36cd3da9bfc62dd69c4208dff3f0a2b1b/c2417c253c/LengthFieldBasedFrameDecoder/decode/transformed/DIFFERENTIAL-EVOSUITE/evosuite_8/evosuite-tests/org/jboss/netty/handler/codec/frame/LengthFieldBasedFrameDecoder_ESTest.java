/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 04 14:23:09 GMT 2021
 */

package org.jboss.netty.handler.codec.frame;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jboss.netty.channel.DefaultChannelPipeline;
import org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LengthFieldBasedFrameDecoder_ESTest extends LengthFieldBasedFrameDecoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(754, 4, 4, 4, 754);
      // EXCEPTION DIFF:
      // The original version did not exhibit this exception:
      //     java.lang.IllegalArgumentException : object is not an instance of declaring class
      lengthFieldBasedFrameDecoder0.setFailImmediatelyOnTooLongFrame(false);
      DefaultChannelPipeline defaultChannelPipeline0 = new DefaultChannelPipeline();
      // EXCEPTION DIFF:
      // The modified version did not exhibit this exception:
      //     java.util.NoSuchElementException : initialBytesToStrip must be a non-negative integer: 
      // Undeclared exception!
      try { 
        defaultChannelPipeline0.getContextOrDie("initialBytesToStrip must be a non-negative integer: ");
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // initialBytesToStrip must be a non-negative integer: 
         //
         verifyException("org.jboss.netty.channel.DefaultChannelPipeline", e);
         assertTrue(e.getMessage().equals("initialBytesToStrip must be a non-negative integer: "));   
      }
  }
}
