/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 08 16:14:07 GMT 2021
 */

package com.badlogic.gdx.backends.lwjgl3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.badlogic.gdx.ApplicationListener;
import com.badlogic.gdx.Files;
import com.badlogic.gdx.LifecycleListener;
import com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application;
import com.badlogic.gdx.backends.lwjgl3.Lwjgl3ApplicationConfiguration;
import com.badlogic.gdx.backends.lwjgl3.Lwjgl3NativesLoader;
import com.badlogic.gdx.backends.lwjgl3.Lwjgl3Window;
import com.badlogic.gdx.backends.lwjgl3.Lwjgl3WindowConfiguration;
import com.badlogic.gdx.utils.GdxNativesLoader;
import com.badlogic.gdx.utils.SharedLibraryLoader;
import java.io.PrintStream;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.lang.MockRuntimeException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Lwjgl3Application_ESTest extends Lwjgl3Application_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        Lwjgl3Application.supportsFBO();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application", e);
      }
  }

  @Test(timeout = 11000)
  public void test1()  throws Throwable  {
      ApplicationListener applicationListener0 = mock(ApplicationListener.class, new ViolatedAssumptionAnswer());
      Lwjgl3ApplicationConfiguration lwjgl3ApplicationConfiguration0 = null;
      Lwjgl3Application lwjgl3Application0 = null;
      try {
        lwjgl3Application0 = new Lwjgl3Application(applicationListener0, lwjgl3ApplicationConfiguration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Couldn't load shared library 'libgdx64.so' for target: Linux, 64-bit
         //
         verifyException("com.badlogic.gdx.utils.SharedLibraryLoader", e);
      }
  }

  @Test(timeout = 11000)
  public void test2()  throws Throwable  {
      Lwjgl3ApplicationConfiguration lwjgl3ApplicationConfiguration0 = new Lwjgl3ApplicationConfiguration();
      assertEquals(3, lwjgl3ApplicationConfiguration0.getgles30ContextMajorVersion());
      assertEquals(16, lwjgl3ApplicationConfiguration0.getaudioDeviceSimultaneousSources());
      assertEquals(640, lwjgl3ApplicationConfiguration0.getwindowWidth());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowX());
      assertEquals(16, lwjgl3ApplicationConfiguration0.getdepth());
      assertEquals(9, lwjgl3ApplicationConfiguration0.getaudioDeviceBufferCount());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowY());
      assertFalse(lwjgl3ApplicationConfiguration0.getdisableAudio());
      assertTrue(lwjgl3ApplicationConfiguration0.getwindowResizable());
      assertEquals(0, lwjgl3ApplicationConfiguration0.getsamples());
      assertEquals(Files.FileType.External, lwjgl3ApplicationConfiguration0.getpreferencesFileType());
      assertTrue(lwjgl3ApplicationConfiguration0.getwindowDecorated());
      assertEquals(480, lwjgl3ApplicationConfiguration0.getwindowHeight());
      assertEquals(".prefs/", lwjgl3ApplicationConfiguration0.getpreferencesDirectory());
      assertEquals(512, lwjgl3ApplicationConfiguration0.getaudioDeviceBufferSize());
      assertEquals(2, lwjgl3ApplicationConfiguration0.getgles30ContextMinorVersion());
      assertTrue(lwjgl3ApplicationConfiguration0.getvSyncEnabled());
      assertFalse(lwjgl3ApplicationConfiguration0.getuseGL30());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowMinWidth());
      assertNotNull(lwjgl3ApplicationConfiguration0);
      assertEquals(0, lwjgl3ApplicationConfiguration0.samples);
      assertEquals(8, lwjgl3ApplicationConfiguration0.r);
      assertEquals(16, lwjgl3ApplicationConfiguration0.depth);
      assertFalse(lwjgl3ApplicationConfiguration0.disableAudio);
      assertTrue(lwjgl3ApplicationConfiguration0.windowResizable);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMinHeight);
      assertFalse(lwjgl3ApplicationConfiguration0.useGL30);
      assertEquals(3, lwjgl3ApplicationConfiguration0.gles30ContextMajorVersion);
      assertEquals(512, lwjgl3ApplicationConfiguration0.audioDeviceBufferSize);
      assertEquals(16, lwjgl3ApplicationConfiguration0.audioDeviceSimultaneousSources);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMinWidth);
      assertEquals(9, lwjgl3ApplicationConfiguration0.audioDeviceBufferCount);
      assertEquals(480, lwjgl3ApplicationConfiguration0.windowHeight);
      assertEquals(8, lwjgl3ApplicationConfiguration0.g);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMaxHeight);
      assertTrue(lwjgl3ApplicationConfiguration0.vSyncEnabled);
      assertEquals(8, lwjgl3ApplicationConfiguration0.b);
      assertEquals(640, lwjgl3ApplicationConfiguration0.windowWidth);
      assertEquals(0, lwjgl3ApplicationConfiguration0.stencil);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowY);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowX);
      assertTrue(lwjgl3ApplicationConfiguration0.windowDecorated);
      assertEquals(8, lwjgl3ApplicationConfiguration0.a);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMaxWidth);
      assertEquals(2, lwjgl3ApplicationConfiguration0.gles30ContextMinorVersion);
      
      // Undeclared exception!
      try { 
        Lwjgl3Application.createGlfwWindow(lwjgl3ApplicationConfiguration0, lwjgl3ApplicationConfiguration0.depth);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.lwjgl.glfw.GLFW
         //
         verifyException("com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application", e);
      }
  }

  @Test(timeout = 11000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        Lwjgl3Application.initiateGL();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.lwjgl.opengl.GL
         //
         verifyException("org.lwjgl.opengl.GL11", e);
      }
  }

  @Test(timeout = 11000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        Lwjgl3Application.initializeGlfw();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Couldn't load shared library 'libgdx64.so' for target: Linux, 64-bit
         //
         verifyException("com.badlogic.gdx.utils.SharedLibraryLoader", e);
      }
  }

  @Test(timeout = 11000)
  public void test5()  throws Throwable  {
      ApplicationListener applicationListener0 = null;
      Lwjgl3ApplicationConfiguration lwjgl3ApplicationConfiguration0 = new Lwjgl3ApplicationConfiguration();
      assertTrue(lwjgl3ApplicationConfiguration0.getvSyncEnabled());
      assertEquals(2, lwjgl3ApplicationConfiguration0.getgles30ContextMinorVersion());
      assertEquals(512, lwjgl3ApplicationConfiguration0.getaudioDeviceBufferSize());
      assertTrue(lwjgl3ApplicationConfiguration0.getwindowResizable());
      assertEquals(Files.FileType.External, lwjgl3ApplicationConfiguration0.getpreferencesFileType());
      assertFalse(lwjgl3ApplicationConfiguration0.getdisableAudio());
      assertEquals(0, lwjgl3ApplicationConfiguration0.getsamples());
      assertEquals(16, lwjgl3ApplicationConfiguration0.getaudioDeviceSimultaneousSources());
      assertEquals(480, lwjgl3ApplicationConfiguration0.getwindowHeight());
      assertEquals(3, lwjgl3ApplicationConfiguration0.getgles30ContextMajorVersion());
      assertEquals(".prefs/", lwjgl3ApplicationConfiguration0.getpreferencesDirectory());
      assertEquals(16, lwjgl3ApplicationConfiguration0.getdepth());
      assertTrue(lwjgl3ApplicationConfiguration0.getwindowDecorated());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowX());
      assertEquals(9, lwjgl3ApplicationConfiguration0.getaudioDeviceBufferCount());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowY());
      assertFalse(lwjgl3ApplicationConfiguration0.getuseGL30());
      assertEquals(640, lwjgl3ApplicationConfiguration0.getwindowWidth());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowMinWidth());
      assertNotNull(lwjgl3ApplicationConfiguration0);
      assertEquals(0, lwjgl3ApplicationConfiguration0.stencil);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMinHeight);
      assertEquals(8, lwjgl3ApplicationConfiguration0.b);
      assertEquals(640, lwjgl3ApplicationConfiguration0.windowWidth);
      assertTrue(lwjgl3ApplicationConfiguration0.vSyncEnabled);
      assertEquals(8, lwjgl3ApplicationConfiguration0.g);
      assertEquals(9, lwjgl3ApplicationConfiguration0.audioDeviceBufferCount);
      assertEquals(16, lwjgl3ApplicationConfiguration0.depth);
      assertEquals(2, lwjgl3ApplicationConfiguration0.gles30ContextMinorVersion);
      assertEquals(0, lwjgl3ApplicationConfiguration0.samples);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMaxWidth);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowX);
      assertTrue(lwjgl3ApplicationConfiguration0.windowDecorated);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMaxHeight);
      assertEquals(8, lwjgl3ApplicationConfiguration0.a);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowY);
      assertEquals(3, lwjgl3ApplicationConfiguration0.gles30ContextMajorVersion);
      assertFalse(lwjgl3ApplicationConfiguration0.useGL30);
      assertEquals(480, lwjgl3ApplicationConfiguration0.windowHeight);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMinWidth);
      assertEquals(16, lwjgl3ApplicationConfiguration0.audioDeviceSimultaneousSources);
      assertFalse(lwjgl3ApplicationConfiguration0.disableAudio);
      assertEquals(8, lwjgl3ApplicationConfiguration0.r);
      assertEquals(512, lwjgl3ApplicationConfiguration0.audioDeviceBufferSize);
      assertTrue(lwjgl3ApplicationConfiguration0.windowResizable);
      
      Lwjgl3ApplicationConfiguration lwjgl3ApplicationConfiguration1 = Lwjgl3ApplicationConfiguration.copy(lwjgl3ApplicationConfiguration0);
      assertNotSame(lwjgl3ApplicationConfiguration0, lwjgl3ApplicationConfiguration1);
      assertNotSame(lwjgl3ApplicationConfiguration1, lwjgl3ApplicationConfiguration0);
      assertTrue(lwjgl3ApplicationConfiguration0.getvSyncEnabled());
      assertEquals(2, lwjgl3ApplicationConfiguration0.getgles30ContextMinorVersion());
      assertEquals(512, lwjgl3ApplicationConfiguration0.getaudioDeviceBufferSize());
      assertTrue(lwjgl3ApplicationConfiguration0.getwindowResizable());
      assertEquals(Files.FileType.External, lwjgl3ApplicationConfiguration0.getpreferencesFileType());
      assertFalse(lwjgl3ApplicationConfiguration0.getdisableAudio());
      assertEquals(0, lwjgl3ApplicationConfiguration0.getsamples());
      assertEquals(16, lwjgl3ApplicationConfiguration0.getaudioDeviceSimultaneousSources());
      assertEquals(480, lwjgl3ApplicationConfiguration0.getwindowHeight());
      assertEquals(3, lwjgl3ApplicationConfiguration0.getgles30ContextMajorVersion());
      assertEquals(".prefs/", lwjgl3ApplicationConfiguration0.getpreferencesDirectory());
      assertEquals(16, lwjgl3ApplicationConfiguration0.getdepth());
      assertTrue(lwjgl3ApplicationConfiguration0.getwindowDecorated());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowX());
      assertEquals(9, lwjgl3ApplicationConfiguration0.getaudioDeviceBufferCount());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowY());
      assertFalse(lwjgl3ApplicationConfiguration0.getuseGL30());
      assertEquals(640, lwjgl3ApplicationConfiguration0.getwindowWidth());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowMinWidth());
      assertEquals(16, lwjgl3ApplicationConfiguration1.getaudioDeviceSimultaneousSources());
      assertEquals(3, lwjgl3ApplicationConfiguration1.getgles30ContextMajorVersion());
      assertEquals(9, lwjgl3ApplicationConfiguration1.getaudioDeviceBufferCount());
      assertEquals((-1), lwjgl3ApplicationConfiguration1.getwindowX());
      assertEquals(640, lwjgl3ApplicationConfiguration1.getwindowWidth());
      assertEquals(16, lwjgl3ApplicationConfiguration1.getdepth());
      assertFalse(lwjgl3ApplicationConfiguration1.getdisableAudio());
      assertEquals(Files.FileType.External, lwjgl3ApplicationConfiguration1.getpreferencesFileType());
      assertEquals(0, lwjgl3ApplicationConfiguration1.getsamples());
      assertEquals((-1), lwjgl3ApplicationConfiguration1.getwindowY());
      assertTrue(lwjgl3ApplicationConfiguration1.getwindowResizable());
      assertTrue(lwjgl3ApplicationConfiguration1.getwindowDecorated());
      assertEquals(".prefs/", lwjgl3ApplicationConfiguration1.getpreferencesDirectory());
      assertEquals(480, lwjgl3ApplicationConfiguration1.getwindowHeight());
      assertEquals(2, lwjgl3ApplicationConfiguration1.getgles30ContextMinorVersion());
      assertEquals(512, lwjgl3ApplicationConfiguration1.getaudioDeviceBufferSize());
      assertTrue(lwjgl3ApplicationConfiguration1.getvSyncEnabled());
      assertEquals((-1), lwjgl3ApplicationConfiguration1.getwindowMinWidth());
      assertFalse(lwjgl3ApplicationConfiguration1.getuseGL30());
      assertNotNull(lwjgl3ApplicationConfiguration1);
      assertFalse(lwjgl3ApplicationConfiguration1.equals((Object)lwjgl3ApplicationConfiguration0));
      assertEquals(0, lwjgl3ApplicationConfiguration0.stencil);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMinHeight);
      assertEquals(8, lwjgl3ApplicationConfiguration0.b);
      assertEquals(640, lwjgl3ApplicationConfiguration0.windowWidth);
      assertTrue(lwjgl3ApplicationConfiguration0.vSyncEnabled);
      assertEquals(8, lwjgl3ApplicationConfiguration0.g);
      assertEquals(9, lwjgl3ApplicationConfiguration0.audioDeviceBufferCount);
      assertEquals(16, lwjgl3ApplicationConfiguration0.depth);
      assertEquals(2, lwjgl3ApplicationConfiguration0.gles30ContextMinorVersion);
      assertEquals(0, lwjgl3ApplicationConfiguration0.samples);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMaxWidth);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowX);
      assertTrue(lwjgl3ApplicationConfiguration0.windowDecorated);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMaxHeight);
      assertEquals(8, lwjgl3ApplicationConfiguration0.a);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowY);
      assertEquals(3, lwjgl3ApplicationConfiguration0.gles30ContextMajorVersion);
      assertFalse(lwjgl3ApplicationConfiguration0.useGL30);
      assertEquals(480, lwjgl3ApplicationConfiguration0.windowHeight);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMinWidth);
      assertEquals(16, lwjgl3ApplicationConfiguration0.audioDeviceSimultaneousSources);
      assertFalse(lwjgl3ApplicationConfiguration0.disableAudio);
      assertEquals(8, lwjgl3ApplicationConfiguration0.r);
      assertEquals(512, lwjgl3ApplicationConfiguration0.audioDeviceBufferSize);
      assertTrue(lwjgl3ApplicationConfiguration0.windowResizable);
      assertEquals(16, lwjgl3ApplicationConfiguration1.audioDeviceSimultaneousSources);
      assertTrue(lwjgl3ApplicationConfiguration1.windowDecorated);
      assertEquals(480, lwjgl3ApplicationConfiguration1.windowHeight);
      assertEquals((-1), lwjgl3ApplicationConfiguration1.windowMinWidth);
      assertEquals(9, lwjgl3ApplicationConfiguration1.audioDeviceBufferCount);
      assertTrue(lwjgl3ApplicationConfiguration1.windowResizable);
      assertEquals(3, lwjgl3ApplicationConfiguration1.gles30ContextMajorVersion);
      assertEquals((-1), lwjgl3ApplicationConfiguration1.windowMinHeight);
      assertFalse(lwjgl3ApplicationConfiguration1.useGL30);
      assertEquals(512, lwjgl3ApplicationConfiguration1.audioDeviceBufferSize);
      assertFalse(lwjgl3ApplicationConfiguration1.disableAudio);
      assertEquals(8, lwjgl3ApplicationConfiguration1.r);
      assertTrue(lwjgl3ApplicationConfiguration1.vSyncEnabled);
      assertEquals(16, lwjgl3ApplicationConfiguration1.depth);
      assertEquals(0, lwjgl3ApplicationConfiguration1.samples);
      assertEquals(8, lwjgl3ApplicationConfiguration1.g);
      assertEquals((-1), lwjgl3ApplicationConfiguration1.windowMaxHeight);
      assertEquals(0, lwjgl3ApplicationConfiguration1.stencil);
      assertEquals(640, lwjgl3ApplicationConfiguration1.windowWidth);
      assertEquals((-1), lwjgl3ApplicationConfiguration1.windowY);
      assertEquals(8, lwjgl3ApplicationConfiguration1.a);
      assertEquals((-1), lwjgl3ApplicationConfiguration1.windowX);
      assertEquals(8, lwjgl3ApplicationConfiguration1.b);
      assertEquals((-1), lwjgl3ApplicationConfiguration1.windowMaxWidth);
      assertEquals(2, lwjgl3ApplicationConfiguration1.gles30ContextMinorVersion);
      
      Lwjgl3Application lwjgl3Application0 = null;
      try {
        lwjgl3Application0 = new Lwjgl3Application(applicationListener0, lwjgl3ApplicationConfiguration1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Couldn't load shared library 'libgdx64.so' for target: Linux, 64-bit
         //
         verifyException("com.badlogic.gdx.utils.SharedLibraryLoader", e);
      }
  }

  @Test(timeout = 11000)
  public void test6()  throws Throwable  {
      ApplicationListener applicationListener0 = mock(ApplicationListener.class, new ViolatedAssumptionAnswer());
      Lwjgl3ApplicationConfiguration lwjgl3ApplicationConfiguration0 = new Lwjgl3ApplicationConfiguration();
      assertEquals(512, lwjgl3ApplicationConfiguration0.getaudioDeviceBufferSize());
      assertTrue(lwjgl3ApplicationConfiguration0.getvSyncEnabled());
      assertEquals(640, lwjgl3ApplicationConfiguration0.getwindowWidth());
      assertFalse(lwjgl3ApplicationConfiguration0.getuseGL30());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowMinWidth());
      assertEquals(0, lwjgl3ApplicationConfiguration0.getsamples());
      assertEquals(9, lwjgl3ApplicationConfiguration0.getaudioDeviceBufferCount());
      assertEquals(Files.FileType.External, lwjgl3ApplicationConfiguration0.getpreferencesFileType());
      assertEquals(16, lwjgl3ApplicationConfiguration0.getdepth());
      assertEquals(2, lwjgl3ApplicationConfiguration0.getgles30ContextMinorVersion());
      assertEquals(16, lwjgl3ApplicationConfiguration0.getaudioDeviceSimultaneousSources());
      assertEquals(480, lwjgl3ApplicationConfiguration0.getwindowHeight());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowX());
      assertEquals(3, lwjgl3ApplicationConfiguration0.getgles30ContextMajorVersion());
      assertEquals(".prefs/", lwjgl3ApplicationConfiguration0.getpreferencesDirectory());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowY());
      assertTrue(lwjgl3ApplicationConfiguration0.getwindowResizable());
      assertFalse(lwjgl3ApplicationConfiguration0.getdisableAudio());
      assertTrue(lwjgl3ApplicationConfiguration0.getwindowDecorated());
      assertNotNull(lwjgl3ApplicationConfiguration0);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowY);
      assertFalse(lwjgl3ApplicationConfiguration0.useGL30);
      assertEquals(3, lwjgl3ApplicationConfiguration0.gles30ContextMajorVersion);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowX);
      assertEquals(2, lwjgl3ApplicationConfiguration0.gles30ContextMinorVersion);
      assertEquals(512, lwjgl3ApplicationConfiguration0.audioDeviceBufferSize);
      assertEquals(480, lwjgl3ApplicationConfiguration0.windowHeight);
      assertEquals(8, lwjgl3ApplicationConfiguration0.r);
      assertTrue(lwjgl3ApplicationConfiguration0.vSyncEnabled);
      assertEquals(8, lwjgl3ApplicationConfiguration0.g);
      assertEquals(9, lwjgl3ApplicationConfiguration0.audioDeviceBufferCount);
      assertEquals(0, lwjgl3ApplicationConfiguration0.samples);
      assertEquals(8, lwjgl3ApplicationConfiguration0.a);
      assertEquals(0, lwjgl3ApplicationConfiguration0.stencil);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMinHeight);
      assertTrue(lwjgl3ApplicationConfiguration0.windowDecorated);
      assertEquals(8, lwjgl3ApplicationConfiguration0.b);
      assertEquals(640, lwjgl3ApplicationConfiguration0.windowWidth);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMaxHeight);
      assertTrue(lwjgl3ApplicationConfiguration0.windowResizable);
      assertEquals(16, lwjgl3ApplicationConfiguration0.audioDeviceSimultaneousSources);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMaxWidth);
      assertFalse(lwjgl3ApplicationConfiguration0.disableAudio);
      assertEquals(16, lwjgl3ApplicationConfiguration0.depth);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMinWidth);
      
      Lwjgl3Application lwjgl3Application0 = null;
      try {
        lwjgl3Application0 = new Lwjgl3Application(applicationListener0, lwjgl3ApplicationConfiguration0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Couldn't load shared library 'libgdx64.so' for target: Linux, 64-bit
         //
         verifyException("com.badlogic.gdx.utils.SharedLibraryLoader", e);
      }
  }

  @Test(timeout = 11000)
  public void test7()  throws Throwable  {
      Lwjgl3ApplicationConfiguration lwjgl3ApplicationConfiguration0 = null;
      String string0 = "wis not within image height bounds: [0, ";
      int int0 = 0;
      // Undeclared exception!
      try { 
        Lwjgl3Application.initiateGL();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.lwjgl.opengl.GL
         //
         verifyException("org.lwjgl.opengl.GL11", e);
      }
  }

  @Test(timeout = 11000)
  public void test8()  throws Throwable  {
      ApplicationListener applicationListener0 = mock(ApplicationListener.class, new ViolatedAssumptionAnswer());
      Lwjgl3ApplicationConfiguration lwjgl3ApplicationConfiguration0 = new Lwjgl3ApplicationConfiguration();
      assertTrue(lwjgl3ApplicationConfiguration0.getvSyncEnabled());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowY());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowX());
      assertEquals(512, lwjgl3ApplicationConfiguration0.getaudioDeviceBufferSize());
      assertEquals(2, lwjgl3ApplicationConfiguration0.getgles30ContextMinorVersion());
      assertEquals(640, lwjgl3ApplicationConfiguration0.getwindowWidth());
      assertFalse(lwjgl3ApplicationConfiguration0.getuseGL30());
      assertEquals(16, lwjgl3ApplicationConfiguration0.getdepth());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowMinWidth());
      assertEquals(0, lwjgl3ApplicationConfiguration0.getsamples());
      assertTrue(lwjgl3ApplicationConfiguration0.getwindowDecorated());
      assertFalse(lwjgl3ApplicationConfiguration0.getdisableAudio());
      assertEquals(9, lwjgl3ApplicationConfiguration0.getaudioDeviceBufferCount());
      assertEquals(16, lwjgl3ApplicationConfiguration0.getaudioDeviceSimultaneousSources());
      assertTrue(lwjgl3ApplicationConfiguration0.getwindowResizable());
      assertEquals(".prefs/", lwjgl3ApplicationConfiguration0.getpreferencesDirectory());
      assertEquals(Files.FileType.External, lwjgl3ApplicationConfiguration0.getpreferencesFileType());
      assertEquals(480, lwjgl3ApplicationConfiguration0.getwindowHeight());
      assertEquals(3, lwjgl3ApplicationConfiguration0.getgles30ContextMajorVersion());
      assertNotNull(lwjgl3ApplicationConfiguration0);
      assertEquals(3, lwjgl3ApplicationConfiguration0.gles30ContextMajorVersion);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowY);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowX);
      assertFalse(lwjgl3ApplicationConfiguration0.useGL30);
      assertEquals(2, lwjgl3ApplicationConfiguration0.gles30ContextMinorVersion);
      assertEquals(512, lwjgl3ApplicationConfiguration0.audioDeviceBufferSize);
      assertEquals(8, lwjgl3ApplicationConfiguration0.r);
      assertTrue(lwjgl3ApplicationConfiguration0.vSyncEnabled);
      assertEquals(0, lwjgl3ApplicationConfiguration0.samples);
      assertEquals(480, lwjgl3ApplicationConfiguration0.windowHeight);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMinHeight);
      assertEquals(8, lwjgl3ApplicationConfiguration0.b);
      assertEquals(8, lwjgl3ApplicationConfiguration0.a);
      assertTrue(lwjgl3ApplicationConfiguration0.windowDecorated);
      assertEquals(0, lwjgl3ApplicationConfiguration0.stencil);
      assertEquals(9, lwjgl3ApplicationConfiguration0.audioDeviceBufferCount);
      assertEquals(8, lwjgl3ApplicationConfiguration0.g);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMaxHeight);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMaxWidth);
      assertTrue(lwjgl3ApplicationConfiguration0.windowResizable);
      assertEquals(16, lwjgl3ApplicationConfiguration0.audioDeviceSimultaneousSources);
      assertEquals(640, lwjgl3ApplicationConfiguration0.windowWidth);
      assertEquals(16, lwjgl3ApplicationConfiguration0.depth);
      assertFalse(lwjgl3ApplicationConfiguration0.disableAudio);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMinWidth);
      
      String string0 = "sU+Vo%+<C{HXq <i]{";
      String string1 = ": ";
      String string2 = "";
      MockRuntimeException mockRuntimeException0 = new MockRuntimeException(string2);
      assertNotNull(mockRuntimeException0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      
      String string3 = " + ";
      boolean boolean0 = false;
      lwjgl3ApplicationConfiguration0.setdisableAudio(boolean0);
      assertTrue(lwjgl3ApplicationConfiguration0.getvSyncEnabled());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowY());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowX());
      assertEquals(512, lwjgl3ApplicationConfiguration0.getaudioDeviceBufferSize());
      assertEquals(2, lwjgl3ApplicationConfiguration0.getgles30ContextMinorVersion());
      assertEquals(640, lwjgl3ApplicationConfiguration0.getwindowWidth());
      assertFalse(lwjgl3ApplicationConfiguration0.getuseGL30());
      assertEquals(16, lwjgl3ApplicationConfiguration0.getdepth());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowMinWidth());
      assertEquals(0, lwjgl3ApplicationConfiguration0.getsamples());
      assertTrue(lwjgl3ApplicationConfiguration0.getwindowDecorated());
      assertFalse(lwjgl3ApplicationConfiguration0.getdisableAudio());
      assertEquals(9, lwjgl3ApplicationConfiguration0.getaudioDeviceBufferCount());
      assertEquals(16, lwjgl3ApplicationConfiguration0.getaudioDeviceSimultaneousSources());
      assertTrue(lwjgl3ApplicationConfiguration0.getwindowResizable());
      assertEquals(".prefs/", lwjgl3ApplicationConfiguration0.getpreferencesDirectory());
      assertEquals(Files.FileType.External, lwjgl3ApplicationConfiguration0.getpreferencesFileType());
      assertEquals(480, lwjgl3ApplicationConfiguration0.getwindowHeight());
      assertEquals(3, lwjgl3ApplicationConfiguration0.getgles30ContextMajorVersion());
      assertEquals(3, lwjgl3ApplicationConfiguration0.gles30ContextMajorVersion);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowY);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowX);
      assertFalse(lwjgl3ApplicationConfiguration0.useGL30);
      assertEquals(2, lwjgl3ApplicationConfiguration0.gles30ContextMinorVersion);
      assertEquals(512, lwjgl3ApplicationConfiguration0.audioDeviceBufferSize);
      assertEquals(8, lwjgl3ApplicationConfiguration0.r);
      assertTrue(lwjgl3ApplicationConfiguration0.vSyncEnabled);
      assertEquals(0, lwjgl3ApplicationConfiguration0.samples);
      assertEquals(480, lwjgl3ApplicationConfiguration0.windowHeight);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMinHeight);
      assertEquals(8, lwjgl3ApplicationConfiguration0.b);
      assertEquals(8, lwjgl3ApplicationConfiguration0.a);
      assertTrue(lwjgl3ApplicationConfiguration0.windowDecorated);
      assertEquals(0, lwjgl3ApplicationConfiguration0.stencil);
      assertEquals(9, lwjgl3ApplicationConfiguration0.audioDeviceBufferCount);
      assertEquals(8, lwjgl3ApplicationConfiguration0.g);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMaxHeight);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMaxWidth);
      assertTrue(lwjgl3ApplicationConfiguration0.windowResizable);
      assertEquals(16, lwjgl3ApplicationConfiguration0.audioDeviceSimultaneousSources);
      assertEquals(640, lwjgl3ApplicationConfiguration0.windowWidth);
      assertEquals(16, lwjgl3ApplicationConfiguration0.depth);
      assertFalse(lwjgl3ApplicationConfiguration0.disableAudio);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMinWidth);
      
      // Undeclared exception!
      try { 
        Lwjgl3Application.createGlfwWindow(lwjgl3ApplicationConfiguration0, lwjgl3ApplicationConfiguration0.depth);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.lwjgl.glfw.GLFW
         //
         verifyException("com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application", e);
      }
  }

  @Test(timeout = 11000)
  public void test9()  throws Throwable  {
      Lwjgl3ApplicationConfiguration lwjgl3ApplicationConfiguration0 = new Lwjgl3ApplicationConfiguration();
      assertEquals(2, lwjgl3ApplicationConfiguration0.getgles30ContextMinorVersion());
      assertEquals(480, lwjgl3ApplicationConfiguration0.getwindowHeight());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowMinWidth());
      assertEquals(0, lwjgl3ApplicationConfiguration0.getsamples());
      assertEquals(".prefs/", lwjgl3ApplicationConfiguration0.getpreferencesDirectory());
      assertEquals(Files.FileType.External, lwjgl3ApplicationConfiguration0.getpreferencesFileType());
      assertEquals(16, lwjgl3ApplicationConfiguration0.getdepth());
      assertTrue(lwjgl3ApplicationConfiguration0.getwindowDecorated());
      assertEquals(9, lwjgl3ApplicationConfiguration0.getaudioDeviceBufferCount());
      assertEquals(512, lwjgl3ApplicationConfiguration0.getaudioDeviceBufferSize());
      assertTrue(lwjgl3ApplicationConfiguration0.getvSyncEnabled());
      assertFalse(lwjgl3ApplicationConfiguration0.getdisableAudio());
      assertTrue(lwjgl3ApplicationConfiguration0.getwindowResizable());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowX());
      assertFalse(lwjgl3ApplicationConfiguration0.getuseGL30());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowY());
      assertEquals(16, lwjgl3ApplicationConfiguration0.getaudioDeviceSimultaneousSources());
      assertEquals(3, lwjgl3ApplicationConfiguration0.getgles30ContextMajorVersion());
      assertEquals(640, lwjgl3ApplicationConfiguration0.getwindowWidth());
      assertNotNull(lwjgl3ApplicationConfiguration0);
      assertEquals(640, lwjgl3ApplicationConfiguration0.windowWidth);
      assertEquals(16, lwjgl3ApplicationConfiguration0.depth);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMaxHeight);
      assertTrue(lwjgl3ApplicationConfiguration0.windowResizable);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMinHeight);
      assertEquals(8, lwjgl3ApplicationConfiguration0.b);
      assertEquals(0, lwjgl3ApplicationConfiguration0.stencil);
      assertFalse(lwjgl3ApplicationConfiguration0.disableAudio);
      assertEquals(8, lwjgl3ApplicationConfiguration0.g);
      assertEquals(0, lwjgl3ApplicationConfiguration0.samples);
      assertTrue(lwjgl3ApplicationConfiguration0.vSyncEnabled);
      assertEquals(9, lwjgl3ApplicationConfiguration0.audioDeviceBufferCount);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMaxWidth);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowX);
      assertTrue(lwjgl3ApplicationConfiguration0.windowDecorated);
      assertEquals(8, lwjgl3ApplicationConfiguration0.a);
      assertEquals(2, lwjgl3ApplicationConfiguration0.gles30ContextMinorVersion);
      assertEquals(480, lwjgl3ApplicationConfiguration0.windowHeight);
      assertEquals(3, lwjgl3ApplicationConfiguration0.gles30ContextMajorVersion);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowY);
      assertEquals((-1), lwjgl3ApplicationConfiguration0.windowMinWidth);
      assertEquals(16, lwjgl3ApplicationConfiguration0.audioDeviceSimultaneousSources);
      assertEquals(8, lwjgl3ApplicationConfiguration0.r);
      assertFalse(lwjgl3ApplicationConfiguration0.useGL30);
      assertEquals(512, lwjgl3ApplicationConfiguration0.audioDeviceBufferSize);
      
      int int0 = 1800;
      lwjgl3ApplicationConfiguration0.gles30ContextMinorVersion = int0;
      assertEquals(480, lwjgl3ApplicationConfiguration0.getwindowHeight());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowMinWidth());
      assertEquals(0, lwjgl3ApplicationConfiguration0.getsamples());
      assertEquals(".prefs/", lwjgl3ApplicationConfiguration0.getpreferencesDirectory());
      assertEquals(Files.FileType.External, lwjgl3ApplicationConfiguration0.getpreferencesFileType());
      assertEquals(16, lwjgl3ApplicationConfiguration0.getdepth());
      assertTrue(lwjgl3ApplicationConfiguration0.getwindowDecorated());
      assertEquals(9, lwjgl3ApplicationConfiguration0.getaudioDeviceBufferCount());
      assertEquals(512, lwjgl3ApplicationConfiguration0.getaudioDeviceBufferSize());
      assertTrue(lwjgl3ApplicationConfiguration0.getvSyncEnabled());
      assertFalse(lwjgl3ApplicationConfiguration0.getdisableAudio());
      assertTrue(lwjgl3ApplicationConfiguration0.getwindowResizable());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowX());
      assertFalse(lwjgl3ApplicationConfiguration0.getuseGL30());
      assertEquals((-1), lwjgl3ApplicationConfiguration0.getwindowY());
      assertEquals(16, lwjgl3ApplicationConfiguration0.getaudioDeviceSimultaneousSources());
      assertEquals(3, lwjgl3ApplicationConfiguration0.getgles30ContextMajorVersion());
      assertEquals(640, lwjgl3ApplicationConfiguration0.getwindowWidth());
      assertEquals(1800, lwjgl3ApplicationConfiguration0.getgles30ContextMinorVersion());
      
      long long0 = 851L;
      // Undeclared exception!
      try { 
        Lwjgl3Application.createGlfwWindow(lwjgl3ApplicationConfiguration0, long0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.lwjgl.glfw.GLFW
         //
         verifyException("com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application", e);
      }
  }
}
