/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 08 14:54:40 GMT 2021
 */

package com.badlogic.gdx.backends.lwjgl3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.badlogic.gdx.ApplicationListener;
import com.badlogic.gdx.backends.lwjgl3.Lwjgl3ApplicationConfiguration;
import com.badlogic.gdx.backends.lwjgl3.Lwjgl3Window;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Lwjgl3Application_ESTest extends Lwjgl3Application_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Lwjgl3ApplicationConfiguration lwjgl3ApplicationConfiguration0 = new Lwjgl3ApplicationConfiguration();
      ApplicationListener applicationListener0 = mock(ApplicationListener.class, new ViolatedAssumptionAnswer());
      // EXCEPTION DIFF:
      // Different Exceptions were thrown:
      // Original Version:
      //     java.lang.NoClassDefFoundError : org.lwjgl.system.libffi.Closure$Void
      // Modified Version:
      //     java.lang.NoClassDefFoundError : Could not initialize class com.badlogic.gdx.backends.lwjgl3.Lwjgl3Window$1
      Lwjgl3Window lwjgl3Window0 = null;
      try {
        lwjgl3Window0 = new Lwjgl3Window(0L, applicationListener0, lwjgl3ApplicationConfiguration0);
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // org.lwjgl.system.libffi.Closure$Void
         //
         verifyException("com.badlogic.gdx.backends.lwjgl3.Lwjgl3Window", e);
         assertTrue(e.getMessage().equals("org.lwjgl.system.libffi.Closure$Void"));   
      }
  }
}
