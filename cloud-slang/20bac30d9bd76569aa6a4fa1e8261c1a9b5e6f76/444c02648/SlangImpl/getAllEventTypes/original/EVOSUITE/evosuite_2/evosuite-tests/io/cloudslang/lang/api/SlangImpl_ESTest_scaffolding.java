/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Mon Nov 01 04:58:28 GMT 2021
 */

package io.cloudslang.lang.api;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class SlangImpl_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 10000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "io.cloudslang.lang.api.SlangImpl"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/cloud-slang/20bac30d9bd76569aa6a4fa1e8261c1a9b5e6f76/evosuite_2"); 
    java.lang.System.setProperty("user.home", "/home/CIN/lmps2"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "lmps2"); 
    java.lang.System.setProperty("user.timezone", "America/Recife"); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SlangImpl_ESTest_scaffolding.class.getClassLoader() ,
      "org.hamcrest.core.IsNull",
      "org.apache.commons.io.filefilter.IOFileFilter",
      "ch.lambdaj.function.aggregate.PairAggregator",
      "io.cloudslang.lang.compiler.SlangCompiler",
      "org.apache.log4j.or.ObjectRenderer",
      "org.springframework.beans.factory.annotation.Autowired",
      "org.apache.log4j.DefaultCategoryFactory",
      "ch.lambdaj.function.aggregate.Aggregator",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.Logger",
      "org.apache.commons.lang3.tuple.Pair",
      "org.apache.commons.lang3.builder.IDKey",
      "ch.lambdaj.function.aggregate.Sum",
      "org.apache.log4j.Level",
      "org.apache.commons.lang3.builder.HashCodeBuilder",
      "ch.lambdaj.function.aggregate.Chooser",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.Category",
      "io.cloudslang.score.events.ScoreEventListener",
      "io.cloudslang.score.api.TriggeringProperties",
      "io.cloudslang.score.events.ScoreEvent",
      "io.cloudslang.lang.api.SlangImpl",
      "io.cloudslang.lang.systemtests.BranchAggregatorListener",
      "org.apache.commons.io.output.ByteArrayOutputStream",
      "ch.lambdaj.function.convert.Converter",
      "org.apache.log4j.spi.RepositorySelector",
      "io.cloudslang.lang.entities.bindings.Input",
      "ch.lambdaj.function.aggregate.Min",
      "org.apache.commons.io.IOUtils",
      "io.cloudslang.lang.runtime.env.ExecutionPath",
      "org.apache.commons.io.FileExistsException",
      "org.apache.log4j.spi.LoggerFactory",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.spi.Configurator",
      "io.cloudslang.score.api.ExecutionPlan",
      "org.apache.log4j.or.DefaultRenderer",
      "io.cloudslang.lang.compiler.SlangSource",
      "org.hamcrest.SelfDescribing",
      "org.apache.commons.lang.Validate",
      "ch.lambdaj.util.NotUniqueItemException",
      "ch.lambdaj.function.aggregate.Max",
      "org.apache.commons.lang3.ObjectUtils$Null",
      "org.hamcrest.core.IsNot",
      "io.cloudslang.score.events.EventBus",
      "org.apache.log4j.spi.ThrowableRendererSupport",
      "io.cloudslang.lang.entities.CompilationArtifact",
      "ch.lambdaj.function.aggregate.Concat",
      "org.apache.log4j.PropertyConfigurator",
      "io.cloudslang.score.api.ExecutionStep",
      "org.apache.commons.lang3.ArrayUtils",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.ProvisionNode",
      "org.apache.log4j.Hierarchy",
      "io.cloudslang.lang.systemtests.AbstractAggregatorListener",
      "org.hamcrest.BaseMatcher",
      "org.apache.log4j.Appender",
      "org.apache.commons.lang3.ObjectUtils",
      "org.apache.commons.io.output.StringBuilderWriter",
      "io.cloudslang.lang.compiler.modeller.model.Executable",
      "io.cloudslang.lang.systemtests.JoinAggregatorListener",
      "org.apache.commons.lang3.builder.EqualsBuilder",
      "org.apache.commons.io.Charsets",
      "ch.lambdaj.Lambda",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.spi.HierarchyEventListener",
      "org.apache.log4j.spi.RootLogger",
      "io.cloudslang.score.api.Score",
      "io.cloudslang.lang.runtime.env.ContextStack",
      "io.cloudslang.lang.runtime.env.ParentFlowStack",
      "io.cloudslang.lang.systemtests.RunDataAggregatorListener",
      "org.apache.log4j.spi.AppenderAttachable",
      "org.hamcrest.Matchers",
      "org.apache.commons.io.FileUtils",
      "org.apache.log4j.spi.RendererSupport",
      "org.apache.commons.lang3.tuple.ImmutablePair",
      "io.cloudslang.lang.entities.bindings.InOutParam",
      "org.apache.log4j.Priority",
      "org.apache.commons.lang3.Validate",
      "org.hamcrest.Matcher",
      "org.apache.commons.io.output.NullOutputStream",
      "io.cloudslang.lang.api.Slang",
      "org.apache.commons.lang3.builder.Builder",
      "ch.lambdaj.function.aggregate.InitializedPairAggregator",
      "org.apache.log4j.spi.LoggerRepository",
      "org.apache.commons.lang3.exception.CloneFailedException",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.helpers.OptionConverter",
      "io.cloudslang.lang.runtime.env.RunEnvironment",
      "io.cloudslang.score.api.ControlActionMetadata"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("io.cloudslang.lang.compiler.SlangCompiler", false, SlangImpl_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("io.cloudslang.lang.entities.CompilationArtifact", false, SlangImpl_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("io.cloudslang.lang.entities.bindings.Input", false, SlangImpl_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("io.cloudslang.score.api.Score", false, SlangImpl_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("io.cloudslang.score.events.EventBus", false, SlangImpl_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.apache.log4j.spi.LoggerRepository", false, SlangImpl_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SlangImpl_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.log4j.Category",
      "org.apache.log4j.Logger",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.log4j.Priority",
      "org.apache.log4j.Level",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.ProvisionNode",
      "io.cloudslang.lang.api.SlangImpl",
      "io.cloudslang.score.api.ExecutionPlan",
      "io.cloudslang.lang.compiler.SlangSource",
      "org.apache.commons.lang3.Validate",
      "org.apache.commons.io.FileUtils",
      "org.apache.commons.io.Charsets",
      "org.apache.commons.io.output.StringBuilderWriter",
      "org.apache.commons.io.IOUtils",
      "org.apache.commons.lang.Validate",
      "org.hamcrest.Matchers",
      "org.hamcrest.BaseMatcher",
      "org.hamcrest.core.IsNull",
      "org.hamcrest.core.IsNot",
      "ch.lambdaj.function.aggregate.PairAggregator",
      "ch.lambdaj.function.aggregate.InitializedPairAggregator",
      "ch.lambdaj.function.aggregate.Sum",
      "ch.lambdaj.function.aggregate.Chooser",
      "ch.lambdaj.function.aggregate.Min",
      "ch.lambdaj.function.aggregate.Max",
      "ch.lambdaj.function.aggregate.Concat",
      "ch.lambdaj.Lambda",
      "io.cloudslang.lang.systemtests.AbstractAggregatorListener",
      "io.cloudslang.lang.systemtests.BranchAggregatorListener",
      "io.cloudslang.lang.systemtests.JoinAggregatorListener",
      "io.cloudslang.lang.systemtests.RunDataAggregatorListener",
      "ch.lambdaj.function.argument.ArgumentsFactory$1",
      "ch.lambdaj.function.argument.ArgumentsFactory",
      "ch.lambdaj.function.argument.InvocationSequence",
      "ch.lambdaj.proxy.InvocationInterceptor",
      "ch.lambdaj.function.argument.ProxyArgument",
      "ch.lambdaj.proxy.ProxyUtil",
      "net.sf.cglib.core.AbstractClassGenerator",
      "net.sf.cglib.proxy.Enhancer$1",
      "net.sf.cglib.core.AbstractClassGenerator$Source",
      "net.sf.cglib.core.CollectionUtils",
      "net.sf.cglib.core.TypeUtils",
      "net.sf.cglib.core.Signature",
      "net.sf.cglib.asm.Type",
      "net.sf.cglib.core.KeyFactory$1",
      "net.sf.cglib.core.KeyFactory$2",
      "net.sf.cglib.core.KeyFactory",
      "net.sf.cglib.core.KeyFactory$Generator",
      "net.sf.cglib.core.DefaultGeneratorStrategy",
      "net.sf.cglib.core.DefaultNamingPolicy",
      "net.sf.cglib.asm.ClassWriter",
      "net.sf.cglib.core.DebuggingClassWriter",
      "net.sf.cglib.asm.ByteVector",
      "net.sf.cglib.asm.Item",
      "net.sf.cglib.asm.ClassAdapter",
      "net.sf.cglib.core.ClassEmitter",
      "net.sf.cglib.core.ReflectUtils$1",
      "net.sf.cglib.core.ReflectUtils$2",
      "net.sf.cglib.core.ReflectUtils",
      "net.sf.cglib.core.AbstractClassGenerator$1",
      "net.sf.cglib.core.ClassInfo",
      "net.sf.cglib.core.ClassEmitter$1",
      "net.sf.cglib.core.EmitUtils$ArrayDelimiters",
      "net.sf.cglib.core.EmitUtils",
      "net.sf.cglib.asm.MethodWriter",
      "net.sf.cglib.asm.Label",
      "net.sf.cglib.core.Constants",
      "net.sf.cglib.asm.MethodAdapter",
      "net.sf.cglib.core.LocalVariablesSorter",
      "net.sf.cglib.core.CodeEmitter",
      "net.sf.cglib.core.LocalVariablesSorter$State",
      "net.sf.cglib.core.MethodInfo",
      "net.sf.cglib.core.CodeEmitter$State",
      "net.sf.cglib.asm.Frame",
      "net.sf.cglib.core.ClassEmitter$FieldInfo",
      "net.sf.cglib.asm.FieldWriter",
      "net.sf.cglib.asm.Edge",
      "net.sf.cglib.core.EmitUtils$7",
      "net.sf.cglib.core.Local",
      "net.sf.cglib.core.EmitUtils$8",
      "net.sf.cglib.core.EmitUtils$9",
      "net.sf.cglib.core.DebuggingClassWriter$1",
      "net.sf.cglib.asm.ClassReader",
      "net.sf.cglib.core.ClassNameReader$EarlyExitException",
      "net.sf.cglib.core.ClassNameReader",
      "net.sf.cglib.core.ClassNameReader$1",
      "net.sf.cglib.proxy.Enhancer",
      "net.sf.cglib.proxy.NoOp$1",
      "net.sf.cglib.proxy.NoOp",
      "net.sf.cglib.proxy.NoOpGenerator",
      "net.sf.cglib.proxy.MethodInterceptorGenerator$1",
      "net.sf.cglib.proxy.MethodInterceptorGenerator",
      "net.sf.cglib.proxy.InvocationHandlerGenerator",
      "net.sf.cglib.proxy.LazyLoaderGenerator",
      "net.sf.cglib.proxy.DispatcherGenerator",
      "net.sf.cglib.proxy.FixedValueGenerator",
      "net.sf.cglib.proxy.CallbackInfo",
      "io.cloudslang.score.events.ScoreEvent",
      "io.cloudslang.score.api.TriggeringProperties",
      "org.apache.commons.lang3.builder.HashCodeBuilder",
      "io.cloudslang.score.api.ExecutionStep",
      "io.cloudslang.lang.entities.CompilationArtifact",
      "io.cloudslang.lang.runtime.env.RunEnvironment",
      "io.cloudslang.lang.runtime.env.ContextStack",
      "io.cloudslang.lang.runtime.env.ParentFlowStack",
      "io.cloudslang.lang.runtime.env.ExecutionPath",
      "io.cloudslang.lang.entities.bindings.InOutParam",
      "io.cloudslang.lang.entities.bindings.Input",
      "org.apache.commons.io.FilenameUtils",
      "org.apache.commons.io.IOCase",
      "org.apache.commons.lang3.builder.EqualsBuilder",
      "org.apache.commons.lang.builder.EqualsBuilder",
      "org.apache.commons.lang3.builder.IDKey",
      "org.apache.commons.lang3.ArrayUtils",
      "io.cloudslang.score.api.ControlActionMetadata",
      "org.apache.commons.lang.builder.HashCodeBuilder",
      "org.apache.commons.lang3.tuple.Pair",
      "org.apache.commons.lang3.tuple.ImmutablePair",
      "org.apache.commons.lang3.ObjectUtils$Null",
      "org.apache.commons.lang3.ObjectUtils",
      "org.apache.commons.io.filefilter.AbstractFileFilter",
      "org.apache.commons.io.filefilter.WildcardFileFilter",
      "org.apache.commons.io.filefilter.NameFileFilter"
    );
  }
}
