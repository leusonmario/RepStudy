import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.apache.catalina.Context context2 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context2);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory4.getMimeMappings();
        tomcatEmbeddedServletContainerFactory4.setProtocol("UTF-8");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory4.protocol;
        tomcatEmbeddedServletContainerFactory4.setTldSkip("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = tomcatEmbeddedServletContainerFactory4.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList14 = tomcatEmbeddedServletContainerFactory4.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList14);
        java.lang.Class<?> wildcardClass16 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str1, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList14);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str5 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.LifecycleEvent lifecycleEvent6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray16 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray16);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList19 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList20 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(lifecycleListenerArray16);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList19);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList20);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList16 = tomcatEmbeddedServletContainerFactory11.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings20);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings20);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList24 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory27.tomcatConnectorCustomizers = tomcatConnectorCustomizerList30;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection32 = tomcatEmbeddedServletContainerFactory27.getContextLifecycleListeners();
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory27.uriEncoding;
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory37.tomcatConnectorCustomizers = tomcatConnectorCustomizerList40;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection42 = tomcatEmbeddedServletContainerFactory37.getContextLifecycleListeners();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory37.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList44;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray46 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory36.addContextCustomizers(tomcatContextCustomizerArray46);
        tomcatEmbeddedServletContainerFactory27.addContextCustomizers(tomcatContextCustomizerArray46);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray46);
        org.springframework.core.io.ResourceLoader resourceLoader50 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.io.File file52 = tomcatEmbeddedServletContainerFactory0.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.apache.catalina.connector.Connector connector53 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList16);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList24);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray46);
        org.junit.Assert.assertNull(resourceLoader50);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file52.toString(), "/tmp/web-app>\n.8628691371414602521.0");
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection8 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.coyote.http11.Http11NioProtocol";
        tomcatEmbeddedServletContainerFactory0.setTldSkip("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.apache.catalina.Context context15 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection8);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory3.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory2.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection5);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList14;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory7.protocol;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory7.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList25 = tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors = connectorList25;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory18.protocol;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory18.protocol;
        java.net.InetAddress inetAddress29 = null;
        tomcatEmbeddedServletContainerFactory18.setAddress(inetAddress29);
        int int31 = tomcatEmbeddedServletContainerFactory18.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList35 = tomcatEmbeddedServletContainerFactory34.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory32.tomcatConnectorCustomizers = tomcatConnectorCustomizerList35;
        tomcatEmbeddedServletContainerFactory18.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList35);
        tomcatEmbeddedServletContainerFactory7.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList35);
        tomcatEmbeddedServletContainerFactory2.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList35);
        int int40 = tomcatEmbeddedServletContainerFactory2.getPort();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory2.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection46 = tomcatEmbeddedServletContainerFactory42.getValves();
        java.net.InetAddress inetAddress47 = tomcatEmbeddedServletContainerFactory42.getAddress();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection48 = tomcatEmbeddedServletContainerFactory42.getContextLifecycleListeners();
        boolean boolean49 = tomcatEmbeddedServletContainerFactory42.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory50.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory50.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection55 = tomcatEmbeddedServletContainerFactory50.getTomcatConnectorCustomizers();
        boolean boolean56 = tomcatEmbeddedServletContainerFactory50.isRegisterDefaultServlet();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet57 = tomcatEmbeddedServletContainerFactory50.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory58.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory58.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = tomcatEmbeddedServletContainerFactory63.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList65 = tomcatEmbeddedServletContainerFactory63.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory58.additionalTomcatConnectors = connectorList65;
        java.lang.String str67 = tomcatEmbeddedServletContainerFactory58.protocol;
        java.lang.String str68 = tomcatEmbeddedServletContainerFactory58.protocol;
        java.net.InetAddress inetAddress69 = null;
        tomcatEmbeddedServletContainerFactory58.setAddress(inetAddress69);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection71 = tomcatEmbeddedServletContainerFactory58.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory72.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory72.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings78 = tomcatEmbeddedServletContainerFactory77.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList79 = tomcatEmbeddedServletContainerFactory77.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList80 = tomcatEmbeddedServletContainerFactory77.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory72.additionalTomcatConnectors = connectorList80;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str83 = tomcatEmbeddedServletContainerFactory82.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray84 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory82.addInitializers(servletContextInitializerArray84);
        tomcatEmbeddedServletContainerFactory82.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray88 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory82.addContextLifecycleListeners(lifecycleListenerArray88);
        tomcatEmbeddedServletContainerFactory72.addContextLifecycleListeners(lifecycleListenerArray88);
        tomcatEmbeddedServletContainerFactory58.addContextLifecycleListeners(lifecycleListenerArray88);
        tomcatEmbeddedServletContainerFactory50.addContextLifecycleListeners(lifecycleListenerArray88);
        tomcatEmbeddedServletContainerFactory42.addContextLifecycleListeners(lifecycleListenerArray88);
        tomcatEmbeddedServletContainerFactory2.addContextLifecycleListeners(lifecycleListenerArray88);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.setContextPath("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(connectorList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNotNull(valveCollection46);
        org.junit.Assert.assertNull(inetAddress47);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(errorPageSet57);
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNotNull(connectorList65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection71);
        org.junit.Assert.assertNotNull(mimeMappings78);
        org.junit.Assert.assertNotNull(connectorList79);
        org.junit.Assert.assertNotNull(connectorList80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "UTF-8" + "'", str83, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray84);
        org.junit.Assert.assertNotNull(lifecycleListenerArray88);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        tomcatEmbeddedServletContainerFactory2.setPort(10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory2.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory2.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList14 = tomcatEmbeddedServletContainerFactory13.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory11.tomcatConnectorCustomizers = tomcatConnectorCustomizerList14;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection16 = tomcatEmbeddedServletContainerFactory11.getContextLifecycleListeners();
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory11.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList18;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory10.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory26.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer28 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray29 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer28 };
        tomcatEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray29);
        tomcatEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray29);
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray29);
        tomcatEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray29);
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory2.getContextPath();
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList14);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-8" + "'", str17, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str20, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.apache.catalina.Context context9 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context9);
        java.util.concurrent.TimeUnit timeUnit12 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 0, timeUnit12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory10.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList29 = tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors = connectorList29;
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory22.protocol;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory22.protocol;
        java.net.InetAddress inetAddress33 = null;
        tomcatEmbeddedServletContainerFactory22.setAddress(inetAddress33);
        tomcatEmbeddedServletContainerFactory22.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray37 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList38 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList38, valveArray37);
        tomcatEmbeddedServletContainerFactory22.contextValves = valveList38;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList38;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.apache.catalina.startup.Tomcat tomcat43 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer44 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(connectorList29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(valveArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-8" + "'", str42, "UTF-8");
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList2 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray3 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList4, tomcatConnectorCustomizerArray3);
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList4;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory9.protocol;
        tomcatEmbeddedServletContainerFactory9.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection22 = tomcatEmbeddedServletContainerFactory9.getTomcatContextCustomizers();
        int int23 = tomcatEmbeddedServletContainerFactory9.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList31 = tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors = connectorList31;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.net.InetAddress inetAddress35 = null;
        tomcatEmbeddedServletContainerFactory24.setAddress(inetAddress35);
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory38.setTldSkip("UTF-8");
        java.io.File file44 = tomcatEmbeddedServletContainerFactory38.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory24.setDocumentRoot(file44);
        tomcatEmbeddedServletContainerFactory9.setDocumentRoot(file44);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file44;
        tomcatEmbeddedServletContainerFactory0.protocol = "UTF-8";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory50.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory50.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = tomcatEmbeddedServletContainerFactory55.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList57 = tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory50.additionalTomcatConnectors = connectorList57;
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory50.protocol;
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory50.protocol;
        java.net.InetAddress inetAddress61 = null;
        tomcatEmbeddedServletContainerFactory50.setAddress(inetAddress61);
        int int63 = tomcatEmbeddedServletContainerFactory50.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader64 = tomcatEmbeddedServletContainerFactory50.resourceLoader;
        java.lang.String str65 = tomcatEmbeddedServletContainerFactory50.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray66 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet67 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet67, errorPageArray66);
        tomcatEmbeddedServletContainerFactory50.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet67);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet67);
        java.util.List<org.apache.catalina.connector.Connector> connectorList71 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory74.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory74.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory79 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings80 = tomcatEmbeddedServletContainerFactory79.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList81 = tomcatEmbeddedServletContainerFactory79.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory74.additionalTomcatConnectors = connectorList81;
        org.apache.catalina.Context context83 = null;
        tomcatEmbeddedServletContainerFactory74.postProcessContext(context83);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory87 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str88 = tomcatEmbeddedServletContainerFactory87.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray89 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory87.addConnectorCustomizers(tomcatConnectorCustomizerArray89);
        tomcatEmbeddedServletContainerFactory74.addConnectorCustomizers(tomcatConnectorCustomizerArray89);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray89);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveList2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNotNull(connectorList31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file44.toString(), "/tmp/UTF-8.2795853989112194815.0");
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNotNull(connectorList57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(resourceLoader64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str65, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(errorPageArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(connectorList71);
        org.junit.Assert.assertNotNull(mimeMappings80);
        org.junit.Assert.assertNotNull(connectorList81);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray89);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str4 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.Context context5 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = tomcatEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory4.tomcatConnectorCustomizers = tomcatConnectorCustomizerList7;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection9 = tomcatEmbeddedServletContainerFactory4.getContextLifecycleListeners();
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory4.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList19;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory21.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory21.addInitializers(servletContextInitializerArray23);
        tomcatEmbeddedServletContainerFactory21.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray27 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory21.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory11.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory4.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray27);
        int int32 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.Context context33 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(lifecycleListenerArray27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        boolean boolean14 = tomcatEmbeddedServletContainerFactory8.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader17 = tomcatEmbeddedServletContainerFactory15.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection23 = tomcatEmbeddedServletContainerFactory18.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList24 = tomcatEmbeddedServletContainerFactory18.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory15.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        java.util.concurrent.TimeUnit timeUnit31 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(97, timeUnit31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection23);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList24);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.apache.catalina.Context context10 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context10);
        java.io.File file13 = tomcatEmbeddedServletContainerFactory0.createTempDir("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory14.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory20.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection25 = tomcatEmbeddedServletContainerFactory20.getTomcatConnectorCustomizers();
        boolean boolean26 = tomcatEmbeddedServletContainerFactory20.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress27 = null;
        tomcatEmbeddedServletContainerFactory20.setAddress(inetAddress27);
        java.util.List<org.apache.catalina.Valve> valveList29 = tomcatEmbeddedServletContainerFactory20.contextValves;
        tomcatEmbeddedServletContainerFactory14.contextValves = valveList29;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection35 = tomcatEmbeddedServletContainerFactory31.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader36 = tomcatEmbeddedServletContainerFactory31.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory37.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList42 = tomcatEmbeddedServletContainerFactory37.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList43 = tomcatEmbeddedServletContainerFactory37.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory31.tomcatConnectorCustomizers = tomcatConnectorCustomizerList43;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = tomcatEmbeddedServletContainerFactory45.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList48 = tomcatEmbeddedServletContainerFactory47.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory45.tomcatConnectorCustomizers = tomcatConnectorCustomizerList48;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet50 = tomcatEmbeddedServletContainerFactory45.getErrorPages();
        java.net.InetAddress inetAddress51 = tomcatEmbeddedServletContainerFactory45.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader52 = tomcatEmbeddedServletContainerFactory45.resourceLoader;
        java.io.File file54 = tomcatEmbeddedServletContainerFactory45.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.apache.catalina.Valve[] valveArray55 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory45.addContextValves(valveArray55);
        tomcatEmbeddedServletContainerFactory31.addContextValves(valveArray55);
        tomcatEmbeddedServletContainerFactory14.addContextValves(valveArray55);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray55);
        java.util.concurrent.TimeUnit timeUnit61 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0, timeUnit61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file13.toString(), "/tmp/UTF-8.7549139740919460894.0");
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(valveList29);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(valveCollection35);
        org.junit.Assert.assertNull(resourceLoader36);
        org.junit.Assert.assertNotNull(lifecycleListenerList42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList43);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList48);
        org.junit.Assert.assertNotNull(errorPageSet50);
        org.junit.Assert.assertNull(inetAddress51);
        org.junit.Assert.assertNull(resourceLoader52);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file54.toString(), "/tmp/web-app>\n.6660406592648048588.8080");
        org.junit.Assert.assertNotNull(valveArray55);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader14);
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader16);
        java.util.Collection<org.apache.catalina.Valve> valveCollection18 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.apache.catalina.Context context20 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(valveCollection18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList10 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList18;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory11.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings24);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory11.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = tomcatEmbeddedServletContainerFactory32.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors = connectorList34;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory27.protocol;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory27.protocol;
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection40 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        int int41 = tomcatEmbeddedServletContainerFactory27.getPort();
        java.io.File file43 = tomcatEmbeddedServletContainerFactory27.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory11.baseDirectory = file43;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file43);
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "org.apache.coyote.http11.Http11NioProtocol";
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection48 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.util.concurrent.TimeUnit timeUnit50 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 100, timeUnit50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(lifecycleListenerList10);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(connectorList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file43.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.9045986101278224310.0");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection48);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader8 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = resourceLoader8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNull(resourceLoader8);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str2 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str5 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.Context context6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str2, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList2 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray3 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList4, tomcatConnectorCustomizerArray3);
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList4;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory9.protocol;
        tomcatEmbeddedServletContainerFactory9.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection22 = tomcatEmbeddedServletContainerFactory9.getTomcatContextCustomizers();
        int int23 = tomcatEmbeddedServletContainerFactory9.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList31 = tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors = connectorList31;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.net.InetAddress inetAddress35 = null;
        tomcatEmbeddedServletContainerFactory24.setAddress(inetAddress35);
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory38.setTldSkip("UTF-8");
        java.io.File file44 = tomcatEmbeddedServletContainerFactory38.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory24.setDocumentRoot(file44);
        tomcatEmbeddedServletContainerFactory9.setDocumentRoot(file44);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file44;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.io.File file49 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveList2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNotNull(connectorList31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file44.toString(), "/tmp/UTF-8.168680033321817752.0");
        org.junit.Assert.assertNotNull(errorPageSet48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(mimeMappings50);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector8 = null;
        org.apache.catalina.connector.Connector[] connectorArray9 = new org.apache.catalina.connector.Connector[] { connector8 };
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray9);
        org.apache.catalina.startup.Tomcat tomcat11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer12 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertNotNull(connectorArray9);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory4.protocol;
        tomcatEmbeddedServletContainerFactory4.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection17 = tomcatEmbeddedServletContainerFactory12.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList18 = tomcatEmbeddedServletContainerFactory12.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers = tomcatContextCustomizerList18;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList20 = tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList20;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader24 = tomcatEmbeddedServletContainerFactory22.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory25.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection30 = tomcatEmbeddedServletContainerFactory25.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList31 = tomcatEmbeddedServletContainerFactory25.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers = tomcatContextCustomizerList31;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList33 = tomcatEmbeddedServletContainerFactory22.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory34.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors = connectorList41;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory34.protocol;
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory34.protocol;
        tomcatEmbeddedServletContainerFactory34.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection47 = tomcatEmbeddedServletContainerFactory34.getTomcatContextCustomizers();
        int int48 = tomcatEmbeddedServletContainerFactory34.getPort();
        java.io.File file50 = tomcatEmbeddedServletContainerFactory34.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory22.baseDirectory = file50;
        tomcatEmbeddedServletContainerFactory2.setDocumentRoot(file50);
        org.apache.catalina.Context context53 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = tomcatEmbeddedServletContainerFactory55.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList58 = tomcatEmbeddedServletContainerFactory57.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory55.tomcatConnectorCustomizers = tomcatConnectorCustomizerList58;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection60 = tomcatEmbeddedServletContainerFactory55.getContextLifecycleListeners();
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory55.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList62 = tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory54.additionalTomcatConnectors = connectorList62;
        java.lang.String str64 = tomcatEmbeddedServletContainerFactory54.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str71 = tomcatEmbeddedServletContainerFactory70.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer72 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray73 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer72 };
        tomcatEmbeddedServletContainerFactory70.addInitializers(servletContextInitializerArray73);
        tomcatEmbeddedServletContainerFactory67.addInitializers(servletContextInitializerArray73);
        tomcatEmbeddedServletContainerFactory54.addInitializers(servletContextInitializerArray73);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.configureContext(context53, servletContextInitializerArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection17);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList20);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection30);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList31);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList33);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file50.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.3162500128086651252.0");
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList58);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "UTF-8" + "'", str61, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str64, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(servletContextInitializerArray73);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList6 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        int int9 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection11 = tomcatEmbeddedServletContainerFactory7.getValves();
        java.net.InetAddress inetAddress12 = tomcatEmbeddedServletContainerFactory7.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean14 = tomcatEmbeddedServletContainerFactory13.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList15 = tomcatEmbeddedServletContainerFactory13.contextValves;
        tomcatEmbeddedServletContainerFactory7.contextValves = valveList15;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList15;
        java.net.InetAddress inetAddress18 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress18);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(valveCollection11);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(valveList15);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str2 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str5 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.LifecycleEvent lifecycleEvent6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str2, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory4.protocol;
        tomcatEmbeddedServletContainerFactory4.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection17 = tomcatEmbeddedServletContainerFactory12.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList18 = tomcatEmbeddedServletContainerFactory12.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers = tomcatContextCustomizerList18;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList20 = tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList20;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory22.protocol;
        tomcatEmbeddedServletContainerFactory22.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory30.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection35 = tomcatEmbeddedServletContainerFactory30.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList36 = tomcatEmbeddedServletContainerFactory30.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers = tomcatContextCustomizerList36;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList38 = tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList38;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList40 = tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory41.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory41.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = tomcatEmbeddedServletContainerFactory46.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList48 = tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList49 = tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors = connectorList49;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory51.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory51.addInitializers(servletContextInitializerArray53);
        tomcatEmbeddedServletContainerFactory51.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray57 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory51.addContextLifecycleListeners(lifecycleListenerArray57);
        tomcatEmbeddedServletContainerFactory41.addContextLifecycleListeners(lifecycleListenerArray57);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList60 = tomcatEmbeddedServletContainerFactory41.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory41.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = tomcatEmbeddedServletContainerFactory63.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader65 = tomcatEmbeddedServletContainerFactory63.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory66.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory66.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection71 = tomcatEmbeddedServletContainerFactory66.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList72 = tomcatEmbeddedServletContainerFactory66.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory63.tomcatContextCustomizers = tomcatContextCustomizerList72;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList74 = tomcatEmbeddedServletContainerFactory63.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory75.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory75.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings81 = tomcatEmbeddedServletContainerFactory80.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList82 = tomcatEmbeddedServletContainerFactory80.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory75.additionalTomcatConnectors = connectorList82;
        java.lang.String str84 = tomcatEmbeddedServletContainerFactory75.protocol;
        java.lang.String str85 = tomcatEmbeddedServletContainerFactory75.protocol;
        java.net.InetAddress inetAddress86 = null;
        tomcatEmbeddedServletContainerFactory75.setAddress(inetAddress86);
        int int88 = tomcatEmbeddedServletContainerFactory75.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory89 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings90 = tomcatEmbeddedServletContainerFactory89.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory91 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList92 = tomcatEmbeddedServletContainerFactory91.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory89.tomcatConnectorCustomizers = tomcatConnectorCustomizerList92;
        tomcatEmbeddedServletContainerFactory75.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList92);
        tomcatEmbeddedServletContainerFactory63.tomcatConnectorCustomizers = tomcatConnectorCustomizerList92;
        tomcatEmbeddedServletContainerFactory41.tomcatConnectorCustomizers = tomcatConnectorCustomizerList92;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList97 = tomcatEmbeddedServletContainerFactory41.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners = lifecycleListenerList97;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList99 = tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection17);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection35);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList36);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList38);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList40);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNotNull(connectorList48);
        org.junit.Assert.assertNotNull(connectorList49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "UTF-8" + "'", str52, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(lifecycleListenerArray57);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList60);
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNull(resourceLoader65);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection71);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList72);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList74);
        org.junit.Assert.assertNotNull(mimeMappings81);
        org.junit.Assert.assertNotNull(connectorList82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(mimeMappings90);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList92);
        org.junit.Assert.assertNotNull(lifecycleListenerList97);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList99);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection2 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory4.additionalTomcatConnectors = connectorList11;
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory4.protocol;
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory4.protocol;
        tomcatEmbeddedServletContainerFactory4.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection17 = tomcatEmbeddedServletContainerFactory4.getTomcatContextCustomizers();
        java.io.File file18 = tomcatEmbeddedServletContainerFactory4.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList20 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory4.tomcatConnectorCustomizers = tomcatConnectorCustomizerList20;
        boolean boolean22 = tomcatEmbeddedServletContainerFactory4.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory4.uriEncoding = "UTF-8";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList25 = tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory4.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory27.tomcatConnectorCustomizers = tomcatConnectorCustomizerList30;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = tomcatEmbeddedServletContainerFactory27.getErrorPages();
        java.net.InetAddress inetAddress33 = tomcatEmbeddedServletContainerFactory27.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory34.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList39 = tomcatEmbeddedServletContainerFactory34.contextLifecycleListeners;
        org.springframework.core.io.ResourceLoader resourceLoader40 = null;
        tomcatEmbeddedServletContainerFactory34.resourceLoader = resourceLoader40;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean43 = tomcatEmbeddedServletContainerFactory42.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList44 = tomcatEmbeddedServletContainerFactory42.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray45 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList46 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList46, tomcatConnectorCustomizerArray45);
        tomcatEmbeddedServletContainerFactory42.tomcatConnectorCustomizers = tomcatConnectorCustomizerList46;
        tomcatEmbeddedServletContainerFactory42.setSessionTimeout(1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory51.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory51.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = tomcatEmbeddedServletContainerFactory56.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList58 = tomcatEmbeddedServletContainerFactory56.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory51.additionalTomcatConnectors = connectorList58;
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory51.protocol;
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory51.protocol;
        tomcatEmbeddedServletContainerFactory51.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection64 = tomcatEmbeddedServletContainerFactory51.getTomcatContextCustomizers();
        int int65 = tomcatEmbeddedServletContainerFactory51.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory66.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory66.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings72 = tomcatEmbeddedServletContainerFactory71.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList73 = tomcatEmbeddedServletContainerFactory71.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory66.additionalTomcatConnectors = connectorList73;
        java.lang.String str75 = tomcatEmbeddedServletContainerFactory66.protocol;
        java.lang.String str76 = tomcatEmbeddedServletContainerFactory66.protocol;
        java.net.InetAddress inetAddress77 = null;
        tomcatEmbeddedServletContainerFactory66.setAddress(inetAddress77);
        java.util.List<org.apache.catalina.connector.Connector> connectorList79 = tomcatEmbeddedServletContainerFactory66.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory80.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory80.setTldSkip("UTF-8");
        java.io.File file86 = tomcatEmbeddedServletContainerFactory80.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory66.setDocumentRoot(file86);
        tomcatEmbeddedServletContainerFactory51.setDocumentRoot(file86);
        tomcatEmbeddedServletContainerFactory42.baseDirectory = file86;
        tomcatEmbeddedServletContainerFactory34.setDocumentRoot(file86);
        tomcatEmbeddedServletContainerFactory27.setBaseDirectory(file86);
        tomcatEmbeddedServletContainerFactory4.setDocumentRoot(file86);
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file86);
        boolean boolean94 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveCollection2);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-8" + "'", str26, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertNull(inetAddress33);
        org.junit.Assert.assertNotNull(lifecycleListenerList39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(valveList44);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertNotNull(connectorList58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(mimeMappings72);
        org.junit.Assert.assertNotNull(connectorList73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(connectorList79);
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file86.toString(), "/tmp/UTF-8.8723739459327857898.0");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        boolean boolean9 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean10 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader4;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet6 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.Class<?> wildcardClass7 = errorPageSet6.getClass();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(errorPageSet6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.io.File file13 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file13);
        java.net.InetAddress inetAddress15 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader18 = tomcatEmbeddedServletContainerFactory16.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection24 = tomcatEmbeddedServletContainerFactory19.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList25 = tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory16.tomcatContextCustomizers = tomcatContextCustomizerList25;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList25;
        org.apache.catalina.Context context28 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context28);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(inetAddress15);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNull(resourceLoader18);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection24);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList25);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory1.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers;
        java.io.File file5 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        java.io.File file6 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        tomcatEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList18;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray22);
        tomcatEmbeddedServletContainerFactory20.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray26 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory20.addContextLifecycleListeners(lifecycleListenerArray26);
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray26);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList29 = tomcatEmbeddedServletContainerFactory10.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory10.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader34 = tomcatEmbeddedServletContainerFactory32.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory35.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection40 = tomcatEmbeddedServletContainerFactory35.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList41 = tomcatEmbeddedServletContainerFactory35.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory32.tomcatContextCustomizers = tomcatContextCustomizerList41;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList43 = tomcatEmbeddedServletContainerFactory32.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory44.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList51 = tomcatEmbeddedServletContainerFactory49.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory44.additionalTomcatConnectors = connectorList51;
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory44.protocol;
        java.lang.String str54 = tomcatEmbeddedServletContainerFactory44.protocol;
        java.net.InetAddress inetAddress55 = null;
        tomcatEmbeddedServletContainerFactory44.setAddress(inetAddress55);
        int int57 = tomcatEmbeddedServletContainerFactory44.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings59 = tomcatEmbeddedServletContainerFactory58.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList61 = tomcatEmbeddedServletContainerFactory60.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory58.tomcatConnectorCustomizers = tomcatConnectorCustomizerList61;
        tomcatEmbeddedServletContainerFactory44.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList61);
        tomcatEmbeddedServletContainerFactory32.tomcatConnectorCustomizers = tomcatConnectorCustomizerList61;
        tomcatEmbeddedServletContainerFactory10.tomcatConnectorCustomizers = tomcatConnectorCustomizerList61;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList61);
        tomcatEmbeddedServletContainerFactory0.setProtocol("org.apache.tomcat.util.scan.MergedWebXml");
        java.lang.String str69 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(lifecycleListenerArray26);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList29);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNull(resourceLoader34);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection40);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList41);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList43);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNotNull(connectorList51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(mimeMappings59);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "UTF-8" + "'", str69, "UTF-8");
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList14;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory18.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList23 = tomcatEmbeddedServletContainerFactory18.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList23;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setPort((int) (short) 0);
        boolean boolean28 = tomcatEmbeddedServletContainerFactory25.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList36 = tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors = connectorList36;
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory29.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory39.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        tomcatEmbeddedServletContainerFactory29.setMimeMappings(mimeMappings42);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList45 = tomcatEmbeddedServletContainerFactory44.tomcatConnectorCustomizers;
        int int46 = tomcatEmbeddedServletContainerFactory44.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray47 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory44.addContextLifecycleListeners(lifecycleListenerArray47);
        tomcatEmbeddedServletContainerFactory29.addContextLifecycleListeners(lifecycleListenerArray47);
        tomcatEmbeddedServletContainerFactory25.addContextLifecycleListeners(lifecycleListenerArray47);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory51.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory51.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection56 = tomcatEmbeddedServletContainerFactory51.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory51.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector59 = null;
        org.apache.catalina.connector.Connector[] connectorArray60 = new org.apache.catalina.connector.Connector[] { connector59 };
        tomcatEmbeddedServletContainerFactory51.addAdditionalTomcatConnectors(connectorArray60);
        tomcatEmbeddedServletContainerFactory25.addAdditionalTomcatConnectors(connectorArray60);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file67 = tomcatEmbeddedServletContainerFactory65.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory25.baseDirectory = file67;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file67);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str17, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNotNull(connectorList36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray47);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection56);
        org.junit.Assert.assertNotNull(connectorArray60);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file67.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.8022846191301468912.100");
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        int int6 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList10 = tomcatEmbeddedServletContainerFactory9.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory7.tomcatConnectorCustomizers = tomcatConnectorCustomizerList10;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection12 = tomcatEmbeddedServletContainerFactory7.getContextLifecycleListeners();
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory7.uriEncoding;
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory7.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory15.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray17);
        tomcatEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray17);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray17);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList10);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-8" + "'", str14, "UTF-8");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray17);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader14 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        int int16 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection17 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.net.InetAddress inetAddress18 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.apache.catalina.startup.Tomcat tomcat19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer20 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str15, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection17);
        org.junit.Assert.assertNull(inetAddress18);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers = tomcatConnectorCustomizerList17;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList17);
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        org.apache.catalina.Context context26 = null;
        tomcatEmbeddedServletContainerFactory22.postProcessContext(context26);
        java.util.Collection<org.apache.catalina.Valve> valveCollection28 = tomcatEmbeddedServletContainerFactory22.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList36 = tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors = connectorList36;
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory29.protocol;
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory29.protocol;
        java.net.InetAddress inetAddress40 = null;
        tomcatEmbeddedServletContainerFactory29.setAddress(inetAddress40);
        int int42 = tomcatEmbeddedServletContainerFactory29.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader43 = tomcatEmbeddedServletContainerFactory29.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory44.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection49 = tomcatEmbeddedServletContainerFactory44.getTomcatConnectorCustomizers();
        boolean boolean50 = tomcatEmbeddedServletContainerFactory44.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress51 = null;
        tomcatEmbeddedServletContainerFactory44.setAddress(inetAddress51);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray53 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory44.addContextCustomizers(tomcatContextCustomizerArray53);
        tomcatEmbeddedServletContainerFactory29.addContextCustomizers(tomcatContextCustomizerArray53);
        tomcatEmbeddedServletContainerFactory22.addContextCustomizers(tomcatContextCustomizerArray53);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray53);
        int int58 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet59 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.Class<?> wildcardClass60 = errorPageSet59.getClass();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(valveCollection28);
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNotNull(connectorList36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(resourceLoader43);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(errorPageSet59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader20 = tomcatEmbeddedServletContainerFactory18.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory21.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection26 = tomcatEmbeddedServletContainerFactory21.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList27 = tomcatEmbeddedServletContainerFactory21.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory18.tomcatContextCustomizers = tomcatContextCustomizerList27;
        java.util.List<org.apache.catalina.Valve> valveList29 = tomcatEmbeddedServletContainerFactory18.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList29;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection26);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList27);
        org.junit.Assert.assertNotNull(valveList29);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer13 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray14 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer13 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray14);
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.tldSkip = "";
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.LifecycleEvent lifecycleEvent4 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray2 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray2);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection4 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.apache.catalina.Context context5 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray2);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection4);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str2 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str3 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.Context context4 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory4.additionalTomcatConnectors = connectorList11;
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory4.protocol;
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory4.protocol;
        java.net.InetAddress inetAddress15 = null;
        tomcatEmbeddedServletContainerFactory4.setAddress(inetAddress15);
        java.io.File file17 = null;
        tomcatEmbeddedServletContainerFactory4.setBaseDirectory(file17);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray19 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory4.addContextCustomizers(tomcatContextCustomizerArray19);
        java.util.List<org.apache.catalina.Valve> valveList21 = tomcatEmbeddedServletContainerFactory4.contextValves;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory4.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList30 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors = connectorList30;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory23.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader35 = tomcatEmbeddedServletContainerFactory33.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection41 = tomcatEmbeddedServletContainerFactory36.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList42 = tomcatEmbeddedServletContainerFactory36.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory33.tomcatContextCustomizers = tomcatContextCustomizerList42;
        tomcatEmbeddedServletContainerFactory23.tomcatContextCustomizers = tomcatContextCustomizerList42;
        tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers = tomcatContextCustomizerList42;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList42;
        org.springframework.core.io.ResourceLoader resourceLoader47 = tomcatEmbeddedServletContainerFactory2.resourceLoader;
        org.apache.catalina.startup.Tomcat tomcat48 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer49 = tomcatEmbeddedServletContainerFactory2.getTomcatEmbeddedServletContainer(tomcat48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray19);
        org.junit.Assert.assertNotNull(valveList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str22, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(connectorList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNull(resourceLoader35);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection41);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList42);
        org.junit.Assert.assertNull(resourceLoader47);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory3.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory2.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection5);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList14;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory7.protocol;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory7.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList25 = tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors = connectorList25;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory18.protocol;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory18.protocol;
        java.net.InetAddress inetAddress29 = null;
        tomcatEmbeddedServletContainerFactory18.setAddress(inetAddress29);
        int int31 = tomcatEmbeddedServletContainerFactory18.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList35 = tomcatEmbeddedServletContainerFactory34.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory32.tomcatConnectorCustomizers = tomcatConnectorCustomizerList35;
        tomcatEmbeddedServletContainerFactory18.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList35);
        tomcatEmbeddedServletContainerFactory7.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList35);
        tomcatEmbeddedServletContainerFactory2.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList35);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory40.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = tomcatEmbeddedServletContainerFactory45.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList47 = tomcatEmbeddedServletContainerFactory45.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory40.additionalTomcatConnectors = connectorList47;
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory40.protocol;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList50 = tomcatEmbeddedServletContainerFactory40.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray51 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList52 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList52, tomcatContextCustomizerArray51);
        tomcatEmbeddedServletContainerFactory40.tomcatContextCustomizers = tomcatContextCustomizerList52;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList52;
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(connectorList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList35);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(connectorList47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList50);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        boolean boolean15 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        java.io.File file18 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file18);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection20 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection20);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader8 = tomcatEmbeddedServletContainerFactory6.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection14 = tomcatEmbeddedServletContainerFactory9.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList15 = tomcatEmbeddedServletContainerFactory9.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory6.tomcatContextCustomizers = tomcatContextCustomizerList15;
        tomcatEmbeddedServletContainerFactory6.uriEncoding = "UTF-8";
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory6.protocol;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList20 = tomcatEmbeddedServletContainerFactory6.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList20;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNull(resourceLoader8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection14);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str19, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        tomcatEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.io.File file20 = tomcatEmbeddedServletContainerFactory9.baseDirectory;
        java.io.File file22 = tomcatEmbeddedServletContainerFactory9.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        tomcatEmbeddedServletContainerFactory2.setDocumentRoot(file22);
        int int24 = tomcatEmbeddedServletContainerFactory2.getPort();
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file22.toString(), "/tmp/web-app>\n.3248098856885421616.0");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.Context context4 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.Context context4 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        org.apache.catalina.Context context10 = null;
        tomcatEmbeddedServletContainerFactory6.postProcessContext(context10);
        java.util.Collection<org.apache.catalina.Valve> valveCollection12 = tomcatEmbeddedServletContainerFactory6.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory13.tomcatConnectorCustomizers = tomcatConnectorCustomizerList16;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection18 = tomcatEmbeddedServletContainerFactory13.getContextLifecycleListeners();
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory13.uriEncoding;
        tomcatEmbeddedServletContainerFactory13.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory22.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection30 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector31 = null;
        org.apache.catalina.connector.Connector[] connectorArray32 = new org.apache.catalina.connector.Connector[] { connector31 };
        tomcatEmbeddedServletContainerFactory22.addAdditionalTomcatConnectors(connectorArray32);
        tomcatEmbeddedServletContainerFactory13.addAdditionalTomcatConnectors(connectorArray32);
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray32);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray32);
        org.apache.catalina.connector.Connector connector37 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(valveCollection12);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection30);
        org.junit.Assert.assertNotNull(connectorArray32);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader7 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory10.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList19;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList21 = tomcatEmbeddedServletContainerFactory10.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection22 = tomcatEmbeddedServletContainerFactory10.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection22);
        org.apache.catalina.Context context24 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection22);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        boolean boolean13 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors = connectorList21;
        org.apache.catalina.Context context23 = null;
        tomcatEmbeddedServletContainerFactory14.postProcessContext(context23);
        java.net.InetAddress inetAddress25 = tomcatEmbeddedServletContainerFactory14.getAddress();
        tomcatEmbeddedServletContainerFactory14.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors = connectorList35;
        org.apache.catalina.Context context37 = null;
        tomcatEmbeddedServletContainerFactory28.postProcessContext(context37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory41.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray43 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory41.addConnectorCustomizers(tomcatConnectorCustomizerArray43);
        tomcatEmbeddedServletContainerFactory28.addConnectorCustomizers(tomcatConnectorCustomizerArray43);
        tomcatEmbeddedServletContainerFactory14.addConnectorCustomizers(tomcatConnectorCustomizerArray43);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray43);
        org.apache.catalina.Context context48 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertNull(inetAddress25);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray43);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        java.util.List<org.apache.catalina.Valve> valveList11 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.apache.catalina.Context context13 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(valveList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str12, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList16 = tomcatEmbeddedServletContainerFactory11.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings20);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings20);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList24 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory27.tomcatConnectorCustomizers = tomcatConnectorCustomizerList30;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection32 = tomcatEmbeddedServletContainerFactory27.getContextLifecycleListeners();
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory27.uriEncoding;
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory37.tomcatConnectorCustomizers = tomcatConnectorCustomizerList40;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection42 = tomcatEmbeddedServletContainerFactory37.getContextLifecycleListeners();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory37.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList44;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray46 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory36.addContextCustomizers(tomcatContextCustomizerArray46);
        tomcatEmbeddedServletContainerFactory27.addContextCustomizers(tomcatContextCustomizerArray46);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray46);
        org.springframework.core.io.ResourceLoader resourceLoader50 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.apache.catalina.Context context51 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory52.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = tomcatEmbeddedServletContainerFactory57.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList59 = tomcatEmbeddedServletContainerFactory57.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory52.additionalTomcatConnectors = connectorList59;
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory52.protocol;
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory52.protocol;
        java.net.InetAddress inetAddress63 = null;
        tomcatEmbeddedServletContainerFactory52.setAddress(inetAddress63);
        java.io.File file65 = null;
        tomcatEmbeddedServletContainerFactory52.setBaseDirectory(file65);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection67 = tomcatEmbeddedServletContainerFactory52.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList69 = tomcatEmbeddedServletContainerFactory68.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection70 = tomcatEmbeddedServletContainerFactory68.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings72 = tomcatEmbeddedServletContainerFactory71.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader73 = tomcatEmbeddedServletContainerFactory71.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray74 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory71.addErrorPages(errorPageArray74);
        tomcatEmbeddedServletContainerFactory68.addErrorPages(errorPageArray74);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray77 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory68.addInitializers(servletContextInitializerArray77);
        tomcatEmbeddedServletContainerFactory52.addInitializers(servletContextInitializerArray77);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context51, servletContextInitializerArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList16);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList24);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray46);
        org.junit.Assert.assertNull(resourceLoader50);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(connectorList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection67);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList69);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection70);
        org.junit.Assert.assertNotNull(mimeMappings72);
        org.junit.Assert.assertNull(resourceLoader73);
        org.junit.Assert.assertNotNull(errorPageArray74);
        org.junit.Assert.assertNotNull(servletContextInitializerArray77);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory10.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList29 = tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors = connectorList29;
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory22.protocol;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory22.protocol;
        java.net.InetAddress inetAddress33 = null;
        tomcatEmbeddedServletContainerFactory22.setAddress(inetAddress33);
        tomcatEmbeddedServletContainerFactory22.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray37 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList38 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList38, valveArray37);
        tomcatEmbeddedServletContainerFactory22.contextValves = valveList38;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList38;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory43.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = tomcatEmbeddedServletContainerFactory48.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList50 = tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory43.additionalTomcatConnectors = connectorList50;
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory43.protocol;
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory43.protocol;
        tomcatEmbeddedServletContainerFactory43.setUriEncoding("hi!");
        org.apache.catalina.Context context56 = null;
        tomcatEmbeddedServletContainerFactory43.postProcessContext(context56);
        org.springframework.core.io.ResourceLoader resourceLoader58 = tomcatEmbeddedServletContainerFactory43.resourceLoader;
        boolean boolean59 = tomcatEmbeddedServletContainerFactory43.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList61 = tomcatEmbeddedServletContainerFactory60.tomcatConnectorCustomizers;
        int int62 = tomcatEmbeddedServletContainerFactory60.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray63 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory60.addContextLifecycleListeners(lifecycleListenerArray63);
        tomcatEmbeddedServletContainerFactory43.addContextLifecycleListeners(lifecycleListenerArray63);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray63);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings68 = tomcatEmbeddedServletContainerFactory67.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader69 = tomcatEmbeddedServletContainerFactory67.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory70.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory70.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection75 = tomcatEmbeddedServletContainerFactory70.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList76 = tomcatEmbeddedServletContainerFactory70.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory67.tomcatContextCustomizers = tomcatContextCustomizerList76;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList78 = tomcatEmbeddedServletContainerFactory67.tomcatConnectorCustomizers;
        java.lang.String str79 = tomcatEmbeddedServletContainerFactory67.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader83 = null;
        tomcatEmbeddedServletContainerFactory82.setResourceLoader(resourceLoader83);
        tomcatEmbeddedServletContainerFactory82.setPort(10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList87 = tomcatEmbeddedServletContainerFactory82.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory88 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory88.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory88.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection93 = tomcatEmbeddedServletContainerFactory88.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory82.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection93);
        tomcatEmbeddedServletContainerFactory67.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection93);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList96 = tomcatEmbeddedServletContainerFactory67.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList96;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(connectorList29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(valveArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(connectorList50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNull(resourceLoader58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray63);
        org.junit.Assert.assertNotNull(mimeMappings68);
        org.junit.Assert.assertNull(resourceLoader69);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection75);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList76);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str79, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(connectorList87);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection93);
        org.junit.Assert.assertNotNull(lifecycleListenerList96);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str2 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str4 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str5 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str6 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.LifecycleEvent lifecycleEvent7 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str2, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str5, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str6, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory2.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory2.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList7 = tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList8 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers = tomcatConnectorCustomizerList8;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory1.getErrorPages();
        java.util.concurrent.TimeUnit timeUnit12 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.setSessionTimeout(8080, timeUnit12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(lifecycleListenerList7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList8);
        org.junit.Assert.assertNotNull(errorPageSet10);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader15);
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection18 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-8" + "'", str17, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection18);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray5 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList6 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList6, lifecycleListenerArray5);
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList6;
        java.io.File file10 = tomcatEmbeddedServletContainerFactory0.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.apache.catalina.startup.Tomcat tomcat11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer12 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNotNull(lifecycleListenerArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file10.toString(), "/tmp/web-app>\n.4708882048721222860.0");
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.Context context5 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray5 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList6 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList6, lifecycleListenerArray5);
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList6;
        java.io.File file10 = tomcatEmbeddedServletContainerFactory0.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList15 = tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection16 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory13.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        tomcatEmbeddedServletContainerFactory18.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader26 = tomcatEmbeddedServletContainerFactory24.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection32 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList33 = tomcatEmbeddedServletContainerFactory27.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory24.tomcatContextCustomizers = tomcatContextCustomizerList33;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList35 = tomcatEmbeddedServletContainerFactory24.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = tomcatEmbeddedServletContainerFactory41.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList43 = tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList43;
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory36.protocol;
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory36.protocol;
        tomcatEmbeddedServletContainerFactory36.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection49 = tomcatEmbeddedServletContainerFactory36.getTomcatContextCustomizers();
        int int50 = tomcatEmbeddedServletContainerFactory36.getPort();
        java.io.File file52 = tomcatEmbeddedServletContainerFactory36.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory24.baseDirectory = file52;
        org.apache.catalina.Valve[] valveArray54 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory24.addContextValves(valveArray54);
        tomcatEmbeddedServletContainerFactory18.addContextValves(valveArray54);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList58 = tomcatEmbeddedServletContainerFactory57.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection59 = tomcatEmbeddedServletContainerFactory57.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = tomcatEmbeddedServletContainerFactory60.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader62 = tomcatEmbeddedServletContainerFactory60.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray63 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory60.addErrorPages(errorPageArray63);
        tomcatEmbeddedServletContainerFactory57.addErrorPages(errorPageArray63);
        tomcatEmbeddedServletContainerFactory18.addErrorPages(errorPageArray63);
        tomcatEmbeddedServletContainerFactory13.addErrorPages(errorPageArray63);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet68 = tomcatEmbeddedServletContainerFactory13.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet68);
        org.apache.catalina.startup.Tomcat tomcat70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer71 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNotNull(lifecycleListenerArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file10.toString(), "/tmp/web-app>\n.3263706822158996188.0");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection16);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNull(resourceLoader26);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection32);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList33);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList35);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(connectorList43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file52.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.7031967642721755616.0");
        org.junit.Assert.assertNotNull(valveArray54);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList58);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection59);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNull(resourceLoader62);
        org.junit.Assert.assertNotNull(errorPageArray63);
        org.junit.Assert.assertNotNull(errorPageSet68);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList12 = tomcatEmbeddedServletContainerFactory10.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList12;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader17);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet19);
        java.util.Collection<org.apache.catalina.Valve> valveCollection21 = tomcatEmbeddedServletContainerFactory0.getValves();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        java.lang.Class<?> wildcardClass24 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valveList12);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNotNull(valveCollection21);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean15 = tomcatEmbeddedServletContainerFactory14.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection16 = tomcatEmbeddedServletContainerFactory14.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        tomcatEmbeddedServletContainerFactory19.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection25 = tomcatEmbeddedServletContainerFactory19.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors = connectorList33;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory26.protocol;
        org.apache.catalina.Context context36 = null;
        tomcatEmbeddedServletContainerFactory26.postProcessContext(context36);
        java.io.File file39 = tomcatEmbeddedServletContainerFactory26.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory19.setBaseDirectory(file39);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file39;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        tomcatEmbeddedServletContainerFactory42.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = tomcatEmbeddedServletContainerFactory48.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader50 = tomcatEmbeddedServletContainerFactory48.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory51.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory51.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection56 = tomcatEmbeddedServletContainerFactory51.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList57 = tomcatEmbeddedServletContainerFactory51.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory48.tomcatContextCustomizers = tomcatContextCustomizerList57;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList59 = tomcatEmbeddedServletContainerFactory48.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory60.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory60.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings66 = tomcatEmbeddedServletContainerFactory65.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList67 = tomcatEmbeddedServletContainerFactory65.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors = connectorList67;
        java.lang.String str69 = tomcatEmbeddedServletContainerFactory60.protocol;
        java.lang.String str70 = tomcatEmbeddedServletContainerFactory60.protocol;
        tomcatEmbeddedServletContainerFactory60.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection73 = tomcatEmbeddedServletContainerFactory60.getTomcatContextCustomizers();
        int int74 = tomcatEmbeddedServletContainerFactory60.getPort();
        java.io.File file76 = tomcatEmbeddedServletContainerFactory60.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory48.baseDirectory = file76;
        org.apache.catalina.Valve[] valveArray78 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory48.addContextValves(valveArray78);
        tomcatEmbeddedServletContainerFactory42.addContextValves(valveArray78);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList82 = tomcatEmbeddedServletContainerFactory81.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection83 = tomcatEmbeddedServletContainerFactory81.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory84 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings85 = tomcatEmbeddedServletContainerFactory84.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader86 = tomcatEmbeddedServletContainerFactory84.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray87 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory84.addErrorPages(errorPageArray87);
        tomcatEmbeddedServletContainerFactory81.addErrorPages(errorPageArray87);
        tomcatEmbeddedServletContainerFactory42.addErrorPages(errorPageArray87);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory91 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean92 = tomcatEmbeddedServletContainerFactory91.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection93 = tomcatEmbeddedServletContainerFactory91.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings94 = tomcatEmbeddedServletContainerFactory91.getMimeMappings();
        tomcatEmbeddedServletContainerFactory42.setMimeMappings(mimeMappings94);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings94);
        org.apache.catalina.connector.Connector connector97 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8080 + "'", int13 == 8080);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(valveCollection16);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection25);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/tmp/UTF-8.3764223824216505269.0");
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNull(resourceLoader50);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection56);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList57);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList59);
        org.junit.Assert.assertNotNull(mimeMappings66);
        org.junit.Assert.assertNotNull(connectorList67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file76.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.8382434552070306310.0");
        org.junit.Assert.assertNotNull(valveArray78);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList82);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection83);
        org.junit.Assert.assertNotNull(mimeMappings85);
        org.junit.Assert.assertNull(resourceLoader86);
        org.junit.Assert.assertNotNull(errorPageArray87);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(valveCollection93);
        org.junit.Assert.assertNotNull(mimeMappings94);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader15);
        java.net.InetAddress inetAddress17 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.util.concurrent.TimeUnit timeUnit20 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 10, timeUnit20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(inetAddress17);
        org.junit.Assert.assertNotNull(connectorList18);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory17.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList24 = tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors = connectorList24;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory17.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean28 = tomcatEmbeddedServletContainerFactory27.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList29 = tomcatEmbeddedServletContainerFactory27.contextValves;
        tomcatEmbeddedServletContainerFactory17.contextValves = valveList29;
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory17.getContextPath();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings32);
        java.lang.Class<?> wildcardClass34 = mimeMappings32.getClass();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str13, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(connectorList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(valveList29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray16 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors = connectorList26;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.net.InetAddress inetAddress30 = null;
        tomcatEmbeddedServletContainerFactory19.setAddress(inetAddress30);
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setTldSkip("UTF-8");
        java.io.File file39 = tomcatEmbeddedServletContainerFactory33.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory19.setDocumentRoot(file39);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file39);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray44);
        tomcatEmbeddedServletContainerFactory42.setUriEncoding("hi!");
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        tomcatEmbeddedServletContainerFactory42.setSessionTimeout((int) (short) 100);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList51 = tomcatEmbeddedServletContainerFactory42.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory52.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = tomcatEmbeddedServletContainerFactory57.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList59 = tomcatEmbeddedServletContainerFactory57.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory52.additionalTomcatConnectors = connectorList59;
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory52.protocol;
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory52.protocol;
        tomcatEmbeddedServletContainerFactory52.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection65 = tomcatEmbeddedServletContainerFactory52.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList66 = tomcatEmbeddedServletContainerFactory52.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory42.tomcatContextCustomizers = tomcatContextCustomizerList66;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList66;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList70 = tomcatEmbeddedServletContainerFactory69.tomcatConnectorCustomizers;
        java.io.File file71 = tomcatEmbeddedServletContainerFactory69.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList72 = tomcatEmbeddedServletContainerFactory69.tomcatConnectorCustomizers;
        java.util.List<org.apache.catalina.connector.Connector> connectorList73 = tomcatEmbeddedServletContainerFactory69.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList73;
        java.lang.String str75 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(lifecycleListenerArray16);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/tmp/UTF-8.4369864589217252425.0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList51);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(connectorList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection65);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList66);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList72);
        org.junit.Assert.assertNotNull(connectorList73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "UTF-8" + "'", str75, "UTF-8");
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        tomcatEmbeddedServletContainerFactory0.tldSkip = "";
        int int17 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setPort(1);
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory21.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory26.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList28 = tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors = connectorList28;
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory21.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        tomcatEmbeddedServletContainerFactory21.setMimeMappings(mimeMappings34);
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory21.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory37.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory42.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors = connectorList44;
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory37.protocol;
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory37.protocol;
        tomcatEmbeddedServletContainerFactory37.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection50 = tomcatEmbeddedServletContainerFactory37.getTomcatContextCustomizers();
        int int51 = tomcatEmbeddedServletContainerFactory37.getPort();
        java.io.File file53 = tomcatEmbeddedServletContainerFactory37.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory21.baseDirectory = file53;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory55.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = tomcatEmbeddedServletContainerFactory60.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList62 = tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList63 = tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors = connectorList63;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory65.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory65.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection70 = tomcatEmbeddedServletContainerFactory65.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList71 = tomcatEmbeddedServletContainerFactory65.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory55.tomcatContextCustomizers = tomcatContextCustomizerList71;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str74 = storeMergedWebXmlListener73.getEmptyWebXml();
        java.lang.String str75 = storeMergedWebXmlListener73.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str77 = storeMergedWebXmlListener76.getMERGED_WEB_XML();
        java.lang.String str78 = storeMergedWebXmlListener76.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray79 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener73, storeMergedWebXmlListener76 };
        tomcatEmbeddedServletContainerFactory55.addContextLifecycleListeners(lifecycleListenerArray79);
        tomcatEmbeddedServletContainerFactory21.addContextLifecycleListeners(lifecycleListenerArray79);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray79);
        java.util.concurrent.TimeUnit timeUnit84 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0, timeUnit84);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(connectorList28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file53.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.4046037873321473323.0");
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNotNull(connectorList62);
        org.junit.Assert.assertNotNull(connectorList63);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection70);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str74, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str75, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str77, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str78, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray79);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.net.InetAddress inetAddress13 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader17);
        tomcatEmbeddedServletContainerFactory16.setPort(10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList21;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection23 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList24 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.lang.Class<?> wildcardClass25 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection23);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory10.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList29 = tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors = connectorList29;
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory22.protocol;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory22.protocol;
        java.net.InetAddress inetAddress33 = null;
        tomcatEmbeddedServletContainerFactory22.setAddress(inetAddress33);
        tomcatEmbeddedServletContainerFactory22.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray37 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList38 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList38, valveArray37);
        tomcatEmbeddedServletContainerFactory22.contextValves = valveList38;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList38;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(connectorList29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(valveArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-8" + "'", str42, "UTF-8");
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList23 = tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors = connectorList23;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory16.protocol;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory16.protocol;
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection29 = tomcatEmbeddedServletContainerFactory16.getTomcatContextCustomizers();
        int int30 = tomcatEmbeddedServletContainerFactory16.getPort();
        java.io.File file32 = tomcatEmbeddedServletContainerFactory16.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file32;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory34.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors = connectorList41;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory34.protocol;
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory34.protocol;
        java.net.InetAddress inetAddress45 = null;
        tomcatEmbeddedServletContainerFactory34.setAddress(inetAddress45);
        java.util.List<org.apache.catalina.connector.Connector> connectorList47 = tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory48.setTldSkip("UTF-8");
        java.io.File file54 = tomcatEmbeddedServletContainerFactory48.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory34.setDocumentRoot(file54);
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory58.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory58.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = tomcatEmbeddedServletContainerFactory63.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList65 = tomcatEmbeddedServletContainerFactory63.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory58.additionalTomcatConnectors = connectorList65;
        org.apache.catalina.Context context67 = null;
        tomcatEmbeddedServletContainerFactory58.postProcessContext(context67);
        java.net.InetAddress inetAddress69 = tomcatEmbeddedServletContainerFactory58.getAddress();
        tomcatEmbeddedServletContainerFactory58.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory72.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory72.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings78 = tomcatEmbeddedServletContainerFactory77.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList79 = tomcatEmbeddedServletContainerFactory77.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory72.additionalTomcatConnectors = connectorList79;
        org.apache.catalina.Context context81 = null;
        tomcatEmbeddedServletContainerFactory72.postProcessContext(context81);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory85 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str86 = tomcatEmbeddedServletContainerFactory85.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray87 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory85.addConnectorCustomizers(tomcatConnectorCustomizerArray87);
        tomcatEmbeddedServletContainerFactory72.addConnectorCustomizers(tomcatConnectorCustomizerArray87);
        tomcatEmbeddedServletContainerFactory58.addConnectorCustomizers(tomcatConnectorCustomizerArray87);
        tomcatEmbeddedServletContainerFactory34.addConnectorCustomizers(tomcatConnectorCustomizerArray87);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray87);
        tomcatEmbeddedServletContainerFactory0.protocol = "UTF-8";
        java.lang.String str95 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(connectorList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file32.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.2363758961630570206.0");
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(connectorList47);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file54.toString(), "/tmp/UTF-8.2998297498396946661.0");
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNotNull(connectorList65);
        org.junit.Assert.assertNull(inetAddress69);
        org.junit.Assert.assertNotNull(mimeMappings78);
        org.junit.Assert.assertNotNull(connectorList79);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray87);
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        tomcatEmbeddedServletContainerFactory2.setPort(10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory2.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory2.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList14 = tomcatEmbeddedServletContainerFactory13.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory11.tomcatConnectorCustomizers = tomcatConnectorCustomizerList14;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection16 = tomcatEmbeddedServletContainerFactory11.getContextLifecycleListeners();
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory11.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList18;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory10.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory26.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer28 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray29 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer28 };
        tomcatEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray29);
        tomcatEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray29);
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray29);
        tomcatEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray29);
        java.util.concurrent.TimeUnit timeUnit35 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.setSessionTimeout((int) (byte) 1, timeUnit35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList14);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-8" + "'", str17, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str20, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray29);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str5 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.LifecycleEvent lifecycleEvent6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList10 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList18;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory11.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings24);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory11.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = tomcatEmbeddedServletContainerFactory32.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors = connectorList34;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory27.protocol;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory27.protocol;
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection40 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        int int41 = tomcatEmbeddedServletContainerFactory27.getPort();
        java.io.File file43 = tomcatEmbeddedServletContainerFactory27.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory11.baseDirectory = file43;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file43);
        java.lang.Class<?> wildcardClass46 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(lifecycleListenerList10);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(connectorList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file43.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.768493706427853045.0");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("org.apache.tomcat.util.scan.MergedWebXml", (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray16 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors = connectorList26;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.net.InetAddress inetAddress30 = null;
        tomcatEmbeddedServletContainerFactory19.setAddress(inetAddress30);
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setTldSkip("UTF-8");
        java.io.File file39 = tomcatEmbeddedServletContainerFactory33.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory19.setDocumentRoot(file39);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file39);
        boolean boolean42 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(lifecycleListenerArray16);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/tmp/UTF-8.4373047474120485342.0");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.apache.catalina.Valve valve5 = null;
        org.apache.catalina.Valve[] valveArray6 = new org.apache.catalina.Valve[] { valve5 };
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray6);
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.apache.catalina.Context context9 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-8" + "'", str4, "UTF-8");
        org.junit.Assert.assertNotNull(valveArray6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList2 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray3 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList4, tomcatConnectorCustomizerArray3);
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList4;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory9.protocol;
        tomcatEmbeddedServletContainerFactory9.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection22 = tomcatEmbeddedServletContainerFactory9.getTomcatContextCustomizers();
        int int23 = tomcatEmbeddedServletContainerFactory9.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList31 = tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors = connectorList31;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.net.InetAddress inetAddress35 = null;
        tomcatEmbeddedServletContainerFactory24.setAddress(inetAddress35);
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory38.setTldSkip("UTF-8");
        java.io.File file44 = tomcatEmbeddedServletContainerFactory38.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory24.setDocumentRoot(file44);
        tomcatEmbeddedServletContainerFactory9.setDocumentRoot(file44);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file44;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.io.File file49 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Class<?> wildcardClass51 = mimeMappings50.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveList2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNotNull(connectorList31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file44.toString(), "/tmp/UTF-8.8276287561416476577.0");
        org.junit.Assert.assertNotNull(errorPageSet48);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        org.apache.catalina.Context context18 = null;
        tomcatEmbeddedServletContainerFactory9.postProcessContext(context18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory22.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray24 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory22.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory9.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        java.lang.Class<?> wildcardClass28 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray24);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.io.File file5 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection20 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader23 = tomcatEmbeddedServletContainerFactory21.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection29 = tomcatEmbeddedServletContainerFactory24.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList30 = tomcatEmbeddedServletContainerFactory24.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory21.tomcatContextCustomizers = tomcatContextCustomizerList30;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory32.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList39 = tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory32.additionalTomcatConnectors = connectorList39;
        java.lang.String str41 = tomcatEmbeddedServletContainerFactory32.protocol;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory32.protocol;
        tomcatEmbeddedServletContainerFactory32.setUriEncoding("hi!");
        boolean boolean45 = tomcatEmbeddedServletContainerFactory32.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory46.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory46.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = tomcatEmbeddedServletContainerFactory51.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList53 = tomcatEmbeddedServletContainerFactory51.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors = connectorList53;
        org.apache.catalina.Context context55 = null;
        tomcatEmbeddedServletContainerFactory46.postProcessContext(context55);
        java.net.InetAddress inetAddress57 = tomcatEmbeddedServletContainerFactory46.getAddress();
        tomcatEmbeddedServletContainerFactory46.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory60.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory60.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings66 = tomcatEmbeddedServletContainerFactory65.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList67 = tomcatEmbeddedServletContainerFactory65.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors = connectorList67;
        org.apache.catalina.Context context69 = null;
        tomcatEmbeddedServletContainerFactory60.postProcessContext(context69);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str74 = tomcatEmbeddedServletContainerFactory73.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray75 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory73.addConnectorCustomizers(tomcatConnectorCustomizerArray75);
        tomcatEmbeddedServletContainerFactory60.addConnectorCustomizers(tomcatConnectorCustomizerArray75);
        tomcatEmbeddedServletContainerFactory46.addConnectorCustomizers(tomcatConnectorCustomizerArray75);
        tomcatEmbeddedServletContainerFactory32.addConnectorCustomizers(tomcatConnectorCustomizerArray75);
        tomcatEmbeddedServletContainerFactory21.addConnectorCustomizers(tomcatConnectorCustomizerArray75);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray75);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList82 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.net.InetAddress inetAddress83 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress83);
        org.apache.catalina.Context context85 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection20);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNull(resourceLoader23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection29);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList30);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(connectorList39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNotNull(connectorList53);
        org.junit.Assert.assertNull(inetAddress57);
        org.junit.Assert.assertNotNull(mimeMappings66);
        org.junit.Assert.assertNotNull(connectorList67);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray75);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList82);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        tomcatEmbeddedServletContainerFactory9.setResourceLoader(resourceLoader10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory9.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet12);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection14 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.apache.catalina.Context context15 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection14);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory2.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory2.setTldSkip("UTF-8");
        org.apache.catalina.Context context7 = null;
        tomcatEmbeddedServletContainerFactory2.postProcessContext(context7);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.net.InetAddress inetAddress20 = null;
        tomcatEmbeddedServletContainerFactory9.setAddress(inetAddress20);
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        java.io.File file23 = tomcatEmbeddedServletContainerFactory9.baseDirectory;
        org.apache.catalina.Valve[] valveArray24 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory9.addContextValves(valveArray24);
        tomcatEmbeddedServletContainerFactory2.addContextValves(valveArray24);
        tomcatEmbeddedServletContainerFactory1.addContextValves(valveArray24);
        org.apache.catalina.Context context28 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection31 = tomcatEmbeddedServletContainerFactory29.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader34 = tomcatEmbeddedServletContainerFactory32.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray35 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory32.addErrorPages(errorPageArray35);
        tomcatEmbeddedServletContainerFactory29.addErrorPages(errorPageArray35);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray38 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory29.addInitializers(servletContextInitializerArray38);
        java.io.File file40 = tomcatEmbeddedServletContainerFactory29.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory43.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer45 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer45 };
        tomcatEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray46);
        tomcatEmbeddedServletContainerFactory29.addInitializers(servletContextInitializerArray46);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.configureContext(context28, servletContextInitializerArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(valveArray24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection31);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNull(resourceLoader34);
        org.junit.Assert.assertNotNull(errorPageArray35);
        org.junit.Assert.assertNotNull(servletContextInitializerArray38);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection12 = tomcatEmbeddedServletContainerFactory7.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory7.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector15 = null;
        org.apache.catalina.connector.Connector[] connectorArray16 = new org.apache.catalina.connector.Connector[] { connector15 };
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray16);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray16);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList19 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.core.io.ResourceLoader resourceLoader23 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader23);
        java.util.concurrent.TimeUnit timeUnit26 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(10, timeUnit26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection12);
        org.junit.Assert.assertNotNull(connectorArray16);
        org.junit.Assert.assertNotNull(lifecycleListenerList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        java.lang.Class<?> wildcardClass9 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        org.apache.catalina.Context context18 = null;
        tomcatEmbeddedServletContainerFactory9.postProcessContext(context18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory22.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray24 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory22.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory9.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        java.util.List<org.apache.catalina.Valve> valveList28 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.apache.catalina.Context context29 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray24);
        org.junit.Assert.assertNotNull(valveList28);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("org.apache.coyote.http11.Http11NioProtocol", 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        boolean boolean13 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors = connectorList21;
        org.apache.catalina.Context context23 = null;
        tomcatEmbeddedServletContainerFactory14.postProcessContext(context23);
        java.net.InetAddress inetAddress25 = tomcatEmbeddedServletContainerFactory14.getAddress();
        tomcatEmbeddedServletContainerFactory14.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors = connectorList35;
        org.apache.catalina.Context context37 = null;
        tomcatEmbeddedServletContainerFactory28.postProcessContext(context37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory41.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray43 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory41.addConnectorCustomizers(tomcatConnectorCustomizerArray43);
        tomcatEmbeddedServletContainerFactory28.addConnectorCustomizers(tomcatConnectorCustomizerArray43);
        tomcatEmbeddedServletContainerFactory14.addConnectorCustomizers(tomcatConnectorCustomizerArray43);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray43);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = tomcatEmbeddedServletContainerFactory50.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader52 = tomcatEmbeddedServletContainerFactory50.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory53.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory53.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection58 = tomcatEmbeddedServletContainerFactory53.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList59 = tomcatEmbeddedServletContainerFactory53.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory50.tomcatContextCustomizers = tomcatContextCustomizerList59;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList61 = tomcatEmbeddedServletContainerFactory50.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory62.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory62.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings68 = tomcatEmbeddedServletContainerFactory67.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList69 = tomcatEmbeddedServletContainerFactory67.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory62.additionalTomcatConnectors = connectorList69;
        java.lang.String str71 = tomcatEmbeddedServletContainerFactory62.protocol;
        java.lang.String str72 = tomcatEmbeddedServletContainerFactory62.protocol;
        java.net.InetAddress inetAddress73 = null;
        tomcatEmbeddedServletContainerFactory62.setAddress(inetAddress73);
        int int75 = tomcatEmbeddedServletContainerFactory62.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings77 = tomcatEmbeddedServletContainerFactory76.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList79 = tomcatEmbeddedServletContainerFactory78.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory76.tomcatConnectorCustomizers = tomcatConnectorCustomizerList79;
        tomcatEmbeddedServletContainerFactory62.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList79);
        tomcatEmbeddedServletContainerFactory50.tomcatConnectorCustomizers = tomcatConnectorCustomizerList79;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str84 = tomcatEmbeddedServletContainerFactory83.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray85 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory83.addInitializers(servletContextInitializerArray85);
        tomcatEmbeddedServletContainerFactory83.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray89 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory83.addContextLifecycleListeners(lifecycleListenerArray89);
        tomcatEmbeddedServletContainerFactory50.addContextLifecycleListeners(lifecycleListenerArray89);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray89);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertNull(inetAddress25);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray43);
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertNull(resourceLoader52);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection58);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList59);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList61);
        org.junit.Assert.assertNotNull(mimeMappings68);
        org.junit.Assert.assertNotNull(connectorList69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(mimeMappings77);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList79);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "UTF-8" + "'", str84, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray85);
        org.junit.Assert.assertNotNull(lifecycleListenerArray89);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray15 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16, errorPageArray15);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList23 = tomcatEmbeddedServletContainerFactory22.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection24 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory21.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors = connectorList33;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory26.protocol;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory26.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory37.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory42.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors = connectorList44;
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory37.protocol;
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory37.protocol;
        java.net.InetAddress inetAddress48 = null;
        tomcatEmbeddedServletContainerFactory37.setAddress(inetAddress48);
        int int50 = tomcatEmbeddedServletContainerFactory37.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = tomcatEmbeddedServletContainerFactory51.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList54 = tomcatEmbeddedServletContainerFactory53.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory51.tomcatConnectorCustomizers = tomcatConnectorCustomizerList54;
        tomcatEmbeddedServletContainerFactory37.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList54);
        tomcatEmbeddedServletContainerFactory26.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList54);
        tomcatEmbeddedServletContainerFactory21.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList54);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList54);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(errorPageArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection24);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList54);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader14 = tomcatEmbeddedServletContainerFactory12.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection20 = tomcatEmbeddedServletContainerFactory15.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList21 = tomcatEmbeddedServletContainerFactory15.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory12.tomcatContextCustomizers = tomcatContextCustomizerList21;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList23 = tomcatEmbeddedServletContainerFactory12.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList31 = tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors = connectorList31;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory24.protocol;
        tomcatEmbeddedServletContainerFactory24.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection37 = tomcatEmbeddedServletContainerFactory24.getTomcatContextCustomizers();
        int int38 = tomcatEmbeddedServletContainerFactory24.getPort();
        java.io.File file40 = tomcatEmbeddedServletContainerFactory24.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory12.baseDirectory = file40;
        org.apache.catalina.Valve[] valveArray42 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory12.addContextValves(valveArray42);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray42);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("org.apache.tomcat.util.scan.MergedWebXml");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection20);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList23);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNotNull(connectorList31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file40.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.4833910752426503482.0");
        org.junit.Assert.assertNotNull(valveArray42);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str46, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress5 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        boolean boolean7 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNull(inetAddress5);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList2 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList10 = tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory3.additionalTomcatConnectors = connectorList11;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList13 = tomcatEmbeddedServletContainerFactory3.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors = connectorList21;
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory14.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        tomcatEmbeddedServletContainerFactory14.setMimeMappings(mimeMappings27);
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory14.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory30.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory35.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory35.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors = connectorList37;
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory30.protocol;
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory30.protocol;
        tomcatEmbeddedServletContainerFactory30.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection43 = tomcatEmbeddedServletContainerFactory30.getTomcatContextCustomizers();
        int int44 = tomcatEmbeddedServletContainerFactory30.getPort();
        java.io.File file46 = tomcatEmbeddedServletContainerFactory30.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory14.baseDirectory = file46;
        tomcatEmbeddedServletContainerFactory3.setDocumentRoot(file46);
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file46);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList2);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(connectorList10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertNotNull(lifecycleListenerList13);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file46.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.5029309058861984229.0");
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory1.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers;
        java.io.File file5 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList11 = tomcatEmbeddedServletContainerFactory6.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        tomcatEmbeddedServletContainerFactory6.setMimeMappings(mimeMappings15);
        org.apache.catalina.connector.Connector connector17 = null;
        org.apache.catalina.connector.Connector[] connectorArray18 = new org.apache.catalina.connector.Connector[] { connector17 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray18);
        tomcatEmbeddedServletContainerFactory1.addAdditionalTomcatConnectors(connectorArray18);
        tomcatEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList26 = tomcatEmbeddedServletContainerFactory25.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory23.tomcatConnectorCustomizers = tomcatConnectorCustomizerList26;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection28 = tomcatEmbeddedServletContainerFactory23.getContextLifecycleListeners();
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory23.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList30 = tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory1.additionalTomcatConnectors = connectorList30;
        org.apache.catalina.connector.Connector connector32 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.customizeConnector(connector32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(lifecycleListenerList11);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorArray18);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList26);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-8" + "'", str29, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList30);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory3.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers = tomcatConnectorCustomizerList4;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory1.getContextLifecycleListeners();
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory1.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory1.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory16.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer18 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer18 };
        tomcatEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray19);
        tomcatEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray19);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray19);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection28 = tomcatEmbeddedServletContainerFactory23.getTomcatConnectorCustomizers();
        boolean boolean29 = tomcatEmbeddedServletContainerFactory23.isRegisterDefaultServlet();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet30 = tomcatEmbeddedServletContainerFactory23.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader31 = tomcatEmbeddedServletContainerFactory23.resourceLoader;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = tomcatEmbeddedServletContainerFactory23.getErrorPages();
        java.util.List<org.apache.catalina.Valve> valveList33 = tomcatEmbeddedServletContainerFactory23.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList33;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("org.apache.tomcat.util.scan.MergedWebXml");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str10, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(errorPageSet30);
        org.junit.Assert.assertNull(resourceLoader31);
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertNotNull(valveList33);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.io.File file6 = tomcatEmbeddedServletContainerFactory0.createTempDir("UTF-8");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory8.getUriEncoding();
        int int10 = tomcatEmbeddedServletContainerFactory8.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList12 = tomcatEmbeddedServletContainerFactory11.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory11.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList14 = tomcatEmbeddedServletContainerFactory11.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection15 = tomcatEmbeddedServletContainerFactory11.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory11.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory11.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory11.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors = connectorList19;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList19;
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file6.toString(), "/tmp/UTF-8.4910203675337011689.0");
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8080 + "'", int10 == 8080);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(valveList14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNotNull(connectorList19);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection11 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection11);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader5 = tomcatEmbeddedServletContainerFactory3.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory3.addErrorPages(errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray6);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray9 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray9);
        java.io.File file11 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory14.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer16 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer16 };
        tomcatEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray17);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory22.tldSkip;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList24 = tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList24;
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNull(resourceLoader5);
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(servletContextInitializerArray17);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList24);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList15 = tomcatEmbeddedServletContainerFactory10.contextLifecycleListeners;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection16 = tomcatEmbeddedServletContainerFactory10.getContextLifecycleListeners();
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory10.getAdditionalTomcatConnectors();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory10.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors = connectorList26;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.net.InetAddress inetAddress30 = null;
        tomcatEmbeddedServletContainerFactory19.setAddress(inetAddress30);
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setTldSkip("UTF-8");
        java.io.File file39 = tomcatEmbeddedServletContainerFactory33.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory19.setDocumentRoot(file39);
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory43.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = tomcatEmbeddedServletContainerFactory48.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList50 = tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory43.additionalTomcatConnectors = connectorList50;
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory43.protocol;
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory43.protocol;
        tomcatEmbeddedServletContainerFactory43.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection56 = tomcatEmbeddedServletContainerFactory43.getTomcatContextCustomizers();
        int int57 = tomcatEmbeddedServletContainerFactory43.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory58.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory58.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = tomcatEmbeddedServletContainerFactory63.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList65 = tomcatEmbeddedServletContainerFactory63.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory58.additionalTomcatConnectors = connectorList65;
        java.lang.String str67 = tomcatEmbeddedServletContainerFactory58.protocol;
        java.lang.String str68 = tomcatEmbeddedServletContainerFactory58.protocol;
        java.net.InetAddress inetAddress69 = null;
        tomcatEmbeddedServletContainerFactory58.setAddress(inetAddress69);
        java.util.List<org.apache.catalina.connector.Connector> connectorList71 = tomcatEmbeddedServletContainerFactory58.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory72.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory72.setTldSkip("UTF-8");
        java.io.File file78 = tomcatEmbeddedServletContainerFactory72.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory58.setDocumentRoot(file78);
        tomcatEmbeddedServletContainerFactory43.setDocumentRoot(file78);
        tomcatEmbeddedServletContainerFactory19.baseDirectory = file78;
        tomcatEmbeddedServletContainerFactory10.setBaseDirectory(file78);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file78;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-8" + "'", str14, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList15);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection16);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/tmp/UTF-8.8458274709287744852.0");
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(connectorList50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNotNull(connectorList65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNotNull(connectorList71);
        org.junit.Assert.assertNotNull(file78);
        org.junit.Assert.assertEquals(file78.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file78.toString(), "/tmp/UTF-8.6603690189404761183.0");
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory2.uriEncoding;
        tomcatEmbeddedServletContainerFactory2.setUriEncoding("");
        tomcatEmbeddedServletContainerFactory2.setPort((int) ' ');
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory2.uriEncoding;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.net.InetAddress inetAddress13 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader17);
        tomcatEmbeddedServletContainerFactory16.setPort(10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList21;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory23.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList28 = tomcatEmbeddedServletContainerFactory27.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection29 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList30 = tomcatEmbeddedServletContainerFactory27.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection31 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory27.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory27.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory27.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = tomcatEmbeddedServletContainerFactory41.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList43 = tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList43;
        org.apache.catalina.Context context45 = null;
        tomcatEmbeddedServletContainerFactory36.postProcessContext(context45);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory49.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray51 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory49.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        tomcatEmbeddedServletContainerFactory36.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        tomcatEmbeddedServletContainerFactory27.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        tomcatEmbeddedServletContainerFactory23.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        org.apache.catalina.Context context57 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-8" + "'", str26, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection29);
        org.junit.Assert.assertNotNull(valveList30);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection31);
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(connectorList43);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray51);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.apache.catalina.startup.Tomcat tomcat15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer16 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) '4');
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList2 = tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers;
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file4 = tomcatEmbeddedServletContainerFactory1.createTempDir("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Prefix string too short");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList2);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.net.InetAddress inetAddress5 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory6.additionalTomcatConnectors = connectorList13;
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory6.protocol;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory6.protocol;
        java.net.InetAddress inetAddress17 = null;
        tomcatEmbeddedServletContainerFactory6.setAddress(inetAddress17);
        java.io.File file19 = null;
        tomcatEmbeddedServletContainerFactory6.setBaseDirectory(file19);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray21 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory6.addContextCustomizers(tomcatContextCustomizerArray21);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray21);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection25 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.junit.Assert.assertNull(inetAddress5);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray21);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection25);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory10.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList29 = tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors = connectorList29;
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory22.protocol;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory22.protocol;
        java.net.InetAddress inetAddress33 = null;
        tomcatEmbeddedServletContainerFactory22.setAddress(inetAddress33);
        tomcatEmbeddedServletContainerFactory22.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray37 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList38 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList38, valveArray37);
        tomcatEmbeddedServletContainerFactory22.contextValves = valveList38;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList38;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.apache.catalina.connector.Connector connector43 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(connectorList29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(valveArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-8" + "'", str42, "UTF-8");
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str4 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str5 = storeMergedWebXmlListener0.getEmptyWebXml();
        org.apache.catalina.LifecycleEvent lifecycleEvent6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str4, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str5, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory2.getUriEncoding();
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory2.uriEncoding;
        tomcatEmbeddedServletContainerFactory2.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory2.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList12 = tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory2.getTomcatContextCustomizers();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList12);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList14 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList18 = tomcatEmbeddedServletContainerFactory17.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers = tomcatConnectorCustomizerList18;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = tomcatEmbeddedServletContainerFactory15.getErrorPages();
        java.net.InetAddress inetAddress21 = tomcatEmbeddedServletContainerFactory15.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader22 = tomcatEmbeddedServletContainerFactory15.resourceLoader;
        java.io.File file24 = tomcatEmbeddedServletContainerFactory15.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.apache.catalina.Valve[] valveArray25 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray25);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray25);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection28 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNotNull(valveList14);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList18);
        org.junit.Assert.assertNotNull(errorPageSet20);
        org.junit.Assert.assertNull(inetAddress21);
        org.junit.Assert.assertNull(resourceLoader22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file24.toString(), "/tmp/web-app>\n.4021631902909286948.8080");
        org.junit.Assert.assertNotNull(valveArray25);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.Context context4 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context4);
        java.util.Collection<org.apache.catalina.Valve> valveCollection6 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList10 = tomcatEmbeddedServletContainerFactory9.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory7.tomcatConnectorCustomizers = tomcatConnectorCustomizerList10;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection12 = tomcatEmbeddedServletContainerFactory7.getContextLifecycleListeners();
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory7.uriEncoding;
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection21 = tomcatEmbeddedServletContainerFactory16.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory16.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection24 = tomcatEmbeddedServletContainerFactory16.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector25 = null;
        org.apache.catalina.connector.Connector[] connectorArray26 = new org.apache.catalina.connector.Connector[] { connector25 };
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray26);
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray26);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray26);
        tomcatEmbeddedServletContainerFactory0.protocol = "UTF-8";
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection6);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList10);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection24);
        org.junit.Assert.assertNotNull(connectorArray26);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory7.protocol;
        tomcatEmbeddedServletContainerFactory7.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList23 = tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors = connectorList23;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory25.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray27);
        tomcatEmbeddedServletContainerFactory25.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray31 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory25.addContextLifecycleListeners(lifecycleListenerArray31);
        tomcatEmbeddedServletContainerFactory15.addContextLifecycleListeners(lifecycleListenerArray31);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList34 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory7.tomcatConnectorCustomizers = tomcatConnectorCustomizerList34;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList34);
        boolean boolean37 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertNotNull(connectorList23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-8" + "'", str26, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(lifecycleListenerArray31);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader5 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("");
        int int12 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader13 = tomcatEmbeddedServletContainerFactory6.resourceLoader;
        java.net.InetAddress inetAddress14 = null;
        tomcatEmbeddedServletContainerFactory6.setAddress(inetAddress14);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList21 = tomcatEmbeddedServletContainerFactory16.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory6.contextLifecycleListeners = lifecycleListenerList21;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList21;
        java.util.List<org.apache.catalina.connector.Connector> connectorList24 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.core.io.ResourceLoader resourceLoader25 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNull(resourceLoader5);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNotNull(lifecycleListenerList21);
        org.junit.Assert.assertNotNull(connectorList24);
        org.junit.Assert.assertNull(resourceLoader25);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList14;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory7.protocol;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory7.protocol;
        java.net.InetAddress inetAddress18 = null;
        tomcatEmbeddedServletContainerFactory7.setAddress(inetAddress18);
        java.util.List<org.apache.catalina.Valve> valveList20 = tomcatEmbeddedServletContainerFactory7.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory21.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection32 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        boolean boolean33 = tomcatEmbeddedServletContainerFactory27.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress34 = null;
        tomcatEmbeddedServletContainerFactory27.setAddress(inetAddress34);
        java.util.List<org.apache.catalina.Valve> valveList36 = tomcatEmbeddedServletContainerFactory27.contextValves;
        tomcatEmbeddedServletContainerFactory21.contextValves = valveList36;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection42 = tomcatEmbeddedServletContainerFactory38.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader43 = tomcatEmbeddedServletContainerFactory38.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory44.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList49 = tomcatEmbeddedServletContainerFactory44.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList50 = tomcatEmbeddedServletContainerFactory44.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory38.tomcatConnectorCustomizers = tomcatConnectorCustomizerList50;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings53 = tomcatEmbeddedServletContainerFactory52.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList55 = tomcatEmbeddedServletContainerFactory54.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory52.tomcatConnectorCustomizers = tomcatConnectorCustomizerList55;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet57 = tomcatEmbeddedServletContainerFactory52.getErrorPages();
        java.net.InetAddress inetAddress58 = tomcatEmbeddedServletContainerFactory52.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader59 = tomcatEmbeddedServletContainerFactory52.resourceLoader;
        java.io.File file61 = tomcatEmbeddedServletContainerFactory52.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.apache.catalina.Valve[] valveArray62 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory52.addContextValves(valveArray62);
        tomcatEmbeddedServletContainerFactory38.addContextValves(valveArray62);
        tomcatEmbeddedServletContainerFactory21.addContextValves(valveArray62);
        tomcatEmbeddedServletContainerFactory7.addContextValves(valveArray62);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray62);
        org.apache.catalina.Context context68 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context68);
        org.apache.catalina.Context context70 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(valveList20);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(valveList36);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertNotNull(valveCollection42);
        org.junit.Assert.assertNull(resourceLoader43);
        org.junit.Assert.assertNotNull(lifecycleListenerList49);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList50);
        org.junit.Assert.assertNotNull(mimeMappings53);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList55);
        org.junit.Assert.assertNotNull(errorPageSet57);
        org.junit.Assert.assertNull(inetAddress58);
        org.junit.Assert.assertNull(resourceLoader59);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file61.toString(), "/tmp/web-app>\n.3438121188638433738.8080");
        org.junit.Assert.assertNotNull(valveArray62);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray15 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16, errorPageArray15);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        boolean boolean22 = tomcatEmbeddedServletContainerFactory19.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList30 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors = connectorList30;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory23.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        tomcatEmbeddedServletContainerFactory23.setMimeMappings(mimeMappings36);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList39 = tomcatEmbeddedServletContainerFactory38.tomcatConnectorCustomizers;
        int int40 = tomcatEmbeddedServletContainerFactory38.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray41 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory38.addContextLifecycleListeners(lifecycleListenerArray41);
        tomcatEmbeddedServletContainerFactory23.addContextLifecycleListeners(lifecycleListenerArray41);
        tomcatEmbeddedServletContainerFactory19.addContextLifecycleListeners(lifecycleListenerArray41);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory45.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory45.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection50 = tomcatEmbeddedServletContainerFactory45.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory45.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector53 = null;
        org.apache.catalina.connector.Connector[] connectorArray54 = new org.apache.catalina.connector.Connector[] { connector53 };
        tomcatEmbeddedServletContainerFactory45.addAdditionalTomcatConnectors(connectorArray54);
        tomcatEmbeddedServletContainerFactory19.addAdditionalTomcatConnectors(connectorArray54);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray54);
        java.util.Collection<org.apache.catalina.Valve> valveCollection58 = tomcatEmbeddedServletContainerFactory0.getValves();
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file60 = tomcatEmbeddedServletContainerFactory0.createTempDir("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Prefix string too short");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(errorPageArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(connectorList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray41);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection50);
        org.junit.Assert.assertNotNull(connectorArray54);
        org.junit.Assert.assertNotNull(valveCollection58);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.apache.catalina.Valve valve5 = null;
        org.apache.catalina.Valve[] valveArray6 = new org.apache.catalina.Valve[] { valve5 };
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray6);
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        tomcatEmbeddedServletContainerFactory9.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory13.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors = connectorList26;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.net.InetAddress inetAddress30 = null;
        tomcatEmbeddedServletContainerFactory19.setAddress(inetAddress30);
        java.io.File file32 = null;
        tomcatEmbeddedServletContainerFactory19.setBaseDirectory(file32);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray34 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory19.addContextCustomizers(tomcatContextCustomizerArray34);
        tomcatEmbeddedServletContainerFactory13.addContextCustomizers(tomcatContextCustomizerArray34);
        tomcatEmbeddedServletContainerFactory9.addContextCustomizers(tomcatContextCustomizerArray34);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray34);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory39.setPort((int) (short) 0);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList42 = null;
        tomcatEmbeddedServletContainerFactory39.contextLifecycleListeners = lifecycleListenerList42;
        org.springframework.core.io.ResourceLoader resourceLoader44 = null;
        tomcatEmbeddedServletContainerFactory39.resourceLoader = resourceLoader44;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory46.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = tomcatEmbeddedServletContainerFactory46.getMimeMappings();
        tomcatEmbeddedServletContainerFactory46.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection52 = tomcatEmbeddedServletContainerFactory46.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory53.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory53.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings59 = tomcatEmbeddedServletContainerFactory58.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList60 = tomcatEmbeddedServletContainerFactory58.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors = connectorList60;
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory53.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory63.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings66 = tomcatEmbeddedServletContainerFactory63.getMimeMappings();
        tomcatEmbeddedServletContainerFactory53.setMimeMappings(mimeMappings66);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList69 = tomcatEmbeddedServletContainerFactory68.tomcatConnectorCustomizers;
        int int70 = tomcatEmbeddedServletContainerFactory68.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray71 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory68.addContextLifecycleListeners(lifecycleListenerArray71);
        tomcatEmbeddedServletContainerFactory53.addContextLifecycleListeners(lifecycleListenerArray71);
        tomcatEmbeddedServletContainerFactory53.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader76 = tomcatEmbeddedServletContainerFactory53.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings78 = tomcatEmbeddedServletContainerFactory77.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory79 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList80 = tomcatEmbeddedServletContainerFactory79.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory77.tomcatConnectorCustomizers = tomcatConnectorCustomizerList80;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection82 = tomcatEmbeddedServletContainerFactory77.getContextLifecycleListeners();
        java.lang.String str83 = tomcatEmbeddedServletContainerFactory77.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList84 = tomcatEmbeddedServletContainerFactory77.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.ErrorPage errorPage85 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray86 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage85 };
        tomcatEmbeddedServletContainerFactory77.addErrorPages(errorPageArray86);
        tomcatEmbeddedServletContainerFactory53.addErrorPages(errorPageArray86);
        tomcatEmbeddedServletContainerFactory46.addErrorPages(errorPageArray86);
        tomcatEmbeddedServletContainerFactory39.addErrorPages(errorPageArray86);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray86);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-8" + "'", str4, "UTF-8");
        org.junit.Assert.assertNotNull(valveArray6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection18);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray34);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection52);
        org.junit.Assert.assertNotNull(mimeMappings59);
        org.junit.Assert.assertNotNull(connectorList60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings66);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray71);
        org.junit.Assert.assertNull(resourceLoader76);
        org.junit.Assert.assertNotNull(mimeMappings78);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList80);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "UTF-8" + "'", str83, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList84);
        org.junit.Assert.assertNotNull(errorPageArray86);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("org.apache.tomcat.util.scan.MergedWebXml", (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory4.protocol;
        tomcatEmbeddedServletContainerFactory4.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection17 = tomcatEmbeddedServletContainerFactory12.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList18 = tomcatEmbeddedServletContainerFactory12.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers = tomcatContextCustomizerList18;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList20 = tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList20;
        java.net.InetAddress inetAddress22 = tomcatEmbeddedServletContainerFactory2.getAddress();
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory2.getUriEncoding();
        org.springframework.core.io.ResourceLoader resourceLoader24 = tomcatEmbeddedServletContainerFactory2.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory25.getUriEncoding();
        int int27 = tomcatEmbeddedServletContainerFactory25.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader29 = null;
        tomcatEmbeddedServletContainerFactory25.resourceLoader = resourceLoader29;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory31.setTldSkip("UTF-8");
        java.io.File file37 = tomcatEmbeddedServletContainerFactory31.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory25.setBaseDirectory(file37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList42 = tomcatEmbeddedServletContainerFactory41.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers = tomcatConnectorCustomizerList42;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList45 = tomcatEmbeddedServletContainerFactory44.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection46 = tomcatEmbeddedServletContainerFactory44.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = tomcatEmbeddedServletContainerFactory47.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader49 = tomcatEmbeddedServletContainerFactory47.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray50 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory47.addErrorPages(errorPageArray50);
        tomcatEmbeddedServletContainerFactory44.addErrorPages(errorPageArray50);
        tomcatEmbeddedServletContainerFactory39.addErrorPages(errorPageArray50);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory54.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection59 = tomcatEmbeddedServletContainerFactory54.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory54.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection62 = tomcatEmbeddedServletContainerFactory54.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector63 = null;
        org.apache.catalina.connector.Connector[] connectorArray64 = new org.apache.catalina.connector.Connector[] { connector63 };
        tomcatEmbeddedServletContainerFactory54.addAdditionalTomcatConnectors(connectorArray64);
        tomcatEmbeddedServletContainerFactory39.addAdditionalTomcatConnectors(connectorArray64);
        tomcatEmbeddedServletContainerFactory25.addAdditionalTomcatConnectors(connectorArray64);
        tomcatEmbeddedServletContainerFactory2.addAdditionalTomcatConnectors(connectorArray64);
        java.util.Collection<org.apache.catalina.Valve> valveCollection69 = tomcatEmbeddedServletContainerFactory2.getValves();
        tomcatEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection17);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList20);
        org.junit.Assert.assertNull(inetAddress22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-8" + "'", str26, "UTF-8");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8080 + "'", int27 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file37.toString(), "/tmp/UTF-8.3462875105080969978.0");
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection46);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNull(resourceLoader49);
        org.junit.Assert.assertNotNull(errorPageArray50);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection59);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection62);
        org.junit.Assert.assertNotNull(connectorArray64);
        org.junit.Assert.assertNotNull(valveCollection69);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory2.getContextPath();
        java.io.File file6 = tomcatEmbeddedServletContainerFactory2.getDocumentRoot();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int2 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        tomcatEmbeddedServletContainerFactory6.setResourceLoader(resourceLoader7);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = tomcatEmbeddedServletContainerFactory6.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet9);
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file12 = tomcatEmbeddedServletContainerFactory0.createTempDir("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Prefix string too short");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8080 + "'", int2 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(errorPageSet9);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        org.apache.catalina.Context context9 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context9);
        java.net.InetAddress inetAddress11 = tomcatEmbeddedServletContainerFactory0.getAddress();
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors = connectorList21;
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory14.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader26 = tomcatEmbeddedServletContainerFactory24.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection32 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList33 = tomcatEmbeddedServletContainerFactory27.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory24.tomcatContextCustomizers = tomcatContextCustomizerList33;
        tomcatEmbeddedServletContainerFactory14.tomcatContextCustomizers = tomcatContextCustomizerList33;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = tomcatEmbeddedServletContainerFactory41.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList43 = tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList43;
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory36.protocol;
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory36.protocol;
        java.net.InetAddress inetAddress47 = null;
        tomcatEmbeddedServletContainerFactory36.setAddress(inetAddress47);
        tomcatEmbeddedServletContainerFactory36.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray51 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList52 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList52, valveArray51);
        tomcatEmbeddedServletContainerFactory36.contextValves = valveList52;
        tomcatEmbeddedServletContainerFactory14.contextValves = valveList52;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList52;
        org.apache.catalina.connector.Connector connector57 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNull(resourceLoader26);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection32);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList33);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(connectorList43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(valveArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection2 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        org.apache.catalina.Context context7 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveCollection2);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str4, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet5 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.net.InetAddress inetAddress6 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList8 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.apache.catalina.startup.Tomcat tomcat9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer10 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(errorPageSet5);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList8);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        int int2 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray3 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray3);
        tomcatEmbeddedServletContainerFactory0.protocol = "";
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("org.apache.tomcat.util.scan.MergedWebXml");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray3);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray16 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.protocol = "hi!";
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        java.util.concurrent.TimeUnit timeUnit23 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(10, timeUnit23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(lifecycleListenerArray16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str21, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList14;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory7.protocol;
        org.apache.catalina.Context context17 = null;
        tomcatEmbeddedServletContainerFactory7.postProcessContext(context17);
        java.io.File file20 = tomcatEmbeddedServletContainerFactory7.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file20);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file20.toString(), "/tmp/UTF-8.127011448834901823.0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-8" + "'", str24, "UTF-8");
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str2 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        org.apache.catalina.LifecycleEvent lifecycleEvent4 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str2, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader13 = tomcatEmbeddedServletContainerFactory11.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection19 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList20 = tomcatEmbeddedServletContainerFactory14.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory11.tomcatContextCustomizers = tomcatContextCustomizerList20;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList22 = tomcatEmbeddedServletContainerFactory11.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList30 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors = connectorList30;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory23.protocol;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory23.protocol;
        java.net.InetAddress inetAddress34 = null;
        tomcatEmbeddedServletContainerFactory23.setAddress(inetAddress34);
        int int36 = tomcatEmbeddedServletContainerFactory23.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory37.tomcatConnectorCustomizers = tomcatConnectorCustomizerList40;
        tomcatEmbeddedServletContainerFactory23.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList40);
        tomcatEmbeddedServletContainerFactory11.tomcatConnectorCustomizers = tomcatConnectorCustomizerList40;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory44.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory44.addInitializers(servletContextInitializerArray46);
        tomcatEmbeddedServletContainerFactory44.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray50 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory44.addContextLifecycleListeners(lifecycleListenerArray50);
        tomcatEmbeddedServletContainerFactory11.addContextLifecycleListeners(lifecycleListenerArray50);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray50);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection54 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        int int55 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection19);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList20);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList22);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(connectorList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-8" + "'", str45, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
        org.junit.Assert.assertNotNull(lifecycleListenerArray50);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList6 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.util.concurrent.TimeUnit timeUnit9 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 1, timeUnit9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection2 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.net.InetAddress inetAddress4 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader5;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) 'a');
        org.apache.catalina.startup.Tomcat tomcat9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer10 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveCollection2);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(inetAddress4);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList6 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(lifecycleListenerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.Context context4 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context4);
        java.util.Collection<org.apache.catalina.Valve> valveCollection6 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList10 = tomcatEmbeddedServletContainerFactory9.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory7.tomcatConnectorCustomizers = tomcatConnectorCustomizerList10;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection12 = tomcatEmbeddedServletContainerFactory7.getContextLifecycleListeners();
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory7.uriEncoding;
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection21 = tomcatEmbeddedServletContainerFactory16.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory16.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection24 = tomcatEmbeddedServletContainerFactory16.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector25 = null;
        org.apache.catalina.connector.Connector[] connectorArray26 = new org.apache.catalina.connector.Connector[] { connector25 };
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray26);
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray26);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray26);
        int int30 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.net.InetAddress inetAddress31 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean33 = tomcatEmbeddedServletContainerFactory32.isRegisterDefaultServlet();
        org.apache.catalina.Context context34 = null;
        tomcatEmbeddedServletContainerFactory32.postProcessContext(context34);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection41 = tomcatEmbeddedServletContainerFactory36.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory36.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector44 = null;
        org.apache.catalina.connector.Connector[] connectorArray45 = new org.apache.catalina.connector.Connector[] { connector44 };
        tomcatEmbeddedServletContainerFactory36.addAdditionalTomcatConnectors(connectorArray45);
        tomcatEmbeddedServletContainerFactory32.addAdditionalTomcatConnectors(connectorArray45);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray45);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection6);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList10);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection24);
        org.junit.Assert.assertNotNull(connectorArray26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(inetAddress31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection41);
        org.junit.Assert.assertNotNull(connectorArray45);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList10 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.apache.catalina.Context context11 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory12.protocol;
        int int18 = tomcatEmbeddedServletContainerFactory12.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList22 = tomcatEmbeddedServletContainerFactory21.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers = tomcatConnectorCustomizerList22;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection24 = tomcatEmbeddedServletContainerFactory19.getContextLifecycleListeners();
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory19.uriEncoding;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory19.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory27.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray29 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory27.addInitializers(servletContextInitializerArray29);
        tomcatEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray29);
        tomcatEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray29);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context11, servletContextInitializerArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList22);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-8" + "'", str26, "UTF-8");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UTF-8" + "'", str28, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray29);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray15);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList25 = tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors = connectorList25;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory18.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean29 = tomcatEmbeddedServletContainerFactory28.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList30 = tomcatEmbeddedServletContainerFactory28.contextValves;
        tomcatEmbeddedServletContainerFactory18.contextValves = valveList30;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory18.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList40 = tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors = connectorList40;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory33.protocol;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory33.protocol;
        java.net.InetAddress inetAddress44 = null;
        tomcatEmbeddedServletContainerFactory33.setAddress(inetAddress44);
        java.util.List<org.apache.catalina.connector.Connector> connectorList46 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory47.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory47.setTldSkip("UTF-8");
        java.io.File file53 = tomcatEmbeddedServletContainerFactory47.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory33.setDocumentRoot(file53);
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory57.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory57.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings63 = tomcatEmbeddedServletContainerFactory62.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList64 = tomcatEmbeddedServletContainerFactory62.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory57.additionalTomcatConnectors = connectorList64;
        java.lang.String str66 = tomcatEmbeddedServletContainerFactory57.protocol;
        java.lang.String str67 = tomcatEmbeddedServletContainerFactory57.protocol;
        tomcatEmbeddedServletContainerFactory57.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection70 = tomcatEmbeddedServletContainerFactory57.getTomcatContextCustomizers();
        int int71 = tomcatEmbeddedServletContainerFactory57.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory72.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory72.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings78 = tomcatEmbeddedServletContainerFactory77.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList79 = tomcatEmbeddedServletContainerFactory77.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory72.additionalTomcatConnectors = connectorList79;
        java.lang.String str81 = tomcatEmbeddedServletContainerFactory72.protocol;
        java.lang.String str82 = tomcatEmbeddedServletContainerFactory72.protocol;
        java.net.InetAddress inetAddress83 = null;
        tomcatEmbeddedServletContainerFactory72.setAddress(inetAddress83);
        java.util.List<org.apache.catalina.connector.Connector> connectorList85 = tomcatEmbeddedServletContainerFactory72.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory86 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory86.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory86.setTldSkip("UTF-8");
        java.io.File file92 = tomcatEmbeddedServletContainerFactory86.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory72.setDocumentRoot(file92);
        tomcatEmbeddedServletContainerFactory57.setDocumentRoot(file92);
        tomcatEmbeddedServletContainerFactory33.baseDirectory = file92;
        tomcatEmbeddedServletContainerFactory18.setDocumentRoot(file92);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList97 = tomcatEmbeddedServletContainerFactory18.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList97;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(connectorList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(valveList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(connectorList40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(connectorList46);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file53.toString(), "/tmp/UTF-8.2881407724149740713.0");
        org.junit.Assert.assertNotNull(mimeMappings63);
        org.junit.Assert.assertNotNull(connectorList64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(mimeMappings78);
        org.junit.Assert.assertNotNull(connectorList79);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertNotNull(connectorList85);
        org.junit.Assert.assertNotNull(file92);
        org.junit.Assert.assertEquals(file92.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file92.toString(), "/tmp/UTF-8.3983757269770881126.0");
        org.junit.Assert.assertNotNull(lifecycleListenerList97);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        java.net.InetAddress inetAddress12 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.net.InetAddress inetAddress13 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress13);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(inetAddress12);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList2 = tomcatEmbeddedServletContainerFactory0.contextValves;
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveList2);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList11 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        tomcatEmbeddedServletContainerFactory15.setResourceLoader(resourceLoader16);
        tomcatEmbeddedServletContainerFactory15.setPort(10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory21.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection26 = tomcatEmbeddedServletContainerFactory21.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory15.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection26);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection26);
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "org.apache.coyote.http11.Http11NioProtocol";
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str12, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection26);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray15);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.protocol = "hi!";
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory21.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory26.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList28 = tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList29 = tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors = connectorList29;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList31 = tomcatEmbeddedServletContainerFactory21.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList31;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList40 = tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors = connectorList40;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory33.protocol;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory33.protocol;
        java.net.InetAddress inetAddress44 = null;
        tomcatEmbeddedServletContainerFactory33.setAddress(inetAddress44);
        java.util.List<org.apache.catalina.Valve> valveList46 = tomcatEmbeddedServletContainerFactory33.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection47 = tomcatEmbeddedServletContainerFactory33.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory48.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList55 = tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors = connectorList55;
        java.lang.String str57 = tomcatEmbeddedServletContainerFactory48.protocol;
        java.lang.String str58 = tomcatEmbeddedServletContainerFactory48.protocol;
        tomcatEmbeddedServletContainerFactory48.setUriEncoding("hi!");
        boolean boolean61 = tomcatEmbeddedServletContainerFactory48.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory62.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory62.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings68 = tomcatEmbeddedServletContainerFactory67.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList69 = tomcatEmbeddedServletContainerFactory67.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory62.additionalTomcatConnectors = connectorList69;
        org.apache.catalina.Context context71 = null;
        tomcatEmbeddedServletContainerFactory62.postProcessContext(context71);
        java.net.InetAddress inetAddress73 = tomcatEmbeddedServletContainerFactory62.getAddress();
        tomcatEmbeddedServletContainerFactory62.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory76.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory76.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings82 = tomcatEmbeddedServletContainerFactory81.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList83 = tomcatEmbeddedServletContainerFactory81.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory76.additionalTomcatConnectors = connectorList83;
        org.apache.catalina.Context context85 = null;
        tomcatEmbeddedServletContainerFactory76.postProcessContext(context85);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory89 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str90 = tomcatEmbeddedServletContainerFactory89.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray91 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory89.addConnectorCustomizers(tomcatConnectorCustomizerArray91);
        tomcatEmbeddedServletContainerFactory76.addConnectorCustomizers(tomcatConnectorCustomizerArray91);
        tomcatEmbeddedServletContainerFactory62.addConnectorCustomizers(tomcatConnectorCustomizerArray91);
        tomcatEmbeddedServletContainerFactory48.addConnectorCustomizers(tomcatConnectorCustomizerArray91);
        tomcatEmbeddedServletContainerFactory33.addConnectorCustomizers(tomcatConnectorCustomizerArray91);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray91);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList98 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str20, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(connectorList28);
        org.junit.Assert.assertNotNull(connectorList29);
        org.junit.Assert.assertNotNull(lifecycleListenerList31);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(connectorList40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(valveList46);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection47);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(connectorList55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(mimeMappings68);
        org.junit.Assert.assertNotNull(connectorList69);
        org.junit.Assert.assertNull(inetAddress73);
        org.junit.Assert.assertNotNull(mimeMappings82);
        org.junit.Assert.assertNotNull(connectorList83);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray91);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList98);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        java.util.List<org.apache.catalina.Valve> valveList9 = tomcatEmbeddedServletContainerFactory0.contextValves;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 0);
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(valveList9);
        org.junit.Assert.assertNull(resourceLoader12);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        boolean boolean14 = tomcatEmbeddedServletContainerFactory8.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader17 = tomcatEmbeddedServletContainerFactory15.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection23 = tomcatEmbeddedServletContainerFactory18.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList24 = tomcatEmbeddedServletContainerFactory18.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory15.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList24;
        boolean boolean28 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean30 = tomcatEmbeddedServletContainerFactory29.isRegisterDefaultServlet();
        org.apache.catalina.Context context31 = null;
        tomcatEmbeddedServletContainerFactory29.postProcessContext(context31);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection38 = tomcatEmbeddedServletContainerFactory33.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory33.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector41 = null;
        org.apache.catalina.connector.Connector[] connectorArray42 = new org.apache.catalina.connector.Connector[] { connector41 };
        tomcatEmbeddedServletContainerFactory33.addAdditionalTomcatConnectors(connectorArray42);
        tomcatEmbeddedServletContainerFactory29.addAdditionalTomcatConnectors(connectorArray42);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = tomcatEmbeddedServletContainerFactory45.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList48 = tomcatEmbeddedServletContainerFactory47.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory45.tomcatConnectorCustomizers = tomcatConnectorCustomizerList48;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection50 = tomcatEmbeddedServletContainerFactory45.getContextLifecycleListeners();
        java.lang.String str51 = tomcatEmbeddedServletContainerFactory45.uriEncoding;
        tomcatEmbeddedServletContainerFactory45.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory54.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection59 = tomcatEmbeddedServletContainerFactory54.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory54.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection62 = tomcatEmbeddedServletContainerFactory54.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector63 = null;
        org.apache.catalina.connector.Connector[] connectorArray64 = new org.apache.catalina.connector.Connector[] { connector63 };
        tomcatEmbeddedServletContainerFactory54.addAdditionalTomcatConnectors(connectorArray64);
        tomcatEmbeddedServletContainerFactory45.addAdditionalTomcatConnectors(connectorArray64);
        tomcatEmbeddedServletContainerFactory29.addAdditionalTomcatConnectors(connectorArray64);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory68.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory68.setTldSkip("UTF-8");
        org.apache.catalina.Context context73 = null;
        tomcatEmbeddedServletContainerFactory68.postProcessContext(context73);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory75.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory75.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings81 = tomcatEmbeddedServletContainerFactory80.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList82 = tomcatEmbeddedServletContainerFactory80.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory75.additionalTomcatConnectors = connectorList82;
        java.lang.String str84 = tomcatEmbeddedServletContainerFactory75.protocol;
        java.lang.String str85 = tomcatEmbeddedServletContainerFactory75.protocol;
        java.net.InetAddress inetAddress86 = null;
        tomcatEmbeddedServletContainerFactory75.setAddress(inetAddress86);
        java.util.List<org.apache.catalina.connector.Connector> connectorList88 = tomcatEmbeddedServletContainerFactory75.additionalTomcatConnectors;
        java.io.File file89 = tomcatEmbeddedServletContainerFactory75.baseDirectory;
        org.apache.catalina.Valve[] valveArray90 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory75.addContextValves(valveArray90);
        tomcatEmbeddedServletContainerFactory68.addContextValves(valveArray90);
        tomcatEmbeddedServletContainerFactory29.addContextValves(valveArray90);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray90);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection23);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection38);
        org.junit.Assert.assertNotNull(connectorArray42);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList48);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "UTF-8" + "'", str51, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection59);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection62);
        org.junit.Assert.assertNotNull(connectorArray64);
        org.junit.Assert.assertNotNull(mimeMappings81);
        org.junit.Assert.assertNotNull(connectorList82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
        org.junit.Assert.assertNotNull(connectorList88);
        org.junit.Assert.assertNull(file89);
        org.junit.Assert.assertNotNull(valveArray90);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList6 = tomcatEmbeddedServletContainerFactory5.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection7 = tomcatEmbeddedServletContainerFactory5.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader10 = tomcatEmbeddedServletContainerFactory8.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray11 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory8.addErrorPages(errorPageArray11);
        tomcatEmbeddedServletContainerFactory5.addErrorPages(errorPageArray11);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray11);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors = connectorList22;
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory15.protocol;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory15.protocol;
        tomcatEmbeddedServletContainerFactory15.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection28 = tomcatEmbeddedServletContainerFactory15.getTomcatContextCustomizers();
        int int29 = tomcatEmbeddedServletContainerFactory15.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory30.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory35.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory35.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors = connectorList37;
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory30.protocol;
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory30.protocol;
        java.net.InetAddress inetAddress41 = null;
        tomcatEmbeddedServletContainerFactory30.setAddress(inetAddress41);
        java.util.List<org.apache.catalina.connector.Connector> connectorList43 = tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory44.setTldSkip("UTF-8");
        java.io.File file50 = tomcatEmbeddedServletContainerFactory44.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory30.setDocumentRoot(file50);
        tomcatEmbeddedServletContainerFactory15.setDocumentRoot(file50);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory53.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory53.setProtocol("hi!");
        java.lang.String str58 = tomcatEmbeddedServletContainerFactory53.protocol;
        tomcatEmbeddedServletContainerFactory53.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory61.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory61.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection66 = tomcatEmbeddedServletContainerFactory61.getTomcatConnectorCustomizers();
        boolean boolean67 = tomcatEmbeddedServletContainerFactory61.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings69 = tomcatEmbeddedServletContainerFactory68.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader70 = tomcatEmbeddedServletContainerFactory68.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory71.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory71.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection76 = tomcatEmbeddedServletContainerFactory71.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList77 = tomcatEmbeddedServletContainerFactory71.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory68.tomcatContextCustomizers = tomcatContextCustomizerList77;
        tomcatEmbeddedServletContainerFactory61.tomcatContextCustomizers = tomcatContextCustomizerList77;
        tomcatEmbeddedServletContainerFactory53.tomcatContextCustomizers = tomcatContextCustomizerList77;
        boolean boolean81 = tomcatEmbeddedServletContainerFactory53.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory83.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList86 = tomcatEmbeddedServletContainerFactory83.tomcatConnectorCustomizers;
        java.io.File file87 = tomcatEmbeddedServletContainerFactory83.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList88 = tomcatEmbeddedServletContainerFactory83.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory53.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList88);
        tomcatEmbeddedServletContainerFactory15.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList88);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList88);
        java.net.InetAddress inetAddress92 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress92);
        org.apache.catalina.Context context94 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList6);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection7);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(resourceLoader10);
        org.junit.Assert.assertNotNull(errorPageArray11);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(connectorList43);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file50.toString(), "/tmp/UTF-8.7752642041915537563.0");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(mimeMappings69);
        org.junit.Assert.assertNull(resourceLoader70);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection76);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList86);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList88);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory2.uriEncoding;
        tomcatEmbeddedServletContainerFactory2.setUriEncoding("");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory2.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection11 = tomcatEmbeddedServletContainerFactory7.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray12 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList13 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList13, lifecycleListenerArray12);
        tomcatEmbeddedServletContainerFactory7.contextLifecycleListeners = lifecycleListenerList13;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList23 = tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors = connectorList23;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory16.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory26.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader28 = tomcatEmbeddedServletContainerFactory26.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection34 = tomcatEmbeddedServletContainerFactory29.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList35 = tomcatEmbeddedServletContainerFactory29.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory26.tomcatContextCustomizers = tomcatContextCustomizerList35;
        tomcatEmbeddedServletContainerFactory16.tomcatContextCustomizers = tomcatContextCustomizerList35;
        java.io.File file39 = tomcatEmbeddedServletContainerFactory16.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        tomcatEmbeddedServletContainerFactory7.setBaseDirectory(file39);
        tomcatEmbeddedServletContainerFactory2.baseDirectory = file39;
        tomcatEmbeddedServletContainerFactory2.uriEncoding = "UTF-8";
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str6, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(valveCollection11);
        org.junit.Assert.assertNotNull(lifecycleListenerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(connectorList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection34);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList35);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.7276567463504287076.0");
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.io.File file5 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.io.File file20 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        org.apache.catalina.Context context18 = null;
        tomcatEmbeddedServletContainerFactory9.postProcessContext(context18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory22.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray24 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory22.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory9.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        java.io.File file28 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.apache.catalina.connector.Connector connector29 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray24);
        org.junit.Assert.assertNull(file28);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList6 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.io.File file8 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file10 = tomcatEmbeddedServletContainerFactory0.createTempDir("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Prefix string too short");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection21 = tomcatEmbeddedServletContainerFactory17.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList23 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList23, lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory17.contextLifecycleListeners = lifecycleListenerList23;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList23;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection27 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        tomcatEmbeddedServletContainerFactory28.setProtocol("UTF-8");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList34 = tomcatEmbeddedServletContainerFactory28.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList34;
        java.util.concurrent.TimeUnit timeUnit37 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) 'a', timeUnit37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(valveCollection21);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection27);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(lifecycleListenerList34);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection2 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory3.setSessionTimeout((int) (byte) -1);
        tomcatEmbeddedServletContainerFactory3.protocol = "org.apache.coyote.http11.Http11NioProtocol";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.apache.catalina.Context context23 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveCollection2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList16;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory18.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray20);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray20);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.protocol;
        boolean boolean24 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList14;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.springframework.core.io.ResourceLoader resourceLoader18 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors = connectorList26;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory19.protocol;
        tomcatEmbeddedServletContainerFactory19.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file36 = tomcatEmbeddedServletContainerFactory34.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory19.setBaseDirectory(file36);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file36;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet39 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str17, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNull(resourceLoader18);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file36.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6691564827233318627.100");
        org.junit.Assert.assertNotNull(errorPageSet39);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray5 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList6 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList6, lifecycleListenerArray5);
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList6;
        java.io.File file10 = tomcatEmbeddedServletContainerFactory0.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList14 = tomcatEmbeddedServletContainerFactory13.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory11.tomcatConnectorCustomizers = tomcatConnectorCustomizerList14;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection16 = tomcatEmbeddedServletContainerFactory11.getContextLifecycleListeners();
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory11.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList25 = tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors = connectorList26;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory28.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray30 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray30);
        tomcatEmbeddedServletContainerFactory28.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray34 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory28.addContextLifecycleListeners(lifecycleListenerArray34);
        tomcatEmbeddedServletContainerFactory18.addContextLifecycleListeners(lifecycleListenerArray34);
        tomcatEmbeddedServletContainerFactory11.addContextLifecycleListeners(lifecycleListenerArray34);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray38 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory11.addContextCustomizers(tomcatContextCustomizerArray38);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory40.getMimeMappings();
        org.apache.catalina.Context context44 = null;
        tomcatEmbeddedServletContainerFactory40.postProcessContext(context44);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList47 = tomcatEmbeddedServletContainerFactory46.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection48 = tomcatEmbeddedServletContainerFactory46.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader51 = tomcatEmbeddedServletContainerFactory49.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray52 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory49.addErrorPages(errorPageArray52);
        tomcatEmbeddedServletContainerFactory46.addErrorPages(errorPageArray52);
        tomcatEmbeddedServletContainerFactory40.addErrorPages(errorPageArray52);
        tomcatEmbeddedServletContainerFactory11.addErrorPages(errorPageArray52);
        tomcatEmbeddedServletContainerFactory11.setPort(8080);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory59.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory59.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = tomcatEmbeddedServletContainerFactory64.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList66 = tomcatEmbeddedServletContainerFactory64.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory59.additionalTomcatConnectors = connectorList66;
        java.lang.String str68 = tomcatEmbeddedServletContainerFactory59.protocol;
        java.lang.String str69 = tomcatEmbeddedServletContainerFactory59.protocol;
        java.net.InetAddress inetAddress70 = null;
        tomcatEmbeddedServletContainerFactory59.setAddress(inetAddress70);
        org.springframework.core.io.ResourceLoader resourceLoader72 = tomcatEmbeddedServletContainerFactory59.resourceLoader;
        java.io.File file74 = tomcatEmbeddedServletContainerFactory59.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        tomcatEmbeddedServletContainerFactory11.setBaseDirectory(file74);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file74;
        java.lang.String str77 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNotNull(lifecycleListenerArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file10.toString(), "/tmp/web-app>\n.6355938322559616299.0");
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList14);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-8" + "'", str17, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(connectorList25);
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-8" + "'", str29, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray30);
        org.junit.Assert.assertNotNull(lifecycleListenerArray34);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray38);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList47);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection48);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNull(resourceLoader51);
        org.junit.Assert.assertNotNull(errorPageArray52);
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertNotNull(connectorList66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNull(resourceLoader72);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file74.toString(), "/tmp/web-app>\n.5971909050813248837.0");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str77, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str2 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        org.apache.catalina.Context context4 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection8 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection14 = tomcatEmbeddedServletContainerFactory9.getTomcatConnectorCustomizers();
        boolean boolean15 = tomcatEmbeddedServletContainerFactory9.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress16 = null;
        tomcatEmbeddedServletContainerFactory9.setAddress(inetAddress16);
        java.util.List<org.apache.catalina.Valve> valveList18 = tomcatEmbeddedServletContainerFactory9.contextValves;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList23 = tomcatEmbeddedServletContainerFactory22.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory20.tomcatConnectorCustomizers = tomcatConnectorCustomizerList23;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection25 = tomcatEmbeddedServletContainerFactory20.getContextLifecycleListeners();
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory20.uriEncoding;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory20.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList29 = tomcatEmbeddedServletContainerFactory28.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory20.tomcatConnectorCustomizers = tomcatConnectorCustomizerList29;
        org.apache.catalina.connector.Connector connector31 = null;
        org.apache.catalina.connector.Connector[] connectorArray32 = new org.apache.catalina.connector.Connector[] { connector31 };
        tomcatEmbeddedServletContainerFactory20.addAdditionalTomcatConnectors(connectorArray32);
        tomcatEmbeddedServletContainerFactory9.addAdditionalTomcatConnectors(connectorArray32);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray32);
        org.apache.catalina.Context context36 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(valveList18);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList23);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-8" + "'", str26, "UTF-8");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList29);
        org.junit.Assert.assertNotNull(connectorArray32);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory3.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers = tomcatConnectorCustomizerList4;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory1.getContextLifecycleListeners();
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory1.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory1.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList13 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection14 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str10, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(lifecycleListenerList13);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection14);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList9 = tomcatEmbeddedServletContainerFactory6.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection10 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory6.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList11;
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file14 = tomcatEmbeddedServletContainerFactory0.createTempDir("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Prefix string too short");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(valveList9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection10);
        org.junit.Assert.assertNotNull(connectorList11);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        boolean boolean12 = tomcatEmbeddedServletContainerFactory6.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress13 = null;
        tomcatEmbeddedServletContainerFactory6.setAddress(inetAddress13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory6.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory16.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList19 = tomcatEmbeddedServletContainerFactory16.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection20 = tomcatEmbeddedServletContainerFactory16.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory16.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory16.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList24 = tomcatEmbeddedServletContainerFactory16.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory25.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory30.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors = connectorList32;
        org.apache.catalina.Context context34 = null;
        tomcatEmbeddedServletContainerFactory25.postProcessContext(context34);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory38.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray40 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory38.addConnectorCustomizers(tomcatConnectorCustomizerArray40);
        tomcatEmbeddedServletContainerFactory25.addConnectorCustomizers(tomcatConnectorCustomizerArray40);
        tomcatEmbeddedServletContainerFactory16.addConnectorCustomizers(tomcatConnectorCustomizerArray40);
        tomcatEmbeddedServletContainerFactory6.addConnectorCustomizers(tomcatConnectorCustomizerArray40);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray40);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Initializers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(valveList19);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection20);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertNotNull(connectorList24);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray40);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (short) 0);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection3 = tomcatEmbeddedServletContainerFactory2.getContextLifecycleListeners();
        java.lang.Class<?> wildcardClass4 = tomcatEmbeddedServletContainerFactory2.getClass();
        org.junit.Assert.assertNotNull(lifecycleListenerCollection3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList12 = tomcatEmbeddedServletContainerFactory10.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList12;
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        int int15 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader16 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory21.setTldSkip("UTF-8");
        org.apache.catalina.Context context26 = null;
        tomcatEmbeddedServletContainerFactory21.postProcessContext(context26);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors = connectorList35;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory28.protocol;
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory28.protocol;
        java.net.InetAddress inetAddress39 = null;
        tomcatEmbeddedServletContainerFactory28.setAddress(inetAddress39);
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        java.io.File file42 = tomcatEmbeddedServletContainerFactory28.baseDirectory;
        org.apache.catalina.Valve[] valveArray43 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory28.addContextValves(valveArray43);
        tomcatEmbeddedServletContainerFactory21.addContextValves(valveArray43);
        tomcatEmbeddedServletContainerFactory20.addContextValves(valveArray43);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray43);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valveList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(resourceLoader16);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(valveArray43);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        boolean boolean14 = tomcatEmbeddedServletContainerFactory8.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader17 = tomcatEmbeddedServletContainerFactory15.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection23 = tomcatEmbeddedServletContainerFactory18.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList24 = tomcatEmbeddedServletContainerFactory18.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory15.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList24;
        boolean boolean28 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.core.io.ResourceLoader resourceLoader29 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader29);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection23);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray3 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray3);
        boolean boolean5 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.net.InetAddress inetAddress6 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList10 = null;
        tomcatEmbeddedServletContainerFactory7.contextLifecycleListeners = lifecycleListenerList10;
        java.net.InetAddress inetAddress12 = null;
        tomcatEmbeddedServletContainerFactory7.setAddress(inetAddress12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory14.setProtocol("UTF-8");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory14.protocol;
        tomcatEmbeddedServletContainerFactory14.setTldSkip("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList24 = tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList27 = tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory25.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection30 = tomcatEmbeddedServletContainerFactory25.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory31.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList38 = tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors = connectorList38;
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory31.protocol;
        java.lang.String str41 = tomcatEmbeddedServletContainerFactory31.protocol;
        java.net.InetAddress inetAddress42 = null;
        tomcatEmbeddedServletContainerFactory31.setAddress(inetAddress42);
        java.io.File file44 = null;
        tomcatEmbeddedServletContainerFactory31.setBaseDirectory(file44);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray46 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory31.addContextCustomizers(tomcatContextCustomizerArray46);
        tomcatEmbeddedServletContainerFactory25.addContextCustomizers(tomcatContextCustomizerArray46);
        tomcatEmbeddedServletContainerFactory14.addContextCustomizers(tomcatContextCustomizerArray46);
        tomcatEmbeddedServletContainerFactory7.addContextCustomizers(tomcatContextCustomizerArray46);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray46);
        tomcatEmbeddedServletContainerFactory0.protocol = "UTF-8";
        org.apache.catalina.Context context54 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(errorPageArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList24);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNotNull(connectorList27);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection30);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(connectorList38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray46);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector9 = null;
        org.apache.catalina.connector.Connector[] connectorArray10 = new org.apache.catalina.connector.Connector[] { connector9 };
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        boolean boolean13 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean14 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file16 = tomcatEmbeddedServletContainerFactory0.createTempDir("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Prefix string too short");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(connectorArray10);
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(10);
        tomcatEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.io.File file6 = tomcatEmbeddedServletContainerFactory0.createTempDir("UTF-8");
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.apache.catalina.Context context8 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file6.toString(), "/tmp/UTF-8.4202078299641263068.0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str7, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory4.additionalTomcatConnectors = connectorList11;
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory4.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory4.setMimeMappings(mimeMappings17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList20 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        int int21 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory19.addContextLifecycleListeners(lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory4.addContextLifecycleListeners(lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection31 = tomcatEmbeddedServletContainerFactory26.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory26.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector34 = null;
        org.apache.catalina.connector.Connector[] connectorArray35 = new org.apache.catalina.connector.Connector[] { connector34 };
        tomcatEmbeddedServletContainerFactory26.addAdditionalTomcatConnectors(connectorArray35);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray35);
        tomcatEmbeddedServletContainerFactory0.setProtocol("org.apache.coyote.http11.Http11NioProtocol");
        java.net.InetAddress inetAddress40 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.apache.catalina.Context context41 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context41, servletContextInitializerArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection31);
        org.junit.Assert.assertNotNull(connectorArray35);
        org.junit.Assert.assertNull(inetAddress40);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.Context context4 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader11 = tomcatEmbeddedServletContainerFactory9.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray12 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory9.addErrorPages(errorPageArray12);
        tomcatEmbeddedServletContainerFactory6.addErrorPages(errorPageArray12);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray12);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection16 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory18.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray20);
        tomcatEmbeddedServletContainerFactory18.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray24 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory18.addContextLifecycleListeners(lifecycleListenerArray24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors = connectorList33;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory26.protocol;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory26.protocol;
        tomcatEmbeddedServletContainerFactory26.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection39 = tomcatEmbeddedServletContainerFactory26.getTomcatContextCustomizers();
        int int40 = tomcatEmbeddedServletContainerFactory26.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory41.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory41.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = tomcatEmbeddedServletContainerFactory46.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList48 = tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors = connectorList48;
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory41.protocol;
        java.lang.String str51 = tomcatEmbeddedServletContainerFactory41.protocol;
        java.net.InetAddress inetAddress52 = null;
        tomcatEmbeddedServletContainerFactory41.setAddress(inetAddress52);
        java.util.List<org.apache.catalina.connector.Connector> connectorList54 = tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory55.setTldSkip("UTF-8");
        java.io.File file61 = tomcatEmbeddedServletContainerFactory55.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory41.setDocumentRoot(file61);
        tomcatEmbeddedServletContainerFactory26.setDocumentRoot(file61);
        tomcatEmbeddedServletContainerFactory18.baseDirectory = file61;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings66 = tomcatEmbeddedServletContainerFactory65.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList68 = tomcatEmbeddedServletContainerFactory67.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory65.tomcatConnectorCustomizers = tomcatConnectorCustomizerList68;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet70 = tomcatEmbeddedServletContainerFactory65.getErrorPages();
        tomcatEmbeddedServletContainerFactory18.setErrorPages(errorPageSet70);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet70);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory73.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory73.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings79 = tomcatEmbeddedServletContainerFactory78.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList80 = tomcatEmbeddedServletContainerFactory78.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList81 = tomcatEmbeddedServletContainerFactory78.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory73.additionalTomcatConnectors = connectorList81;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str84 = tomcatEmbeddedServletContainerFactory83.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray85 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory83.addInitializers(servletContextInitializerArray85);
        tomcatEmbeddedServletContainerFactory83.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray89 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory83.addContextLifecycleListeners(lifecycleListenerArray89);
        tomcatEmbeddedServletContainerFactory73.addContextLifecycleListeners(lifecycleListenerArray89);
        org.apache.catalina.Context context92 = null;
        tomcatEmbeddedServletContainerFactory73.postProcessContext(context92);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings94 = tomcatEmbeddedServletContainerFactory73.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings94);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNull(resourceLoader11);
        org.junit.Assert.assertNotNull(errorPageArray12);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection16);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertNotNull(lifecycleListenerArray24);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNotNull(connectorList48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(connectorList54);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file61.toString(), "/tmp/UTF-8.7202075683085573693.0");
        org.junit.Assert.assertNotNull(mimeMappings66);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList68);
        org.junit.Assert.assertNotNull(errorPageSet70);
        org.junit.Assert.assertNotNull(mimeMappings79);
        org.junit.Assert.assertNotNull(connectorList80);
        org.junit.Assert.assertNotNull(connectorList81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "UTF-8" + "'", str84, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray85);
        org.junit.Assert.assertNotNull(lifecycleListenerArray89);
        org.junit.Assert.assertNotNull(mimeMappings94);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-8" + "'", str4, "UTF-8");
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1);
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList17;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList19 = tomcatEmbeddedServletContainerFactory9.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory20.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList27 = tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors = connectorList27;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory20.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory30.getMimeMappings();
        tomcatEmbeddedServletContainerFactory20.setMimeMappings(mimeMappings33);
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory20.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = tomcatEmbeddedServletContainerFactory41.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList43 = tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList43;
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory36.protocol;
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory36.protocol;
        tomcatEmbeddedServletContainerFactory36.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection49 = tomcatEmbeddedServletContainerFactory36.getTomcatContextCustomizers();
        int int50 = tomcatEmbeddedServletContainerFactory36.getPort();
        java.io.File file52 = tomcatEmbeddedServletContainerFactory36.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory20.baseDirectory = file52;
        tomcatEmbeddedServletContainerFactory9.setDocumentRoot(file52);
        java.net.InetAddress inetAddress55 = tomcatEmbeddedServletContainerFactory9.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = tomcatEmbeddedServletContainerFactory56.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader58 = tomcatEmbeddedServletContainerFactory56.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory59.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory59.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection64 = tomcatEmbeddedServletContainerFactory59.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList65 = tomcatEmbeddedServletContainerFactory59.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory56.tomcatContextCustomizers = tomcatContextCustomizerList65;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList67 = tomcatEmbeddedServletContainerFactory56.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory68.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory68.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings74 = tomcatEmbeddedServletContainerFactory73.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList75 = tomcatEmbeddedServletContainerFactory73.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory68.additionalTomcatConnectors = connectorList75;
        java.lang.String str77 = tomcatEmbeddedServletContainerFactory68.protocol;
        java.lang.String str78 = tomcatEmbeddedServletContainerFactory68.protocol;
        java.net.InetAddress inetAddress79 = null;
        tomcatEmbeddedServletContainerFactory68.setAddress(inetAddress79);
        int int81 = tomcatEmbeddedServletContainerFactory68.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings83 = tomcatEmbeddedServletContainerFactory82.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory84 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList85 = tomcatEmbeddedServletContainerFactory84.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory82.tomcatConnectorCustomizers = tomcatConnectorCustomizerList85;
        tomcatEmbeddedServletContainerFactory68.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList85);
        tomcatEmbeddedServletContainerFactory56.tomcatConnectorCustomizers = tomcatConnectorCustomizerList85;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory89 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str90 = tomcatEmbeddedServletContainerFactory89.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray91 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory89.addInitializers(servletContextInitializerArray91);
        tomcatEmbeddedServletContainerFactory89.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray95 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory89.addContextLifecycleListeners(lifecycleListenerArray95);
        tomcatEmbeddedServletContainerFactory56.addContextLifecycleListeners(lifecycleListenerArray95);
        tomcatEmbeddedServletContainerFactory9.addContextLifecycleListeners(lifecycleListenerArray95);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray95);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertNotNull(lifecycleListenerList19);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNotNull(connectorList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(connectorList43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file52.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.4029750097803273453.0");
        org.junit.Assert.assertNull(inetAddress55);
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertNull(resourceLoader58);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection64);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList65);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList67);
        org.junit.Assert.assertNotNull(mimeMappings74);
        org.junit.Assert.assertNotNull(connectorList75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(mimeMappings83);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList85);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "UTF-8" + "'", str90, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray91);
        org.junit.Assert.assertNotNull(lifecycleListenerArray95);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader7 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.util.Collection<org.apache.catalina.Valve> valveCollection8 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertNotNull(valveCollection8);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        org.apache.catalina.connector.Connector connector11 = null;
        org.apache.catalina.connector.Connector[] connectorArray12 = new org.apache.catalina.connector.Connector[] { connector11 };
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList15 = tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection16 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList17 = tomcatEmbeddedServletContainerFactory14.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection18);
        java.net.InetAddress inetAddress20 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress20);
        java.util.List<org.apache.catalina.Valve> valveList22 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.util.Collection<org.apache.catalina.Valve> valveCollection24 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.lang.Class<?> wildcardClass25 = valveCollection24.getClass();
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(connectorArray12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection16);
        org.junit.Assert.assertNotNull(valveList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(valveList22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(valveCollection24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader13 = tomcatEmbeddedServletContainerFactory11.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection19 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList20 = tomcatEmbeddedServletContainerFactory14.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory11.tomcatContextCustomizers = tomcatContextCustomizerList20;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList22 = tomcatEmbeddedServletContainerFactory11.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList30 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors = connectorList30;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory23.protocol;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory23.protocol;
        java.net.InetAddress inetAddress34 = null;
        tomcatEmbeddedServletContainerFactory23.setAddress(inetAddress34);
        int int36 = tomcatEmbeddedServletContainerFactory23.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory37.tomcatConnectorCustomizers = tomcatConnectorCustomizerList40;
        tomcatEmbeddedServletContainerFactory23.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList40);
        tomcatEmbeddedServletContainerFactory11.tomcatConnectorCustomizers = tomcatConnectorCustomizerList40;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory44.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory44.addInitializers(servletContextInitializerArray46);
        tomcatEmbeddedServletContainerFactory44.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray50 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory44.addContextLifecycleListeners(lifecycleListenerArray50);
        tomcatEmbeddedServletContainerFactory11.addContextLifecycleListeners(lifecycleListenerArray50);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray50);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList55 = tomcatEmbeddedServletContainerFactory54.tomcatConnectorCustomizers;
        int int56 = tomcatEmbeddedServletContainerFactory54.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList58 = tomcatEmbeddedServletContainerFactory57.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory54.tomcatConnectorCustomizers = tomcatConnectorCustomizerList58;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory60.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory60.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection65 = tomcatEmbeddedServletContainerFactory60.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory60.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector68 = null;
        org.apache.catalina.connector.Connector[] connectorArray69 = new org.apache.catalina.connector.Connector[] { connector68 };
        tomcatEmbeddedServletContainerFactory60.addAdditionalTomcatConnectors(connectorArray69);
        tomcatEmbeddedServletContainerFactory54.addAdditionalTomcatConnectors(connectorArray69);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray69);
        java.lang.Class<?> wildcardClass73 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection19);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList20);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList22);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(connectorList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-8" + "'", str45, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
        org.junit.Assert.assertNotNull(lifecycleListenerArray50);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList58);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection65);
        org.junit.Assert.assertNotNull(connectorArray69);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader14 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray16 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet17, errorPageArray16);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet17);
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str15, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(errorPageArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray16 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors = connectorList26;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.net.InetAddress inetAddress30 = null;
        tomcatEmbeddedServletContainerFactory19.setAddress(inetAddress30);
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setTldSkip("UTF-8");
        java.io.File file39 = tomcatEmbeddedServletContainerFactory33.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory19.setDocumentRoot(file39);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file39);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray44);
        tomcatEmbeddedServletContainerFactory42.setUriEncoding("hi!");
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        tomcatEmbeddedServletContainerFactory42.setSessionTimeout((int) (short) 100);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList51 = tomcatEmbeddedServletContainerFactory42.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory52.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = tomcatEmbeddedServletContainerFactory57.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList59 = tomcatEmbeddedServletContainerFactory57.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory52.additionalTomcatConnectors = connectorList59;
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory52.protocol;
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory52.protocol;
        tomcatEmbeddedServletContainerFactory52.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection65 = tomcatEmbeddedServletContainerFactory52.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList66 = tomcatEmbeddedServletContainerFactory52.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory42.tomcatContextCustomizers = tomcatContextCustomizerList66;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList66;
        java.util.List<org.apache.catalina.Valve> valveList69 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.apache.catalina.Context context70 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context70);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(lifecycleListenerArray16);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/tmp/UTF-8.5242803616814279439.0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList51);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(connectorList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection65);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList66);
        org.junit.Assert.assertNotNull(valveList69);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList6 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.io.File file8 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.net.InetAddress inetAddress10 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNull(inetAddress10);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        tomcatEmbeddedServletContainerFactory0.tldSkip = "";
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        java.net.InetAddress inetAddress19 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress19);
        java.util.concurrent.TimeUnit timeUnit22 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1, timeUnit22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory4.additionalTomcatConnectors = connectorList11;
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory4.protocol;
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory4.protocol;
        java.net.InetAddress inetAddress15 = null;
        tomcatEmbeddedServletContainerFactory4.setAddress(inetAddress15);
        java.io.File file17 = null;
        tomcatEmbeddedServletContainerFactory4.setBaseDirectory(file17);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray19 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory4.addContextCustomizers(tomcatContextCustomizerArray19);
        java.util.List<org.apache.catalina.Valve> valveList21 = tomcatEmbeddedServletContainerFactory4.contextValves;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory4.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList30 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors = connectorList30;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory23.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader35 = tomcatEmbeddedServletContainerFactory33.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection41 = tomcatEmbeddedServletContainerFactory36.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList42 = tomcatEmbeddedServletContainerFactory36.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory33.tomcatContextCustomizers = tomcatContextCustomizerList42;
        tomcatEmbeddedServletContainerFactory23.tomcatContextCustomizers = tomcatContextCustomizerList42;
        tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers = tomcatContextCustomizerList42;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList42;
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory2.getUriEncoding();
        org.springframework.core.io.ResourceLoader resourceLoader48 = null;
        tomcatEmbeddedServletContainerFactory2.resourceLoader = resourceLoader48;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray19);
        org.junit.Assert.assertNotNull(valveList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str22, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(connectorList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNull(resourceLoader35);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection41);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-8" + "'", str47, "UTF-8");
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.apache.catalina.Valve valve5 = null;
        org.apache.catalina.Valve[] valveArray6 = new org.apache.catalina.Valve[] { valve5 };
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray6);
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        boolean boolean9 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-8" + "'", str4, "UTF-8");
        org.junit.Assert.assertNotNull(valveArray6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet5 = tomcatEmbeddedServletContainerFactory2.getErrorPages();
        java.util.List<org.apache.catalina.connector.Connector> connectorList6 = tomcatEmbeddedServletContainerFactory2.getAdditionalTomcatConnectors();
        java.util.concurrent.TimeUnit timeUnit8 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.setSessionTimeout((int) (short) 100, timeUnit8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorPageSet5);
        org.junit.Assert.assertNotNull(connectorList6);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        java.util.List<org.apache.catalina.Valve> valveList11 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.io.File file13 = tomcatEmbeddedServletContainerFactory0.createTempDir("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader16 = tomcatEmbeddedServletContainerFactory14.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray17 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory14.addErrorPages(errorPageArray17);
        tomcatEmbeddedServletContainerFactory14.setTldSkip("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection25 = tomcatEmbeddedServletContainerFactory21.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader26 = tomcatEmbeddedServletContainerFactory21.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList32 = tomcatEmbeddedServletContainerFactory27.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList33 = tomcatEmbeddedServletContainerFactory27.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory21.tomcatConnectorCustomizers = tomcatConnectorCustomizerList33;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory35.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList38 = tomcatEmbeddedServletContainerFactory37.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory35.tomcatConnectorCustomizers = tomcatConnectorCustomizerList38;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet40 = tomcatEmbeddedServletContainerFactory35.getErrorPages();
        java.net.InetAddress inetAddress41 = tomcatEmbeddedServletContainerFactory35.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader42 = tomcatEmbeddedServletContainerFactory35.resourceLoader;
        java.io.File file44 = tomcatEmbeddedServletContainerFactory35.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.apache.catalina.Valve[] valveArray45 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory35.addContextValves(valveArray45);
        tomcatEmbeddedServletContainerFactory21.addContextValves(valveArray45);
        tomcatEmbeddedServletContainerFactory14.addContextValves(valveArray45);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray45);
        tomcatEmbeddedServletContainerFactory0.protocol = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n";
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(valveList11);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file13.toString(), "/tmp/hi!.6962444928872564908.8080");
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNull(resourceLoader16);
        org.junit.Assert.assertNotNull(errorPageArray17);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(valveCollection25);
        org.junit.Assert.assertNull(resourceLoader26);
        org.junit.Assert.assertNotNull(lifecycleListenerList32);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList33);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList38);
        org.junit.Assert.assertNotNull(errorPageSet40);
        org.junit.Assert.assertNull(inetAddress41);
        org.junit.Assert.assertNull(resourceLoader42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file44.toString(), "/tmp/web-app>\n.5687724654759116681.8080");
        org.junit.Assert.assertNotNull(valveArray45);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("org.apache.coyote.http11.Http11NioProtocol", (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection2 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory5.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList12 = tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors = connectorList12;
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory5.protocol;
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory5.protocol;
        java.net.InetAddress inetAddress16 = null;
        tomcatEmbeddedServletContainerFactory5.setAddress(inetAddress16);
        tomcatEmbeddedServletContainerFactory5.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray20 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList21 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList21, valveArray20);
        tomcatEmbeddedServletContainerFactory5.contextValves = valveList21;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader26 = tomcatEmbeddedServletContainerFactory24.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection32 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList33 = tomcatEmbeddedServletContainerFactory27.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory24.tomcatContextCustomizers = tomcatContextCustomizerList33;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList35 = tomcatEmbeddedServletContainerFactory24.tomcatConnectorCustomizers;
        org.apache.catalina.Valve valve36 = null;
        org.apache.catalina.Valve[] valveArray37 = new org.apache.catalina.Valve[] { valve36 };
        tomcatEmbeddedServletContainerFactory24.addContextValves(valveArray37);
        tomcatEmbeddedServletContainerFactory5.addContextValves(valveArray37);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray37);
        tomcatEmbeddedServletContainerFactory0.setProtocol("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.setPort((int) ' ');
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveCollection2);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str4, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNotNull(connectorList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(valveArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNull(resourceLoader26);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection32);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList33);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList35);
        org.junit.Assert.assertNotNull(valveArray37);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        java.io.File file4 = tomcatEmbeddedServletContainerFactory2.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList5 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList5);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory9.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray11 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory9.addConnectorCustomizers(tomcatConnectorCustomizerArray11);
        java.net.InetAddress inetAddress13 = tomcatEmbeddedServletContainerFactory9.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory14.setProtocol("UTF-8");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory14.protocol;
        tomcatEmbeddedServletContainerFactory14.setTldSkip("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        tomcatEmbeddedServletContainerFactory9.setErrorPages(errorPageSet23);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet23);
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        org.apache.catalina.Context context28 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str1, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray11);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet23);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection7 = tomcatEmbeddedServletContainerFactory3.getValves();
        java.net.InetAddress inetAddress8 = tomcatEmbeddedServletContainerFactory3.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean10 = tomcatEmbeddedServletContainerFactory9.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList11 = tomcatEmbeddedServletContainerFactory9.contextValves;
        tomcatEmbeddedServletContainerFactory3.contextValves = valveList11;
        tomcatEmbeddedServletContainerFactory2.contextValves = valveList11;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers;
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory2.tldSkip;
        tomcatEmbeddedServletContainerFactory2.protocol = "hi!";
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(valveCollection7);
        org.junit.Assert.assertNull(inetAddress8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(valveList11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory4.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        java.io.File file8 = tomcatEmbeddedServletContainerFactory6.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList9 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory4.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList9);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList9);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.coyote.http11.Http11NioProtocol");
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.apache.catalina.Context context15 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList23 = tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors = connectorList23;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory16.protocol;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory16.protocol;
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection29 = tomcatEmbeddedServletContainerFactory16.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList30 = tomcatEmbeddedServletContainerFactory16.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory16.tldSkip = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory35.setProtocol("hi!");
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory35.protocol;
        int int41 = tomcatEmbeddedServletContainerFactory35.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList45 = tomcatEmbeddedServletContainerFactory44.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory42.tomcatConnectorCustomizers = tomcatConnectorCustomizerList45;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection47 = tomcatEmbeddedServletContainerFactory42.getContextLifecycleListeners();
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory42.uriEncoding;
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory42.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str51 = tomcatEmbeddedServletContainerFactory50.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray52 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory50.addInitializers(servletContextInitializerArray52);
        tomcatEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray52);
        tomcatEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray52);
        tomcatEmbeddedServletContainerFactory34.addInitializers(servletContextInitializerArray52);
        tomcatEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray52);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context15, servletContextInitializerArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str5, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(connectorList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection29);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList30);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList45);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-8" + "'", str48, "UTF-8");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-8" + "'", str49, "UTF-8");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "UTF-8" + "'", str51, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray52);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader14);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.Context context17 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(mimeMappings16);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory2.uriEncoding;
        org.apache.catalina.Context context4 = null;
        tomcatEmbeddedServletContainerFactory2.postProcessContext(context4);
        org.apache.catalina.Context context6 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean8 = tomcatEmbeddedServletContainerFactory7.isRegisterDefaultServlet();
        org.apache.catalina.Context context9 = null;
        tomcatEmbeddedServletContainerFactory7.postProcessContext(context9);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection16 = tomcatEmbeddedServletContainerFactory11.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory11.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector19 = null;
        org.apache.catalina.connector.Connector[] connectorArray20 = new org.apache.catalina.connector.Connector[] { connector19 };
        tomcatEmbeddedServletContainerFactory11.addAdditionalTomcatConnectors(connectorArray20);
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray20);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList26 = tomcatEmbeddedServletContainerFactory25.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory23.tomcatConnectorCustomizers = tomcatConnectorCustomizerList26;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection28 = tomcatEmbeddedServletContainerFactory23.getContextLifecycleListeners();
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory23.uriEncoding;
        tomcatEmbeddedServletContainerFactory23.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory32.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection37 = tomcatEmbeddedServletContainerFactory32.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory32.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection40 = tomcatEmbeddedServletContainerFactory32.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector41 = null;
        org.apache.catalina.connector.Connector[] connectorArray42 = new org.apache.catalina.connector.Connector[] { connector41 };
        tomcatEmbeddedServletContainerFactory32.addAdditionalTomcatConnectors(connectorArray42);
        tomcatEmbeddedServletContainerFactory23.addAdditionalTomcatConnectors(connectorArray42);
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray42);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory46.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory46.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = tomcatEmbeddedServletContainerFactory51.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList53 = tomcatEmbeddedServletContainerFactory51.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList54 = tomcatEmbeddedServletContainerFactory51.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors = connectorList54;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str57 = tomcatEmbeddedServletContainerFactory56.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray58 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory56.addInitializers(servletContextInitializerArray58);
        tomcatEmbeddedServletContainerFactory56.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray62 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory56.addContextLifecycleListeners(lifecycleListenerArray62);
        tomcatEmbeddedServletContainerFactory46.addContextLifecycleListeners(lifecycleListenerArray62);
        org.apache.catalina.Context context65 = null;
        tomcatEmbeddedServletContainerFactory46.postProcessContext(context65);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory67.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings70 = tomcatEmbeddedServletContainerFactory67.getMimeMappings();
        tomcatEmbeddedServletContainerFactory67.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str76 = tomcatEmbeddedServletContainerFactory75.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer77 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray78 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer77 };
        tomcatEmbeddedServletContainerFactory75.addInitializers(servletContextInitializerArray78);
        tomcatEmbeddedServletContainerFactory67.addInitializers(servletContextInitializerArray78);
        tomcatEmbeddedServletContainerFactory46.addInitializers(servletContextInitializerArray78);
        tomcatEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray78);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.configureContext(context6, servletContextInitializerArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection16);
        org.junit.Assert.assertNotNull(connectorArray20);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList26);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-8" + "'", str29, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection40);
        org.junit.Assert.assertNotNull(connectorArray42);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNotNull(connectorList53);
        org.junit.Assert.assertNotNull(connectorList54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "UTF-8" + "'", str57, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray58);
        org.junit.Assert.assertNotNull(lifecycleListenerArray62);
        org.junit.Assert.assertNotNull(mimeMappings70);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(servletContextInitializerArray78);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList15;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray19);
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray23 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory17.addContextLifecycleListeners(lifecycleListenerArray23);
        tomcatEmbeddedServletContainerFactory7.addContextLifecycleListeners(lifecycleListenerArray23);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray23);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray27 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray27);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        org.apache.catalina.Context context33 = null;
        tomcatEmbeddedServletContainerFactory29.postProcessContext(context33);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList36 = tomcatEmbeddedServletContainerFactory35.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection37 = tomcatEmbeddedServletContainerFactory35.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader40 = tomcatEmbeddedServletContainerFactory38.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray41 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory38.addErrorPages(errorPageArray41);
        tomcatEmbeddedServletContainerFactory35.addErrorPages(errorPageArray41);
        tomcatEmbeddedServletContainerFactory29.addErrorPages(errorPageArray41);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray41);
        tomcatEmbeddedServletContainerFactory0.setPort(8080);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory48.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList55 = tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors = connectorList55;
        java.lang.String str57 = tomcatEmbeddedServletContainerFactory48.protocol;
        java.lang.String str58 = tomcatEmbeddedServletContainerFactory48.protocol;
        java.net.InetAddress inetAddress59 = null;
        tomcatEmbeddedServletContainerFactory48.setAddress(inetAddress59);
        org.springframework.core.io.ResourceLoader resourceLoader61 = tomcatEmbeddedServletContainerFactory48.resourceLoader;
        java.io.File file63 = tomcatEmbeddedServletContainerFactory48.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file63);
        org.apache.catalina.connector.Connector connector65 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(lifecycleListenerArray23);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray27);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList36);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection37);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNull(resourceLoader40);
        org.junit.Assert.assertNotNull(errorPageArray41);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(connectorList55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNull(resourceLoader61);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file63.toString(), "/tmp/web-app>\n.920289513154090631.0");
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        org.apache.catalina.connector.Connector connector6 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.apache.catalina.Context context13 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context13);
        org.springframework.core.io.ResourceLoader resourceLoader15 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        boolean boolean16 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 100);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(connectorList19);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("org.apache.coyote.http11.Http11NioProtocol", (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        org.apache.catalina.Context context18 = null;
        tomcatEmbeddedServletContainerFactory9.postProcessContext(context18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory22.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray24 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory22.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory9.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.Valve> valveList30 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection31 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.util.concurrent.TimeUnit timeUnit33 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10, timeUnit33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray24);
        org.junit.Assert.assertNotNull(valveList30);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection31);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        boolean boolean15 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection23 = tomcatEmbeddedServletContainerFactory18.getTomcatConnectorCustomizers();
        boolean boolean24 = tomcatEmbeddedServletContainerFactory18.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress25 = null;
        tomcatEmbeddedServletContainerFactory18.setAddress(inetAddress25);
        java.util.List<org.apache.catalina.Valve> valveList27 = tomcatEmbeddedServletContainerFactory18.contextValves;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings28);
        org.springframework.core.io.ResourceLoader resourceLoader30 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader30;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory32.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList39 = tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory32.additionalTomcatConnectors = connectorList39;
        java.lang.String str41 = tomcatEmbeddedServletContainerFactory32.protocol;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory32.protocol;
        java.net.InetAddress inetAddress43 = null;
        tomcatEmbeddedServletContainerFactory32.setAddress(inetAddress43);
        java.util.List<org.apache.catalina.connector.Connector> connectorList45 = tomcatEmbeddedServletContainerFactory32.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory46.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory46.setTldSkip("UTF-8");
        java.io.File file52 = tomcatEmbeddedServletContainerFactory46.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory32.setDocumentRoot(file52);
        tomcatEmbeddedServletContainerFactory32.setPort((int) (short) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory56.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory56.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings62 = tomcatEmbeddedServletContainerFactory61.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList63 = tomcatEmbeddedServletContainerFactory61.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory56.additionalTomcatConnectors = connectorList63;
        java.lang.String str65 = tomcatEmbeddedServletContainerFactory56.protocol;
        java.lang.String str66 = tomcatEmbeddedServletContainerFactory56.protocol;
        tomcatEmbeddedServletContainerFactory56.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection69 = tomcatEmbeddedServletContainerFactory56.getTomcatContextCustomizers();
        int int70 = tomcatEmbeddedServletContainerFactory56.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory71.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory71.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings77 = tomcatEmbeddedServletContainerFactory76.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList78 = tomcatEmbeddedServletContainerFactory76.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory71.additionalTomcatConnectors = connectorList78;
        java.lang.String str80 = tomcatEmbeddedServletContainerFactory71.protocol;
        java.lang.String str81 = tomcatEmbeddedServletContainerFactory71.protocol;
        java.net.InetAddress inetAddress82 = null;
        tomcatEmbeddedServletContainerFactory71.setAddress(inetAddress82);
        java.util.List<org.apache.catalina.connector.Connector> connectorList84 = tomcatEmbeddedServletContainerFactory71.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory85 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory85.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory85.setTldSkip("UTF-8");
        java.io.File file91 = tomcatEmbeddedServletContainerFactory85.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory71.setDocumentRoot(file91);
        tomcatEmbeddedServletContainerFactory56.setDocumentRoot(file91);
        tomcatEmbeddedServletContainerFactory32.baseDirectory = file91;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings95 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings95);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(valveList27);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(connectorList39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(connectorList45);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file52.toString(), "/tmp/UTF-8.7872917437026992477.0");
        org.junit.Assert.assertNotNull(mimeMappings62);
        org.junit.Assert.assertNotNull(connectorList63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(mimeMappings77);
        org.junit.Assert.assertNotNull(connectorList78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(connectorList84);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file91.toString(), "/tmp/UTF-8.815507071179417649.0");
        org.junit.Assert.assertNotNull(mimeMappings95);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory2.getUriEncoding();
        tomcatEmbeddedServletContainerFactory2.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList17;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory10.protocol;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory10.protocol;
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection23 = tomcatEmbeddedServletContainerFactory10.getTomcatContextCustomizers();
        int int24 = tomcatEmbeddedServletContainerFactory10.getPort();
        java.io.File file26 = tomcatEmbeddedServletContainerFactory10.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory2.setBaseDirectory(file26);
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file29 = tomcatEmbeddedServletContainerFactory2.createTempDir("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Prefix string too short");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.3602624103268193886.0");
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("org.apache.coyote.http11.Http11NioProtocol", 8080);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress5 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean7 = tomcatEmbeddedServletContainerFactory6.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList8 = tomcatEmbeddedServletContainerFactory6.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList8;
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNull(inetAddress5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(valveList8);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory4.additionalTomcatConnectors = connectorList11;
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory4.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory4.setMimeMappings(mimeMappings17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList20 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        int int21 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory19.addContextLifecycleListeners(lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory4.addContextLifecycleListeners(lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray22);
        boolean boolean26 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("org.apache.tomcat.util.scan.MergedWebXml");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList16 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList16, valveArray15);
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList16;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory19.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList28 = tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers = tomcatContextCustomizerList28;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        org.apache.catalina.Valve valve31 = null;
        org.apache.catalina.Valve[] valveArray32 = new org.apache.catalina.Valve[] { valve31 };
        tomcatEmbeddedServletContainerFactory19.addContextValves(valveArray32);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray32);
        org.apache.catalina.Valve[] valveArray35 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray35);
        org.apache.catalina.connector.Connector connector37 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(valveArray32);
        org.junit.Assert.assertNotNull(valveArray35);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("UTF-8", (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.net.InetAddress inetAddress13 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader17);
        tomcatEmbeddedServletContainerFactory16.setPort(10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList21;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory23.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList28 = tomcatEmbeddedServletContainerFactory27.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection29 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList30 = tomcatEmbeddedServletContainerFactory27.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection31 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory27.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory27.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory27.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = tomcatEmbeddedServletContainerFactory41.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList43 = tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList43;
        org.apache.catalina.Context context45 = null;
        tomcatEmbeddedServletContainerFactory36.postProcessContext(context45);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory49.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray51 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory49.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        tomcatEmbeddedServletContainerFactory36.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        tomcatEmbeddedServletContainerFactory27.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        tomcatEmbeddedServletContainerFactory23.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.coyote.http11.Http11NioProtocol");
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-8" + "'", str26, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection29);
        org.junit.Assert.assertNotNull(valveList30);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection31);
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(connectorList43);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray51);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str59, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader14 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        int int16 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        int int17 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean20 = tomcatEmbeddedServletContainerFactory19.isRegisterDefaultServlet();
        org.apache.catalina.Context context21 = null;
        tomcatEmbeddedServletContainerFactory19.postProcessContext(context21);
        java.io.File file24 = tomcatEmbeddedServletContainerFactory19.createTempDir("hi!");
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file24);
        int int26 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str15, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file24.toString(), "/tmp/hi!.7080915744040199170.8080");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("org.apache.tomcat.util.scan.MergedWebXml", (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.apache.catalina.Context context10 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context10);
        java.net.InetAddress inetAddress12 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory20.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList25 = tomcatEmbeddedServletContainerFactory20.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList25);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList25);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str4 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str5 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.Context context6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.util.Collection<org.apache.catalina.Valve> valveCollection7 = tomcatEmbeddedServletContainerFactory0.getValves();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("org.apache.tomcat.util.scan.MergedWebXml");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertNotNull(valveCollection7);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.io.File file6 = tomcatEmbeddedServletContainerFactory0.createTempDir("hi!");
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList8 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.apache.catalina.Context context9 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList17;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory10.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        tomcatEmbeddedServletContainerFactory10.setMimeMappings(mimeMappings23);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray25 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet26, errorPageArray25);
        tomcatEmbeddedServletContainerFactory10.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet26);
        tomcatEmbeddedServletContainerFactory10.setSessionTimeout((int) '#');
        java.io.File file31 = tomcatEmbeddedServletContainerFactory10.baseDirectory;
        int int32 = tomcatEmbeddedServletContainerFactory10.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader36 = null;
        tomcatEmbeddedServletContainerFactory35.setResourceLoader(resourceLoader36);
        tomcatEmbeddedServletContainerFactory35.setContextPath("");
        boolean boolean40 = tomcatEmbeddedServletContainerFactory35.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader41 = tomcatEmbeddedServletContainerFactory35.resourceLoader;
        boolean boolean42 = tomcatEmbeddedServletContainerFactory35.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList46 = tomcatEmbeddedServletContainerFactory45.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory43.tomcatConnectorCustomizers = tomcatConnectorCustomizerList46;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = tomcatEmbeddedServletContainerFactory43.getErrorPages();
        java.net.InetAddress inetAddress49 = tomcatEmbeddedServletContainerFactory43.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory50.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory50.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = tomcatEmbeddedServletContainerFactory55.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList57 = tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory50.additionalTomcatConnectors = connectorList57;
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory50.protocol;
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory50.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory61.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = tomcatEmbeddedServletContainerFactory61.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = tomcatEmbeddedServletContainerFactory61.getMimeMappings();
        tomcatEmbeddedServletContainerFactory50.setMimeMappings(mimeMappings65);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory67.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings70 = tomcatEmbeddedServletContainerFactory67.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection71 = tomcatEmbeddedServletContainerFactory67.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray72 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList73 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList73, lifecycleListenerArray72);
        tomcatEmbeddedServletContainerFactory67.contextLifecycleListeners = lifecycleListenerList73;
        tomcatEmbeddedServletContainerFactory50.contextLifecycleListeners = lifecycleListenerList73;
        tomcatEmbeddedServletContainerFactory43.contextLifecycleListeners = lifecycleListenerList73;
        tomcatEmbeddedServletContainerFactory43.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings81 = tomcatEmbeddedServletContainerFactory80.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList83 = tomcatEmbeddedServletContainerFactory82.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory80.tomcatConnectorCustomizers = tomcatConnectorCustomizerList83;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection85 = tomcatEmbeddedServletContainerFactory80.getContextLifecycleListeners();
        java.lang.String str86 = tomcatEmbeddedServletContainerFactory80.uriEncoding;
        java.lang.String str87 = tomcatEmbeddedServletContainerFactory80.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory88 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str89 = tomcatEmbeddedServletContainerFactory88.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray90 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory88.addInitializers(servletContextInitializerArray90);
        tomcatEmbeddedServletContainerFactory80.addInitializers(servletContextInitializerArray90);
        tomcatEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray90);
        tomcatEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray90);
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray90);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context9, servletContextInitializerArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file6.toString(), "/tmp/hi!.6890471167686738591.8080");
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(lifecycleListenerList8);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(errorPageArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(resourceLoader41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList46);
        org.junit.Assert.assertNotNull(errorPageSet48);
        org.junit.Assert.assertNull(inetAddress49);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNotNull(connectorList57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertNotNull(mimeMappings70);
        org.junit.Assert.assertNotNull(valveCollection71);
        org.junit.Assert.assertNotNull(lifecycleListenerArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(mimeMappings81);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList83);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "UTF-8" + "'", str86, "UTF-8");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "UTF-8" + "'", str87, "UTF-8");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "UTF-8" + "'", str89, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray90);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        org.apache.catalina.Context context9 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context9);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection11 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        int int12 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList2 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray3 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList4, tomcatConnectorCustomizerArray3);
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList4;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory9.protocol;
        tomcatEmbeddedServletContainerFactory9.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection22 = tomcatEmbeddedServletContainerFactory9.getTomcatContextCustomizers();
        int int23 = tomcatEmbeddedServletContainerFactory9.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList31 = tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors = connectorList31;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.net.InetAddress inetAddress35 = null;
        tomcatEmbeddedServletContainerFactory24.setAddress(inetAddress35);
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory38.setTldSkip("UTF-8");
        java.io.File file44 = tomcatEmbeddedServletContainerFactory38.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory24.setDocumentRoot(file44);
        tomcatEmbeddedServletContainerFactory9.setDocumentRoot(file44);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file44;
        org.apache.catalina.connector.Connector connector48 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveList2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNotNull(connectorList31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file44.toString(), "/tmp/UTF-8.8090927435382245898.0");
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.io.File file11 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(file11);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.Context context4 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str2, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors = connectorList22;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory24.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray26);
        tomcatEmbeddedServletContainerFactory24.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray30 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory24.addContextLifecycleListeners(lifecycleListenerArray30);
        tomcatEmbeddedServletContainerFactory14.addContextLifecycleListeners(lifecycleListenerArray30);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray30);
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        java.util.List<org.apache.catalina.Valve> valveList35 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.apache.catalina.connector.Connector connector36 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertNotNull(lifecycleListenerArray30);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(valveList35);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str2 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str3 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.Context context5 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory8.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray10 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray10);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray10);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.util.concurrent.TimeUnit timeUnit16 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) ' ', timeUnit16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray10);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.Valve> valveList13 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection14 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors = connectorList22;
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory15.protocol;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory15.protocol;
        tomcatEmbeddedServletContainerFactory15.setUriEncoding("hi!");
        boolean boolean28 = tomcatEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList36 = tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors = connectorList36;
        org.apache.catalina.Context context38 = null;
        tomcatEmbeddedServletContainerFactory29.postProcessContext(context38);
        java.net.InetAddress inetAddress40 = tomcatEmbeddedServletContainerFactory29.getAddress();
        tomcatEmbeddedServletContainerFactory29.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory43.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = tomcatEmbeddedServletContainerFactory48.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList50 = tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory43.additionalTomcatConnectors = connectorList50;
        org.apache.catalina.Context context52 = null;
        tomcatEmbeddedServletContainerFactory43.postProcessContext(context52);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str57 = tomcatEmbeddedServletContainerFactory56.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray58 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory56.addConnectorCustomizers(tomcatConnectorCustomizerArray58);
        tomcatEmbeddedServletContainerFactory43.addConnectorCustomizers(tomcatConnectorCustomizerArray58);
        tomcatEmbeddedServletContainerFactory29.addConnectorCustomizers(tomcatConnectorCustomizerArray58);
        tomcatEmbeddedServletContainerFactory15.addConnectorCustomizers(tomcatConnectorCustomizerArray58);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray58);
        org.apache.catalina.Context context64 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(valveList13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection14);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNotNull(connectorList36);
        org.junit.Assert.assertNull(inetAddress40);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(connectorList50);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray58);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str4 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str5 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.Context context6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList10 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList18;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory11.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings24);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory11.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = tomcatEmbeddedServletContainerFactory32.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors = connectorList34;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory27.protocol;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory27.protocol;
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection40 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        int int41 = tomcatEmbeddedServletContainerFactory27.getPort();
        java.io.File file43 = tomcatEmbeddedServletContainerFactory27.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory11.baseDirectory = file43;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file43);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory47.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList50 = tomcatEmbeddedServletContainerFactory47.tomcatConnectorCustomizers;
        java.io.File file51 = tomcatEmbeddedServletContainerFactory47.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList52 = tomcatEmbeddedServletContainerFactory47.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList52);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(lifecycleListenerList10);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(connectorList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file43.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.8799185479212664027.0");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList50);
        org.junit.Assert.assertNull(file51);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList52);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory3.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers = tomcatConnectorCustomizerList4;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory1.getContextLifecycleListeners();
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory1.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory1.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader11);
        org.apache.catalina.connector.Connector connector13 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str10, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection21 = tomcatEmbeddedServletContainerFactory17.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList23 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList23, lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory17.contextLifecycleListeners = lifecycleListenerList23;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList23;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection27 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory28.protocol;
        tomcatEmbeddedServletContainerFactory28.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection41 = tomcatEmbeddedServletContainerFactory36.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList42 = tomcatEmbeddedServletContainerFactory36.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory28.tomcatContextCustomizers = tomcatContextCustomizerList42;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList42;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection45 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection47 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(valveCollection21);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection41);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "UTF-8" + "'", str46, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection47);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        java.util.List<org.apache.catalina.Valve> valveList9 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.io.File file11 = tomcatEmbeddedServletContainerFactory0.createTempDir("hi!");
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(valveList9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file11.toString(), "/tmp/hi!.4395964216473000416.0");
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.apache.catalina.Context context14 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        org.apache.catalina.Context context9 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context9);
        java.net.InetAddress inetAddress11 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.io.File file12 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.apache.catalina.Context context13 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertNull(file12);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.Class<?> wildcardClass13 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList12 = tomcatEmbeddedServletContainerFactory10.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList12;
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors = connectorList22;
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory15.protocol;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory15.protocol;
        java.net.InetAddress inetAddress26 = null;
        tomcatEmbeddedServletContainerFactory15.setAddress(inetAddress26);
        java.util.List<org.apache.catalina.connector.Connector> connectorList28 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setTldSkip("UTF-8");
        java.io.File file35 = tomcatEmbeddedServletContainerFactory29.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory15.setDocumentRoot(file35);
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory39.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory39.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = tomcatEmbeddedServletContainerFactory44.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList46 = tomcatEmbeddedServletContainerFactory44.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors = connectorList46;
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory39.protocol;
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory39.protocol;
        tomcatEmbeddedServletContainerFactory39.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection52 = tomcatEmbeddedServletContainerFactory39.getTomcatContextCustomizers();
        int int53 = tomcatEmbeddedServletContainerFactory39.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory54.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = tomcatEmbeddedServletContainerFactory59.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList61 = tomcatEmbeddedServletContainerFactory59.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory54.additionalTomcatConnectors = connectorList61;
        java.lang.String str63 = tomcatEmbeddedServletContainerFactory54.protocol;
        java.lang.String str64 = tomcatEmbeddedServletContainerFactory54.protocol;
        java.net.InetAddress inetAddress65 = null;
        tomcatEmbeddedServletContainerFactory54.setAddress(inetAddress65);
        java.util.List<org.apache.catalina.connector.Connector> connectorList67 = tomcatEmbeddedServletContainerFactory54.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory68.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory68.setTldSkip("UTF-8");
        java.io.File file74 = tomcatEmbeddedServletContainerFactory68.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory54.setDocumentRoot(file74);
        tomcatEmbeddedServletContainerFactory39.setDocumentRoot(file74);
        tomcatEmbeddedServletContainerFactory15.baseDirectory = file74;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file74);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList79 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.apache.catalina.Context context80 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valveList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(connectorList28);
        org.junit.Assert.assertNotNull(file35);
        org.junit.Assert.assertEquals(file35.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file35.toString(), "/tmp/UTF-8.6693608814728131301.0");
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNotNull(connectorList46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(mimeMappings60);
        org.junit.Assert.assertNotNull(connectorList61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(connectorList67);
        org.junit.Assert.assertNotNull(file74);
        org.junit.Assert.assertEquals(file74.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file74.toString(), "/tmp/UTF-8.151084071361550574.0");
        org.junit.Assert.assertNotNull(lifecycleListenerList79);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = tomcatEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory4.tomcatConnectorCustomizers = tomcatConnectorCustomizerList7;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection9 = tomcatEmbeddedServletContainerFactory4.getContextLifecycleListeners();
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory4.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList19;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory21.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory21.addInitializers(servletContextInitializerArray23);
        tomcatEmbeddedServletContainerFactory21.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray27 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory21.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory11.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory4.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray27);
        int int32 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.startup.Tomcat tomcat33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer34 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(lifecycleListenerArray27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        int int2 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray3 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray3);
        int int5 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.io.File file11 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        boolean boolean12 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setTldSkip("UTF-8");
        org.apache.catalina.Context context20 = null;
        tomcatEmbeddedServletContainerFactory15.postProcessContext(context20);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList29 = tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors = connectorList29;
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory22.protocol;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory22.protocol;
        java.net.InetAddress inetAddress33 = null;
        tomcatEmbeddedServletContainerFactory22.setAddress(inetAddress33);
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors;
        java.io.File file36 = tomcatEmbeddedServletContainerFactory22.baseDirectory;
        org.apache.catalina.Valve[] valveArray37 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory22.addContextValves(valveArray37);
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray37);
        tomcatEmbeddedServletContainerFactory14.addContextValves(valveArray37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList42 = tomcatEmbeddedServletContainerFactory41.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection43 = tomcatEmbeddedServletContainerFactory41.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = tomcatEmbeddedServletContainerFactory44.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader46 = tomcatEmbeddedServletContainerFactory44.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray47 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory44.addErrorPages(errorPageArray47);
        tomcatEmbeddedServletContainerFactory41.addErrorPages(errorPageArray47);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray50 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory41.addInitializers(servletContextInitializerArray50);
        java.io.File file52 = tomcatEmbeddedServletContainerFactory41.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str56 = tomcatEmbeddedServletContainerFactory55.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer57 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray58 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer57 };
        tomcatEmbeddedServletContainerFactory55.addInitializers(servletContextInitializerArray58);
        tomcatEmbeddedServletContainerFactory41.addInitializers(servletContextInitializerArray58);
        tomcatEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray58);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory62.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory62.setTldSkip("UTF-8");
        java.io.File file68 = tomcatEmbeddedServletContainerFactory62.createTempDir("UTF-8");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings69 = tomcatEmbeddedServletContainerFactory62.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory70.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory70.setProtocol("hi!");
        java.lang.String str75 = tomcatEmbeddedServletContainerFactory70.protocol;
        tomcatEmbeddedServletContainerFactory70.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.io.File file79 = tomcatEmbeddedServletContainerFactory70.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        tomcatEmbeddedServletContainerFactory62.baseDirectory = file79;
        tomcatEmbeddedServletContainerFactory14.setBaseDirectory(file79);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file79;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(connectorList29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(valveArray37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection43);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNull(resourceLoader46);
        org.junit.Assert.assertNotNull(errorPageArray47);
        org.junit.Assert.assertNotNull(servletContextInitializerArray50);
        org.junit.Assert.assertNull(file52);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(servletContextInitializerArray58);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file68.toString(), "/tmp/UTF-8.4556524703088747675.0");
        org.junit.Assert.assertNotNull(mimeMappings69);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(file79);
        org.junit.Assert.assertEquals(file79.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file79.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.6544881685630531737.0");
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList15;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray19);
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray23 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory17.addContextLifecycleListeners(lifecycleListenerArray23);
        tomcatEmbeddedServletContainerFactory7.addContextLifecycleListeners(lifecycleListenerArray23);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray23);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray27 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray27);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        org.apache.catalina.Context context33 = null;
        tomcatEmbeddedServletContainerFactory29.postProcessContext(context33);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList36 = tomcatEmbeddedServletContainerFactory35.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection37 = tomcatEmbeddedServletContainerFactory35.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader40 = tomcatEmbeddedServletContainerFactory38.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray41 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory38.addErrorPages(errorPageArray41);
        tomcatEmbeddedServletContainerFactory35.addErrorPages(errorPageArray41);
        tomcatEmbeddedServletContainerFactory29.addErrorPages(errorPageArray41);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray41);
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(lifecycleListenerArray23);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray27);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList36);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection37);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNull(resourceLoader40);
        org.junit.Assert.assertNotNull(errorPageArray41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str46, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.io.File file6 = tomcatEmbeddedServletContainerFactory0.createTempDir("UTF-8");
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader7;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setTldSkip("UTF-8");
        java.net.InetAddress inetAddress14 = tomcatEmbeddedServletContainerFactory9.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors = connectorList22;
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory15.protocol;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory15.protocol;
        tomcatEmbeddedServletContainerFactory15.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file32 = tomcatEmbeddedServletContainerFactory30.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory15.setBaseDirectory(file32);
        tomcatEmbeddedServletContainerFactory9.setDocumentRoot(file32);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file32;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet36 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file6.toString(), "/tmp/UTF-8.4205978353541401819.0");
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file32.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.3652700002159477082.100");
        org.junit.Assert.assertNotNull(errorPageSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.io.File file3 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.apache.catalina.connector.Connector connector4 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNull(file3);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.Context context4 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context4);
        java.util.List<org.apache.catalina.Valve> valveList6 = tomcatEmbeddedServletContainerFactory0.contextValves;
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setPort(97);
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        boolean boolean13 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveList6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector8 = null;
        org.apache.catalina.connector.Connector[] connectorArray9 = new org.apache.catalina.connector.Connector[] { connector8 };
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray9);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.coyote.http11.Http11NioProtocol");
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertNotNull(connectorArray9);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader17 = tomcatEmbeddedServletContainerFactory15.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection23 = tomcatEmbeddedServletContainerFactory18.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList24 = tomcatEmbeddedServletContainerFactory18.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory15.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory15.uriEncoding = "UTF-8";
        int int28 = tomcatEmbeddedServletContainerFactory15.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean30 = tomcatEmbeddedServletContainerFactory29.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection31 = tomcatEmbeddedServletContainerFactory29.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        tomcatEmbeddedServletContainerFactory15.setMimeMappings(mimeMappings32);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings32);
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "";
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("org.apache.tomcat.util.scan.MergedWebXml");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection23);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8080 + "'", int28 == 8080);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(valveCollection31);
        org.junit.Assert.assertNotNull(mimeMappings32);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray15 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16, errorPageArray15);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList23 = tomcatEmbeddedServletContainerFactory22.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection24 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory21.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors = connectorList33;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory26.protocol;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory26.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory37.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory42.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors = connectorList44;
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory37.protocol;
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory37.protocol;
        java.net.InetAddress inetAddress48 = null;
        tomcatEmbeddedServletContainerFactory37.setAddress(inetAddress48);
        int int50 = tomcatEmbeddedServletContainerFactory37.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = tomcatEmbeddedServletContainerFactory51.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList54 = tomcatEmbeddedServletContainerFactory53.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory51.tomcatConnectorCustomizers = tomcatConnectorCustomizerList54;
        tomcatEmbeddedServletContainerFactory37.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList54);
        tomcatEmbeddedServletContainerFactory26.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList54);
        tomcatEmbeddedServletContainerFactory21.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList54);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList54);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList64 = tomcatEmbeddedServletContainerFactory63.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection65 = tomcatEmbeddedServletContainerFactory63.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory62.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection65);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection65);
        java.lang.Class<?> wildcardClass68 = tomcatConnectorCustomizerCollection65.getClass();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(errorPageArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection24);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList54);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList64);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection65);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-8" + "'", str4, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str4 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str5 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.Context context6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str4, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n", (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray16 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray16);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList19 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setPort((int) '4');
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection22 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(lifecycleListenerArray16);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList19);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection22);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        org.apache.catalina.Context context2 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        org.apache.catalina.Context context18 = null;
        tomcatEmbeddedServletContainerFactory9.postProcessContext(context18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory22.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray24 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory22.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory9.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory28.protocol;
        tomcatEmbeddedServletContainerFactory28.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection36 = tomcatEmbeddedServletContainerFactory28.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory28.protocol = "org.apache.coyote.http11.Http11NioProtocol";
        org.springframework.core.io.ResourceLoader resourceLoader39 = tomcatEmbeddedServletContainerFactory28.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int43 = tomcatEmbeddedServletContainerFactory42.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory44.setProtocol("hi!");
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory44.protocol;
        tomcatEmbeddedServletContainerFactory44.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory52.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection57 = tomcatEmbeddedServletContainerFactory52.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList58 = tomcatEmbeddedServletContainerFactory52.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory44.tomcatContextCustomizers = tomcatContextCustomizerList58;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList60 = tomcatEmbeddedServletContainerFactory44.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory42.tomcatContextCustomizers = tomcatContextCustomizerList60;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory62.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory62.setProtocol("hi!");
        java.lang.String str67 = tomcatEmbeddedServletContainerFactory62.protocol;
        tomcatEmbeddedServletContainerFactory62.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory70.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory70.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection75 = tomcatEmbeddedServletContainerFactory70.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList76 = tomcatEmbeddedServletContainerFactory70.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory62.tomcatContextCustomizers = tomcatContextCustomizerList76;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList78 = tomcatEmbeddedServletContainerFactory62.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory42.tomcatContextCustomizers = tomcatContextCustomizerList78;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory80.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory80.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection85 = tomcatEmbeddedServletContainerFactory80.getTomcatConnectorCustomizers();
        boolean boolean86 = tomcatEmbeddedServletContainerFactory80.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress87 = null;
        tomcatEmbeddedServletContainerFactory80.setAddress(inetAddress87);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer89 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray90 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer89 };
        tomcatEmbeddedServletContainerFactory80.addConnectorCustomizers(tomcatConnectorCustomizerArray90);
        tomcatEmbeddedServletContainerFactory42.addConnectorCustomizers(tomcatConnectorCustomizerArray90);
        tomcatEmbeddedServletContainerFactory28.addConnectorCustomizers(tomcatConnectorCustomizerArray90);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray90);
        org.apache.catalina.Context context95 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context95);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray24);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection36);
        org.junit.Assert.assertNull(resourceLoader39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection57);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList58);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList60);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection75);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList76);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList78);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray90);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection21 = tomcatEmbeddedServletContainerFactory17.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList23 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList23, lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory17.contextLifecycleListeners = lifecycleListenerList23;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList23;
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader29 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader29);
        org.apache.catalina.Context context31 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context31);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(valveCollection21);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList14;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.apache.catalina.Context context18 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context18);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str17, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        boolean boolean10 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory11.getValves();
        java.net.InetAddress inetAddress16 = tomcatEmbeddedServletContainerFactory11.getAddress();
        tomcatEmbeddedServletContainerFactory11.setJspServletClassName("UTF-8");
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        boolean boolean24 = tomcatEmbeddedServletContainerFactory21.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory25.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory30.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors = connectorList32;
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory25.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory35.getMimeMappings();
        tomcatEmbeddedServletContainerFactory25.setMimeMappings(mimeMappings38);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList41 = tomcatEmbeddedServletContainerFactory40.tomcatConnectorCustomizers;
        int int42 = tomcatEmbeddedServletContainerFactory40.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray43 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory40.addContextLifecycleListeners(lifecycleListenerArray43);
        tomcatEmbeddedServletContainerFactory25.addContextLifecycleListeners(lifecycleListenerArray43);
        tomcatEmbeddedServletContainerFactory21.addContextLifecycleListeners(lifecycleListenerArray43);
        tomcatEmbeddedServletContainerFactory11.addContextLifecycleListeners(lifecycleListenerArray43);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray43);
        org.apache.catalina.connector.Connector connector49 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNull(inetAddress16);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray43);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors = connectorList15;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory8.protocol;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory8.protocol;
        tomcatEmbeddedServletContainerFactory8.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection21 = tomcatEmbeddedServletContainerFactory8.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList22 = tomcatEmbeddedServletContainerFactory8.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList22;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection24 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection27 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet28 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.apache.catalina.Context context29 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context29);
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection21);
        org.junit.Assert.assertNotNull(valveList22);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection24);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection27);
        org.junit.Assert.assertNotNull(errorPageSet28);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int2 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.apache.catalina.startup.Tomcat tomcat6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer7 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str4, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList16 = tomcatEmbeddedServletContainerFactory11.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings20);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings20);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList24 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory27.tomcatConnectorCustomizers = tomcatConnectorCustomizerList30;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection32 = tomcatEmbeddedServletContainerFactory27.getContextLifecycleListeners();
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory27.uriEncoding;
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory37.tomcatConnectorCustomizers = tomcatConnectorCustomizerList40;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection42 = tomcatEmbeddedServletContainerFactory37.getContextLifecycleListeners();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory37.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList44;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray46 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory36.addContextCustomizers(tomcatContextCustomizerArray46);
        tomcatEmbeddedServletContainerFactory27.addContextCustomizers(tomcatContextCustomizerArray46);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray46);
        org.springframework.core.io.ResourceLoader resourceLoader50 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory51.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory51.setTldSkip("UTF-8");
        int int56 = tomcatEmbeddedServletContainerFactory51.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory57.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory57.setProtocol("hi!");
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory57.protocol;
        tomcatEmbeddedServletContainerFactory57.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection65 = tomcatEmbeddedServletContainerFactory57.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory57.protocol = "org.apache.coyote.http11.Http11NioProtocol";
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet68 = tomcatEmbeddedServletContainerFactory57.getErrorPages();
        tomcatEmbeddedServletContainerFactory51.setErrorPages(errorPageSet68);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet68);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList16);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList24);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray46);
        org.junit.Assert.assertNull(resourceLoader50);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection65);
        org.junit.Assert.assertNotNull(errorPageSet68);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory2.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory2.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList9 = tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory2.additionalTomcatConnectors = connectorList9;
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory2.protocol;
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory2.protocol;
        tomcatEmbeddedServletContainerFactory2.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file19 = tomcatEmbeddedServletContainerFactory17.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory2.setBaseDirectory(file19);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file19;
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "hi!";
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(connectorList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file19.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.7708457494403962082.100");
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray2 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray2);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 100);
        java.util.List<org.apache.catalina.Valve> valveList9 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.apache.catalina.Context context10 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(valveList9);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.Context context4 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader11 = tomcatEmbeddedServletContainerFactory9.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray12 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory9.addErrorPages(errorPageArray12);
        tomcatEmbeddedServletContainerFactory6.addErrorPages(errorPageArray12);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray12);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection16 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNull(resourceLoader11);
        org.junit.Assert.assertNotNull(errorPageArray12);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection16);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str3 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.Context context5 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory2.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory2.setTldSkip("UTF-8");
        org.apache.catalina.Context context7 = null;
        tomcatEmbeddedServletContainerFactory2.postProcessContext(context7);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.net.InetAddress inetAddress20 = null;
        tomcatEmbeddedServletContainerFactory9.setAddress(inetAddress20);
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        java.io.File file23 = tomcatEmbeddedServletContainerFactory9.baseDirectory;
        org.apache.catalina.Valve[] valveArray24 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory9.addContextValves(valveArray24);
        tomcatEmbeddedServletContainerFactory2.addContextValves(valveArray24);
        tomcatEmbeddedServletContainerFactory1.addContextValves(valveArray24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList29 = tomcatEmbeddedServletContainerFactory28.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection30 = tomcatEmbeddedServletContainerFactory28.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader33 = tomcatEmbeddedServletContainerFactory31.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray34 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory31.addErrorPages(errorPageArray34);
        tomcatEmbeddedServletContainerFactory28.addErrorPages(errorPageArray34);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray37 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray37);
        java.io.File file39 = tomcatEmbeddedServletContainerFactory28.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory42.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer44 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray45 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer44 };
        tomcatEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray45);
        tomcatEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray45);
        tomcatEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray45);
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory1.protocol;
        tomcatEmbeddedServletContainerFactory1.uriEncoding = "hi!";
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(valveArray24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList29);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection30);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNull(resourceLoader33);
        org.junit.Assert.assertNotNull(errorPageArray34);
        org.junit.Assert.assertNotNull(servletContextInitializerArray37);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(servletContextInitializerArray45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str49, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        org.apache.catalina.connector.Connector connector11 = null;
        org.apache.catalina.connector.Connector[] connectorArray12 = new org.apache.catalina.connector.Connector[] { connector11 };
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList15 = tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection16 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList17 = tomcatEmbeddedServletContainerFactory14.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection18);
        java.net.InetAddress inetAddress20 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress20);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList22 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(connectorArray12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection16);
        org.junit.Assert.assertNotNull(valveList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList22);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray16 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.protocol = "hi!";
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        tomcatEmbeddedServletContainerFactory0.setProtocol("org.apache.coyote.http11.Http11NioProtocol");
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(lifecycleListenerArray16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str21, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str24, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str5 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str6 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str7 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.Context context8 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str5, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str6, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str7, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory10.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection25 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.apache.catalina.Context context26 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context26, servletContextInitializerArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-8" + "'", str24, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection25);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList6 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setTldSkip("UTF-8");
        java.io.File file13 = tomcatEmbeddedServletContainerFactory7.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file13);
        org.apache.catalina.connector.Connector connector15 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList6);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file13.toString(), "/tmp/UTF-8.9175479509539859865.0");
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList3 = null;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList3;
        java.net.InetAddress inetAddress5 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory6.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory6.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors = connectorList19;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory12.protocol;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory12.protocol;
        java.net.InetAddress inetAddress23 = null;
        tomcatEmbeddedServletContainerFactory12.setAddress(inetAddress23);
        java.io.File file25 = null;
        tomcatEmbeddedServletContainerFactory12.setBaseDirectory(file25);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray27 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory12.addContextCustomizers(tomcatContextCustomizerArray27);
        tomcatEmbeddedServletContainerFactory6.addContextCustomizers(tomcatContextCustomizerArray27);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory30.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory35.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory35.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors = connectorList37;
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory30.protocol;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory30.tomcatConnectorCustomizers;
        int int41 = tomcatEmbeddedServletContainerFactory30.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory42.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = tomcatEmbeddedServletContainerFactory47.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList49 = tomcatEmbeddedServletContainerFactory47.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory42.additionalTomcatConnectors = connectorList49;
        java.lang.String str51 = tomcatEmbeddedServletContainerFactory42.protocol;
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory42.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory53.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory53.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings59 = tomcatEmbeddedServletContainerFactory58.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList60 = tomcatEmbeddedServletContainerFactory58.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors = connectorList60;
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory53.protocol;
        java.lang.String str63 = tomcatEmbeddedServletContainerFactory53.protocol;
        java.net.InetAddress inetAddress64 = null;
        tomcatEmbeddedServletContainerFactory53.setAddress(inetAddress64);
        int int66 = tomcatEmbeddedServletContainerFactory53.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings68 = tomcatEmbeddedServletContainerFactory67.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList70 = tomcatEmbeddedServletContainerFactory69.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory67.tomcatConnectorCustomizers = tomcatConnectorCustomizerList70;
        tomcatEmbeddedServletContainerFactory53.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList70);
        tomcatEmbeddedServletContainerFactory42.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList70);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings75 = tomcatEmbeddedServletContainerFactory74.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList77 = tomcatEmbeddedServletContainerFactory76.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory74.tomcatConnectorCustomizers = tomcatConnectorCustomizerList77;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection79 = tomcatEmbeddedServletContainerFactory74.getContextLifecycleListeners();
        java.lang.String str80 = tomcatEmbeddedServletContainerFactory74.uriEncoding;
        tomcatEmbeddedServletContainerFactory74.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory83.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory83.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection88 = tomcatEmbeddedServletContainerFactory83.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory83.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection91 = tomcatEmbeddedServletContainerFactory83.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector92 = null;
        org.apache.catalina.connector.Connector[] connectorArray93 = new org.apache.catalina.connector.Connector[] { connector92 };
        tomcatEmbeddedServletContainerFactory83.addAdditionalTomcatConnectors(connectorArray93);
        tomcatEmbeddedServletContainerFactory74.addAdditionalTomcatConnectors(connectorArray93);
        tomcatEmbeddedServletContainerFactory42.addAdditionalTomcatConnectors(connectorArray93);
        tomcatEmbeddedServletContainerFactory30.addAdditionalTomcatConnectors(connectorArray93);
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray93);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray93);
        org.junit.Assert.assertNull(inetAddress5);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection11);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray27);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNotNull(connectorList49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings59);
        org.junit.Assert.assertNotNull(connectorList60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(mimeMappings68);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList70);
        org.junit.Assert.assertNotNull(mimeMappings75);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList77);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "UTF-8" + "'", str80, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection88);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection91);
        org.junit.Assert.assertNotNull(connectorArray93);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory8.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer10 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer10 };
        tomcatEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray11);
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader14);
        java.net.InetAddress inetAddress16 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.apache.catalina.connector.Connector connector17 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertNull(inetAddress16);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection12 = tomcatEmbeddedServletContainerFactory7.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory7.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector15 = null;
        org.apache.catalina.connector.Connector[] connectorArray16 = new org.apache.catalina.connector.Connector[] { connector15 };
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray16);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray16);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList19 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader22 = tomcatEmbeddedServletContainerFactory20.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection28 = tomcatEmbeddedServletContainerFactory23.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList29 = tomcatEmbeddedServletContainerFactory23.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory20.tomcatContextCustomizers = tomcatContextCustomizerList29;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList31 = tomcatEmbeddedServletContainerFactory20.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory32.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList39 = tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList40 = tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory32.additionalTomcatConnectors = connectorList40;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray44);
        tomcatEmbeddedServletContainerFactory42.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray48 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory42.addContextLifecycleListeners(lifecycleListenerArray48);
        tomcatEmbeddedServletContainerFactory32.addContextLifecycleListeners(lifecycleListenerArray48);
        tomcatEmbeddedServletContainerFactory20.addContextLifecycleListeners(lifecycleListenerArray48);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray48);
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection12);
        org.junit.Assert.assertNotNull(connectorArray16);
        org.junit.Assert.assertNotNull(lifecycleListenerList19);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(resourceLoader22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection28);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList29);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList31);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(connectorList39);
        org.junit.Assert.assertNotNull(connectorList40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertNotNull(lifecycleListenerArray48);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str53, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n", 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection8 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.coyote.http11.Http11NioProtocol";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors = connectorList22;
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory15.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean26 = tomcatEmbeddedServletContainerFactory25.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList27 = tomcatEmbeddedServletContainerFactory25.contextValves;
        tomcatEmbeddedServletContainerFactory15.contextValves = valveList27;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory15.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory30.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory35.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory35.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors = connectorList37;
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory30.protocol;
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory30.protocol;
        java.net.InetAddress inetAddress41 = null;
        tomcatEmbeddedServletContainerFactory30.setAddress(inetAddress41);
        java.util.List<org.apache.catalina.connector.Connector> connectorList43 = tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory44.setTldSkip("UTF-8");
        java.io.File file50 = tomcatEmbeddedServletContainerFactory44.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory30.setDocumentRoot(file50);
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory54.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = tomcatEmbeddedServletContainerFactory59.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList61 = tomcatEmbeddedServletContainerFactory59.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory54.additionalTomcatConnectors = connectorList61;
        java.lang.String str63 = tomcatEmbeddedServletContainerFactory54.protocol;
        java.lang.String str64 = tomcatEmbeddedServletContainerFactory54.protocol;
        tomcatEmbeddedServletContainerFactory54.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection67 = tomcatEmbeddedServletContainerFactory54.getTomcatContextCustomizers();
        int int68 = tomcatEmbeddedServletContainerFactory54.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory69.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory69.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings75 = tomcatEmbeddedServletContainerFactory74.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList76 = tomcatEmbeddedServletContainerFactory74.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory69.additionalTomcatConnectors = connectorList76;
        java.lang.String str78 = tomcatEmbeddedServletContainerFactory69.protocol;
        java.lang.String str79 = tomcatEmbeddedServletContainerFactory69.protocol;
        java.net.InetAddress inetAddress80 = null;
        tomcatEmbeddedServletContainerFactory69.setAddress(inetAddress80);
        java.util.List<org.apache.catalina.connector.Connector> connectorList82 = tomcatEmbeddedServletContainerFactory69.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory83.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory83.setTldSkip("UTF-8");
        java.io.File file89 = tomcatEmbeddedServletContainerFactory83.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory69.setDocumentRoot(file89);
        tomcatEmbeddedServletContainerFactory54.setDocumentRoot(file89);
        tomcatEmbeddedServletContainerFactory30.baseDirectory = file89;
        tomcatEmbeddedServletContainerFactory15.setDocumentRoot(file89);
        tomcatEmbeddedServletContainerFactory11.baseDirectory = file89;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file89);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection8);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(valveList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(connectorList43);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file50.toString(), "/tmp/UTF-8.613041027936434430.0");
        org.junit.Assert.assertNotNull(mimeMappings60);
        org.junit.Assert.assertNotNull(connectorList61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(mimeMappings75);
        org.junit.Assert.assertNotNull(connectorList76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(connectorList82);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file89.toString(), "/tmp/UTF-8.20394879940880621.0");
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.apache.catalina.Context context13 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context13);
        org.springframework.core.io.ResourceLoader resourceLoader15 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean17 = tomcatEmbeddedServletContainerFactory16.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList18 = tomcatEmbeddedServletContainerFactory16.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList18;
        org.apache.catalina.connector.Connector connector20 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(valveList18);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        org.apache.catalina.Context context9 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context9);
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = null;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList11;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors = connectorList20;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory13.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean24 = tomcatEmbeddedServletContainerFactory23.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList25 = tomcatEmbeddedServletContainerFactory23.contextValves;
        tomcatEmbeddedServletContainerFactory13.contextValves = valveList25;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader30 = null;
        tomcatEmbeddedServletContainerFactory29.setResourceLoader(resourceLoader30);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = tomcatEmbeddedServletContainerFactory29.getErrorPages();
        tomcatEmbeddedServletContainerFactory13.setErrorPages(errorPageSet32);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet32);
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.apache.catalina.Context context36 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(valveList25);
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) 1);
        java.util.List<org.apache.catalina.Valve> valveList2 = tomcatEmbeddedServletContainerFactory1.contextValves;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet3 = tomcatEmbeddedServletContainerFactory1.getErrorPages();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(valveList2);
        org.junit.Assert.assertNotNull(errorPageSet3);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList11 = tomcatEmbeddedServletContainerFactory10.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection12 = tomcatEmbeddedServletContainerFactory10.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList13 = tomcatEmbeddedServletContainerFactory10.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection14 = tomcatEmbeddedServletContainerFactory10.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory10.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory10.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory10.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors = connectorList26;
        org.apache.catalina.Context context28 = null;
        tomcatEmbeddedServletContainerFactory19.postProcessContext(context28);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory32.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray34 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory32.addConnectorCustomizers(tomcatConnectorCustomizerArray34);
        tomcatEmbeddedServletContainerFactory19.addConnectorCustomizers(tomcatConnectorCustomizerArray34);
        tomcatEmbeddedServletContainerFactory10.addConnectorCustomizers(tomcatConnectorCustomizerArray34);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray34);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory39.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory39.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = tomcatEmbeddedServletContainerFactory44.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList46 = tomcatEmbeddedServletContainerFactory44.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors = connectorList46;
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory39.protocol;
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory39.protocol;
        tomcatEmbeddedServletContainerFactory39.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection52 = tomcatEmbeddedServletContainerFactory39.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory53.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        org.apache.catalina.Context context57 = null;
        tomcatEmbeddedServletContainerFactory53.postProcessContext(context57);
        java.util.Collection<org.apache.catalina.Valve> valveCollection59 = tomcatEmbeddedServletContainerFactory53.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory60.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory60.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings66 = tomcatEmbeddedServletContainerFactory65.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList67 = tomcatEmbeddedServletContainerFactory65.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors = connectorList67;
        java.lang.String str69 = tomcatEmbeddedServletContainerFactory60.protocol;
        java.lang.String str70 = tomcatEmbeddedServletContainerFactory60.protocol;
        java.net.InetAddress inetAddress71 = null;
        tomcatEmbeddedServletContainerFactory60.setAddress(inetAddress71);
        int int73 = tomcatEmbeddedServletContainerFactory60.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader74 = tomcatEmbeddedServletContainerFactory60.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory75.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory75.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection80 = tomcatEmbeddedServletContainerFactory75.getTomcatConnectorCustomizers();
        boolean boolean81 = tomcatEmbeddedServletContainerFactory75.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress82 = null;
        tomcatEmbeddedServletContainerFactory75.setAddress(inetAddress82);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray84 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory75.addContextCustomizers(tomcatContextCustomizerArray84);
        tomcatEmbeddedServletContainerFactory60.addContextCustomizers(tomcatContextCustomizerArray84);
        tomcatEmbeddedServletContainerFactory53.addContextCustomizers(tomcatContextCustomizerArray84);
        tomcatEmbeddedServletContainerFactory39.addContextCustomizers(tomcatContextCustomizerArray84);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray84);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList11);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection12);
        org.junit.Assert.assertNotNull(valveList13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray34);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNotNull(connectorList46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection52);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNotNull(valveCollection59);
        org.junit.Assert.assertNotNull(mimeMappings66);
        org.junit.Assert.assertNotNull(connectorList67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(resourceLoader74);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray84);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        org.apache.catalina.Context context9 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context9);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory13.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray15 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory13.addConnectorCustomizers(tomcatConnectorCustomizerArray15);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory18.getUriEncoding();
        tomcatEmbeddedServletContainerFactory18.setJspServletClassName("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList25 = tomcatEmbeddedServletContainerFactory24.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory22.tomcatConnectorCustomizers = tomcatConnectorCustomizerList25;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection27 = tomcatEmbeddedServletContainerFactory22.getContextLifecycleListeners();
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory22.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList36 = tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors = connectorList37;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory39.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray41);
        tomcatEmbeddedServletContainerFactory39.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray45 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory39.addContextLifecycleListeners(lifecycleListenerArray45);
        tomcatEmbeddedServletContainerFactory29.addContextLifecycleListeners(lifecycleListenerArray45);
        tomcatEmbeddedServletContainerFactory22.addContextLifecycleListeners(lifecycleListenerArray45);
        tomcatEmbeddedServletContainerFactory18.addContextLifecycleListeners(lifecycleListenerArray45);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray45);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory51.getUriEncoding();
        int int53 = tomcatEmbeddedServletContainerFactory51.getPort();
        int int54 = tomcatEmbeddedServletContainerFactory51.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory55.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = tomcatEmbeddedServletContainerFactory60.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList62 = tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors = connectorList62;
        java.lang.String str64 = tomcatEmbeddedServletContainerFactory55.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory65.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings68 = tomcatEmbeddedServletContainerFactory65.getMimeMappings();
        tomcatEmbeddedServletContainerFactory55.setMimeMappings(mimeMappings68);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList71 = tomcatEmbeddedServletContainerFactory70.tomcatConnectorCustomizers;
        int int72 = tomcatEmbeddedServletContainerFactory70.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray73 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory70.addContextLifecycleListeners(lifecycleListenerArray73);
        tomcatEmbeddedServletContainerFactory55.addContextLifecycleListeners(lifecycleListenerArray73);
        tomcatEmbeddedServletContainerFactory55.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader78 = tomcatEmbeddedServletContainerFactory55.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory79 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings80 = tomcatEmbeddedServletContainerFactory79.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList82 = tomcatEmbeddedServletContainerFactory81.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory79.tomcatConnectorCustomizers = tomcatConnectorCustomizerList82;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection84 = tomcatEmbeddedServletContainerFactory79.getContextLifecycleListeners();
        java.lang.String str85 = tomcatEmbeddedServletContainerFactory79.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList86 = tomcatEmbeddedServletContainerFactory79.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.ErrorPage errorPage87 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray88 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage87 };
        tomcatEmbeddedServletContainerFactory79.addErrorPages(errorPageArray88);
        tomcatEmbeddedServletContainerFactory55.addErrorPages(errorPageArray88);
        tomcatEmbeddedServletContainerFactory51.addErrorPages(errorPageArray88);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray88);
        java.io.File file93 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList25);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UTF-8" + "'", str28, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNotNull(connectorList36);
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UTF-8" + "'", str40, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
        org.junit.Assert.assertNotNull(lifecycleListenerArray45);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "UTF-8" + "'", str52, "UTF-8");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8080 + "'", int53 == 8080);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNotNull(connectorList62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings68);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray73);
        org.junit.Assert.assertNull(resourceLoader78);
        org.junit.Assert.assertNotNull(mimeMappings80);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList82);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "UTF-8" + "'", str85, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList86);
        org.junit.Assert.assertNotNull(errorPageArray88);
        org.junit.Assert.assertNull(file93);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory6.protocol;
        tomcatEmbeddedServletContainerFactory6.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection19 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        boolean boolean20 = tomcatEmbeddedServletContainerFactory14.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader23 = tomcatEmbeddedServletContainerFactory21.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection29 = tomcatEmbeddedServletContainerFactory24.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList30 = tomcatEmbeddedServletContainerFactory24.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory21.tomcatContextCustomizers = tomcatContextCustomizerList30;
        tomcatEmbeddedServletContainerFactory14.tomcatContextCustomizers = tomcatContextCustomizerList30;
        tomcatEmbeddedServletContainerFactory6.tomcatContextCustomizers = tomcatContextCustomizerList30;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList30;
        java.util.Collection<org.apache.catalina.Valve> valveCollection35 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.util.concurrent.TimeUnit timeUnit37 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1, timeUnit37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNull(resourceLoader23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection29);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList30);
        org.junit.Assert.assertNotNull(valveCollection35);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.net.InetAddress inetAddress13 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader17);
        tomcatEmbeddedServletContainerFactory16.setPort(10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList21;
        java.io.File file23 = null;
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file23;
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList27 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors = connectorList35;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory28.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader40 = tomcatEmbeddedServletContainerFactory38.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory41.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory41.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection46 = tomcatEmbeddedServletContainerFactory41.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList47 = tomcatEmbeddedServletContainerFactory41.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory38.tomcatContextCustomizers = tomcatContextCustomizerList47;
        tomcatEmbeddedServletContainerFactory28.tomcatContextCustomizers = tomcatContextCustomizerList47;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory50.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory50.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = tomcatEmbeddedServletContainerFactory55.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList57 = tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory50.additionalTomcatConnectors = connectorList57;
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory50.protocol;
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory50.protocol;
        java.net.InetAddress inetAddress61 = null;
        tomcatEmbeddedServletContainerFactory50.setAddress(inetAddress61);
        tomcatEmbeddedServletContainerFactory50.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray65 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList66 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList66, valveArray65);
        tomcatEmbeddedServletContainerFactory50.contextValves = valveList66;
        tomcatEmbeddedServletContainerFactory28.contextValves = valveList66;
        java.lang.String str70 = tomcatEmbeddedServletContainerFactory28.uriEncoding;
        java.io.File file72 = tomcatEmbeddedServletContainerFactory28.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file72;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory74.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory74.setTldSkip("UTF-8");
        java.io.File file80 = tomcatEmbeddedServletContainerFactory74.createTempDir("UTF-8");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings81 = tomcatEmbeddedServletContainerFactory74.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory82.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory82.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList87 = tomcatEmbeddedServletContainerFactory82.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList88 = tomcatEmbeddedServletContainerFactory82.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory74.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList88);
        java.util.List<org.apache.catalina.connector.Connector> connectorList90 = null;
        tomcatEmbeddedServletContainerFactory74.additionalTomcatConnectors = connectorList90;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList92 = tomcatEmbeddedServletContainerFactory74.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList92;
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertNotNull(connectorList27);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNull(resourceLoader40);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection46);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList47);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNotNull(connectorList57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(valveArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "UTF-8" + "'", str70, "UTF-8");
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file72.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.4319156752416781280.0");
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file80.toString(), "/tmp/UTF-8.949222199223259233.0");
        org.junit.Assert.assertNotNull(mimeMappings81);
        org.junit.Assert.assertNotNull(lifecycleListenerList87);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList88);
        org.junit.Assert.assertNotNull(lifecycleListenerList92);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file7 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList14;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory7.protocol;
        org.apache.catalina.Context context17 = null;
        tomcatEmbeddedServletContainerFactory7.postProcessContext(context17);
        java.io.File file20 = tomcatEmbeddedServletContainerFactory7.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file20);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList24 = tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList25 = tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList26 = tomcatEmbeddedServletContainerFactory22.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList26;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection28 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file20.toString(), "/tmp/UTF-8.672193348565138912.0");
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(connectorList24);
        org.junit.Assert.assertNotNull(connectorList25);
        org.junit.Assert.assertNotNull(lifecycleListenerList26);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection28);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory1.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers;
        java.io.File file5 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        java.io.File file6 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        boolean boolean7 = tomcatEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory1.protocol = "UTF-8";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        java.io.File file15 = tomcatEmbeddedServletContainerFactory10.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList19;
        tomcatEmbeddedServletContainerFactory1.additionalTomcatConnectors = connectorList19;
        java.net.InetAddress inetAddress22 = tomcatEmbeddedServletContainerFactory1.getAddress();
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory1.getUriEncoding();
        java.io.File file24 = tomcatEmbeddedServletContainerFactory1.getDocumentRoot();
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file26 = tomcatEmbeddedServletContainerFactory1.createTempDir("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Prefix string too short");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertNull(inetAddress22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str23, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertNull(file24);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList2 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray3 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList4, tomcatConnectorCustomizerArray3);
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList4;
        boolean boolean7 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.apache.catalina.Valve[] valveArray8 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Valves must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveList2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList23 = tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors = connectorList23;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory16.protocol;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory16.protocol;
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection29 = tomcatEmbeddedServletContainerFactory16.getTomcatContextCustomizers();
        int int30 = tomcatEmbeddedServletContainerFactory16.getPort();
        java.io.File file32 = tomcatEmbeddedServletContainerFactory16.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file32;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList34 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.net.InetAddress inetAddress35 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress35);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(connectorList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file32.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.1103782431895309343.0");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList34);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList10 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList18;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory11.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings24);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory11.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = tomcatEmbeddedServletContainerFactory32.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors = connectorList34;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory27.protocol;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory27.protocol;
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection40 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        int int41 = tomcatEmbeddedServletContainerFactory27.getPort();
        java.io.File file43 = tomcatEmbeddedServletContainerFactory27.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory11.baseDirectory = file43;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file43);
        java.net.InetAddress inetAddress46 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.net.InetAddress inetAddress47 = tomcatEmbeddedServletContainerFactory0.getAddress();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("org.apache.coyote.http11.Http11NioProtocol");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(lifecycleListenerList10);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(connectorList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file43.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.447727625459172977.0");
        org.junit.Assert.assertNull(inetAddress46);
        org.junit.Assert.assertNull(inetAddress47);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader20 = tomcatEmbeddedServletContainerFactory18.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory21.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection26 = tomcatEmbeddedServletContainerFactory21.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList27 = tomcatEmbeddedServletContainerFactory21.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory18.tomcatContextCustomizers = tomcatContextCustomizerList27;
        java.util.List<org.apache.catalina.Valve> valveList29 = tomcatEmbeddedServletContainerFactory18.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList29;
        boolean boolean31 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection26);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList27);
        org.junit.Assert.assertNotNull(valveList29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader14 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        java.net.InetAddress inetAddress16 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress16);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str15, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.apache.catalina.Context context2 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context2);
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        java.io.File file6 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList14;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory7.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean18 = tomcatEmbeddedServletContainerFactory17.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList19 = tomcatEmbeddedServletContainerFactory17.contextValves;
        tomcatEmbeddedServletContainerFactory7.contextValves = valveList19;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory7.getContextPath();
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory7.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory7.setRegisterJspServlet(false);
        org.apache.catalina.Context context25 = null;
        tomcatEmbeddedServletContainerFactory7.postProcessContext(context25);
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory7.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        tomcatEmbeddedServletContainerFactory28.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection34 = tomcatEmbeddedServletContainerFactory28.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory35.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = tomcatEmbeddedServletContainerFactory40.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList42 = tomcatEmbeddedServletContainerFactory40.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory35.additionalTomcatConnectors = connectorList42;
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory35.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory45.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = tomcatEmbeddedServletContainerFactory45.getMimeMappings();
        tomcatEmbeddedServletContainerFactory35.setMimeMappings(mimeMappings48);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList51 = tomcatEmbeddedServletContainerFactory50.tomcatConnectorCustomizers;
        int int52 = tomcatEmbeddedServletContainerFactory50.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray53 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory50.addContextLifecycleListeners(lifecycleListenerArray53);
        tomcatEmbeddedServletContainerFactory35.addContextLifecycleListeners(lifecycleListenerArray53);
        tomcatEmbeddedServletContainerFactory35.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader58 = tomcatEmbeddedServletContainerFactory35.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = tomcatEmbeddedServletContainerFactory59.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList62 = tomcatEmbeddedServletContainerFactory61.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory59.tomcatConnectorCustomizers = tomcatConnectorCustomizerList62;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection64 = tomcatEmbeddedServletContainerFactory59.getContextLifecycleListeners();
        java.lang.String str65 = tomcatEmbeddedServletContainerFactory59.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList66 = tomcatEmbeddedServletContainerFactory59.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.ErrorPage errorPage67 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray68 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage67 };
        tomcatEmbeddedServletContainerFactory59.addErrorPages(errorPageArray68);
        tomcatEmbeddedServletContainerFactory35.addErrorPages(errorPageArray68);
        tomcatEmbeddedServletContainerFactory28.addErrorPages(errorPageArray68);
        tomcatEmbeddedServletContainerFactory7.addErrorPages(errorPageArray68);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray68);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(valveList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection34);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertNotNull(connectorList42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray53);
        org.junit.Assert.assertNull(resourceLoader58);
        org.junit.Assert.assertNotNull(mimeMappings60);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList62);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "UTF-8" + "'", str65, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList66);
        org.junit.Assert.assertNotNull(errorPageArray68);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.io.File file13 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file13);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray15 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader19 = tomcatEmbeddedServletContainerFactory17.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory20.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection25 = tomcatEmbeddedServletContainerFactory20.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList26 = tomcatEmbeddedServletContainerFactory20.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory17.tomcatContextCustomizers = tomcatContextCustomizerList26;
        tomcatEmbeddedServletContainerFactory17.uriEncoding = "UTF-8";
        int int30 = tomcatEmbeddedServletContainerFactory17.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean32 = tomcatEmbeddedServletContainerFactory31.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection33 = tomcatEmbeddedServletContainerFactory31.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        tomcatEmbeddedServletContainerFactory17.setMimeMappings(mimeMappings34);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings34);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean38 = tomcatEmbeddedServletContainerFactory37.isRegisterDefaultServlet();
        org.apache.catalina.Context context39 = null;
        tomcatEmbeddedServletContainerFactory37.postProcessContext(context39);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory41.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory41.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection46 = tomcatEmbeddedServletContainerFactory41.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory41.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector49 = null;
        org.apache.catalina.connector.Connector[] connectorArray50 = new org.apache.catalina.connector.Connector[] { connector49 };
        tomcatEmbeddedServletContainerFactory41.addAdditionalTomcatConnectors(connectorArray50);
        tomcatEmbeddedServletContainerFactory37.addAdditionalTomcatConnectors(connectorArray50);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray50);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet54 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        int int55 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection56 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray15);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(resourceLoader19);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection25);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8080 + "'", int30 == 8080);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(valveCollection33);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection46);
        org.junit.Assert.assertNotNull(connectorArray50);
        org.junit.Assert.assertNotNull(errorPageSet54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection56);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str2 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str4 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str5 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str6 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str7 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.LifecycleEvent lifecycleEvent8 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str2, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str5, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str6, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str7, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory17.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList24 = tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors = connectorList24;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory17.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean28 = tomcatEmbeddedServletContainerFactory27.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList29 = tomcatEmbeddedServletContainerFactory27.contextValves;
        tomcatEmbeddedServletContainerFactory17.contextValves = valveList29;
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory17.getContextPath();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings32);
        java.net.InetAddress inetAddress34 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str13, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(connectorList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(valveList29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNull(inetAddress34);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray19);
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray23 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory17.addContextLifecycleListeners(lifecycleListenerArray23);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray23);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList36 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors = connectorList36;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings38);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) '4');
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList42 = tomcatEmbeddedServletContainerFactory41.tomcatConnectorCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet43 = tomcatEmbeddedServletContainerFactory41.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList45 = tomcatEmbeddedServletContainerFactory44.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection46 = tomcatEmbeddedServletContainerFactory44.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList47 = tomcatEmbeddedServletContainerFactory44.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection48 = tomcatEmbeddedServletContainerFactory44.getTomcatConnectorCustomizers();
        java.io.File file50 = tomcatEmbeddedServletContainerFactory44.createTempDir("hi!");
        tomcatEmbeddedServletContainerFactory41.setBaseDirectory(file50);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file50);
        java.util.concurrent.TimeUnit timeUnit54 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 100, timeUnit54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(lifecycleListenerArray23);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertNotNull(connectorList36);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList42);
        org.junit.Assert.assertNotNull(errorPageSet43);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection46);
        org.junit.Assert.assertNotNull(valveList47);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection48);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file50.toString(), "/tmp/hi!.5526871804950357381.8080");
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        int int17 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray18 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory15.addContextLifecycleListeners(lifecycleListenerArray18);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray18);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        java.util.List<org.apache.catalina.connector.Connector> connectorList23 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray24 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatConnectorCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray18);
        org.junit.Assert.assertNotNull(connectorList23);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str2 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str4 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str5 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.LifecycleEvent lifecycleEvent6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str2, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str4, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory3.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers = tomcatConnectorCustomizerList4;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory1.getContextLifecycleListeners();
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory1.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory1.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        int int10 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.apache.catalina.Context context11 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8080 + "'", int10 == 8080);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) -1);
        int int2 = tomcatEmbeddedServletContainerFactory1.getPort();
        org.apache.catalina.Context context3 = null;
        tomcatEmbeddedServletContainerFactory1.postProcessContext(context3);
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory1.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory6.additionalTomcatConnectors = connectorList13;
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory6.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean17 = tomcatEmbeddedServletContainerFactory16.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList18 = tomcatEmbeddedServletContainerFactory16.contextValves;
        tomcatEmbeddedServletContainerFactory6.contextValves = valveList18;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader23 = null;
        tomcatEmbeddedServletContainerFactory22.setResourceLoader(resourceLoader23);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = tomcatEmbeddedServletContainerFactory22.getErrorPages();
        tomcatEmbeddedServletContainerFactory6.setErrorPages(errorPageSet25);
        java.util.Collection<org.apache.catalina.Valve> valveCollection27 = tomcatEmbeddedServletContainerFactory6.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        tomcatEmbeddedServletContainerFactory6.resourceLoader = resourceLoader28;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers = tomcatConnectorCustomizerList30;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory1.uriEncoding;
        org.apache.catalina.connector.Connector connector33 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.customizeConnector(connector33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(valveList18);
        org.junit.Assert.assertNotNull(errorPageSet25);
        org.junit.Assert.assertNotNull(valveCollection27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-8" + "'", str32, "UTF-8");
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) -1);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet2 = tomcatEmbeddedServletContainerFactory1.getErrorPages();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(errorPageSet2);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        org.junit.Assert.assertNotNull(mimeMappings3);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.apache.catalina.Context context2 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context2);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.tomcat.util.scan.MergedWebXml");
        int int6 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8080 + "'", int6 == 8080);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        tomcatEmbeddedServletContainerFactory0.tldSkip = "UTF-8";
        org.apache.catalina.connector.Connector[] connectorArray15 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Connectors must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader14 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection20 = tomcatEmbeddedServletContainerFactory15.getTomcatConnectorCustomizers();
        boolean boolean21 = tomcatEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress22 = null;
        tomcatEmbeddedServletContainerFactory15.setAddress(inetAddress22);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray24 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory15.addContextCustomizers(tomcatContextCustomizerArray24);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray24);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.Context context28 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray24);
        org.junit.Assert.assertNotNull(mimeMappings27);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList10 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList18;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory11.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings24);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory11.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = tomcatEmbeddedServletContainerFactory32.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors = connectorList34;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory27.protocol;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory27.protocol;
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection40 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        int int41 = tomcatEmbeddedServletContainerFactory27.getPort();
        java.io.File file43 = tomcatEmbeddedServletContainerFactory27.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory11.baseDirectory = file43;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file43);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList46 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1);
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.apache.catalina.connector.Connector connector50 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(lifecycleListenerList10);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(connectorList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file43.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.4993453378115241470.0");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str49, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray5 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList6 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList6, lifecycleListenerArray5);
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList6;
        boolean boolean9 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.apache.catalina.Context context10 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNotNull(lifecycleListenerArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection3 = tomcatEmbeddedServletContainerFactory2.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList4 = tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners;
        java.util.List<org.apache.catalina.Valve> valveList5 = tomcatEmbeddedServletContainerFactory2.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection6 = tomcatEmbeddedServletContainerFactory2.getTomcatConnectorCustomizers();
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory2.protocol;
        tomcatEmbeddedServletContainerFactory2.setSessionTimeout((int) (byte) 100);
        tomcatEmbeddedServletContainerFactory2.uriEncoding = "UTF-8";
        org.apache.catalina.Context context12 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.addJspServlet(context12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection3);
        org.junit.Assert.assertNotNull(lifecycleListenerList4);
        org.junit.Assert.assertNotNull(valveList5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str7, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n", 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray9 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray9);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList12 = tomcatEmbeddedServletContainerFactory11.tomcatConnectorCustomizers;
        int int13 = tomcatEmbeddedServletContainerFactory11.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray14 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory11.addContextLifecycleListeners(lifecycleListenerArray14);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray14);
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray14);
        org.junit.Assert.assertNotNull(connectorList17);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList5 = tomcatEmbeddedServletContainerFactory4.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection6 = tomcatEmbeddedServletContainerFactory4.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList7 = tomcatEmbeddedServletContainerFactory4.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory4.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList9 = tomcatEmbeddedServletContainerFactory4.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory4.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList12 = tomcatEmbeddedServletContainerFactory4.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors = connectorList20;
        org.apache.catalina.Context context22 = null;
        tomcatEmbeddedServletContainerFactory13.postProcessContext(context22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory26.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray28 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory26.addConnectorCustomizers(tomcatConnectorCustomizerArray28);
        tomcatEmbeddedServletContainerFactory13.addConnectorCustomizers(tomcatConnectorCustomizerArray28);
        tomcatEmbeddedServletContainerFactory4.addConnectorCustomizers(tomcatConnectorCustomizerArray28);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray28);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList34 = tomcatEmbeddedServletContainerFactory33.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection35 = tomcatEmbeddedServletContainerFactory33.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader38 = tomcatEmbeddedServletContainerFactory36.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray39 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory36.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory33.addErrorPages(errorPageArray39);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory42.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = tomcatEmbeddedServletContainerFactory47.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList49 = tomcatEmbeddedServletContainerFactory47.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory42.additionalTomcatConnectors = connectorList49;
        java.lang.String str51 = tomcatEmbeddedServletContainerFactory42.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = tomcatEmbeddedServletContainerFactory52.getMimeMappings();
        tomcatEmbeddedServletContainerFactory42.setMimeMappings(mimeMappings55);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList58 = tomcatEmbeddedServletContainerFactory57.tomcatConnectorCustomizers;
        int int59 = tomcatEmbeddedServletContainerFactory57.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray60 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory57.addContextLifecycleListeners(lifecycleListenerArray60);
        tomcatEmbeddedServletContainerFactory42.addContextLifecycleListeners(lifecycleListenerArray60);
        java.util.List<org.apache.catalina.Valve> valveList63 = tomcatEmbeddedServletContainerFactory42.contextValves;
        tomcatEmbeddedServletContainerFactory33.contextValves = valveList63;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList63;
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings69 = tomcatEmbeddedServletContainerFactory68.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList71 = tomcatEmbeddedServletContainerFactory70.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory68.tomcatConnectorCustomizers = tomcatConnectorCustomizerList71;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection73 = tomcatEmbeddedServletContainerFactory68.getContextLifecycleListeners();
        java.lang.String str74 = tomcatEmbeddedServletContainerFactory68.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory75.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory75.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection80 = tomcatEmbeddedServletContainerFactory75.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory75.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector83 = null;
        org.apache.catalina.connector.Connector[] connectorArray84 = new org.apache.catalina.connector.Connector[] { connector83 };
        tomcatEmbeddedServletContainerFactory75.addAdditionalTomcatConnectors(connectorArray84);
        tomcatEmbeddedServletContainerFactory68.addAdditionalTomcatConnectors(connectorArray84);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray84);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection6);
        org.junit.Assert.assertNotNull(valveList7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(connectorList9);
        org.junit.Assert.assertNotNull(connectorList12);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList34);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection35);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNull(resourceLoader38);
        org.junit.Assert.assertNotNull(errorPageArray39);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNotNull(connectorList49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray60);
        org.junit.Assert.assertNotNull(valveList63);
        org.junit.Assert.assertNotNull(mimeMappings69);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList71);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "UTF-8" + "'", str74, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection80);
        org.junit.Assert.assertNotNull(connectorArray84);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        tomcatEmbeddedServletContainerFactory2.setPort(10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory2.additionalTomcatConnectors;
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory2.protocol;
        tomcatEmbeddedServletContainerFactory2.setProtocol("hi!");
        org.apache.catalina.startup.Tomcat tomcat11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer12 = tomcatEmbeddedServletContainerFactory2.getTomcatEmbeddedServletContainer(tomcat11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str8, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str2 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str5 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.LifecycleEvent lifecycleEvent6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str2, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str5 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.Context context6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection3 = tomcatEmbeddedServletContainerFactory2.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList4 = tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners;
        java.io.File file5 = tomcatEmbeddedServletContainerFactory2.baseDirectory;
        tomcatEmbeddedServletContainerFactory2.setPort((int) (short) 10);
        org.apache.catalina.startup.Tomcat tomcat8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer9 = tomcatEmbeddedServletContainerFactory2.getTomcatEmbeddedServletContainer(tomcat8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection3);
        org.junit.Assert.assertNotNull(lifecycleListenerList4);
        org.junit.Assert.assertNull(file5);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.core.io.ResourceLoader resourceLoader16 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        tomcatEmbeddedServletContainerFactory0.tldSkip = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n";
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertNull(resourceLoader16);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1);
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.coyote.http11.Http11NioProtocol";
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection14 = tomcatEmbeddedServletContainerFactory13.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList15 = tomcatEmbeddedServletContainerFactory13.contextLifecycleListeners;
        java.util.List<org.apache.catalina.Valve> valveList16 = tomcatEmbeddedServletContainerFactory13.contextValves;
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory13.setResourceLoader(resourceLoader17);
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory13.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList19;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray21 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextLifecycleListeners must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection14);
        org.junit.Assert.assertNotNull(lifecycleListenerList15);
        org.junit.Assert.assertNotNull(valveList16);
        org.junit.Assert.assertNotNull(connectorList19);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        int int17 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray18 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory15.addContextLifecycleListeners(lifecycleListenerArray18);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray18);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader23 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList27 = tomcatEmbeddedServletContainerFactory26.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory24.tomcatConnectorCustomizers = tomcatConnectorCustomizerList27;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection29 = tomcatEmbeddedServletContainerFactory24.getContextLifecycleListeners();
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory24.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList31 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.ErrorPage errorPage32 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray33 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage32 };
        tomcatEmbeddedServletContainerFactory24.addErrorPages(errorPageArray33);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray33);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader38 = tomcatEmbeddedServletContainerFactory36.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory39.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory39.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection44 = tomcatEmbeddedServletContainerFactory39.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList45 = tomcatEmbeddedServletContainerFactory39.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory36.tomcatContextCustomizers = tomcatContextCustomizerList45;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList47 = tomcatEmbeddedServletContainerFactory36.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory48.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList55 = tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors = connectorList55;
        java.lang.String str57 = tomcatEmbeddedServletContainerFactory48.protocol;
        java.lang.String str58 = tomcatEmbeddedServletContainerFactory48.protocol;
        tomcatEmbeddedServletContainerFactory48.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection61 = tomcatEmbeddedServletContainerFactory48.getTomcatContextCustomizers();
        int int62 = tomcatEmbeddedServletContainerFactory48.getPort();
        java.io.File file64 = tomcatEmbeddedServletContainerFactory48.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory36.baseDirectory = file64;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file64);
        java.lang.String str67 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.apache.catalina.Context context68 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList70 = tomcatEmbeddedServletContainerFactory69.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection71 = tomcatEmbeddedServletContainerFactory69.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings73 = tomcatEmbeddedServletContainerFactory72.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader74 = tomcatEmbeddedServletContainerFactory72.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray75 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory72.addErrorPages(errorPageArray75);
        tomcatEmbeddedServletContainerFactory69.addErrorPages(errorPageArray75);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray78 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory69.addInitializers(servletContextInitializerArray78);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context68, servletContextInitializerArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray18);
        org.junit.Assert.assertNull(resourceLoader23);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList27);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-8" + "'", str30, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList31);
        org.junit.Assert.assertNotNull(errorPageArray33);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNull(resourceLoader38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection44);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList47);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(connectorList55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(file64);
        org.junit.Assert.assertEquals(file64.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file64.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6715327814012792536.0");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList70);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection71);
        org.junit.Assert.assertNotNull(mimeMappings73);
        org.junit.Assert.assertNull(resourceLoader74);
        org.junit.Assert.assertNotNull(errorPageArray75);
        org.junit.Assert.assertNotNull(servletContextInitializerArray78);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.apache.catalina.Context context10 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors = connectorList19;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory12.protocol;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory12.protocol;
        java.net.InetAddress inetAddress23 = null;
        tomcatEmbeddedServletContainerFactory12.setAddress(inetAddress23);
        java.util.List<org.apache.catalina.connector.Connector> connectorList25 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        java.io.File file26 = tomcatEmbeddedServletContainerFactory12.baseDirectory;
        org.apache.catalina.Valve[] valveArray27 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory12.addContextValves(valveArray27);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray27);
        org.apache.catalina.startup.Tomcat tomcat30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer31 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(connectorList25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(valveArray27);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress5 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNull(inetAddress5);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str9, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList12 = tomcatEmbeddedServletContainerFactory10.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList12;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader17);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet19);
        java.util.Collection<org.apache.catalina.Valve> valveCollection21 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader22 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader22;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection24 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 1);
        java.lang.Class<?> wildcardClass27 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valveList12);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNotNull(valveCollection21);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection24);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList16 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList16, valveArray15);
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList16;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory19.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList28 = tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers = tomcatContextCustomizerList28;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        org.apache.catalina.Valve valve31 = null;
        org.apache.catalina.Valve[] valveArray32 = new org.apache.catalina.Valve[] { valve31 };
        tomcatEmbeddedServletContainerFactory19.addContextValves(valveArray32);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray32);
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.apache.catalina.Context context36 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context36);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory38.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList45 = tomcatEmbeddedServletContainerFactory43.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors = connectorList45;
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory38.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = tomcatEmbeddedServletContainerFactory48.getMimeMappings();
        tomcatEmbeddedServletContainerFactory38.setMimeMappings(mimeMappings51);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList54 = tomcatEmbeddedServletContainerFactory53.tomcatConnectorCustomizers;
        int int55 = tomcatEmbeddedServletContainerFactory53.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray56 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory53.addContextLifecycleListeners(lifecycleListenerArray56);
        tomcatEmbeddedServletContainerFactory38.addContextLifecycleListeners(lifecycleListenerArray56);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray56);
        tomcatEmbeddedServletContainerFactory0.protocol = "";
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.apache.catalina.Context context64 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(valveArray32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNotNull(connectorList45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray56);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.io.File file7 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "";
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection11 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ErrorPages must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection11);
        org.junit.Assert.assertNull(resourceLoader12);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1);
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.coyote.http11.Http11NioProtocol";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection15 = tomcatEmbeddedServletContainerFactory10.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList16;
        tomcatEmbeddedServletContainerFactory0.protocol = "";
        java.util.concurrent.TimeUnit timeUnit21 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0, timeUnit21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection15);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int2 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList9 = tomcatEmbeddedServletContainerFactory4.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory4.setMimeMappings(mimeMappings13);
        org.apache.catalina.connector.Connector connector15 = null;
        org.apache.catalina.connector.Connector[] connectorArray16 = new org.apache.catalina.connector.Connector[] { connector15 };
        tomcatEmbeddedServletContainerFactory4.addAdditionalTomcatConnectors(connectorArray16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList19 = tomcatEmbeddedServletContainerFactory18.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection20 = tomcatEmbeddedServletContainerFactory18.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList21 = tomcatEmbeddedServletContainerFactory18.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection22 = tomcatEmbeddedServletContainerFactory18.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory4.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection22);
        java.net.InetAddress inetAddress24 = null;
        tomcatEmbeddedServletContainerFactory4.setAddress(inetAddress24);
        java.util.List<org.apache.catalina.Valve> valveList26 = tomcatEmbeddedServletContainerFactory4.contextValves;
        java.util.List<org.apache.catalina.connector.Connector> connectorList27 = tomcatEmbeddedServletContainerFactory4.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList27;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(lifecycleListenerList9);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorArray16);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList19);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection20);
        org.junit.Assert.assertNotNull(valveList21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection22);
        org.junit.Assert.assertNotNull(valveList26);
        org.junit.Assert.assertNotNull(connectorList27);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList16 = tomcatEmbeddedServletContainerFactory11.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings20);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings20);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList24 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(97);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList16);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList24);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList9 = tomcatEmbeddedServletContainerFactory6.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection10 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory6.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList11;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors = connectorList20;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory13.protocol;
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory13.protocol;
        tomcatEmbeddedServletContainerFactory13.setUriEncoding("hi!");
        org.apache.catalina.Context context26 = null;
        tomcatEmbeddedServletContainerFactory13.postProcessContext(context26);
        org.springframework.core.io.ResourceLoader resourceLoader28 = tomcatEmbeddedServletContainerFactory13.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean30 = tomcatEmbeddedServletContainerFactory29.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList31 = tomcatEmbeddedServletContainerFactory29.contextValves;
        tomcatEmbeddedServletContainerFactory13.contextValves = valveList31;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection37 = tomcatEmbeddedServletContainerFactory33.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader38 = tomcatEmbeddedServletContainerFactory33.resourceLoader;
        tomcatEmbeddedServletContainerFactory33.setTldSkip("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = tomcatEmbeddedServletContainerFactory41.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList44 = tomcatEmbeddedServletContainerFactory43.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory41.tomcatConnectorCustomizers = tomcatConnectorCustomizerList44;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList47 = tomcatEmbeddedServletContainerFactory46.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection48 = tomcatEmbeddedServletContainerFactory46.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader51 = tomcatEmbeddedServletContainerFactory49.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray52 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory49.addErrorPages(errorPageArray52);
        tomcatEmbeddedServletContainerFactory46.addErrorPages(errorPageArray52);
        tomcatEmbeddedServletContainerFactory41.addErrorPages(errorPageArray52);
        tomcatEmbeddedServletContainerFactory33.addErrorPages(errorPageArray52);
        tomcatEmbeddedServletContainerFactory13.addErrorPages(errorPageArray52);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory58.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory58.setProtocol("hi!");
        java.io.File file63 = tomcatEmbeddedServletContainerFactory58.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory64.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory64.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection69 = tomcatEmbeddedServletContainerFactory64.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory64.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector72 = null;
        org.apache.catalina.connector.Connector[] connectorArray73 = new org.apache.catalina.connector.Connector[] { connector72 };
        tomcatEmbeddedServletContainerFactory64.addAdditionalTomcatConnectors(connectorArray73);
        tomcatEmbeddedServletContainerFactory58.addAdditionalTomcatConnectors(connectorArray73);
        tomcatEmbeddedServletContainerFactory58.setRegisterJspServlet(false);
        tomcatEmbeddedServletContainerFactory58.tldSkip = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.apache.catalina.connector.Connector> connectorList80 = tomcatEmbeddedServletContainerFactory58.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.Valve> valveList81 = tomcatEmbeddedServletContainerFactory58.contextValves;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList82 = tomcatEmbeddedServletContainerFactory58.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory13.tomcatConnectorCustomizers = tomcatConnectorCustomizerList82;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList82);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(valveList9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(valveList31);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(valveCollection37);
        org.junit.Assert.assertNull(resourceLoader38);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList44);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList47);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection48);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNull(resourceLoader51);
        org.junit.Assert.assertNotNull(errorPageArray52);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection69);
        org.junit.Assert.assertNotNull(connectorArray73);
        org.junit.Assert.assertNotNull(connectorList80);
        org.junit.Assert.assertNotNull(valveList81);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList82);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setTldSkip("UTF-8");
        java.io.File file20 = tomcatEmbeddedServletContainerFactory14.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file20);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        java.util.List<org.apache.catalina.connector.Connector> connectorList25 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList26 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.apache.catalina.Context context27 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file20.toString(), "/tmp/UTF-8.5634185241842236135.0");
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertNotNull(connectorList25);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList26);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader8 = tomcatEmbeddedServletContainerFactory6.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection14 = tomcatEmbeddedServletContainerFactory9.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList15 = tomcatEmbeddedServletContainerFactory9.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory6.tomcatContextCustomizers = tomcatContextCustomizerList15;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList25 = tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors = connectorList25;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory18.protocol;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory18.protocol;
        tomcatEmbeddedServletContainerFactory18.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection31 = tomcatEmbeddedServletContainerFactory18.getTomcatContextCustomizers();
        int int32 = tomcatEmbeddedServletContainerFactory18.getPort();
        java.io.File file34 = tomcatEmbeddedServletContainerFactory18.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory6.baseDirectory = file34;
        org.apache.catalina.Valve[] valveArray36 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory6.addContextValves(valveArray36);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray36);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection41 = tomcatEmbeddedServletContainerFactory39.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader44 = tomcatEmbeddedServletContainerFactory42.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray45 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory42.addErrorPages(errorPageArray45);
        tomcatEmbeddedServletContainerFactory39.addErrorPages(errorPageArray45);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray45);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean50 = tomcatEmbeddedServletContainerFactory49.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection51 = tomcatEmbeddedServletContainerFactory49.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings52);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory54.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = tomcatEmbeddedServletContainerFactory59.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList61 = tomcatEmbeddedServletContainerFactory59.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory54.additionalTomcatConnectors = connectorList61;
        java.lang.String str63 = tomcatEmbeddedServletContainerFactory54.protocol;
        java.lang.String str64 = tomcatEmbeddedServletContainerFactory54.protocol;
        java.net.InetAddress inetAddress65 = null;
        tomcatEmbeddedServletContainerFactory54.setAddress(inetAddress65);
        java.io.File file67 = null;
        tomcatEmbeddedServletContainerFactory54.setBaseDirectory(file67);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray69 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory54.addContextCustomizers(tomcatContextCustomizerArray69);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray69);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNull(resourceLoader8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection14);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(connectorList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6782913918967856208.0");
        org.junit.Assert.assertNotNull(valveArray36);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection41);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNull(resourceLoader44);
        org.junit.Assert.assertNotNull(errorPageArray45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(valveCollection51);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNotNull(mimeMappings60);
        org.junit.Assert.assertNotNull(connectorList61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray69);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress5 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.net.InetAddress inetAddress20 = null;
        tomcatEmbeddedServletContainerFactory9.setAddress(inetAddress20);
        int int22 = tomcatEmbeddedServletContainerFactory9.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader23 = tomcatEmbeddedServletContainerFactory9.resourceLoader;
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory9.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray25 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList26 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList26, tomcatConnectorCustomizerArray25);
        tomcatEmbeddedServletContainerFactory9.tomcatConnectorCustomizers = tomcatConnectorCustomizerList26;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList26;
        boolean boolean30 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection31 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNull(inetAddress5);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(resourceLoader23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str24, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection31);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection21 = tomcatEmbeddedServletContainerFactory17.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList23 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList23, lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory17.contextLifecycleListeners = lifecycleListenerList23;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList23;
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        int int29 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file30 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        java.util.concurrent.TimeUnit timeUnit32 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 100, timeUnit32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(valveCollection21);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(file30);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.apache.catalina.Context context10 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context10);
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection14 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection14);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection7 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.setPort(100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        boolean boolean13 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors = connectorList21;
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory14.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        tomcatEmbeddedServletContainerFactory14.setMimeMappings(mimeMappings27);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers;
        int int31 = tomcatEmbeddedServletContainerFactory29.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray32 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory29.addContextLifecycleListeners(lifecycleListenerArray32);
        tomcatEmbeddedServletContainerFactory14.addContextLifecycleListeners(lifecycleListenerArray32);
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray32);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection41 = tomcatEmbeddedServletContainerFactory36.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory36.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector44 = null;
        org.apache.catalina.connector.Connector[] connectorArray45 = new org.apache.catalina.connector.Connector[] { connector44 };
        tomcatEmbeddedServletContainerFactory36.addAdditionalTomcatConnectors(connectorArray45);
        tomcatEmbeddedServletContainerFactory10.addAdditionalTomcatConnectors(connectorArray45);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file52 = tomcatEmbeddedServletContainerFactory50.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory10.baseDirectory = file52;
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file52;
        org.apache.catalina.Context context55 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray32);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection41);
        org.junit.Assert.assertNotNull(connectorArray45);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file52.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.7635866572535899244.100");
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean3 = tomcatEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        org.apache.catalina.Context context4 = null;
        tomcatEmbeddedServletContainerFactory2.postProcessContext(context4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory2.addAdditionalTomcatConnectors(connectorArray15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList21 = tomcatEmbeddedServletContainerFactory20.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory18.tomcatConnectorCustomizers = tomcatConnectorCustomizerList21;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection23 = tomcatEmbeddedServletContainerFactory18.getContextLifecycleListeners();
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory18.uriEncoding;
        tomcatEmbeddedServletContainerFactory18.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection32 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory27.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection35 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector36 = null;
        org.apache.catalina.connector.Connector[] connectorArray37 = new org.apache.catalina.connector.Connector[] { connector36 };
        tomcatEmbeddedServletContainerFactory27.addAdditionalTomcatConnectors(connectorArray37);
        tomcatEmbeddedServletContainerFactory18.addAdditionalTomcatConnectors(connectorArray37);
        tomcatEmbeddedServletContainerFactory2.addAdditionalTomcatConnectors(connectorArray37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory41.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory41.setTldSkip("UTF-8");
        org.apache.catalina.Context context46 = null;
        tomcatEmbeddedServletContainerFactory41.postProcessContext(context46);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory48.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList55 = tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors = connectorList55;
        java.lang.String str57 = tomcatEmbeddedServletContainerFactory48.protocol;
        java.lang.String str58 = tomcatEmbeddedServletContainerFactory48.protocol;
        java.net.InetAddress inetAddress59 = null;
        tomcatEmbeddedServletContainerFactory48.setAddress(inetAddress59);
        java.util.List<org.apache.catalina.connector.Connector> connectorList61 = tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors;
        java.io.File file62 = tomcatEmbeddedServletContainerFactory48.baseDirectory;
        org.apache.catalina.Valve[] valveArray63 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory48.addContextValves(valveArray63);
        tomcatEmbeddedServletContainerFactory41.addContextValves(valveArray63);
        tomcatEmbeddedServletContainerFactory2.addContextValves(valveArray63);
        tomcatEmbeddedServletContainerFactory1.addContextValves(valveArray63);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList21);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-8" + "'", str24, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection32);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection35);
        org.junit.Assert.assertNotNull(connectorArray37);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(connectorList55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(connectorList61);
        org.junit.Assert.assertNull(file62);
        org.junit.Assert.assertNotNull(valveArray63);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray19);
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray23 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory17.addContextLifecycleListeners(lifecycleListenerArray23);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray23);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList36 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors = connectorList36;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings38);
        org.apache.catalina.connector.Connector connector40 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(lifecycleListenerArray23);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertNotNull(connectorList36);
        org.junit.Assert.assertNotNull(mimeMappings38);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str2 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str5 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str6 = storeMergedWebXmlListener0.getEmptyWebXml();
        org.apache.catalina.LifecycleEvent lifecycleEvent7 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str2, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str5, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str6, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        tomcatEmbeddedServletContainerFactory2.setContextPath("");
        boolean boolean7 = tomcatEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader8 = null;
        tomcatEmbeddedServletContainerFactory2.resourceLoader = resourceLoader8;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int2 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.apache.catalina.connector.Connector connector6 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str4, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList3 = null;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList3;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader5;
        int int7 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean8 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.apache.catalina.Context context9 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.io.File file11 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        boolean boolean12 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str13, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection2 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.tldSkip = "UTF-8";
        tomcatEmbeddedServletContainerFactory0.setProtocol("org.apache.coyote.http11.Http11NioProtocol");
        java.util.List<org.apache.catalina.Valve> valveList8 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.apache.catalina.connector.Connector connector9 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveCollection2);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveList8);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader5 = tomcatEmbeddedServletContainerFactory3.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory3.addErrorPages(errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList17;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection24 = tomcatEmbeddedServletContainerFactory19.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList25 = tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory9.tomcatContextCustomizers = tomcatContextCustomizerList25;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str28 = storeMergedWebXmlListener27.getEmptyWebXml();
        java.lang.String str29 = storeMergedWebXmlListener27.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str31 = storeMergedWebXmlListener30.getMERGED_WEB_XML();
        java.lang.String str32 = storeMergedWebXmlListener30.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray33 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener27, storeMergedWebXmlListener30 };
        tomcatEmbeddedServletContainerFactory9.addContextLifecycleListeners(lifecycleListenerArray33);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray33);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList39 = tomcatEmbeddedServletContainerFactory38.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory36.tomcatConnectorCustomizers = tomcatConnectorCustomizerList39;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList39;
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 100);
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList45 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNull(resourceLoader5);
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection24);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str28, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str29, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str31, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str32, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray33);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(lifecycleListenerList45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory2.getUriEncoding();
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory2.uriEncoding;
        tomcatEmbeddedServletContainerFactory2.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        org.apache.catalina.startup.Tomcat tomcat11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer12 = tomcatEmbeddedServletContainerFactory2.getTomcatEmbeddedServletContainer(tomcat11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = tomcatEmbeddedServletContainerFactory2.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory5.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection10 = tomcatEmbeddedServletContainerFactory5.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList11 = tomcatEmbeddedServletContainerFactory5.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList11;
        tomcatEmbeddedServletContainerFactory2.uriEncoding = "UTF-8";
        int int15 = tomcatEmbeddedServletContainerFactory2.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean17 = tomcatEmbeddedServletContainerFactory16.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection18 = tomcatEmbeddedServletContainerFactory16.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        tomcatEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings19);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings19);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList29 = tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors = connectorList29;
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory22.protocol;
        org.apache.catalina.Context context32 = null;
        tomcatEmbeddedServletContainerFactory22.postProcessContext(context32);
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = tomcatEmbeddedServletContainerFactory22.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList34;
        java.lang.Class<?> wildcardClass36 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection10);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8080 + "'", int15 == 8080);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(valveCollection18);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(connectorList29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(connectorList34);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str2 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str5 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str6 = storeMergedWebXmlListener0.getEmptyWebXml();
        org.apache.catalina.LifecycleEvent lifecycleEvent7 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str5, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str6, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        org.apache.catalina.connector.Connector connector11 = null;
        org.apache.catalina.connector.Connector[] connectorArray12 = new org.apache.catalina.connector.Connector[] { connector11 };
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList15 = tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection16 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList17 = tomcatEmbeddedServletContainerFactory14.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection18);
        java.net.InetAddress inetAddress20 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress20);
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(connectorArray12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection16);
        org.junit.Assert.assertNotNull(valveList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray15);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.protocol = "hi!";
        org.apache.catalina.Context context20 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader24 = null;
        tomcatEmbeddedServletContainerFactory23.setResourceLoader(resourceLoader24);
        tomcatEmbeddedServletContainerFactory23.setContextPath("");
        boolean boolean28 = tomcatEmbeddedServletContainerFactory23.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader29 = tomcatEmbeddedServletContainerFactory23.resourceLoader;
        boolean boolean30 = tomcatEmbeddedServletContainerFactory23.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList34 = tomcatEmbeddedServletContainerFactory33.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory31.tomcatConnectorCustomizers = tomcatConnectorCustomizerList34;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet36 = tomcatEmbeddedServletContainerFactory31.getErrorPages();
        java.net.InetAddress inetAddress37 = tomcatEmbeddedServletContainerFactory31.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory38.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList45 = tomcatEmbeddedServletContainerFactory43.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors = connectorList45;
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory38.protocol;
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory38.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory49.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings53 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        tomcatEmbeddedServletContainerFactory38.setMimeMappings(mimeMappings53);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = tomcatEmbeddedServletContainerFactory55.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection59 = tomcatEmbeddedServletContainerFactory55.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray60 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList61 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList61, lifecycleListenerArray60);
        tomcatEmbeddedServletContainerFactory55.contextLifecycleListeners = lifecycleListenerList61;
        tomcatEmbeddedServletContainerFactory38.contextLifecycleListeners = lifecycleListenerList61;
        tomcatEmbeddedServletContainerFactory31.contextLifecycleListeners = lifecycleListenerList61;
        tomcatEmbeddedServletContainerFactory31.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings69 = tomcatEmbeddedServletContainerFactory68.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList71 = tomcatEmbeddedServletContainerFactory70.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory68.tomcatConnectorCustomizers = tomcatConnectorCustomizerList71;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection73 = tomcatEmbeddedServletContainerFactory68.getContextLifecycleListeners();
        java.lang.String str74 = tomcatEmbeddedServletContainerFactory68.uriEncoding;
        java.lang.String str75 = tomcatEmbeddedServletContainerFactory68.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str77 = tomcatEmbeddedServletContainerFactory76.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray78 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory76.addInitializers(servletContextInitializerArray78);
        tomcatEmbeddedServletContainerFactory68.addInitializers(servletContextInitializerArray78);
        tomcatEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray78);
        tomcatEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray78);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context20, servletContextInitializerArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(resourceLoader29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList34);
        org.junit.Assert.assertNotNull(errorPageSet36);
        org.junit.Assert.assertNull(inetAddress37);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNotNull(connectorList45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNotNull(mimeMappings53);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(valveCollection59);
        org.junit.Assert.assertNotNull(lifecycleListenerArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(mimeMappings69);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList71);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "UTF-8" + "'", str74, "UTF-8");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "UTF-8" + "'", str75, "UTF-8");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "UTF-8" + "'", str77, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray78);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection2 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.io.File file6 = tomcatEmbeddedServletContainerFactory0.createTempDir("hi!");
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("org.apache.tomcat.util.scan.MergedWebXml");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveCollection2);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str4, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file6.toString(), "/tmp/hi!.8577636600815677678.8080");
        org.junit.Assert.assertNotNull(connectorList7);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection8 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.coyote.http11.Http11NioProtocol";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) '#');
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader18 = tomcatEmbeddedServletContainerFactory16.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection24 = tomcatEmbeddedServletContainerFactory19.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList25 = tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory16.tomcatContextCustomizers = tomcatContextCustomizerList25;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList27 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors = connectorList35;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory28.protocol;
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory28.protocol;
        tomcatEmbeddedServletContainerFactory28.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection41 = tomcatEmbeddedServletContainerFactory28.getTomcatContextCustomizers();
        int int42 = tomcatEmbeddedServletContainerFactory28.getPort();
        java.io.File file44 = tomcatEmbeddedServletContainerFactory28.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory16.baseDirectory = file44;
        org.apache.catalina.Valve[] valveArray46 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory16.addContextValves(valveArray46);
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray46);
        tomcatEmbeddedServletContainerFactory13.addContextValves(valveArray46);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray46);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection8);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNull(resourceLoader18);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection24);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList25);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList27);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file44.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.3112106245254571278.0");
        org.junit.Assert.assertNotNull(valveArray46);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "";
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection6 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.apache.catalina.Context context7 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context7, servletContextInitializerArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection6);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList16 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList16, valveArray15);
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList16;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory19.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList28 = tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers = tomcatContextCustomizerList28;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        org.apache.catalina.Valve valve31 = null;
        org.apache.catalina.Valve[] valveArray32 = new org.apache.catalina.Valve[] { valve31 };
        tomcatEmbeddedServletContainerFactory19.addContextValves(valveArray32);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray32);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) 10);
        java.net.InetAddress inetAddress37 = tomcatEmbeddedServletContainerFactory36.getAddress();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList41 = tomcatEmbeddedServletContainerFactory40.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection42 = tomcatEmbeddedServletContainerFactory40.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList43 = tomcatEmbeddedServletContainerFactory40.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection44 = tomcatEmbeddedServletContainerFactory40.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList45 = tomcatEmbeddedServletContainerFactory40.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList45;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList45;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n";
        java.io.File file51 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(valveArray32);
        org.junit.Assert.assertNull(inetAddress37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList41);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection42);
        org.junit.Assert.assertNotNull(valveList43);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection44);
        org.junit.Assert.assertNotNull(connectorList45);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNull(file51);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory3.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers = tomcatConnectorCustomizerList4;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory1.getContextLifecycleListeners();
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory1.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory1.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader11);
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader14);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str10, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory2.getUriEncoding();
        tomcatEmbeddedServletContainerFactory2.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        boolean boolean13 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors = connectorList21;
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory14.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        tomcatEmbeddedServletContainerFactory14.setMimeMappings(mimeMappings27);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers;
        int int31 = tomcatEmbeddedServletContainerFactory29.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray32 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory29.addContextLifecycleListeners(lifecycleListenerArray32);
        tomcatEmbeddedServletContainerFactory14.addContextLifecycleListeners(lifecycleListenerArray32);
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray32);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection41 = tomcatEmbeddedServletContainerFactory36.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory36.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector44 = null;
        org.apache.catalina.connector.Connector[] connectorArray45 = new org.apache.catalina.connector.Connector[] { connector44 };
        tomcatEmbeddedServletContainerFactory36.addAdditionalTomcatConnectors(connectorArray45);
        tomcatEmbeddedServletContainerFactory10.addAdditionalTomcatConnectors(connectorArray45);
        tomcatEmbeddedServletContainerFactory10.setProtocol("org.apache.coyote.http11.Http11NioProtocol");
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory10.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory51.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory51.getMimeMappings();
        tomcatEmbeddedServletContainerFactory51.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection57 = tomcatEmbeddedServletContainerFactory51.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader61 = null;
        tomcatEmbeddedServletContainerFactory60.setResourceLoader(resourceLoader61);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet63 = tomcatEmbeddedServletContainerFactory60.getErrorPages();
        tomcatEmbeddedServletContainerFactory51.setErrorPages(errorPageSet63);
        tomcatEmbeddedServletContainerFactory10.setErrorPages(errorPageSet63);
        tomcatEmbeddedServletContainerFactory2.setErrorPages(errorPageSet63);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray32);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection41);
        org.junit.Assert.assertNotNull(connectorArray45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str50, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection57);
        org.junit.Assert.assertNotNull(errorPageSet63);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str5 = storeMergedWebXmlListener0.getEmptyWebXml();
        org.apache.catalina.LifecycleEvent lifecycleEvent6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str4, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str5, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory10.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection25 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.apache.catalina.startup.Tomcat tomcat26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer27 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection25);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) '#');
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader7 = tomcatEmbeddedServletContainerFactory5.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory5.tomcatContextCustomizers = tomcatContextCustomizerList14;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory5.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory17.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList24 = tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors = connectorList24;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory17.protocol;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory17.protocol;
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection30 = tomcatEmbeddedServletContainerFactory17.getTomcatContextCustomizers();
        int int31 = tomcatEmbeddedServletContainerFactory17.getPort();
        java.io.File file33 = tomcatEmbeddedServletContainerFactory17.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory5.baseDirectory = file33;
        org.apache.catalina.Valve[] valveArray35 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory5.addContextValves(valveArray35);
        tomcatEmbeddedServletContainerFactory4.addContextValves(valveArray35);
        tomcatEmbeddedServletContainerFactory2.addContextValves(valveArray35);
        java.lang.Class<?> wildcardClass39 = valveArray35.getClass();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(connectorList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file33.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.7787020512591884447.0");
        org.junit.Assert.assertNotNull(valveArray35);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader5 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList11 = tomcatEmbeddedServletContainerFactory6.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList12 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList12;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers = tomcatConnectorCustomizerList17;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        java.net.InetAddress inetAddress20 = tomcatEmbeddedServletContainerFactory14.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory14.resourceLoader;
        java.io.File file23 = tomcatEmbeddedServletContainerFactory14.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.apache.catalina.Valve[] valveArray24 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory14.addContextValves(valveArray24);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory27.tomcatConnectorCustomizers = tomcatConnectorCustomizerList30;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection32 = tomcatEmbeddedServletContainerFactory27.getContextLifecycleListeners();
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory27.uriEncoding;
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory37.tomcatConnectorCustomizers = tomcatConnectorCustomizerList40;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection42 = tomcatEmbeddedServletContainerFactory37.getContextLifecycleListeners();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory37.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList44;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray46 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory36.addContextCustomizers(tomcatContextCustomizerArray46);
        tomcatEmbeddedServletContainerFactory27.addContextCustomizers(tomcatContextCustomizerArray46);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet49 = tomcatEmbeddedServletContainerFactory27.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet49);
        java.lang.Class<?> wildcardClass51 = errorPageSet49.getClass();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNull(resourceLoader5);
        org.junit.Assert.assertNotNull(lifecycleListenerList11);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList12);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNull(inetAddress20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file23.toString(), "/tmp/web-app>\n.1788171503957358514.8080");
        org.junit.Assert.assertNotNull(valveArray24);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray46);
        org.junit.Assert.assertNotNull(errorPageSet49);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        int int5 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList12 = tomcatEmbeddedServletContainerFactory7.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        tomcatEmbeddedServletContainerFactory7.setMimeMappings(mimeMappings16);
        org.apache.catalina.connector.Connector connector18 = null;
        org.apache.catalina.connector.Connector[] connectorArray19 = new org.apache.catalina.connector.Connector[] { connector18 };
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray19);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList22 = tomcatEmbeddedServletContainerFactory21.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection23 = tomcatEmbeddedServletContainerFactory21.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList24 = tomcatEmbeddedServletContainerFactory21.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection25 = tomcatEmbeddedServletContainerFactory21.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory7.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection25);
        java.net.InetAddress inetAddress27 = null;
        tomcatEmbeddedServletContainerFactory7.setAddress(inetAddress27);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = tomcatEmbeddedServletContainerFactory7.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet29);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertNotNull(lifecycleListenerList12);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(connectorArray19);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection23);
        org.junit.Assert.assertNotNull(valveList24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection25);
        org.junit.Assert.assertNotNull(errorPageSet29);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str2 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.Class<?> wildcardClass3 = storeMergedWebXmlListener0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str2, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.apache.catalina.Context context4 = null;
        tomcatEmbeddedServletContainerFactory2.postProcessContext(context4);
        java.util.concurrent.TimeUnit timeUnit7 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.setSessionTimeout((int) (byte) -1, timeUnit7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.apache.catalina.Context context7 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        tomcatEmbeddedServletContainerFactory0.tldSkip = "";
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory19.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList28 = tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers = tomcatContextCustomizerList28;
        java.util.List<org.apache.catalina.Valve> valveList30 = tomcatEmbeddedServletContainerFactory19.contextValves;
        java.io.File file32 = tomcatEmbeddedServletContainerFactory19.createTempDir("hi!");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file32;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("org.apache.coyote.http11.Http11NioProtocol");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList28);
        org.junit.Assert.assertNotNull(valveList30);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file32.toString(), "/tmp/hi!.6458904791209805915.8080");
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory2.getDEFAULT_PROTOCOL();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader9);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection11 = tomcatEmbeddedServletContainerFactory2.getContextLifecycleListeners();
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str8, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection11);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.apache.catalina.Context context13 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context13);
        org.springframework.core.io.ResourceLoader resourceLoader15 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        boolean boolean16 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.apache.catalina.Context context17 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList22 = tomcatEmbeddedServletContainerFactory21.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers = tomcatConnectorCustomizerList22;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection24 = tomcatEmbeddedServletContainerFactory19.getContextLifecycleListeners();
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory19.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors = connectorList26;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory18.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory34.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer36 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray37 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer36 };
        tomcatEmbeddedServletContainerFactory34.addInitializers(servletContextInitializerArray37);
        tomcatEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray37);
        tomcatEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray37);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context17, servletContextInitializerArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList22);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str28, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(servletContextInitializerArray37);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        int int17 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray18 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory15.addContextLifecycleListeners(lifecycleListenerArray18);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean22 = tomcatEmbeddedServletContainerFactory21.isRegisterDefaultServlet();
        org.apache.catalina.Context context23 = null;
        tomcatEmbeddedServletContainerFactory21.postProcessContext(context23);
        java.io.File file26 = tomcatEmbeddedServletContainerFactory21.createTempDir("hi!");
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file26);
        boolean boolean28 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/tmp/hi!.1390485338312781971.8080");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection21 = tomcatEmbeddedServletContainerFactory17.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList23 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList23, lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory17.contextLifecycleListeners = lifecycleListenerList23;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList23;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection27 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors = connectorList35;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory28.protocol;
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory28.protocol;
        java.net.InetAddress inetAddress39 = null;
        tomcatEmbeddedServletContainerFactory28.setAddress(inetAddress39);
        tomcatEmbeddedServletContainerFactory28.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray43 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList44 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList44, valveArray43);
        tomcatEmbeddedServletContainerFactory28.contextValves = valveList44;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList44;
        java.io.File file48 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory49.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory49.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = tomcatEmbeddedServletContainerFactory54.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList56 = tomcatEmbeddedServletContainerFactory54.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory49.additionalTomcatConnectors = connectorList56;
        java.lang.String str58 = tomcatEmbeddedServletContainerFactory49.protocol;
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory49.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory60.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings63 = tomcatEmbeddedServletContainerFactory60.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = tomcatEmbeddedServletContainerFactory60.getMimeMappings();
        tomcatEmbeddedServletContainerFactory49.setMimeMappings(mimeMappings64);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory66.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings69 = tomcatEmbeddedServletContainerFactory66.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection70 = tomcatEmbeddedServletContainerFactory66.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray71 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList72 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList72, lifecycleListenerArray71);
        tomcatEmbeddedServletContainerFactory66.contextLifecycleListeners = lifecycleListenerList72;
        tomcatEmbeddedServletContainerFactory49.contextLifecycleListeners = lifecycleListenerList72;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList72;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(valveCollection21);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection27);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(valveArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNotNull(connectorList56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings63);
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNotNull(mimeMappings69);
        org.junit.Assert.assertNotNull(valveCollection70);
        org.junit.Assert.assertNotNull(lifecycleListenerArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = tomcatEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory4.tomcatConnectorCustomizers = tomcatConnectorCustomizerList7;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection9 = tomcatEmbeddedServletContainerFactory4.getContextLifecycleListeners();
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory4.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList19;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory21.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory21.addInitializers(servletContextInitializerArray23);
        tomcatEmbeddedServletContainerFactory21.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray27 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory21.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory11.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory4.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray27);
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList40 = tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors = connectorList40;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory33.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        tomcatEmbeddedServletContainerFactory33.setMimeMappings(mimeMappings46);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray48 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet49 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet49, errorPageArray48);
        tomcatEmbeddedServletContainerFactory33.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet49);
        tomcatEmbeddedServletContainerFactory33.setSessionTimeout((int) '#');
        java.util.Collection<org.apache.catalina.Valve> valveCollection54 = tomcatEmbeddedServletContainerFactory33.getValves();
        java.util.List<org.apache.catalina.Valve> valveList55 = tomcatEmbeddedServletContainerFactory33.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList55;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(lifecycleListenerArray27);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(connectorList40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(errorPageArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(valveCollection54);
        org.junit.Assert.assertNotNull(valveList55);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        int int2 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray3 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray3);
        tomcatEmbeddedServletContainerFactory0.protocol = "";
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        tomcatEmbeddedServletContainerFactory0.tldSkip = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n";
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray3);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory6.getValves();
        java.net.InetAddress inetAddress11 = tomcatEmbeddedServletContainerFactory6.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean13 = tomcatEmbeddedServletContainerFactory12.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList14 = tomcatEmbeddedServletContainerFactory12.contextValves;
        tomcatEmbeddedServletContainerFactory6.contextValves = valveList14;
        tomcatEmbeddedServletContainerFactory5.contextValves = valveList14;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList17 = tomcatEmbeddedServletContainerFactory5.tomcatContextCustomizers;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory5.tldSkip;
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList19;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection21 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(valveList14);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection21);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7, errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7);
        java.util.concurrent.TimeUnit timeUnit11 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) '#', timeUnit11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress5 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.apache.catalina.connector.Connector connector7 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNull(inetAddress5);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (short) 0);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection3 = tomcatEmbeddedServletContainerFactory2.getContextLifecycleListeners();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList4 = tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers;
        int int5 = tomcatEmbeddedServletContainerFactory2.getPort();
        org.apache.catalina.Context context6 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.addDefaultServlet(context6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(lifecycleListenerCollection3);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList3 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList4 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory5.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList12 = tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors = connectorList12;
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory5.protocol;
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory5.protocol;
        java.net.InetAddress inetAddress16 = null;
        tomcatEmbeddedServletContainerFactory5.setAddress(inetAddress16);
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setTldSkip("UTF-8");
        java.io.File file25 = tomcatEmbeddedServletContainerFactory19.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory5.setDocumentRoot(file25);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = tomcatEmbeddedServletContainerFactory5.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList31 = tomcatEmbeddedServletContainerFactory30.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory28.tomcatConnectorCustomizers = tomcatConnectorCustomizerList31;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection33 = tomcatEmbeddedServletContainerFactory28.getContextLifecycleListeners();
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory28.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory35.setProtocol("hi!");
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory35.protocol;
        tomcatEmbeddedServletContainerFactory35.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory43.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = tomcatEmbeddedServletContainerFactory48.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList50 = tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList51 = tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory43.additionalTomcatConnectors = connectorList51;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str54 = tomcatEmbeddedServletContainerFactory53.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory53.addInitializers(servletContextInitializerArray55);
        tomcatEmbeddedServletContainerFactory53.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray59 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory53.addContextLifecycleListeners(lifecycleListenerArray59);
        tomcatEmbeddedServletContainerFactory43.addContextLifecycleListeners(lifecycleListenerArray59);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList62 = tomcatEmbeddedServletContainerFactory43.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory35.tomcatConnectorCustomizers = tomcatConnectorCustomizerList62;
        tomcatEmbeddedServletContainerFactory28.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList62);
        tomcatEmbeddedServletContainerFactory5.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList62);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList62);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet67 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertNotNull(connectorList3);
        org.junit.Assert.assertNotNull(lifecycleListenerList4);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNotNull(connectorList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertNotNull(file25);
        org.junit.Assert.assertEquals(file25.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file25.toString(), "/tmp/UTF-8.2057958311674016660.0");
        org.junit.Assert.assertNotNull(errorPageSet27);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList31);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-8" + "'", str34, "UTF-8");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(connectorList50);
        org.junit.Assert.assertNotNull(connectorList51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-8" + "'", str54, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
        org.junit.Assert.assertNotNull(lifecycleListenerArray59);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList62);
        org.junit.Assert.assertNotNull(errorPageSet67);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.apache.catalina.startup.Tomcat tomcat7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer8 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory2.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray4 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory2.addConnectorCustomizers(tomcatConnectorCustomizerArray4);
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory2.protocol;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList7 = tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory2.tldSkip = "org.apache.tomcat.util.scan.MergedWebXml";
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str6, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(lifecycleListenerList7);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList14;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory7.protocol;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory7.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        tomcatEmbeddedServletContainerFactory7.setMimeMappings(mimeMappings22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection28 = tomcatEmbeddedServletContainerFactory24.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray29 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList30 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList30, lifecycleListenerArray29);
        tomcatEmbeddedServletContainerFactory24.contextLifecycleListeners = lifecycleListenerList30;
        tomcatEmbeddedServletContainerFactory7.contextLifecycleListeners = lifecycleListenerList30;
        tomcatEmbeddedServletContainerFactory7.setJspServletClassName("hi!");
        int int36 = tomcatEmbeddedServletContainerFactory7.getSessionTimeout();
        java.io.File file37 = tomcatEmbeddedServletContainerFactory7.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory38.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList45 = tomcatEmbeddedServletContainerFactory43.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors = connectorList45;
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory38.protocol;
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory38.protocol;
        tomcatEmbeddedServletContainerFactory38.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection51 = tomcatEmbeddedServletContainerFactory38.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList52 = tomcatEmbeddedServletContainerFactory38.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory38.tldSkip = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory57.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory57.setProtocol("hi!");
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory57.protocol;
        int int63 = tomcatEmbeddedServletContainerFactory57.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = tomcatEmbeddedServletContainerFactory64.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList67 = tomcatEmbeddedServletContainerFactory66.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory64.tomcatConnectorCustomizers = tomcatConnectorCustomizerList67;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection69 = tomcatEmbeddedServletContainerFactory64.getContextLifecycleListeners();
        java.lang.String str70 = tomcatEmbeddedServletContainerFactory64.uriEncoding;
        java.lang.String str71 = tomcatEmbeddedServletContainerFactory64.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str73 = tomcatEmbeddedServletContainerFactory72.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray74 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory72.addInitializers(servletContextInitializerArray74);
        tomcatEmbeddedServletContainerFactory64.addInitializers(servletContextInitializerArray74);
        tomcatEmbeddedServletContainerFactory57.addInitializers(servletContextInitializerArray74);
        tomcatEmbeddedServletContainerFactory56.addInitializers(servletContextInitializerArray74);
        tomcatEmbeddedServletContainerFactory38.addInitializers(servletContextInitializerArray74);
        tomcatEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray74);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray74);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(valveCollection28);
        org.junit.Assert.assertNotNull(lifecycleListenerArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNotNull(connectorList45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection51);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList52);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList67);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "UTF-8" + "'", str70, "UTF-8");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "UTF-8" + "'", str71, "UTF-8");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "UTF-8" + "'", str73, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray74);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader8 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        org.apache.catalina.Context context12 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNull(resourceLoader8);
        org.junit.Assert.assertNotNull(errorPageSet9);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.apache.catalina.Context context10 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection17 = tomcatEmbeddedServletContainerFactory12.getTomcatConnectorCustomizers();
        boolean boolean18 = tomcatEmbeddedServletContainerFactory12.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress19 = null;
        tomcatEmbeddedServletContainerFactory12.setAddress(inetAddress19);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer21 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray22 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer21 };
        tomcatEmbeddedServletContainerFactory12.addConnectorCustomizers(tomcatConnectorCustomizerArray22);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory25.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory30.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors = connectorList32;
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory25.protocol;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory25.protocol;
        java.net.InetAddress inetAddress36 = null;
        tomcatEmbeddedServletContainerFactory25.setAddress(inetAddress36);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer38 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray39 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer38 };
        tomcatEmbeddedServletContainerFactory25.addConnectorCustomizers(tomcatConnectorCustomizerArray39);
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection46 = tomcatEmbeddedServletContainerFactory42.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader47 = tomcatEmbeddedServletContainerFactory42.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory48.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList53 = tomcatEmbeddedServletContainerFactory48.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList54 = tomcatEmbeddedServletContainerFactory48.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory42.tomcatConnectorCustomizers = tomcatConnectorCustomizerList54;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = tomcatEmbeddedServletContainerFactory56.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList59 = tomcatEmbeddedServletContainerFactory58.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory56.tomcatConnectorCustomizers = tomcatConnectorCustomizerList59;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet61 = tomcatEmbeddedServletContainerFactory56.getErrorPages();
        java.net.InetAddress inetAddress62 = tomcatEmbeddedServletContainerFactory56.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader63 = tomcatEmbeddedServletContainerFactory56.resourceLoader;
        java.io.File file65 = tomcatEmbeddedServletContainerFactory56.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.apache.catalina.Valve[] valveArray66 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory56.addContextValves(valveArray66);
        tomcatEmbeddedServletContainerFactory42.addContextValves(valveArray66);
        tomcatEmbeddedServletContainerFactory25.addContextValves(valveArray66);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray66);
        int int71 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList73 = tomcatEmbeddedServletContainerFactory72.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory72.uriEncoding = "";
        tomcatEmbeddedServletContainerFactory72.setContextPath("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection78 = tomcatEmbeddedServletContainerFactory72.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory79 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings80 = tomcatEmbeddedServletContainerFactory79.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader81 = tomcatEmbeddedServletContainerFactory79.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory82.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory82.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection87 = tomcatEmbeddedServletContainerFactory82.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList88 = tomcatEmbeddedServletContainerFactory82.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory79.tomcatContextCustomizers = tomcatContextCustomizerList88;
        tomcatEmbeddedServletContainerFactory79.uriEncoding = "UTF-8";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection92 = tomcatEmbeddedServletContainerFactory79.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList93 = tomcatEmbeddedServletContainerFactory79.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory72.tomcatContextCustomizers = tomcatContextCustomizerList93;
        tomcatEmbeddedServletContainerFactory72.setRegisterJspServlet(false);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList97 = tomcatEmbeddedServletContainerFactory72.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList97;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection99 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray22);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray39);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNotNull(valveCollection46);
        org.junit.Assert.assertNull(resourceLoader47);
        org.junit.Assert.assertNotNull(lifecycleListenerList53);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList54);
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList59);
        org.junit.Assert.assertNotNull(errorPageSet61);
        org.junit.Assert.assertNull(inetAddress62);
        org.junit.Assert.assertNull(resourceLoader63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file65.toString(), "/tmp/web-app>\n.2101114049897918285.8080");
        org.junit.Assert.assertNotNull(valveArray66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList73);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection78);
        org.junit.Assert.assertNotNull(mimeMappings80);
        org.junit.Assert.assertNull(resourceLoader81);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection87);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList88);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection92);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList93);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList97);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection99);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str5 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str6 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str7 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.LifecycleEvent lifecycleEvent8 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str5, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str6, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str7, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        int int15 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.Context context16 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context16);
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.apache.catalina.Context context13 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors = connectorList22;
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory15.protocol;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory15.protocol;
        java.net.InetAddress inetAddress26 = null;
        tomcatEmbeddedServletContainerFactory15.setAddress(inetAddress26);
        java.util.List<org.apache.catalina.connector.Connector> connectorList28 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        java.io.File file29 = tomcatEmbeddedServletContainerFactory15.baseDirectory;
        org.apache.catalina.Valve[] valveArray30 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray30);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray30);
        tomcatEmbeddedServletContainerFactory0.tldSkip = "org.apache.tomcat.util.scan.MergedWebXml";
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(connectorList28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(valveArray30);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        org.apache.catalina.connector.Connector connector11 = null;
        org.apache.catalina.connector.Connector[] connectorArray12 = new org.apache.catalina.connector.Connector[] { connector11 };
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList15 = tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection16 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList17 = tomcatEmbeddedServletContainerFactory14.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection18);
        java.net.InetAddress inetAddress20 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress20);
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.apache.catalina.Context context24 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory25.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory30.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors = connectorList32;
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory25.protocol;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory25.protocol;
        tomcatEmbeddedServletContainerFactory25.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection38 = tomcatEmbeddedServletContainerFactory25.getTomcatContextCustomizers();
        java.io.File file39 = tomcatEmbeddedServletContainerFactory25.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList41 = tomcatEmbeddedServletContainerFactory40.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory25.tomcatConnectorCustomizers = tomcatConnectorCustomizerList41;
        boolean boolean43 = tomcatEmbeddedServletContainerFactory25.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory25.uriEncoding = "UTF-8";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList46 = tomcatEmbeddedServletContainerFactory25.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = tomcatEmbeddedServletContainerFactory48.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList51 = tomcatEmbeddedServletContainerFactory50.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory48.tomcatConnectorCustomizers = tomcatConnectorCustomizerList51;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection53 = tomcatEmbeddedServletContainerFactory48.getContextLifecycleListeners();
        java.lang.String str54 = tomcatEmbeddedServletContainerFactory48.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList55 = tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory47.additionalTomcatConnectors = connectorList55;
        java.lang.String str57 = tomcatEmbeddedServletContainerFactory47.protocol;
        tomcatEmbeddedServletContainerFactory47.setSessionTimeout(0);
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory47.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory61.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory61.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings67 = tomcatEmbeddedServletContainerFactory66.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList68 = tomcatEmbeddedServletContainerFactory66.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList69 = tomcatEmbeddedServletContainerFactory66.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory61.additionalTomcatConnectors = connectorList69;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str72 = tomcatEmbeddedServletContainerFactory71.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray73 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory71.addInitializers(servletContextInitializerArray73);
        tomcatEmbeddedServletContainerFactory71.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray77 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory71.addContextLifecycleListeners(lifecycleListenerArray77);
        tomcatEmbeddedServletContainerFactory61.addContextLifecycleListeners(lifecycleListenerArray77);
        org.apache.catalina.Context context80 = null;
        tomcatEmbeddedServletContainerFactory61.postProcessContext(context80);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory82.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings85 = tomcatEmbeddedServletContainerFactory82.getMimeMappings();
        tomcatEmbeddedServletContainerFactory82.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory90 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str91 = tomcatEmbeddedServletContainerFactory90.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer92 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray93 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer92 };
        tomcatEmbeddedServletContainerFactory90.addInitializers(servletContextInitializerArray93);
        tomcatEmbeddedServletContainerFactory82.addInitializers(servletContextInitializerArray93);
        tomcatEmbeddedServletContainerFactory61.addInitializers(servletContextInitializerArray93);
        tomcatEmbeddedServletContainerFactory47.addInitializers(servletContextInitializerArray93);
        tomcatEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray93);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context24, servletContextInitializerArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(connectorArray12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection16);
        org.junit.Assert.assertNotNull(valveList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList46);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList51);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-8" + "'", str54, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str57, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str60, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings67);
        org.junit.Assert.assertNotNull(connectorList68);
        org.junit.Assert.assertNotNull(connectorList69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "UTF-8" + "'", str72, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray73);
        org.junit.Assert.assertNotNull(lifecycleListenerArray77);
        org.junit.Assert.assertNotNull(mimeMappings85);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNotNull(servletContextInitializerArray93);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList14;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.springframework.core.io.ResourceLoader resourceLoader18 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str17, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNull(resourceLoader18);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.LifecycleEvent lifecycleEvent5 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        org.apache.catalina.Context context9 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context9);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection11 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        int int12 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.Valve> valveList13 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setTldSkip("UTF-8");
        java.net.InetAddress inetAddress19 = tomcatEmbeddedServletContainerFactory14.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory20.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList27 = tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors = connectorList27;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory20.protocol;
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory20.protocol;
        java.net.InetAddress inetAddress31 = null;
        tomcatEmbeddedServletContainerFactory20.setAddress(inetAddress31);
        java.io.File file33 = null;
        tomcatEmbeddedServletContainerFactory20.setBaseDirectory(file33);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray35 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory20.addContextCustomizers(tomcatContextCustomizerArray35);
        tomcatEmbeddedServletContainerFactory14.addContextCustomizers(tomcatContextCustomizerArray35);
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory14.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection41 = tomcatEmbeddedServletContainerFactory39.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList42 = tomcatEmbeddedServletContainerFactory39.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection43 = tomcatEmbeddedServletContainerFactory39.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory39.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory39.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList47 = tomcatEmbeddedServletContainerFactory39.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory48.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList55 = tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors = connectorList55;
        org.apache.catalina.Context context57 = null;
        tomcatEmbeddedServletContainerFactory48.postProcessContext(context57);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory61.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray63 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory61.addConnectorCustomizers(tomcatConnectorCustomizerArray63);
        tomcatEmbeddedServletContainerFactory48.addConnectorCustomizers(tomcatConnectorCustomizerArray63);
        tomcatEmbeddedServletContainerFactory39.addConnectorCustomizers(tomcatConnectorCustomizerArray63);
        tomcatEmbeddedServletContainerFactory14.addConnectorCustomizers(tomcatConnectorCustomizerArray63);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray63);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(valveList13);
        org.junit.Assert.assertNull(inetAddress19);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNotNull(connectorList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection41);
        org.junit.Assert.assertNotNull(valveList42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection43);
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertNotNull(connectorList47);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(connectorList55);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray63);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory2.getDEFAULT_PROTOCOL();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection9 = tomcatEmbeddedServletContainerFactory2.getTomcatConnectorCustomizers();
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str8, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection9);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList2 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray3 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList4, tomcatConnectorCustomizerArray3);
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList4;
        boolean boolean7 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.apache.catalina.connector.Connector connector8 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveList2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.io.File file6 = tomcatEmbeddedServletContainerFactory0.createTempDir("UTF-8");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList13 = tomcatEmbeddedServletContainerFactory8.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList14);
        int int16 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.util.concurrent.TimeUnit timeUnit18 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0, timeUnit18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file6.toString(), "/tmp/UTF-8.3069667548649061187.0");
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(lifecycleListenerList13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList3 = null;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList3;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader5;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory7.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors = connectorList21;
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory14.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        tomcatEmbeddedServletContainerFactory14.setMimeMappings(mimeMappings27);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers;
        int int31 = tomcatEmbeddedServletContainerFactory29.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray32 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory29.addContextLifecycleListeners(lifecycleListenerArray32);
        tomcatEmbeddedServletContainerFactory14.addContextLifecycleListeners(lifecycleListenerArray32);
        tomcatEmbeddedServletContainerFactory14.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader37 = tomcatEmbeddedServletContainerFactory14.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList41 = tomcatEmbeddedServletContainerFactory40.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory38.tomcatConnectorCustomizers = tomcatConnectorCustomizerList41;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection43 = tomcatEmbeddedServletContainerFactory38.getContextLifecycleListeners();
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory38.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList45 = tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.ErrorPage errorPage46 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray47 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage46 };
        tomcatEmbeddedServletContainerFactory38.addErrorPages(errorPageArray47);
        tomcatEmbeddedServletContainerFactory14.addErrorPages(errorPageArray47);
        tomcatEmbeddedServletContainerFactory7.addErrorPages(errorPageArray47);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray47);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet52 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray32);
        org.junit.Assert.assertNull(resourceLoader37);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList41);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-8" + "'", str44, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList45);
        org.junit.Assert.assertNotNull(errorPageArray47);
        org.junit.Assert.assertNotNull(errorPageSet52);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory10.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader27 = null;
        tomcatEmbeddedServletContainerFactory26.setResourceLoader(resourceLoader27);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = tomcatEmbeddedServletContainerFactory26.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory30.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory35.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory35.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors = connectorList37;
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory30.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory40.getMimeMappings();
        tomcatEmbeddedServletContainerFactory30.setMimeMappings(mimeMappings43);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList46 = tomcatEmbeddedServletContainerFactory45.tomcatConnectorCustomizers;
        int int47 = tomcatEmbeddedServletContainerFactory45.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray48 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory45.addContextLifecycleListeners(lifecycleListenerArray48);
        tomcatEmbeddedServletContainerFactory30.addContextLifecycleListeners(lifecycleListenerArray48);
        tomcatEmbeddedServletContainerFactory30.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader53 = tomcatEmbeddedServletContainerFactory30.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = tomcatEmbeddedServletContainerFactory54.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList57 = tomcatEmbeddedServletContainerFactory56.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory54.tomcatConnectorCustomizers = tomcatConnectorCustomizerList57;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection59 = tomcatEmbeddedServletContainerFactory54.getContextLifecycleListeners();
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory54.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList61 = tomcatEmbeddedServletContainerFactory54.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.ErrorPage errorPage62 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray63 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage62 };
        tomcatEmbeddedServletContainerFactory54.addErrorPages(errorPageArray63);
        tomcatEmbeddedServletContainerFactory30.addErrorPages(errorPageArray63);
        tomcatEmbeddedServletContainerFactory26.addErrorPages(errorPageArray63);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray63);
        java.io.File file69 = tomcatEmbeddedServletContainerFactory0.createTempDir("UTF-8");
        org.apache.catalina.connector.Connector connector70 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(errorPageSet29);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray48);
        org.junit.Assert.assertNull(resourceLoader53);
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList57);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "UTF-8" + "'", str60, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList61);
        org.junit.Assert.assertNotNull(errorPageArray63);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file69.toString(), "/tmp/UTF-8.8532868718880511884.0");
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.apache.catalina.startup.Tomcat tomcat8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer9 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) '#');
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader7 = tomcatEmbeddedServletContainerFactory5.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory5.tomcatContextCustomizers = tomcatContextCustomizerList14;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory5.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory17.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList24 = tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors = connectorList24;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory17.protocol;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory17.protocol;
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection30 = tomcatEmbeddedServletContainerFactory17.getTomcatContextCustomizers();
        int int31 = tomcatEmbeddedServletContainerFactory17.getPort();
        java.io.File file33 = tomcatEmbeddedServletContainerFactory17.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory5.baseDirectory = file33;
        org.apache.catalina.Valve[] valveArray35 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory5.addContextValves(valveArray35);
        tomcatEmbeddedServletContainerFactory4.addContextValves(valveArray35);
        tomcatEmbeddedServletContainerFactory2.addContextValves(valveArray35);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection41 = tomcatEmbeddedServletContainerFactory39.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader44 = tomcatEmbeddedServletContainerFactory42.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray45 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory42.addErrorPages(errorPageArray45);
        tomcatEmbeddedServletContainerFactory39.addErrorPages(errorPageArray45);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory48.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList55 = tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList56 = tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors = connectorList56;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory58.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory58.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection63 = tomcatEmbeddedServletContainerFactory58.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList64 = tomcatEmbeddedServletContainerFactory58.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory48.tomcatContextCustomizers = tomcatContextCustomizerList64;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str67 = storeMergedWebXmlListener66.getEmptyWebXml();
        java.lang.String str68 = storeMergedWebXmlListener66.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener69 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str70 = storeMergedWebXmlListener69.getMERGED_WEB_XML();
        java.lang.String str71 = storeMergedWebXmlListener69.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray72 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener66, storeMergedWebXmlListener69 };
        tomcatEmbeddedServletContainerFactory48.addContextLifecycleListeners(lifecycleListenerArray72);
        tomcatEmbeddedServletContainerFactory39.addContextLifecycleListeners(lifecycleListenerArray72);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings76 = tomcatEmbeddedServletContainerFactory75.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList78 = tomcatEmbeddedServletContainerFactory77.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory75.tomcatConnectorCustomizers = tomcatConnectorCustomizerList78;
        tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers = tomcatConnectorCustomizerList78;
        tomcatEmbeddedServletContainerFactory39.setPort((int) (byte) 100);
        tomcatEmbeddedServletContainerFactory39.setPort((int) 'a');
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory85 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory85.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings88 = tomcatEmbeddedServletContainerFactory85.getMimeMappings();
        tomcatEmbeddedServletContainerFactory85.setProtocol("UTF-8");
        java.lang.String str91 = tomcatEmbeddedServletContainerFactory85.protocol;
        tomcatEmbeddedServletContainerFactory85.setTldSkip("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet94 = tomcatEmbeddedServletContainerFactory85.getErrorPages();
        tomcatEmbeddedServletContainerFactory39.setErrorPages(errorPageSet94);
        tomcatEmbeddedServletContainerFactory2.setErrorPages(errorPageSet94);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList97 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader98 = tomcatEmbeddedServletContainerFactory2.resourceLoader;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(connectorList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file33.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6560751523670371146.0");
        org.junit.Assert.assertNotNull(valveArray35);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection41);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNull(resourceLoader44);
        org.junit.Assert.assertNotNull(errorPageArray45);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(connectorList55);
        org.junit.Assert.assertNotNull(connectorList56);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection63);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str67, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str68, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str70, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str71, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray72);
        org.junit.Assert.assertNotNull(mimeMappings76);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList78);
        org.junit.Assert.assertNotNull(mimeMappings88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "UTF-8" + "'", str91, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet94);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList97);
        org.junit.Assert.assertNull(resourceLoader98);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList12 = tomcatEmbeddedServletContainerFactory10.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList12;
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.connector.Connector connector16 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valveList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(mimeMappings15);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = tomcatEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory4.tomcatConnectorCustomizers = tomcatConnectorCustomizerList7;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection9 = tomcatEmbeddedServletContainerFactory4.getContextLifecycleListeners();
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory4.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList19;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory21.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory21.addInitializers(servletContextInitializerArray23);
        tomcatEmbeddedServletContainerFactory21.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray27 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory21.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory11.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory4.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray27);
        java.lang.Class<?> wildcardClass32 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(lifecycleListenerArray27);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        boolean boolean14 = tomcatEmbeddedServletContainerFactory8.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader17 = tomcatEmbeddedServletContainerFactory15.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection23 = tomcatEmbeddedServletContainerFactory18.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList24 = tomcatEmbeddedServletContainerFactory18.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory15.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("org.apache.coyote.http11.Http11NioProtocol");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection23);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList24);
        org.junit.Assert.assertNotNull(mimeMappings30);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader7 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.net.InetAddress inetAddress8 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress8);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList15 = tomcatEmbeddedServletContainerFactory10.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList15;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress18 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertNotNull(lifecycleListenerList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str17, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNull(inetAddress18);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection3 = tomcatEmbeddedServletContainerFactory2.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList4 = tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners;
        java.util.List<org.apache.catalina.Valve> valveList5 = tomcatEmbeddedServletContainerFactory2.contextValves;
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader6);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList8 = tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory2.getContextPath();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList10 = null;
        tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers = tomcatConnectorCustomizerList10;
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory2.getUriEncoding();
        java.util.concurrent.TimeUnit timeUnit14 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.setSessionTimeout((int) (short) -1, timeUnit14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection3);
        org.junit.Assert.assertNotNull(lifecycleListenerList4);
        org.junit.Assert.assertNotNull(valveList5);
        org.junit.Assert.assertNotNull(lifecycleListenerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-8" + "'", str12, "UTF-8");
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList18 = tomcatEmbeddedServletContainerFactory17.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection19 = tomcatEmbeddedServletContainerFactory17.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection19);
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList18);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList12 = tomcatEmbeddedServletContainerFactory10.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList12;
        tomcatEmbeddedServletContainerFactory0.tldSkip = "";
        java.net.InetAddress inetAddress16 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress16);
        java.util.List<org.apache.catalina.Valve> valveList18 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valveList12);
        org.junit.Assert.assertNotNull(valveList18);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory2.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray4 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory2.addConnectorCustomizers(tomcatConnectorCustomizerArray4);
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory2.protocol;
        tomcatEmbeddedServletContainerFactory2.tldSkip = "UTF-8";
        org.apache.catalina.connector.Connector connector9 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.customizeConnector(connector9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str6, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("org.apache.tomcat.util.scan.MergedWebXml", (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader5 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList11 = tomcatEmbeddedServletContainerFactory6.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList12 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList12;
        int int14 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNull(resourceLoader5);
        org.junit.Assert.assertNotNull(lifecycleListenerList11);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory3.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory2.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection5);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList14;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory7.protocol;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory7.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList25 = tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors = connectorList25;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory18.protocol;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory18.protocol;
        java.net.InetAddress inetAddress29 = null;
        tomcatEmbeddedServletContainerFactory18.setAddress(inetAddress29);
        int int31 = tomcatEmbeddedServletContainerFactory18.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList35 = tomcatEmbeddedServletContainerFactory34.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory32.tomcatConnectorCustomizers = tomcatConnectorCustomizerList35;
        tomcatEmbeddedServletContainerFactory18.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList35);
        tomcatEmbeddedServletContainerFactory7.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList35);
        tomcatEmbeddedServletContainerFactory2.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList35);
        int int40 = tomcatEmbeddedServletContainerFactory2.getPort();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory2.getAdditionalTomcatConnectors();
        org.apache.catalina.Context context42 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.addDefaultServlet(context42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(connectorList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList35);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 100 + "'", int40 == 100);
        org.junit.Assert.assertNotNull(connectorList41);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers = tomcatConnectorCustomizerList17;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList17);
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection22 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        tomcatEmbeddedServletContainerFactory24.setTldSkip("");
        int int30 = tomcatEmbeddedServletContainerFactory24.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader31 = tomcatEmbeddedServletContainerFactory24.resourceLoader;
        java.net.InetAddress inetAddress32 = null;
        tomcatEmbeddedServletContainerFactory24.setAddress(inetAddress32);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory34.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory34.addInitializers(servletContextInitializerArray36);
        tomcatEmbeddedServletContainerFactory34.setUriEncoding("hi!");
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory34.getUriEncoding();
        tomcatEmbeddedServletContainerFactory34.setSessionTimeout((int) (short) 100);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList43 = tomcatEmbeddedServletContainerFactory34.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory44.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList51 = tomcatEmbeddedServletContainerFactory49.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory44.additionalTomcatConnectors = connectorList51;
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory44.protocol;
        java.lang.String str54 = tomcatEmbeddedServletContainerFactory44.protocol;
        tomcatEmbeddedServletContainerFactory44.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection57 = tomcatEmbeddedServletContainerFactory44.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList58 = tomcatEmbeddedServletContainerFactory44.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory34.tomcatContextCustomizers = tomcatContextCustomizerList58;
        tomcatEmbeddedServletContainerFactory24.tomcatContextCustomizers = tomcatContextCustomizerList58;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory61.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory61.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList66 = tomcatEmbeddedServletContainerFactory61.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory67.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings70 = tomcatEmbeddedServletContainerFactory67.getMimeMappings();
        tomcatEmbeddedServletContainerFactory61.setMimeMappings(mimeMappings70);
        org.apache.catalina.connector.Connector connector72 = null;
        org.apache.catalina.connector.Connector[] connectorArray73 = new org.apache.catalina.connector.Connector[] { connector72 };
        tomcatEmbeddedServletContainerFactory61.addAdditionalTomcatConnectors(connectorArray73);
        tomcatEmbeddedServletContainerFactory24.addAdditionalTomcatConnectors(connectorArray73);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray73);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(resourceLoader31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-8" + "'", str35, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList43);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNotNull(connectorList51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection57);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList58);
        org.junit.Assert.assertNotNull(lifecycleListenerList66);
        org.junit.Assert.assertNotNull(mimeMappings70);
        org.junit.Assert.assertNotNull(connectorArray73);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader14 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection20 = tomcatEmbeddedServletContainerFactory15.getTomcatConnectorCustomizers();
        boolean boolean21 = tomcatEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress22 = null;
        tomcatEmbeddedServletContainerFactory15.setAddress(inetAddress22);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray24 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory15.addContextCustomizers(tomcatContextCustomizerArray24);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray24);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList29 = tomcatEmbeddedServletContainerFactory28.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection30 = tomcatEmbeddedServletContainerFactory28.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader33 = tomcatEmbeddedServletContainerFactory31.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray34 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory31.addErrorPages(errorPageArray34);
        tomcatEmbeddedServletContainerFactory28.addErrorPages(errorPageArray34);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory37.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory42.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList45 = tomcatEmbeddedServletContainerFactory42.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors = connectorList45;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory47.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory47.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection52 = tomcatEmbeddedServletContainerFactory47.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList53 = tomcatEmbeddedServletContainerFactory47.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory37.tomcatContextCustomizers = tomcatContextCustomizerList53;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str56 = storeMergedWebXmlListener55.getEmptyWebXml();
        java.lang.String str57 = storeMergedWebXmlListener55.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str59 = storeMergedWebXmlListener58.getMERGED_WEB_XML();
        java.lang.String str60 = storeMergedWebXmlListener58.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray61 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener55, storeMergedWebXmlListener58 };
        tomcatEmbeddedServletContainerFactory37.addContextLifecycleListeners(lifecycleListenerArray61);
        tomcatEmbeddedServletContainerFactory28.addContextLifecycleListeners(lifecycleListenerArray61);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = tomcatEmbeddedServletContainerFactory64.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList67 = tomcatEmbeddedServletContainerFactory66.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory64.tomcatConnectorCustomizers = tomcatConnectorCustomizerList67;
        tomcatEmbeddedServletContainerFactory28.tomcatConnectorCustomizers = tomcatConnectorCustomizerList67;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet70 = tomcatEmbeddedServletContainerFactory28.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet70);
        tomcatEmbeddedServletContainerFactory0.protocol = "";
        org.apache.catalina.startup.Tomcat tomcat74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer75 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList29);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection30);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNull(resourceLoader33);
        org.junit.Assert.assertNotNull(errorPageArray34);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertNotNull(connectorList45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection52);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str56, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str57, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str59, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str60, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray61);
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList67);
        org.junit.Assert.assertNotNull(errorPageSet70);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory4.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        java.io.File file8 = tomcatEmbeddedServletContainerFactory6.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList9 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory4.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList9);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList9);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.coyote.http11.Http11NioProtocol");
        java.net.InetAddress inetAddress14 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.apache.catalina.Context context15 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str5, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList9);
        org.junit.Assert.assertNull(inetAddress14);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory2.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory2.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList7 = tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList8 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers = tomcatConnectorCustomizerList8;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory1.getErrorPages();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory1.protocol;
        org.apache.catalina.Context context12 = null;
        tomcatEmbeddedServletContainerFactory1.postProcessContext(context12);
        org.junit.Assert.assertNotNull(lifecycleListenerList7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList8);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str11, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str2 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.getEmptyWebXml();
        org.apache.catalina.Context context5 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str4, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setTldSkip("UTF-8");
        java.io.File file20 = tomcatEmbeddedServletContainerFactory14.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file20);
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 100);
        org.apache.catalina.connector.Connector connector24 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file20.toString(), "/tmp/UTF-8.5730530639035427967.0");
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory4.protocol;
        tomcatEmbeddedServletContainerFactory4.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection17 = tomcatEmbeddedServletContainerFactory12.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList18 = tomcatEmbeddedServletContainerFactory12.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers = tomcatContextCustomizerList18;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList20 = tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList20;
        java.net.InetAddress inetAddress22 = tomcatEmbeddedServletContainerFactory2.getAddress();
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory2.getUriEncoding();
        org.springframework.core.io.ResourceLoader resourceLoader24 = tomcatEmbeddedServletContainerFactory2.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory25.getUriEncoding();
        int int27 = tomcatEmbeddedServletContainerFactory25.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader29 = null;
        tomcatEmbeddedServletContainerFactory25.resourceLoader = resourceLoader29;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory31.setTldSkip("UTF-8");
        java.io.File file37 = tomcatEmbeddedServletContainerFactory31.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory25.setBaseDirectory(file37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList42 = tomcatEmbeddedServletContainerFactory41.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers = tomcatConnectorCustomizerList42;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList45 = tomcatEmbeddedServletContainerFactory44.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection46 = tomcatEmbeddedServletContainerFactory44.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = tomcatEmbeddedServletContainerFactory47.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader49 = tomcatEmbeddedServletContainerFactory47.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray50 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory47.addErrorPages(errorPageArray50);
        tomcatEmbeddedServletContainerFactory44.addErrorPages(errorPageArray50);
        tomcatEmbeddedServletContainerFactory39.addErrorPages(errorPageArray50);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory54.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection59 = tomcatEmbeddedServletContainerFactory54.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory54.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection62 = tomcatEmbeddedServletContainerFactory54.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector63 = null;
        org.apache.catalina.connector.Connector[] connectorArray64 = new org.apache.catalina.connector.Connector[] { connector63 };
        tomcatEmbeddedServletContainerFactory54.addAdditionalTomcatConnectors(connectorArray64);
        tomcatEmbeddedServletContainerFactory39.addAdditionalTomcatConnectors(connectorArray64);
        tomcatEmbeddedServletContainerFactory25.addAdditionalTomcatConnectors(connectorArray64);
        tomcatEmbeddedServletContainerFactory2.addAdditionalTomcatConnectors(connectorArray64);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection69 = tomcatEmbeddedServletContainerFactory2.getTomcatContextCustomizers();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection17);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList20);
        org.junit.Assert.assertNull(inetAddress22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-8" + "'", str26, "UTF-8");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8080 + "'", int27 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file37.toString(), "/tmp/UTF-8.6543986914880742033.0");
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection46);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNull(resourceLoader49);
        org.junit.Assert.assertNotNull(errorPageArray50);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection59);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection62);
        org.junit.Assert.assertNotNull(connectorArray64);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection69);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList16 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList16, valveArray15);
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList16;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory19.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList28 = tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers = tomcatContextCustomizerList28;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        org.apache.catalina.Valve valve31 = null;
        org.apache.catalina.Valve[] valveArray32 = new org.apache.catalina.Valve[] { valve31 };
        tomcatEmbeddedServletContainerFactory19.addContextValves(valveArray32);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray32);
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.apache.catalina.Context context36 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context36);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory38.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList45 = tomcatEmbeddedServletContainerFactory43.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors = connectorList45;
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory38.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = tomcatEmbeddedServletContainerFactory48.getMimeMappings();
        tomcatEmbeddedServletContainerFactory38.setMimeMappings(mimeMappings51);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList54 = tomcatEmbeddedServletContainerFactory53.tomcatConnectorCustomizers;
        int int55 = tomcatEmbeddedServletContainerFactory53.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray56 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory53.addContextLifecycleListeners(lifecycleListenerArray56);
        tomcatEmbeddedServletContainerFactory38.addContextLifecycleListeners(lifecycleListenerArray56);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray56);
        tomcatEmbeddedServletContainerFactory0.protocol = "";
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(valveArray32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNotNull(connectorList45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray56);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer9 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray10 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer9 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray10);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        org.apache.catalina.Context context20 = null;
        tomcatEmbeddedServletContainerFactory16.postProcessContext(context20);
        java.util.Collection<org.apache.catalina.Valve> valveCollection22 = tomcatEmbeddedServletContainerFactory16.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList26 = tomcatEmbeddedServletContainerFactory25.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory23.tomcatConnectorCustomizers = tomcatConnectorCustomizerList26;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection28 = tomcatEmbeddedServletContainerFactory23.getContextLifecycleListeners();
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory23.uriEncoding;
        tomcatEmbeddedServletContainerFactory23.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory32.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection37 = tomcatEmbeddedServletContainerFactory32.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory32.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection40 = tomcatEmbeddedServletContainerFactory32.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector41 = null;
        org.apache.catalina.connector.Connector[] connectorArray42 = new org.apache.catalina.connector.Connector[] { connector41 };
        tomcatEmbeddedServletContainerFactory32.addAdditionalTomcatConnectors(connectorArray42);
        tomcatEmbeddedServletContainerFactory23.addAdditionalTomcatConnectors(connectorArray42);
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray42);
        int int46 = tomcatEmbeddedServletContainerFactory16.getPort();
        java.net.InetAddress inetAddress47 = tomcatEmbeddedServletContainerFactory16.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file52 = tomcatEmbeddedServletContainerFactory50.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory16.baseDirectory = file52;
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file52;
        org.apache.catalina.Context context55 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(valveCollection22);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList26);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-8" + "'", str29, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection40);
        org.junit.Assert.assertNotNull(connectorArray42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(inetAddress47);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file52.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.8757570497188706657.100");
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(8080);
        java.net.InetAddress inetAddress17 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress17);
        org.apache.catalina.connector.Connector connector19 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.io.File file5 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        java.io.File file23 = tomcatEmbeddedServletContainerFactory20.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file23;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setTldSkip("UTF-8");
        java.io.File file32 = tomcatEmbeddedServletContainerFactory26.createTempDir("UTF-8");
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory26.protocol;
        tomcatEmbeddedServletContainerFactory26.setPort((int) '#');
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection40 = tomcatEmbeddedServletContainerFactory36.getValves();
        java.net.InetAddress inetAddress41 = tomcatEmbeddedServletContainerFactory36.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean43 = tomcatEmbeddedServletContainerFactory42.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList44 = tomcatEmbeddedServletContainerFactory42.contextValves;
        tomcatEmbeddedServletContainerFactory36.contextValves = valveList44;
        tomcatEmbeddedServletContainerFactory26.contextValves = valveList44;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList44;
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file23.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.7522408216952577424.8080");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file32.toString(), "/tmp/UTF-8.3461931734097357666.0");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str33, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(valveCollection40);
        org.junit.Assert.assertNull(inetAddress41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(valveList44);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str2 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str4 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str5 = storeMergedWebXmlListener0.getEmptyWebXml();
        org.apache.catalina.Context context6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str2, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str5, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        org.springframework.core.io.ResourceLoader resourceLoader13 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader17 = tomcatEmbeddedServletContainerFactory15.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection23 = tomcatEmbeddedServletContainerFactory18.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList24 = tomcatEmbeddedServletContainerFactory18.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory15.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory15.uriEncoding = "UTF-8";
        int int28 = tomcatEmbeddedServletContainerFactory15.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean30 = tomcatEmbeddedServletContainerFactory29.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection31 = tomcatEmbeddedServletContainerFactory29.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        tomcatEmbeddedServletContainerFactory15.setMimeMappings(mimeMappings32);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        tomcatEmbeddedServletContainerFactory34.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection40 = tomcatEmbeddedServletContainerFactory34.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory41.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory41.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = tomcatEmbeddedServletContainerFactory46.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList48 = tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors = connectorList48;
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory41.protocol;
        org.apache.catalina.Context context51 = null;
        tomcatEmbeddedServletContainerFactory41.postProcessContext(context51);
        java.io.File file54 = tomcatEmbeddedServletContainerFactory41.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory34.setBaseDirectory(file54);
        tomcatEmbeddedServletContainerFactory15.baseDirectory = file54;
        java.io.File file57 = tomcatEmbeddedServletContainerFactory15.baseDirectory;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file57);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList60 = tomcatEmbeddedServletContainerFactory59.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection61 = tomcatEmbeddedServletContainerFactory59.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings63 = tomcatEmbeddedServletContainerFactory62.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader64 = tomcatEmbeddedServletContainerFactory62.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray65 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory62.addErrorPages(errorPageArray65);
        tomcatEmbeddedServletContainerFactory59.addErrorPages(errorPageArray65);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory68.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory68.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings74 = tomcatEmbeddedServletContainerFactory73.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList75 = tomcatEmbeddedServletContainerFactory73.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory68.additionalTomcatConnectors = connectorList75;
        java.lang.String str77 = tomcatEmbeddedServletContainerFactory68.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory78.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings81 = tomcatEmbeddedServletContainerFactory78.getMimeMappings();
        tomcatEmbeddedServletContainerFactory68.setMimeMappings(mimeMappings81);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList84 = tomcatEmbeddedServletContainerFactory83.tomcatConnectorCustomizers;
        int int85 = tomcatEmbeddedServletContainerFactory83.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray86 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory83.addContextLifecycleListeners(lifecycleListenerArray86);
        tomcatEmbeddedServletContainerFactory68.addContextLifecycleListeners(lifecycleListenerArray86);
        java.util.List<org.apache.catalina.Valve> valveList89 = tomcatEmbeddedServletContainerFactory68.contextValves;
        tomcatEmbeddedServletContainerFactory59.contextValves = valveList89;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList89;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection23);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 8080 + "'", int28 == 8080);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(valveCollection31);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection40);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNotNull(connectorList48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file54.toString(), "/tmp/UTF-8.3887434031491347529.0");
        org.junit.Assert.assertNotNull(file57);
        org.junit.Assert.assertEquals(file57.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file57.toString(), "/tmp/UTF-8.3887434031491347529.0");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList60);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection61);
        org.junit.Assert.assertNotNull(mimeMappings63);
        org.junit.Assert.assertNull(resourceLoader64);
        org.junit.Assert.assertNotNull(errorPageArray65);
        org.junit.Assert.assertNotNull(mimeMappings74);
        org.junit.Assert.assertNotNull(connectorList75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings81);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray86);
        org.junit.Assert.assertNotNull(valveList89);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        tomcatEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList12 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors = connectorList20;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory13.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean24 = tomcatEmbeddedServletContainerFactory23.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList25 = tomcatEmbeddedServletContainerFactory23.contextValves;
        tomcatEmbeddedServletContainerFactory13.contextValves = valveList25;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory13.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors = connectorList35;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory28.protocol;
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory28.protocol;
        java.net.InetAddress inetAddress39 = null;
        tomcatEmbeddedServletContainerFactory28.setAddress(inetAddress39);
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory42.setTldSkip("UTF-8");
        java.io.File file48 = tomcatEmbeddedServletContainerFactory42.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory28.setDocumentRoot(file48);
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory52.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = tomcatEmbeddedServletContainerFactory57.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList59 = tomcatEmbeddedServletContainerFactory57.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory52.additionalTomcatConnectors = connectorList59;
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory52.protocol;
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory52.protocol;
        tomcatEmbeddedServletContainerFactory52.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection65 = tomcatEmbeddedServletContainerFactory52.getTomcatContextCustomizers();
        int int66 = tomcatEmbeddedServletContainerFactory52.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory67.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory67.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings73 = tomcatEmbeddedServletContainerFactory72.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList74 = tomcatEmbeddedServletContainerFactory72.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory67.additionalTomcatConnectors = connectorList74;
        java.lang.String str76 = tomcatEmbeddedServletContainerFactory67.protocol;
        java.lang.String str77 = tomcatEmbeddedServletContainerFactory67.protocol;
        java.net.InetAddress inetAddress78 = null;
        tomcatEmbeddedServletContainerFactory67.setAddress(inetAddress78);
        java.util.List<org.apache.catalina.connector.Connector> connectorList80 = tomcatEmbeddedServletContainerFactory67.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory81.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory81.setTldSkip("UTF-8");
        java.io.File file87 = tomcatEmbeddedServletContainerFactory81.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory67.setDocumentRoot(file87);
        tomcatEmbeddedServletContainerFactory52.setDocumentRoot(file87);
        tomcatEmbeddedServletContainerFactory28.baseDirectory = file87;
        tomcatEmbeddedServletContainerFactory13.setDocumentRoot(file87);
        tomcatEmbeddedServletContainerFactory9.baseDirectory = file87;
        tomcatEmbeddedServletContainerFactory2.baseDirectory = file87;
        tomcatEmbeddedServletContainerFactory2.setSessionTimeout((int) (short) 100);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertNotNull(connectorList12);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(valveList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/tmp/UTF-8.5901793439796501055.0");
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(connectorList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(mimeMappings73);
        org.junit.Assert.assertNotNull(connectorList74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(connectorList80);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file87.toString(), "/tmp/UTF-8.39176907434866823.0");
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList14;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory18.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory21.getUriEncoding();
        int int23 = tomcatEmbeddedServletContainerFactory21.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory18.setMimeMappings(mimeMappings24);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings24);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList27 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList29 = tomcatEmbeddedServletContainerFactory28.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection30 = tomcatEmbeddedServletContainerFactory28.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader33 = tomcatEmbeddedServletContainerFactory31.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray34 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory31.addErrorPages(errorPageArray34);
        tomcatEmbeddedServletContainerFactory28.addErrorPages(errorPageArray34);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory37.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory42.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList45 = tomcatEmbeddedServletContainerFactory42.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors = connectorList45;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory47.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory47.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection52 = tomcatEmbeddedServletContainerFactory47.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList53 = tomcatEmbeddedServletContainerFactory47.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory37.tomcatContextCustomizers = tomcatContextCustomizerList53;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str56 = storeMergedWebXmlListener55.getEmptyWebXml();
        java.lang.String str57 = storeMergedWebXmlListener55.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str59 = storeMergedWebXmlListener58.getMERGED_WEB_XML();
        java.lang.String str60 = storeMergedWebXmlListener58.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray61 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener55, storeMergedWebXmlListener58 };
        tomcatEmbeddedServletContainerFactory37.addContextLifecycleListeners(lifecycleListenerArray61);
        tomcatEmbeddedServletContainerFactory28.addContextLifecycleListeners(lifecycleListenerArray61);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = tomcatEmbeddedServletContainerFactory64.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList67 = tomcatEmbeddedServletContainerFactory66.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory64.tomcatConnectorCustomizers = tomcatConnectorCustomizerList67;
        tomcatEmbeddedServletContainerFactory28.tomcatConnectorCustomizers = tomcatConnectorCustomizerList67;
        tomcatEmbeddedServletContainerFactory28.setPort((int) (byte) 100);
        tomcatEmbeddedServletContainerFactory28.setPort((int) 'a');
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory74.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings77 = tomcatEmbeddedServletContainerFactory74.getMimeMappings();
        tomcatEmbeddedServletContainerFactory74.setProtocol("UTF-8");
        java.lang.String str80 = tomcatEmbeddedServletContainerFactory74.protocol;
        tomcatEmbeddedServletContainerFactory74.setTldSkip("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet83 = tomcatEmbeddedServletContainerFactory74.getErrorPages();
        tomcatEmbeddedServletContainerFactory28.setErrorPages(errorPageSet83);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet83);
        org.apache.catalina.Context context86 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8080 + "'", int23 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList29);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection30);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNull(resourceLoader33);
        org.junit.Assert.assertNotNull(errorPageArray34);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertNotNull(connectorList45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection52);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str56, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str57, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str59, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str60, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray61);
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList67);
        org.junit.Assert.assertNotNull(mimeMappings77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "UTF-8" + "'", str80, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet83);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList12 = tomcatEmbeddedServletContainerFactory10.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList12;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader17);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet19);
        java.util.Collection<org.apache.catalina.Valve> valveCollection21 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader22 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader22;
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valveList12);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNotNull(valveCollection21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str24, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory8.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer10 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer10 };
        tomcatEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray11);
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection17 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory20.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList25 = tomcatEmbeddedServletContainerFactory20.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory26.getMimeMappings();
        tomcatEmbeddedServletContainerFactory20.setMimeMappings(mimeMappings29);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList32 = tomcatEmbeddedServletContainerFactory31.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection33 = tomcatEmbeddedServletContainerFactory31.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader36 = tomcatEmbeddedServletContainerFactory34.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray37 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory34.addErrorPages(errorPageArray37);
        tomcatEmbeddedServletContainerFactory31.addErrorPages(errorPageArray37);
        tomcatEmbeddedServletContainerFactory20.addErrorPages(errorPageArray37);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray37);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection17);
        org.junit.Assert.assertNotNull(lifecycleListenerList25);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList32);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection33);
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNull(resourceLoader36);
        org.junit.Assert.assertNotNull(errorPageArray37);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        int int2 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory3.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList4;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 100);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection7 = tomcatEmbeddedServletContainerFactory3.getValves();
        java.net.InetAddress inetAddress8 = tomcatEmbeddedServletContainerFactory3.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean10 = tomcatEmbeddedServletContainerFactory9.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList11 = tomcatEmbeddedServletContainerFactory9.contextValves;
        tomcatEmbeddedServletContainerFactory3.contextValves = valveList11;
        tomcatEmbeddedServletContainerFactory2.contextValves = valveList11;
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory2.protocol;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection15 = tomcatEmbeddedServletContainerFactory2.getTomcatConnectorCustomizers();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(valveCollection7);
        org.junit.Assert.assertNull(inetAddress8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(valveList11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str14, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection15);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean15 = tomcatEmbeddedServletContainerFactory14.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection16 = tomcatEmbeddedServletContainerFactory14.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        tomcatEmbeddedServletContainerFactory19.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection25 = tomcatEmbeddedServletContainerFactory19.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors = connectorList33;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory26.protocol;
        org.apache.catalina.Context context36 = null;
        tomcatEmbeddedServletContainerFactory26.postProcessContext(context36);
        java.io.File file39 = tomcatEmbeddedServletContainerFactory26.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory19.setBaseDirectory(file39);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file39;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        tomcatEmbeddedServletContainerFactory42.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = tomcatEmbeddedServletContainerFactory48.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader50 = tomcatEmbeddedServletContainerFactory48.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory51.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory51.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection56 = tomcatEmbeddedServletContainerFactory51.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList57 = tomcatEmbeddedServletContainerFactory51.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory48.tomcatContextCustomizers = tomcatContextCustomizerList57;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList59 = tomcatEmbeddedServletContainerFactory48.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory60.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory60.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings66 = tomcatEmbeddedServletContainerFactory65.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList67 = tomcatEmbeddedServletContainerFactory65.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors = connectorList67;
        java.lang.String str69 = tomcatEmbeddedServletContainerFactory60.protocol;
        java.lang.String str70 = tomcatEmbeddedServletContainerFactory60.protocol;
        tomcatEmbeddedServletContainerFactory60.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection73 = tomcatEmbeddedServletContainerFactory60.getTomcatContextCustomizers();
        int int74 = tomcatEmbeddedServletContainerFactory60.getPort();
        java.io.File file76 = tomcatEmbeddedServletContainerFactory60.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory48.baseDirectory = file76;
        org.apache.catalina.Valve[] valveArray78 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory48.addContextValves(valveArray78);
        tomcatEmbeddedServletContainerFactory42.addContextValves(valveArray78);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList82 = tomcatEmbeddedServletContainerFactory81.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection83 = tomcatEmbeddedServletContainerFactory81.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory84 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings85 = tomcatEmbeddedServletContainerFactory84.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader86 = tomcatEmbeddedServletContainerFactory84.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray87 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory84.addErrorPages(errorPageArray87);
        tomcatEmbeddedServletContainerFactory81.addErrorPages(errorPageArray87);
        tomcatEmbeddedServletContainerFactory42.addErrorPages(errorPageArray87);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory91 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean92 = tomcatEmbeddedServletContainerFactory91.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection93 = tomcatEmbeddedServletContainerFactory91.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings94 = tomcatEmbeddedServletContainerFactory91.getMimeMappings();
        tomcatEmbeddedServletContainerFactory42.setMimeMappings(mimeMappings94);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings94);
        int int97 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader98 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader98;
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8080 + "'", int13 == 8080);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(valveCollection16);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection25);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/tmp/UTF-8.7615905686520270033.0");
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNull(resourceLoader50);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection56);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList57);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList59);
        org.junit.Assert.assertNotNull(mimeMappings66);
        org.junit.Assert.assertNotNull(connectorList67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(file76);
        org.junit.Assert.assertEquals(file76.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file76.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6520082736010270169.0");
        org.junit.Assert.assertNotNull(valveArray78);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList82);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection83);
        org.junit.Assert.assertNotNull(mimeMappings85);
        org.junit.Assert.assertNull(resourceLoader86);
        org.junit.Assert.assertNotNull(errorPageArray87);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(valveCollection93);
        org.junit.Assert.assertNotNull(mimeMappings94);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory2.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray4 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory2.addConnectorCustomizers(tomcatConnectorCustomizerArray4);
        java.net.InetAddress inetAddress6 = tomcatEmbeddedServletContainerFactory2.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory7.setProtocol("UTF-8");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory7.protocol;
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = tomcatEmbeddedServletContainerFactory7.getErrorPages();
        tomcatEmbeddedServletContainerFactory2.setErrorPages(errorPageSet16);
        java.net.InetAddress inetAddress18 = null;
        tomcatEmbeddedServletContainerFactory2.setAddress(inetAddress18);
        org.apache.catalina.Context context20 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.addDefaultServlet(context20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray4);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet16);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(8080);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory2.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory2.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection7 = tomcatEmbeddedServletContainerFactory2.getTomcatConnectorCustomizers();
        boolean boolean8 = tomcatEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress9 = null;
        tomcatEmbeddedServletContainerFactory2.setAddress(inetAddress9);
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory2.getContextPath();
        tomcatEmbeddedServletContainerFactory2.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader16 = tomcatEmbeddedServletContainerFactory14.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory17.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection22 = tomcatEmbeddedServletContainerFactory17.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList23 = tomcatEmbeddedServletContainerFactory17.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory14.tomcatContextCustomizers = tomcatContextCustomizerList23;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList25 = tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors = connectorList33;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory26.protocol;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory26.protocol;
        tomcatEmbeddedServletContainerFactory26.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection39 = tomcatEmbeddedServletContainerFactory26.getTomcatContextCustomizers();
        int int40 = tomcatEmbeddedServletContainerFactory26.getPort();
        java.io.File file42 = tomcatEmbeddedServletContainerFactory26.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory14.baseDirectory = file42;
        org.apache.catalina.Valve[] valveArray44 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory14.addContextValves(valveArray44);
        tomcatEmbeddedServletContainerFactory2.addContextValves(valveArray44);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        tomcatEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings47);
        org.springframework.core.io.ResourceLoader resourceLoader49 = tomcatEmbeddedServletContainerFactory1.resourceLoader;
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNull(resourceLoader16);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection22);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList25);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file42.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.5517721365872678664.0");
        org.junit.Assert.assertNotNull(valveArray44);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNull(resourceLoader49);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector8 = null;
        org.apache.catalina.connector.Connector[] connectorArray9 = new org.apache.catalina.connector.Connector[] { connector8 };
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray9);
        org.springframework.core.io.ResourceLoader resourceLoader11 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader11;
        int int13 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        tomcatEmbeddedServletContainerFactory0.tldSkip = "org.apache.tomcat.util.scan.MergedWebXml";
        org.apache.catalina.Context context17 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory23.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer25 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer25 };
        tomcatEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray26);
        tomcatEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray26);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context17, servletContextInitializerArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertNotNull(connectorArray9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str14, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean15 = tomcatEmbeddedServletContainerFactory14.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection16 = tomcatEmbeddedServletContainerFactory14.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        tomcatEmbeddedServletContainerFactory19.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection25 = tomcatEmbeddedServletContainerFactory19.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors = connectorList33;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory26.protocol;
        org.apache.catalina.Context context36 = null;
        tomcatEmbeddedServletContainerFactory26.postProcessContext(context36);
        java.io.File file39 = tomcatEmbeddedServletContainerFactory26.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory19.setBaseDirectory(file39);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file39;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 10);
        boolean boolean44 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList45 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.util.concurrent.TimeUnit timeUnit47 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0, timeUnit47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8080 + "'", int13 == 8080);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(valveCollection16);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection25);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/tmp/UTF-8.4208419190237922505.0");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList45);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray19);
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray23 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory17.addContextLifecycleListeners(lifecycleListenerArray23);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray23);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 1);
        int int28 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(lifecycleListenerArray23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader6;
        int int8 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.Context context9 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "";
        java.util.concurrent.TimeUnit timeUnit5 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) 'a', timeUnit5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray3 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray3);
        boolean boolean5 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.net.InetAddress inetAddress6 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(errorPageArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        int int14 = tomcatEmbeddedServletContainerFactory0.getPort();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory17.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList22 = tomcatEmbeddedServletContainerFactory17.contextLifecycleListeners;
        org.springframework.core.io.ResourceLoader resourceLoader23 = null;
        tomcatEmbeddedServletContainerFactory17.resourceLoader = resourceLoader23;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean26 = tomcatEmbeddedServletContainerFactory25.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList27 = tomcatEmbeddedServletContainerFactory25.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray28 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList29 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList29, tomcatConnectorCustomizerArray28);
        tomcatEmbeddedServletContainerFactory25.tomcatConnectorCustomizers = tomcatConnectorCustomizerList29;
        tomcatEmbeddedServletContainerFactory25.setSessionTimeout(1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory34.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors = connectorList41;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory34.protocol;
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory34.protocol;
        tomcatEmbeddedServletContainerFactory34.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection47 = tomcatEmbeddedServletContainerFactory34.getTomcatContextCustomizers();
        int int48 = tomcatEmbeddedServletContainerFactory34.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory49.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory49.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = tomcatEmbeddedServletContainerFactory54.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList56 = tomcatEmbeddedServletContainerFactory54.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory49.additionalTomcatConnectors = connectorList56;
        java.lang.String str58 = tomcatEmbeddedServletContainerFactory49.protocol;
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory49.protocol;
        java.net.InetAddress inetAddress60 = null;
        tomcatEmbeddedServletContainerFactory49.setAddress(inetAddress60);
        java.util.List<org.apache.catalina.connector.Connector> connectorList62 = tomcatEmbeddedServletContainerFactory49.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory63.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory63.setTldSkip("UTF-8");
        java.io.File file69 = tomcatEmbeddedServletContainerFactory63.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory49.setDocumentRoot(file69);
        tomcatEmbeddedServletContainerFactory34.setDocumentRoot(file69);
        tomcatEmbeddedServletContainerFactory25.baseDirectory = file69;
        tomcatEmbeddedServletContainerFactory17.setDocumentRoot(file69);
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file69);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory75.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings78 = tomcatEmbeddedServletContainerFactory75.getMimeMappings();
        tomcatEmbeddedServletContainerFactory75.setProtocol("UTF-8");
        java.lang.String str81 = tomcatEmbeddedServletContainerFactory75.getContextPath();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection82 = tomcatEmbeddedServletContainerFactory75.getTomcatConnectorCustomizers();
        java.net.InetAddress inetAddress83 = null;
        tomcatEmbeddedServletContainerFactory75.setAddress(inetAddress83);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet85 = tomcatEmbeddedServletContainerFactory75.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet85);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerList22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(valveList27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNotNull(connectorList56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(connectorList62);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file69.toString(), "/tmp/UTF-8.1176896736206308822.0");
        org.junit.Assert.assertNotNull(mimeMappings78);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection82);
        org.junit.Assert.assertNotNull(errorPageSet85);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.io.File file5 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList18 = null;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList18;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "org.apache.coyote.http11.Http11NioProtocol";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader25 = null;
        tomcatEmbeddedServletContainerFactory24.setResourceLoader(resourceLoader25);
        org.springframework.core.io.ResourceLoader resourceLoader27 = null;
        tomcatEmbeddedServletContainerFactory24.setResourceLoader(resourceLoader27);
        tomcatEmbeddedServletContainerFactory24.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory31.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList38 = tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors = connectorList38;
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory31.protocol;
        java.lang.String str41 = tomcatEmbeddedServletContainerFactory31.protocol;
        java.io.File file42 = tomcatEmbeddedServletContainerFactory31.baseDirectory;
        java.io.File file44 = tomcatEmbeddedServletContainerFactory31.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        tomcatEmbeddedServletContainerFactory24.setDocumentRoot(file44);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file44;
        java.util.List<org.apache.catalina.connector.Connector> connectorList47 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(connectorList38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNull(file42);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file44.toString(), "/tmp/web-app>\n.2805098394154159951.0");
        org.junit.Assert.assertNotNull(connectorList47);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList23 = tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors = connectorList23;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory16.protocol;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory16.protocol;
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection29 = tomcatEmbeddedServletContainerFactory16.getTomcatContextCustomizers();
        int int30 = tomcatEmbeddedServletContainerFactory16.getPort();
        java.io.File file32 = tomcatEmbeddedServletContainerFactory16.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file32;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory34.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors = connectorList41;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory34.protocol;
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory34.protocol;
        java.net.InetAddress inetAddress45 = null;
        tomcatEmbeddedServletContainerFactory34.setAddress(inetAddress45);
        java.util.List<org.apache.catalina.connector.Connector> connectorList47 = tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory48.setTldSkip("UTF-8");
        java.io.File file54 = tomcatEmbeddedServletContainerFactory48.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory34.setDocumentRoot(file54);
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory58.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory58.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = tomcatEmbeddedServletContainerFactory63.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList65 = tomcatEmbeddedServletContainerFactory63.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory58.additionalTomcatConnectors = connectorList65;
        org.apache.catalina.Context context67 = null;
        tomcatEmbeddedServletContainerFactory58.postProcessContext(context67);
        java.net.InetAddress inetAddress69 = tomcatEmbeddedServletContainerFactory58.getAddress();
        tomcatEmbeddedServletContainerFactory58.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory72.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory72.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings78 = tomcatEmbeddedServletContainerFactory77.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList79 = tomcatEmbeddedServletContainerFactory77.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory72.additionalTomcatConnectors = connectorList79;
        org.apache.catalina.Context context81 = null;
        tomcatEmbeddedServletContainerFactory72.postProcessContext(context81);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory85 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str86 = tomcatEmbeddedServletContainerFactory85.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray87 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory85.addConnectorCustomizers(tomcatConnectorCustomizerArray87);
        tomcatEmbeddedServletContainerFactory72.addConnectorCustomizers(tomcatConnectorCustomizerArray87);
        tomcatEmbeddedServletContainerFactory58.addConnectorCustomizers(tomcatConnectorCustomizerArray87);
        tomcatEmbeddedServletContainerFactory34.addConnectorCustomizers(tomcatConnectorCustomizerArray87);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray87);
        tomcatEmbeddedServletContainerFactory0.protocol = "UTF-8";
        java.io.File file96 = tomcatEmbeddedServletContainerFactory0.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(connectorList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file32.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.178943317794336629.0");
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(connectorList47);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file54.toString(), "/tmp/UTF-8.1477050595439139461.0");
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNotNull(connectorList65);
        org.junit.Assert.assertNull(inetAddress69);
        org.junit.Assert.assertNotNull(mimeMappings78);
        org.junit.Assert.assertNotNull(connectorList79);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray87);
        org.junit.Assert.assertNotNull(file96);
        org.junit.Assert.assertEquals(file96.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file96.toString(), "/tmp/web-app>\n.8054574733886804331.0");
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.io.File file6 = tomcatEmbeddedServletContainerFactory0.createTempDir("UTF-8");
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.io.File file8 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file6.toString(), "/tmp/UTF-8.2521607785873842147.0");
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory4.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        java.io.File file8 = tomcatEmbeddedServletContainerFactory6.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList9 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory4.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList9);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList9);
        int int12 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList13 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.protocol = "";
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str5, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList13);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory3.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers = tomcatConnectorCustomizerList4;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory1.getContextLifecycleListeners();
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory1.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory1.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0);
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors = connectorList22;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory24.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray26);
        tomcatEmbeddedServletContainerFactory24.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray30 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory24.addContextLifecycleListeners(lifecycleListenerArray30);
        tomcatEmbeddedServletContainerFactory14.addContextLifecycleListeners(lifecycleListenerArray30);
        org.apache.catalina.Context context33 = null;
        tomcatEmbeddedServletContainerFactory14.postProcessContext(context33);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory35.getMimeMappings();
        tomcatEmbeddedServletContainerFactory35.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory43.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer45 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer45 };
        tomcatEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray46);
        tomcatEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray46);
        tomcatEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray46);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray46);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        boolean boolean53 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.util.concurrent.TimeUnit timeUnit55 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) ' ', timeUnit55);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str10, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str13, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertNotNull(lifecycleListenerArray30);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory2.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray4 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory2.addConnectorCustomizers(tomcatConnectorCustomizerArray4);
        java.net.InetAddress inetAddress6 = tomcatEmbeddedServletContainerFactory2.getAddress();
        tomcatEmbeddedServletContainerFactory2.setPort(0);
        org.apache.catalina.Context context9 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.addDefaultServlet(context9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray4);
        org.junit.Assert.assertNull(inetAddress6);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList10 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str11, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.io.File file5 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        java.io.File file23 = tomcatEmbeddedServletContainerFactory20.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file23;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors = connectorList33;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory26.protocol;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory26.protocol;
        tomcatEmbeddedServletContainerFactory26.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection39 = tomcatEmbeddedServletContainerFactory26.getTomcatContextCustomizers();
        java.io.File file40 = tomcatEmbeddedServletContainerFactory26.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList42 = tomcatEmbeddedServletContainerFactory41.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory26.tomcatConnectorCustomizers = tomcatConnectorCustomizerList42;
        tomcatEmbeddedServletContainerFactory26.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory46.getUriEncoding();
        java.io.File file49 = tomcatEmbeddedServletContainerFactory46.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory26.setDocumentRoot(file49);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory51.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory51.getMimeMappings();
        tomcatEmbeddedServletContainerFactory51.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory57.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory57.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection62 = tomcatEmbeddedServletContainerFactory57.getTomcatConnectorCustomizers();
        boolean boolean63 = tomcatEmbeddedServletContainerFactory57.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress64 = null;
        tomcatEmbeddedServletContainerFactory57.setAddress(inetAddress64);
        java.util.List<org.apache.catalina.Valve> valveList66 = tomcatEmbeddedServletContainerFactory57.contextValves;
        tomcatEmbeddedServletContainerFactory51.contextValves = valveList66;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory68.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings71 = tomcatEmbeddedServletContainerFactory68.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection72 = tomcatEmbeddedServletContainerFactory68.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader73 = tomcatEmbeddedServletContainerFactory68.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory74.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory74.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList79 = tomcatEmbeddedServletContainerFactory74.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList80 = tomcatEmbeddedServletContainerFactory74.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory68.tomcatConnectorCustomizers = tomcatConnectorCustomizerList80;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings83 = tomcatEmbeddedServletContainerFactory82.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory84 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList85 = tomcatEmbeddedServletContainerFactory84.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory82.tomcatConnectorCustomizers = tomcatConnectorCustomizerList85;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet87 = tomcatEmbeddedServletContainerFactory82.getErrorPages();
        java.net.InetAddress inetAddress88 = tomcatEmbeddedServletContainerFactory82.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader89 = tomcatEmbeddedServletContainerFactory82.resourceLoader;
        java.io.File file91 = tomcatEmbeddedServletContainerFactory82.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.apache.catalina.Valve[] valveArray92 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory82.addContextValves(valveArray92);
        tomcatEmbeddedServletContainerFactory68.addContextValves(valveArray92);
        tomcatEmbeddedServletContainerFactory51.addContextValves(valveArray92);
        tomcatEmbeddedServletContainerFactory26.addContextValves(valveArray92);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray92);
        org.apache.catalina.Context context98 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file23.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.4481969462209773840.8080");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection39);
        org.junit.Assert.assertNull(file40);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-8" + "'", str47, "UTF-8");
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file49.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.2820601819643974984.8080");
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(valveList66);
        org.junit.Assert.assertNotNull(mimeMappings71);
        org.junit.Assert.assertNotNull(valveCollection72);
        org.junit.Assert.assertNull(resourceLoader73);
        org.junit.Assert.assertNotNull(lifecycleListenerList79);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList80);
        org.junit.Assert.assertNotNull(mimeMappings83);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList85);
        org.junit.Assert.assertNotNull(errorPageSet87);
        org.junit.Assert.assertNull(inetAddress88);
        org.junit.Assert.assertNull(resourceLoader89);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file91.toString(), "/tmp/web-app>\n.5759977227569442824.8080");
        org.junit.Assert.assertNotNull(valveArray92);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection7 = tomcatEmbeddedServletContainerFactory3.getValves();
        java.net.InetAddress inetAddress8 = tomcatEmbeddedServletContainerFactory3.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean10 = tomcatEmbeddedServletContainerFactory9.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList11 = tomcatEmbeddedServletContainerFactory9.contextValves;
        tomcatEmbeddedServletContainerFactory3.contextValves = valveList11;
        tomcatEmbeddedServletContainerFactory2.contextValves = valveList11;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers;
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory2.tldSkip;
        java.net.InetAddress inetAddress16 = null;
        tomcatEmbeddedServletContainerFactory2.setAddress(inetAddress16);
        tomcatEmbeddedServletContainerFactory2.tldSkip = "org.apache.tomcat.util.scan.MergedWebXml";
        org.apache.catalina.connector.Connector connector20 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.customizeConnector(connector20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(valveCollection7);
        org.junit.Assert.assertNull(inetAddress8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(valveList11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList12 = tomcatEmbeddedServletContainerFactory10.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList12;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader17);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet19);
        java.util.Collection<org.apache.catalina.Valve> valveCollection21 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader22 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader22;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection24 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 1);
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray27 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextLifecycleListeners must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valveList12);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNotNull(valveCollection21);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection24);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList14;
        boolean boolean16 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection17 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.Context context18 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(valveCollection17);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        tomcatEmbeddedServletContainerFactory2.setPort(10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList10 = tomcatEmbeddedServletContainerFactory9.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory7.tomcatConnectorCustomizers = tomcatConnectorCustomizerList10;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory7.getErrorPages();
        java.net.InetAddress inetAddress13 = tomcatEmbeddedServletContainerFactory7.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader14 = tomcatEmbeddedServletContainerFactory7.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        boolean boolean18 = tomcatEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors = connectorList26;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory19.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        tomcatEmbeddedServletContainerFactory19.setMimeMappings(mimeMappings32);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList35 = tomcatEmbeddedServletContainerFactory34.tomcatConnectorCustomizers;
        int int36 = tomcatEmbeddedServletContainerFactory34.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray37 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory34.addContextLifecycleListeners(lifecycleListenerArray37);
        tomcatEmbeddedServletContainerFactory19.addContextLifecycleListeners(lifecycleListenerArray37);
        tomcatEmbeddedServletContainerFactory15.addContextLifecycleListeners(lifecycleListenerArray37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory41.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory41.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection46 = tomcatEmbeddedServletContainerFactory41.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory41.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector49 = null;
        org.apache.catalina.connector.Connector[] connectorArray50 = new org.apache.catalina.connector.Connector[] { connector49 };
        tomcatEmbeddedServletContainerFactory41.addAdditionalTomcatConnectors(connectorArray50);
        tomcatEmbeddedServletContainerFactory15.addAdditionalTomcatConnectors(connectorArray50);
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray50);
        boolean boolean54 = tomcatEmbeddedServletContainerFactory7.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory55.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = tomcatEmbeddedServletContainerFactory60.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList62 = tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors = connectorList62;
        java.lang.String str64 = tomcatEmbeddedServletContainerFactory55.protocol;
        java.lang.String str65 = tomcatEmbeddedServletContainerFactory55.protocol;
        java.net.InetAddress inetAddress66 = null;
        tomcatEmbeddedServletContainerFactory55.setAddress(inetAddress66);
        tomcatEmbeddedServletContainerFactory55.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray70 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList71 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList71, valveArray70);
        tomcatEmbeddedServletContainerFactory55.contextValves = valveList71;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings75 = tomcatEmbeddedServletContainerFactory74.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader76 = tomcatEmbeddedServletContainerFactory74.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory77.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory77.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection82 = tomcatEmbeddedServletContainerFactory77.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList83 = tomcatEmbeddedServletContainerFactory77.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory74.tomcatContextCustomizers = tomcatContextCustomizerList83;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList85 = tomcatEmbeddedServletContainerFactory74.tomcatConnectorCustomizers;
        org.apache.catalina.Valve valve86 = null;
        org.apache.catalina.Valve[] valveArray87 = new org.apache.catalina.Valve[] { valve86 };
        tomcatEmbeddedServletContainerFactory74.addContextValves(valveArray87);
        tomcatEmbeddedServletContainerFactory55.addContextValves(valveArray87);
        tomcatEmbeddedServletContainerFactory7.addContextValves(valveArray87);
        tomcatEmbeddedServletContainerFactory2.addContextValves(valveArray87);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList92 = tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers;
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList10);
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection46);
        org.junit.Assert.assertNotNull(connectorArray50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNotNull(connectorList62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(valveArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(mimeMappings75);
        org.junit.Assert.assertNull(resourceLoader76);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection82);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList83);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList85);
        org.junit.Assert.assertNotNull(valveArray87);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList92);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList14 = tomcatEmbeddedServletContainerFactory9.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList14;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str17 = storeMergedWebXmlListener16.getMERGED_WEB_XML();
        java.lang.String str18 = storeMergedWebXmlListener16.MERGED_WEB_XML;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str20 = storeMergedWebXmlListener19.getEmptyWebXml();
        java.lang.String str21 = storeMergedWebXmlListener19.getEmptyWebXml();
        java.lang.String str22 = storeMergedWebXmlListener19.MERGED_WEB_XML;
        java.lang.String str23 = storeMergedWebXmlListener19.getMERGED_WEB_XML();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str25 = storeMergedWebXmlListener24.getMERGED_WEB_XML();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str27 = storeMergedWebXmlListener26.getEmptyWebXml();
        java.lang.String str28 = storeMergedWebXmlListener26.getEmptyWebXml();
        java.lang.String str29 = storeMergedWebXmlListener26.MERGED_WEB_XML;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray30 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener16, storeMergedWebXmlListener19, storeMergedWebXmlListener24, storeMergedWebXmlListener26 };
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray30);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection32 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(lifecycleListenerList14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str17, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str18, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str20, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str21, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str22, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str23, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str25, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str27, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str28, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str29, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertNotNull(lifecycleListenerArray30);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection32);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray3 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray3);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.tomcat.util.scan.MergedWebXml");
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(errorPageArray3);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors = connectorList15;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory8.protocol;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory8.protocol;
        tomcatEmbeddedServletContainerFactory8.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection21 = tomcatEmbeddedServletContainerFactory8.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList22 = tomcatEmbeddedServletContainerFactory8.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList22;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList27 = tomcatEmbeddedServletContainerFactory26.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory24.tomcatConnectorCustomizers = tomcatConnectorCustomizerList27;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = tomcatEmbeddedServletContainerFactory24.getErrorPages();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList30 = tomcatEmbeddedServletContainerFactory24.contextLifecycleListeners;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings31);
        int int33 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.net.InetAddress inetAddress34 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader35 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader35);
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection21);
        org.junit.Assert.assertNotNull(valveList22);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList27);
        org.junit.Assert.assertNotNull(errorPageSet29);
        org.junit.Assert.assertNotNull(lifecycleListenerList30);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(inetAddress34);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers;
        boolean boolean4 = tomcatEmbeddedServletContainerFactory2.isRegisterJspServlet();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners;
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader5 = tomcatEmbeddedServletContainerFactory3.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory3.addErrorPages(errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray6);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.util.List<org.apache.catalina.connector.Connector> connectorList10 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.apache.catalina.startup.Tomcat tomcat13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer14 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNull(resourceLoader5);
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str9, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(connectorList10);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList12 = tomcatEmbeddedServletContainerFactory10.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList12;
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        int int15 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader16 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean20 = tomcatEmbeddedServletContainerFactory19.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList21 = tomcatEmbeddedServletContainerFactory19.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray22 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList23 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList23, tomcatConnectorCustomizerArray22);
        tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers = tomcatConnectorCustomizerList23;
        tomcatEmbeddedServletContainerFactory19.setSessionTimeout(1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors = connectorList35;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory28.protocol;
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory28.protocol;
        tomcatEmbeddedServletContainerFactory28.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection41 = tomcatEmbeddedServletContainerFactory28.getTomcatContextCustomizers();
        int int42 = tomcatEmbeddedServletContainerFactory28.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory43.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = tomcatEmbeddedServletContainerFactory48.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList50 = tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory43.additionalTomcatConnectors = connectorList50;
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory43.protocol;
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory43.protocol;
        java.net.InetAddress inetAddress54 = null;
        tomcatEmbeddedServletContainerFactory43.setAddress(inetAddress54);
        java.util.List<org.apache.catalina.connector.Connector> connectorList56 = tomcatEmbeddedServletContainerFactory43.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory57.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory57.setTldSkip("UTF-8");
        java.io.File file63 = tomcatEmbeddedServletContainerFactory57.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory43.setDocumentRoot(file63);
        tomcatEmbeddedServletContainerFactory28.setDocumentRoot(file63);
        tomcatEmbeddedServletContainerFactory19.baseDirectory = file63;
        tomcatEmbeddedServletContainerFactory19.protocol = "UTF-8";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory69.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory69.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings75 = tomcatEmbeddedServletContainerFactory74.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList76 = tomcatEmbeddedServletContainerFactory74.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory69.additionalTomcatConnectors = connectorList76;
        java.lang.String str78 = tomcatEmbeddedServletContainerFactory69.protocol;
        java.lang.String str79 = tomcatEmbeddedServletContainerFactory69.protocol;
        java.net.InetAddress inetAddress80 = null;
        tomcatEmbeddedServletContainerFactory69.setAddress(inetAddress80);
        int int82 = tomcatEmbeddedServletContainerFactory69.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader83 = tomcatEmbeddedServletContainerFactory69.resourceLoader;
        java.lang.String str84 = tomcatEmbeddedServletContainerFactory69.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray85 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet86 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet86, errorPageArray85);
        tomcatEmbeddedServletContainerFactory69.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet86);
        tomcatEmbeddedServletContainerFactory19.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet86);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory90 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings91 = tomcatEmbeddedServletContainerFactory90.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList92 = tomcatEmbeddedServletContainerFactory90.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory90.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList95 = tomcatEmbeddedServletContainerFactory90.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers = tomcatConnectorCustomizerList95;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList95;
        java.util.List<org.apache.catalina.Valve> valveList98 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valveList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(resourceLoader16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(valveList21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(connectorList50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(connectorList56);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file63.toString(), "/tmp/UTF-8.287971652425051996.0");
        org.junit.Assert.assertNotNull(mimeMappings75);
        org.junit.Assert.assertNotNull(connectorList76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNull(resourceLoader83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str84, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(errorPageArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(mimeMappings91);
        org.junit.Assert.assertNotNull(connectorList92);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList95);
        org.junit.Assert.assertNotNull(valveList98);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList10 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection16 = tomcatEmbeddedServletContainerFactory11.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory17.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList24 = tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors = connectorList24;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory17.protocol;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory17.protocol;
        java.net.InetAddress inetAddress28 = null;
        tomcatEmbeddedServletContainerFactory17.setAddress(inetAddress28);
        java.io.File file30 = null;
        tomcatEmbeddedServletContainerFactory17.setBaseDirectory(file30);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray32 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory17.addContextCustomizers(tomcatContextCustomizerArray32);
        tomcatEmbeddedServletContainerFactory11.addContextCustomizers(tomcatContextCustomizerArray32);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray32);
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList10);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection16);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(connectorList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray32);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray2 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray2);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str5 = storeMergedWebXmlListener4.getMERGED_WEB_XML();
        java.lang.String str6 = storeMergedWebXmlListener4.getMERGED_WEB_XML();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str9 = storeMergedWebXmlListener8.getMERGED_WEB_XML();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray10 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener4, storeMergedWebXmlListener7, storeMergedWebXmlListener8 };
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList11 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList11, lifecycleListenerArray10);
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList11;
        org.apache.catalina.Context context14 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context14, servletContextInitializerArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str6, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str9, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertNotNull(lifecycleListenerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.util.concurrent.TimeUnit timeUnit6 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 100, timeUnit6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(connectorList2);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int2 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader4;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setTldSkip("UTF-8");
        java.io.File file12 = tomcatEmbeddedServletContainerFactory6.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers = tomcatConnectorCustomizerList17;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList20 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection21 = tomcatEmbeddedServletContainerFactory19.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader24 = tomcatEmbeddedServletContainerFactory22.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray25 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory22.addErrorPages(errorPageArray25);
        tomcatEmbeddedServletContainerFactory19.addErrorPages(errorPageArray25);
        tomcatEmbeddedServletContainerFactory14.addErrorPages(errorPageArray25);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection34 = tomcatEmbeddedServletContainerFactory29.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory29.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection37 = tomcatEmbeddedServletContainerFactory29.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector38 = null;
        org.apache.catalina.connector.Connector[] connectorArray39 = new org.apache.catalina.connector.Connector[] { connector38 };
        tomcatEmbeddedServletContainerFactory29.addAdditionalTomcatConnectors(connectorArray39);
        tomcatEmbeddedServletContainerFactory14.addAdditionalTomcatConnectors(connectorArray39);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray39);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory43.setProtocol("hi!");
        java.io.File file48 = tomcatEmbeddedServletContainerFactory43.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory49.getUriEncoding();
        tomcatEmbeddedServletContainerFactory49.setSessionTimeout((int) (short) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str54 = tomcatEmbeddedServletContainerFactory53.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList56 = tomcatEmbeddedServletContainerFactory55.tomcatConnectorCustomizers;
        java.io.File file57 = tomcatEmbeddedServletContainerFactory55.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList58 = tomcatEmbeddedServletContainerFactory55.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory53.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList58);
        tomcatEmbeddedServletContainerFactory49.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList58);
        tomcatEmbeddedServletContainerFactory49.setJspServletClassName("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = tomcatEmbeddedServletContainerFactory63.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList66 = tomcatEmbeddedServletContainerFactory65.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory63.tomcatConnectorCustomizers = tomcatConnectorCustomizerList66;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection68 = tomcatEmbeddedServletContainerFactory63.getContextLifecycleListeners();
        java.lang.String str69 = tomcatEmbeddedServletContainerFactory63.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList70 = tomcatEmbeddedServletContainerFactory63.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.ErrorPage errorPage71 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray72 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage71 };
        tomcatEmbeddedServletContainerFactory63.addErrorPages(errorPageArray72);
        tomcatEmbeddedServletContainerFactory49.addErrorPages(errorPageArray72);
        tomcatEmbeddedServletContainerFactory43.addErrorPages(errorPageArray72);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray72);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        tomcatEmbeddedServletContainerFactory0.tldSkip = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n";
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8080 + "'", int2 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/tmp/UTF-8.8476979936675254758.0");
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList20);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection21);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertNotNull(errorPageArray25);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection34);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection37);
        org.junit.Assert.assertNotNull(connectorArray39);
        org.junit.Assert.assertNull(file48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-8" + "'", str50, "UTF-8");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str54, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList58);
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList66);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "UTF-8" + "'", str69, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList70);
        org.junit.Assert.assertNotNull(errorPageArray72);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList16 = tomcatEmbeddedServletContainerFactory11.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings20);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings20);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList24 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList16);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList24);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.io.File file13 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file13);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray15 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray15);
        int int17 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors = connectorList15;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory8.protocol;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory8.protocol;
        tomcatEmbeddedServletContainerFactory8.setUriEncoding("hi!");
        boolean boolean21 = tomcatEmbeddedServletContainerFactory8.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList25 = tomcatEmbeddedServletContainerFactory24.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory22.tomcatConnectorCustomizers = tomcatConnectorCustomizerList25;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = tomcatEmbeddedServletContainerFactory22.getErrorPages();
        java.net.InetAddress inetAddress28 = tomcatEmbeddedServletContainerFactory22.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader29 = tomcatEmbeddedServletContainerFactory22.resourceLoader;
        java.io.File file31 = tomcatEmbeddedServletContainerFactory22.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        tomcatEmbeddedServletContainerFactory8.baseDirectory = file31;
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory8.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList33;
        java.lang.Class<?> wildcardClass35 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-8" + "'", str4, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList25);
        org.junit.Assert.assertNotNull(errorPageSet27);
        org.junit.Assert.assertNull(inetAddress28);
        org.junit.Assert.assertNull(resourceLoader29);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file31.toString(), "/tmp/web-app>\n.3952053409656640380.8080");
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList16 = tomcatEmbeddedServletContainerFactory11.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings20);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings20);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList24 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "";
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        tomcatEmbeddedServletContainerFactory0.setProtocol("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList16);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str27, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList14 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList18 = tomcatEmbeddedServletContainerFactory17.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers = tomcatConnectorCustomizerList18;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = tomcatEmbeddedServletContainerFactory15.getErrorPages();
        java.net.InetAddress inetAddress21 = tomcatEmbeddedServletContainerFactory15.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader22 = tomcatEmbeddedServletContainerFactory15.resourceLoader;
        java.io.File file24 = tomcatEmbeddedServletContainerFactory15.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.apache.catalina.Valve[] valveArray25 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray25);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray25);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection28 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.io.File file29 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNotNull(valveList14);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList18);
        org.junit.Assert.assertNotNull(errorPageSet20);
        org.junit.Assert.assertNull(inetAddress21);
        org.junit.Assert.assertNull(resourceLoader22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file24.toString(), "/tmp/web-app>\n.4969675071517731224.8080");
        org.junit.Assert.assertNotNull(valveArray25);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection28);
        org.junit.Assert.assertNull(file29);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader20 = tomcatEmbeddedServletContainerFactory18.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory21.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection26 = tomcatEmbeddedServletContainerFactory21.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList27 = tomcatEmbeddedServletContainerFactory21.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory18.tomcatContextCustomizers = tomcatContextCustomizerList27;
        java.util.List<org.apache.catalina.Valve> valveList29 = tomcatEmbeddedServletContainerFactory18.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList29;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory31.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList36 = tomcatEmbeddedServletContainerFactory31.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        tomcatEmbeddedServletContainerFactory31.setMimeMappings(mimeMappings40);
        org.apache.catalina.connector.Connector connector42 = null;
        org.apache.catalina.connector.Connector[] connectorArray43 = new org.apache.catalina.connector.Connector[] { connector42 };
        tomcatEmbeddedServletContainerFactory31.addAdditionalTomcatConnectors(connectorArray43);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray43);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList46 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection47 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection48 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.util.concurrent.TimeUnit timeUnit50 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(8080, timeUnit50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection26);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList27);
        org.junit.Assert.assertNotNull(valveList29);
        org.junit.Assert.assertNotNull(lifecycleListenerList36);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(connectorArray43);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList46);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection47);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection48);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        org.apache.catalina.connector.Connector connector11 = null;
        org.apache.catalina.connector.Connector[] connectorArray12 = new org.apache.catalina.connector.Connector[] { connector11 };
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList15 = tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection16 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList17 = tomcatEmbeddedServletContainerFactory14.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection18);
        java.net.InetAddress inetAddress20 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress20);
        java.util.List<org.apache.catalina.Valve> valveList22 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.apache.catalina.Context context23 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(connectorArray12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection16);
        org.junit.Assert.assertNotNull(valveList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(valveList22);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection8 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.coyote.http11.Http11NioProtocol";
        org.apache.catalina.Context context11 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection8);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        org.apache.catalina.connector.Connector connector11 = null;
        org.apache.catalina.connector.Connector[] connectorArray12 = new org.apache.catalina.connector.Connector[] { connector11 };
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList15 = tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection16 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList17 = tomcatEmbeddedServletContainerFactory14.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection18);
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "org.apache.coyote.http11.Http11NioProtocol";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        tomcatEmbeddedServletContainerFactory22.setTldSkip("");
        int int28 = tomcatEmbeddedServletContainerFactory22.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader29 = tomcatEmbeddedServletContainerFactory22.resourceLoader;
        tomcatEmbeddedServletContainerFactory22.setSessionTimeout((int) (short) 1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader34 = tomcatEmbeddedServletContainerFactory32.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory35.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection40 = tomcatEmbeddedServletContainerFactory35.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList41 = tomcatEmbeddedServletContainerFactory35.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory32.tomcatContextCustomizers = tomcatContextCustomizerList41;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList43 = tomcatEmbeddedServletContainerFactory32.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection44 = tomcatEmbeddedServletContainerFactory32.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory22.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection44);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection44);
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(connectorArray12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection16);
        org.junit.Assert.assertNotNull(valveList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(resourceLoader29);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNull(resourceLoader34);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection40);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList41);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList43);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection44);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.io.File file5 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection20 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.io.File file21 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (short) 0);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection25 = tomcatEmbeddedServletContainerFactory24.getContextLifecycleListeners();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList26 = tomcatEmbeddedServletContainerFactory24.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList26;
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection25);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList26);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("UTF-8", 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray15);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.protocol = "hi!";
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = tomcatEmbeddedServletContainerFactory4.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList6 = tomcatEmbeddedServletContainerFactory4.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory4.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection9 = tomcatEmbeddedServletContainerFactory4.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList17;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory10.protocol;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory10.protocol;
        java.net.InetAddress inetAddress21 = null;
        tomcatEmbeddedServletContainerFactory10.setAddress(inetAddress21);
        java.io.File file23 = null;
        tomcatEmbeddedServletContainerFactory10.setBaseDirectory(file23);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray25 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory10.addContextCustomizers(tomcatContextCustomizerArray25);
        tomcatEmbeddedServletContainerFactory4.addContextCustomizers(tomcatContextCustomizerArray25);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray25);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection29 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNotNull(connectorList6);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection9);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray25);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection29);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.LifecycleEvent lifecycleEvent5 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.io.File file5 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection20 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader23 = tomcatEmbeddedServletContainerFactory21.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection29 = tomcatEmbeddedServletContainerFactory24.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList30 = tomcatEmbeddedServletContainerFactory24.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory21.tomcatContextCustomizers = tomcatContextCustomizerList30;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory32.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList39 = tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory32.additionalTomcatConnectors = connectorList39;
        java.lang.String str41 = tomcatEmbeddedServletContainerFactory32.protocol;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory32.protocol;
        tomcatEmbeddedServletContainerFactory32.setUriEncoding("hi!");
        boolean boolean45 = tomcatEmbeddedServletContainerFactory32.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory46.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory46.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = tomcatEmbeddedServletContainerFactory51.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList53 = tomcatEmbeddedServletContainerFactory51.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors = connectorList53;
        org.apache.catalina.Context context55 = null;
        tomcatEmbeddedServletContainerFactory46.postProcessContext(context55);
        java.net.InetAddress inetAddress57 = tomcatEmbeddedServletContainerFactory46.getAddress();
        tomcatEmbeddedServletContainerFactory46.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory60.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory60.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings66 = tomcatEmbeddedServletContainerFactory65.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList67 = tomcatEmbeddedServletContainerFactory65.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors = connectorList67;
        org.apache.catalina.Context context69 = null;
        tomcatEmbeddedServletContainerFactory60.postProcessContext(context69);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str74 = tomcatEmbeddedServletContainerFactory73.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray75 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory73.addConnectorCustomizers(tomcatConnectorCustomizerArray75);
        tomcatEmbeddedServletContainerFactory60.addConnectorCustomizers(tomcatConnectorCustomizerArray75);
        tomcatEmbeddedServletContainerFactory46.addConnectorCustomizers(tomcatConnectorCustomizerArray75);
        tomcatEmbeddedServletContainerFactory32.addConnectorCustomizers(tomcatConnectorCustomizerArray75);
        tomcatEmbeddedServletContainerFactory21.addConnectorCustomizers(tomcatConnectorCustomizerArray75);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray75);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList82 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.net.InetAddress inetAddress83 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress83);
        java.util.concurrent.TimeUnit timeUnit86 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) ' ', timeUnit86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection20);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNull(resourceLoader23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection29);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList30);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(connectorList39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNotNull(connectorList53);
        org.junit.Assert.assertNull(inetAddress57);
        org.junit.Assert.assertNotNull(mimeMappings66);
        org.junit.Assert.assertNotNull(connectorList67);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray75);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList82);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList16;
        boolean boolean18 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.tldSkip = "";
        org.apache.catalina.startup.Tomcat tomcat21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer22 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection7 = tomcatEmbeddedServletContainerFactory3.getValves();
        java.net.InetAddress inetAddress8 = tomcatEmbeddedServletContainerFactory3.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean10 = tomcatEmbeddedServletContainerFactory9.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList11 = tomcatEmbeddedServletContainerFactory9.contextValves;
        tomcatEmbeddedServletContainerFactory3.contextValves = valveList11;
        tomcatEmbeddedServletContainerFactory2.contextValves = valveList11;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers;
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory2.getUriEncoding();
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory2.getUriEncoding();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(valveCollection7);
        org.junit.Assert.assertNull(inetAddress8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(valveList11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray16 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray16);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList19 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.io.File file20 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory21.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory26.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList28 = tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors = connectorList28;
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory21.protocol;
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory21.protocol;
        java.net.InetAddress inetAddress32 = null;
        tomcatEmbeddedServletContainerFactory21.setAddress(inetAddress32);
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory35.setTldSkip("UTF-8");
        java.io.File file41 = tomcatEmbeddedServletContainerFactory35.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory21.setDocumentRoot(file41);
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 100);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList45 = tomcatEmbeddedServletContainerFactory21.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList45);
        boolean boolean47 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(lifecycleListenerArray16);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(connectorList28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(connectorList34);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file41.toString(), "/tmp/UTF-8.4544591174030491846.0");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList4 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(lifecycleListenerList4);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        tomcatEmbeddedServletContainerFactory9.setResourceLoader(resourceLoader10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory9.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet12);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection14 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.startup.Tomcat tomcat16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer17 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection14);
        org.junit.Assert.assertNotNull(valveCollection15);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory4.protocol;
        tomcatEmbeddedServletContainerFactory4.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection17 = tomcatEmbeddedServletContainerFactory12.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList18 = tomcatEmbeddedServletContainerFactory12.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers = tomcatContextCustomizerList18;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList20 = tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList20;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader24 = tomcatEmbeddedServletContainerFactory22.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory25.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection30 = tomcatEmbeddedServletContainerFactory25.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList31 = tomcatEmbeddedServletContainerFactory25.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers = tomcatContextCustomizerList31;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList33 = tomcatEmbeddedServletContainerFactory22.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory34.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors = connectorList41;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory34.protocol;
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory34.protocol;
        tomcatEmbeddedServletContainerFactory34.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection47 = tomcatEmbeddedServletContainerFactory34.getTomcatContextCustomizers();
        int int48 = tomcatEmbeddedServletContainerFactory34.getPort();
        java.io.File file50 = tomcatEmbeddedServletContainerFactory34.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory22.baseDirectory = file50;
        tomcatEmbeddedServletContainerFactory2.setDocumentRoot(file50);
        tomcatEmbeddedServletContainerFactory2.setProtocol("org.apache.tomcat.util.scan.MergedWebXml");
        tomcatEmbeddedServletContainerFactory2.setJspServletClassName("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        tomcatEmbeddedServletContainerFactory2.setPort((int) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.setContextPath("org.apache.tomcat.util.scan.MergedWebXml");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection17);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList20);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection30);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList31);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList33);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file50.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6645421619771119393.0");
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader9 = tomcatEmbeddedServletContainerFactory7.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection15 = tomcatEmbeddedServletContainerFactory10.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory7.tomcatContextCustomizers = tomcatContextCustomizerList16;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList16;
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory21.setProtocol("UTF-8");
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory21.protocol;
        java.io.File file28 = tomcatEmbeddedServletContainerFactory21.baseDirectory;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList29 = tomcatEmbeddedServletContainerFactory21.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList31 = tomcatEmbeddedServletContainerFactory30.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader34 = tomcatEmbeddedServletContainerFactory32.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory35.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection40 = tomcatEmbeddedServletContainerFactory35.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList41 = tomcatEmbeddedServletContainerFactory35.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory32.tomcatContextCustomizers = tomcatContextCustomizerList41;
        tomcatEmbeddedServletContainerFactory32.uriEncoding = "UTF-8";
        int int45 = tomcatEmbeddedServletContainerFactory32.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean47 = tomcatEmbeddedServletContainerFactory46.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection48 = tomcatEmbeddedServletContainerFactory46.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = tomcatEmbeddedServletContainerFactory46.getMimeMappings();
        tomcatEmbeddedServletContainerFactory32.setMimeMappings(mimeMappings49);
        tomcatEmbeddedServletContainerFactory30.setMimeMappings(mimeMappings49);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory52.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = tomcatEmbeddedServletContainerFactory57.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList59 = tomcatEmbeddedServletContainerFactory57.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory52.additionalTomcatConnectors = connectorList59;
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory52.protocol;
        org.apache.catalina.Context context62 = null;
        tomcatEmbeddedServletContainerFactory52.postProcessContext(context62);
        java.util.List<org.apache.catalina.connector.Connector> connectorList64 = tomcatEmbeddedServletContainerFactory52.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors = connectorList64;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList66 = tomcatEmbeddedServletContainerFactory30.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory21.contextLifecycleListeners = lifecycleListenerList66;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList66;
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNull(resourceLoader9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection15);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(lifecycleListenerList29);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList31);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNull(resourceLoader34);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection40);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8080 + "'", int45 == 8080);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(valveCollection48);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(connectorList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(connectorList64);
        org.junit.Assert.assertNotNull(lifecycleListenerList66);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) 10);
        java.net.InetAddress inetAddress2 = tomcatEmbeddedServletContainerFactory1.getAddress();
        java.io.File file4 = tomcatEmbeddedServletContainerFactory1.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory1.resourceLoader = resourceLoader5;
        int int7 = tomcatEmbeddedServletContainerFactory1.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = tomcatEmbeddedServletContainerFactory1.getErrorPages();
        java.lang.Class<?> wildcardClass9 = errorPageSet8.getClass();
        org.junit.Assert.assertNull(inetAddress2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file4.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.373881469569951629.10");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader5 = tomcatEmbeddedServletContainerFactory3.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory3.addErrorPages(errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory9.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        tomcatEmbeddedServletContainerFactory9.setMimeMappings(mimeMappings22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList25 = tomcatEmbeddedServletContainerFactory24.tomcatConnectorCustomizers;
        int int26 = tomcatEmbeddedServletContainerFactory24.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray27 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory24.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory9.addContextLifecycleListeners(lifecycleListenerArray27);
        java.util.List<org.apache.catalina.Valve> valveList30 = tomcatEmbeddedServletContainerFactory9.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList30;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory34.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer36 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray37 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer36 };
        tomcatEmbeddedServletContainerFactory34.addInitializers(servletContextInitializerArray37);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray37);
        org.apache.catalina.Context context40 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNull(resourceLoader5);
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray27);
        org.junit.Assert.assertNotNull(valveList30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(servletContextInitializerArray37);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.apache.catalina.Context context13 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors = connectorList22;
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory15.protocol;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory15.protocol;
        java.net.InetAddress inetAddress26 = null;
        tomcatEmbeddedServletContainerFactory15.setAddress(inetAddress26);
        java.util.List<org.apache.catalina.connector.Connector> connectorList28 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        java.io.File file29 = tomcatEmbeddedServletContainerFactory15.baseDirectory;
        org.apache.catalina.Valve[] valveArray30 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray30);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray30);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList34 = tomcatEmbeddedServletContainerFactory33.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory33.uriEncoding = "";
        tomcatEmbeddedServletContainerFactory33.setContextPath("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection39 = tomcatEmbeddedServletContainerFactory33.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = tomcatEmbeddedServletContainerFactory40.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader42 = tomcatEmbeddedServletContainerFactory40.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory43.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection48 = tomcatEmbeddedServletContainerFactory43.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList49 = tomcatEmbeddedServletContainerFactory43.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory40.tomcatContextCustomizers = tomcatContextCustomizerList49;
        tomcatEmbeddedServletContainerFactory40.uriEncoding = "UTF-8";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection53 = tomcatEmbeddedServletContainerFactory40.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList54 = tomcatEmbeddedServletContainerFactory40.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory33.tomcatContextCustomizers = tomcatContextCustomizerList54;
        tomcatEmbeddedServletContainerFactory33.setRegisterJspServlet(false);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList58 = tomcatEmbeddedServletContainerFactory33.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList58);
        org.apache.catalina.startup.Tomcat tomcat60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer61 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(connectorList28);
        org.junit.Assert.assertNull(file29);
        org.junit.Assert.assertNotNull(valveArray30);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList34);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection39);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertNull(resourceLoader42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection48);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList49);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection53);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList54);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList58);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n", (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        int int14 = tomcatEmbeddedServletContainerFactory0.getPort();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader17);
        org.apache.catalina.Context context19 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray16 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray16);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList19 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.protocol = "";
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(lifecycleListenerArray16);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str22, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray3 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray3);
        tomcatEmbeddedServletContainerFactory0.tldSkip = "hi!";
        org.apache.catalina.Context context7 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context7);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection9 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.Class<?> wildcardClass10 = tomcatConnectorCustomizerCollection9.getClass();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(errorPageArray3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file4 = tomcatEmbeddedServletContainerFactory2.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        java.util.List<org.apache.catalina.Valve> valveList5 = tomcatEmbeddedServletContainerFactory2.contextValves;
        org.apache.catalina.Context context6 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.addDefaultServlet(context6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file4.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.4646717486839038516.100");
        org.junit.Assert.assertNotNull(valveList5);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.Context context5 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors = connectorList16;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory18.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray20);
        tomcatEmbeddedServletContainerFactory18.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray24 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory18.addContextLifecycleListeners(lifecycleListenerArray24);
        tomcatEmbeddedServletContainerFactory8.addContextLifecycleListeners(lifecycleListenerArray24);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList27 = tomcatEmbeddedServletContainerFactory8.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList27;
        java.util.Collection<org.apache.catalina.Valve> valveCollection29 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList31 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertNotNull(lifecycleListenerArray24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList27);
        org.junit.Assert.assertNotNull(valveCollection29);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNotNull(lifecycleListenerList31);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList12 = tomcatEmbeddedServletContainerFactory10.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList12;
        tomcatEmbeddedServletContainerFactory0.tldSkip = "";
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0);
        int int20 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.setPort(8080);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valveList12);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList23 = tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors = connectorList23;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory16.protocol;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory16.protocol;
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection29 = tomcatEmbeddedServletContainerFactory16.getTomcatContextCustomizers();
        int int30 = tomcatEmbeddedServletContainerFactory16.getPort();
        java.io.File file32 = tomcatEmbeddedServletContainerFactory16.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file32;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory34.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList42 = tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors = connectorList42;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory44.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection49 = tomcatEmbeddedServletContainerFactory44.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList50 = tomcatEmbeddedServletContainerFactory44.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory34.tomcatContextCustomizers = tomcatContextCustomizerList50;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str53 = storeMergedWebXmlListener52.getEmptyWebXml();
        java.lang.String str54 = storeMergedWebXmlListener52.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str56 = storeMergedWebXmlListener55.getMERGED_WEB_XML();
        java.lang.String str57 = storeMergedWebXmlListener55.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray58 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener52, storeMergedWebXmlListener55 };
        tomcatEmbeddedServletContainerFactory34.addContextLifecycleListeners(lifecycleListenerArray58);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray58);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList62 = tomcatEmbeddedServletContainerFactory61.tomcatConnectorCustomizers;
        java.io.File file63 = tomcatEmbeddedServletContainerFactory61.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList64 = tomcatEmbeddedServletContainerFactory61.tomcatConnectorCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader65 = null;
        tomcatEmbeddedServletContainerFactory61.resourceLoader = resourceLoader65;
        tomcatEmbeddedServletContainerFactory61.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        java.util.List<org.apache.catalina.connector.Connector> connectorList69 = tomcatEmbeddedServletContainerFactory61.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList69;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(connectorList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file32.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6986114141544741969.0");
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertNotNull(connectorList42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection49);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str53, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str54, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str56, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str57, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray58);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList62);
        org.junit.Assert.assertNull(file63);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList64);
        org.junit.Assert.assertNotNull(connectorList69);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int2 = tomcatEmbeddedServletContainerFactory0.getPort();
        int int3 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory4.additionalTomcatConnectors = connectorList11;
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory4.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory4.setMimeMappings(mimeMappings17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList20 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        int int21 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory19.addContextLifecycleListeners(lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory4.addContextLifecycleListeners(lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory4.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader27 = tomcatEmbeddedServletContainerFactory4.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList31 = tomcatEmbeddedServletContainerFactory30.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory28.tomcatConnectorCustomizers = tomcatConnectorCustomizerList31;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection33 = tomcatEmbeddedServletContainerFactory28.getContextLifecycleListeners();
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory28.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.ErrorPage errorPage36 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray37 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage36 };
        tomcatEmbeddedServletContainerFactory28.addErrorPages(errorPageArray37);
        tomcatEmbeddedServletContainerFactory4.addErrorPages(errorPageArray37);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray37);
        java.lang.String str41 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        java.util.List<org.apache.catalina.connector.Connector> connectorList46 = tomcatEmbeddedServletContainerFactory42.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory47.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory47.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList52 = tomcatEmbeddedServletContainerFactory47.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory53.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        tomcatEmbeddedServletContainerFactory47.setMimeMappings(mimeMappings56);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList59 = tomcatEmbeddedServletContainerFactory58.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection60 = tomcatEmbeddedServletContainerFactory58.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings62 = tomcatEmbeddedServletContainerFactory61.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader63 = tomcatEmbeddedServletContainerFactory61.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray64 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory61.addErrorPages(errorPageArray64);
        tomcatEmbeddedServletContainerFactory58.addErrorPages(errorPageArray64);
        tomcatEmbeddedServletContainerFactory47.addErrorPages(errorPageArray64);
        tomcatEmbeddedServletContainerFactory42.addErrorPages(errorPageArray64);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray64);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str71 = tomcatEmbeddedServletContainerFactory70.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray72 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory70.addInitializers(servletContextInitializerArray72);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener74 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str75 = storeMergedWebXmlListener74.getMERGED_WEB_XML();
        java.lang.String str76 = storeMergedWebXmlListener74.getMERGED_WEB_XML();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener78 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str79 = storeMergedWebXmlListener78.getMERGED_WEB_XML();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray80 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener74, storeMergedWebXmlListener77, storeMergedWebXmlListener78 };
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList81 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList81, lifecycleListenerArray80);
        tomcatEmbeddedServletContainerFactory70.contextLifecycleListeners = lifecycleListenerList81;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray84 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory70.addInitializers(servletContextInitializerArray84);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray84);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8080 + "'", int2 == 8080);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertNull(resourceLoader27);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList31);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-8" + "'", str34, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertNotNull(errorPageArray37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-8" + "'", str41, "UTF-8");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-8" + "'", str45, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList46);
        org.junit.Assert.assertNotNull(lifecycleListenerList52);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList59);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection60);
        org.junit.Assert.assertNotNull(mimeMappings62);
        org.junit.Assert.assertNull(resourceLoader63);
        org.junit.Assert.assertNotNull(errorPageArray64);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "UTF-8" + "'", str71, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str75, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str76, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str79, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertNotNull(lifecycleListenerArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(servletContextInitializerArray84);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList10 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection16 = tomcatEmbeddedServletContainerFactory11.getTomcatConnectorCustomizers();
        boolean boolean17 = tomcatEmbeddedServletContainerFactory11.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress18 = null;
        tomcatEmbeddedServletContainerFactory11.setAddress(inetAddress18);
        java.util.List<org.apache.catalina.Valve> valveList20 = tomcatEmbeddedServletContainerFactory11.contextValves;
        java.io.File file22 = tomcatEmbeddedServletContainerFactory11.createTempDir("hi!");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file22;
        org.apache.catalina.Valve[] valveArray24 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Valves must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(lifecycleListenerList10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(valveList20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file22.toString(), "/tmp/hi!.9063686886084451294.0");
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList10 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray11 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12, tomcatContextCustomizerArray11);
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList12;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory15.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray17);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList19 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList19;
        java.util.List<org.apache.catalina.Valve> valveList21 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList10);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList19);
        org.junit.Assert.assertNotNull(valveList21);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader14 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection20 = tomcatEmbeddedServletContainerFactory15.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList21 = tomcatEmbeddedServletContainerFactory15.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList21;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("org.apache.tomcat.util.scan.MergedWebXml");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection20);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList21);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray16 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray16);
        org.apache.catalina.Context context19 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context19);
        java.io.File file21 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection22 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(lifecycleListenerArray16);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection22);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.apache.catalina.startup.Tomcat tomcat8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer9 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList7);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer9 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray10 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer9 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray10);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory16.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory19.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray22 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory19.addErrorPages(errorPageArray22);
        tomcatEmbeddedServletContainerFactory16.addErrorPages(errorPageArray22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory25.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory30.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors = connectorList33;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory35.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection40 = tomcatEmbeddedServletContainerFactory35.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList41 = tomcatEmbeddedServletContainerFactory35.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory25.tomcatContextCustomizers = tomcatContextCustomizerList41;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str44 = storeMergedWebXmlListener43.getEmptyWebXml();
        java.lang.String str45 = storeMergedWebXmlListener43.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str47 = storeMergedWebXmlListener46.getMERGED_WEB_XML();
        java.lang.String str48 = storeMergedWebXmlListener46.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray49 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener43, storeMergedWebXmlListener46 };
        tomcatEmbeddedServletContainerFactory25.addContextLifecycleListeners(lifecycleListenerArray49);
        tomcatEmbeddedServletContainerFactory16.addContextLifecycleListeners(lifecycleListenerArray49);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings53 = tomcatEmbeddedServletContainerFactory52.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList55 = tomcatEmbeddedServletContainerFactory54.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory52.tomcatConnectorCustomizers = tomcatConnectorCustomizerList55;
        tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers = tomcatConnectorCustomizerList55;
        tomcatEmbeddedServletContainerFactory16.setPort((int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader60 = null;
        tomcatEmbeddedServletContainerFactory16.resourceLoader = resourceLoader60;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory62.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory62.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings68 = tomcatEmbeddedServletContainerFactory67.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList69 = tomcatEmbeddedServletContainerFactory67.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory62.additionalTomcatConnectors = connectorList69;
        org.apache.catalina.Context context71 = null;
        tomcatEmbeddedServletContainerFactory62.postProcessContext(context71);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str76 = tomcatEmbeddedServletContainerFactory75.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray77 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory75.addConnectorCustomizers(tomcatConnectorCustomizerArray77);
        tomcatEmbeddedServletContainerFactory62.addConnectorCustomizers(tomcatConnectorCustomizerArray77);
        tomcatEmbeddedServletContainerFactory16.addConnectorCustomizers(tomcatConnectorCustomizerArray77);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray77);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(errorPageArray22);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection40);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str44, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str45, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str47, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str48, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray49);
        org.junit.Assert.assertNotNull(mimeMappings53);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList55);
        org.junit.Assert.assertNotNull(mimeMappings68);
        org.junit.Assert.assertNotNull(connectorList69);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray77);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray16 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors = connectorList26;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.net.InetAddress inetAddress30 = null;
        tomcatEmbeddedServletContainerFactory19.setAddress(inetAddress30);
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setTldSkip("UTF-8");
        java.io.File file39 = tomcatEmbeddedServletContainerFactory33.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory19.setDocumentRoot(file39);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file39);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray44);
        tomcatEmbeddedServletContainerFactory42.setUriEncoding("hi!");
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        tomcatEmbeddedServletContainerFactory42.setSessionTimeout((int) (short) 100);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList51 = tomcatEmbeddedServletContainerFactory42.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory52.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = tomcatEmbeddedServletContainerFactory57.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList59 = tomcatEmbeddedServletContainerFactory57.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory52.additionalTomcatConnectors = connectorList59;
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory52.protocol;
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory52.protocol;
        tomcatEmbeddedServletContainerFactory52.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection65 = tomcatEmbeddedServletContainerFactory52.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList66 = tomcatEmbeddedServletContainerFactory52.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory42.tomcatContextCustomizers = tomcatContextCustomizerList66;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList66;
        java.util.List<org.apache.catalina.Valve> valveList69 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.apache.catalina.startup.Tomcat tomcat70 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer71 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(lifecycleListenerArray16);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/tmp/UTF-8.3007980550733140370.0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList51);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(connectorList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection65);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList66);
        org.junit.Assert.assertNotNull(valveList69);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection15 = tomcatEmbeddedServletContainerFactory10.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList16;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setTldSkip("UTF-8");
        int int23 = tomcatEmbeddedServletContainerFactory18.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList31 = tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors = connectorList31;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.net.InetAddress inetAddress35 = null;
        tomcatEmbeddedServletContainerFactory24.setAddress(inetAddress35);
        tomcatEmbeddedServletContainerFactory24.setJspServletClassName("");
        org.springframework.core.io.ResourceLoader resourceLoader39 = null;
        tomcatEmbeddedServletContainerFactory24.setResourceLoader(resourceLoader39);
        java.net.InetAddress inetAddress41 = tomcatEmbeddedServletContainerFactory24.getAddress();
        java.util.List<org.apache.catalina.connector.Connector> connectorList42 = tomcatEmbeddedServletContainerFactory24.getAdditionalTomcatConnectors();
        java.util.Collection<org.apache.catalina.Valve> valveCollection43 = tomcatEmbeddedServletContainerFactory24.getValves();
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors = connectorList44;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList44;
        tomcatEmbeddedServletContainerFactory0.tldSkip = "UTF-8";
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection15);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNotNull(connectorList31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNull(inetAddress41);
        org.junit.Assert.assertNotNull(connectorList42);
        org.junit.Assert.assertNotNull(valveCollection43);
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str49, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.apache.catalina.startup.Tomcat tomcat4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer5 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        int int15 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.Context context16 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.io.File file7 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList10 = tomcatEmbeddedServletContainerFactory9.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory9.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection11);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean14 = tomcatEmbeddedServletContainerFactory13.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory13.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        tomcatEmbeddedServletContainerFactory13.tldSkip = "UTF-8";
        tomcatEmbeddedServletContainerFactory13.setProtocol("org.apache.coyote.http11.Http11NioProtocol");
        java.util.List<org.apache.catalina.Valve> valveList21 = tomcatEmbeddedServletContainerFactory13.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList21;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection23 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(valveList21);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection23);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int2 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader4;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList9 = tomcatEmbeddedServletContainerFactory8.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers = tomcatConnectorCustomizerList9;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection11 = tomcatEmbeddedServletContainerFactory6.getContextLifecycleListeners();
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory6.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory13.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector21 = null;
        org.apache.catalina.connector.Connector[] connectorArray22 = new org.apache.catalina.connector.Connector[] { connector21 };
        tomcatEmbeddedServletContainerFactory13.addAdditionalTomcatConnectors(connectorArray22);
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray22);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList25 = tomcatEmbeddedServletContainerFactory6.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList25;
        org.springframework.core.io.ResourceLoader resourceLoader27 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader27;
        org.apache.catalina.connector.Connector connector29 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8080 + "'", int2 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList9);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-8" + "'", str12, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(connectorArray22);
        org.junit.Assert.assertNotNull(lifecycleListenerList25);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory6.additionalTomcatConnectors = connectorList13;
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory6.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        tomcatEmbeddedServletContainerFactory6.setMimeMappings(mimeMappings19);
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory6.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList29 = tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors = connectorList29;
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory22.protocol;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory22.protocol;
        tomcatEmbeddedServletContainerFactory22.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection35 = tomcatEmbeddedServletContainerFactory22.getTomcatContextCustomizers();
        int int36 = tomcatEmbeddedServletContainerFactory22.getPort();
        java.io.File file38 = tomcatEmbeddedServletContainerFactory22.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory6.baseDirectory = file38;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file38);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList41 = null;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList41;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList43 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection5);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(connectorList29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file38.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.4939377044966881907.0");
        org.junit.Assert.assertNull(tomcatContextCustomizerList43);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList10 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection16 = tomcatEmbeddedServletContainerFactory11.getTomcatConnectorCustomizers();
        boolean boolean17 = tomcatEmbeddedServletContainerFactory11.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress18 = null;
        tomcatEmbeddedServletContainerFactory11.setAddress(inetAddress18);
        java.util.List<org.apache.catalina.Valve> valveList20 = tomcatEmbeddedServletContainerFactory11.contextValves;
        java.io.File file22 = tomcatEmbeddedServletContainerFactory11.createTempDir("hi!");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file22;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray24 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ErrorPages must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(lifecycleListenerList10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(valveList20);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file22.toString(), "/tmp/hi!.7467244312847445335.0");
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int2 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        java.io.File file9 = tomcatEmbeddedServletContainerFactory4.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection15 = tomcatEmbeddedServletContainerFactory10.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory10.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector18 = null;
        org.apache.catalina.connector.Connector[] connectorArray19 = new org.apache.catalina.connector.Connector[] { connector18 };
        tomcatEmbeddedServletContainerFactory10.addAdditionalTomcatConnectors(connectorArray19);
        tomcatEmbeddedServletContainerFactory4.addAdditionalTomcatConnectors(connectorArray19);
        tomcatEmbeddedServletContainerFactory4.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory24.getUriEncoding();
        java.io.File file27 = tomcatEmbeddedServletContainerFactory24.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory4.baseDirectory = file27;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file27);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        java.io.File file33 = tomcatEmbeddedServletContainerFactory0.createTempDir("hi!");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8080 + "'", int2 == 8080);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection15);
        org.junit.Assert.assertNotNull(connectorArray19);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file27.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.2323506549489531215.8080");
        org.junit.Assert.assertNotNull(file33);
        org.junit.Assert.assertEquals(file33.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file33.toString(), "/tmp/hi!.2634026725830407390.8080");
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        int int17 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray18 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory15.addContextLifecycleListeners(lifecycleListenerArray18);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader23 = tomcatEmbeddedServletContainerFactory21.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection29 = tomcatEmbeddedServletContainerFactory24.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList30 = tomcatEmbeddedServletContainerFactory24.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory21.tomcatContextCustomizers = tomcatContextCustomizerList30;
        tomcatEmbeddedServletContainerFactory21.uriEncoding = "UTF-8";
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory21.protocol;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList35 = tomcatEmbeddedServletContainerFactory21.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory21.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory38.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList45 = tomcatEmbeddedServletContainerFactory43.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors = connectorList45;
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory38.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean49 = tomcatEmbeddedServletContainerFactory48.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList50 = tomcatEmbeddedServletContainerFactory48.contextValves;
        tomcatEmbeddedServletContainerFactory38.contextValves = valveList50;
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory38.getContextPath();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings53 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        tomcatEmbeddedServletContainerFactory21.setMimeMappings(mimeMappings53);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings53);
        java.net.InetAddress inetAddress56 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.util.concurrent.TimeUnit timeUnit58 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((-1), timeUnit58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray18);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNull(resourceLoader23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection29);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str34, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList35);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNotNull(connectorList45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(valveList50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(mimeMappings53);
        org.junit.Assert.assertNull(inetAddress56);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader5 = tomcatEmbeddedServletContainerFactory3.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory3.addErrorPages(errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray6);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNull(resourceLoader5);
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str9, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList14;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.springframework.core.io.ResourceLoader resourceLoader18 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors = connectorList26;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList29 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList29;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("org.apache.coyote.http11.Http11NioProtocol");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str17, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNull(resourceLoader18);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList29);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList12 = tomcatEmbeddedServletContainerFactory10.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList12;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader17);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet19);
        java.util.Collection<org.apache.catalina.Valve> valveCollection21 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection26 = tomcatEmbeddedServletContainerFactory22.getValves();
        java.net.InetAddress inetAddress27 = tomcatEmbeddedServletContainerFactory22.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean29 = tomcatEmbeddedServletContainerFactory28.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList30 = tomcatEmbeddedServletContainerFactory28.contextValves;
        tomcatEmbeddedServletContainerFactory22.contextValves = valveList30;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList30;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList33 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.util.Collection<org.apache.catalina.Valve> valveCollection34 = tomcatEmbeddedServletContainerFactory0.getValves();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("org.apache.coyote.http11.Http11NioProtocol");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valveList12);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNotNull(valveCollection21);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(valveCollection26);
        org.junit.Assert.assertNull(inetAddress27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(valveList30);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList33);
        org.junit.Assert.assertNotNull(valveCollection34);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection2 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.net.InetAddress inetAddress4 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader5;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) 'a');
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList19 = tomcatEmbeddedServletContainerFactory9.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray20 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList21 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList21, tomcatContextCustomizerArray20);
        tomcatEmbeddedServletContainerFactory9.tomcatContextCustomizers = tomcatContextCustomizerList21;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList29 = tomcatEmbeddedServletContainerFactory24.contextLifecycleListeners;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet30 = tomcatEmbeddedServletContainerFactory24.getErrorPages();
        tomcatEmbeddedServletContainerFactory9.setErrorPages(errorPageSet30);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet30);
        java.lang.Class<?> wildcardClass33 = errorPageSet30.getClass();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveCollection2);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(inetAddress4);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList19);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(lifecycleListenerList29);
        org.junit.Assert.assertNotNull(errorPageSet30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory5.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer7 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer7 };
        tomcatEmbeddedServletContainerFactory5.addInitializers(servletContextInitializerArray8);
        tomcatEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray8);
        tomcatEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray2 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray2);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 100);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection9 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.tomcat.util.scan.MergedWebXml");
        java.util.List<org.apache.catalina.Valve> valveList12 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection9);
        org.junit.Assert.assertNotNull(valveList12);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setTldSkip("UTF-8");
        java.io.File file20 = tomcatEmbeddedServletContainerFactory14.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file20);
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList31 = tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors = connectorList31;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory24.protocol;
        tomcatEmbeddedServletContainerFactory24.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection37 = tomcatEmbeddedServletContainerFactory24.getTomcatContextCustomizers();
        int int38 = tomcatEmbeddedServletContainerFactory24.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory39.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory39.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = tomcatEmbeddedServletContainerFactory44.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList46 = tomcatEmbeddedServletContainerFactory44.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors = connectorList46;
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory39.protocol;
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory39.protocol;
        java.net.InetAddress inetAddress50 = null;
        tomcatEmbeddedServletContainerFactory39.setAddress(inetAddress50);
        java.util.List<org.apache.catalina.connector.Connector> connectorList52 = tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory53.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory53.setTldSkip("UTF-8");
        java.io.File file59 = tomcatEmbeddedServletContainerFactory53.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory39.setDocumentRoot(file59);
        tomcatEmbeddedServletContainerFactory24.setDocumentRoot(file59);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file59;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "hi!";
        int int67 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str68 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader72 = null;
        tomcatEmbeddedServletContainerFactory71.setResourceLoader(resourceLoader72);
        tomcatEmbeddedServletContainerFactory71.setPort(10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet76 = tomcatEmbeddedServletContainerFactory71.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet76);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file20.toString(), "/tmp/UTF-8.8614888433784683655.0");
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNotNull(connectorList31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNotNull(connectorList46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(connectorList52);
        org.junit.Assert.assertNotNull(file59);
        org.junit.Assert.assertEquals(file59.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file59.toString(), "/tmp/UTF-8.2418814768960366534.0");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNotNull(errorPageSet76);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str2 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.LifecycleEvent lifecycleEvent4 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str2, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList14;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList18 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList20 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.apache.catalina.connector.Connector connector21 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str17, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList20);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress5 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        boolean boolean7 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.concurrent.TimeUnit timeUnit9 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 100, timeUnit9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNull(inetAddress5);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader5 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList11 = tomcatEmbeddedServletContainerFactory6.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList12 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList12;
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader14;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNull(resourceLoader5);
        org.junit.Assert.assertNotNull(lifecycleListenerList11);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList12);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList6 = tomcatEmbeddedServletContainerFactory5.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection7 = tomcatEmbeddedServletContainerFactory5.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader10 = tomcatEmbeddedServletContainerFactory8.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray11 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory8.addErrorPages(errorPageArray11);
        tomcatEmbeddedServletContainerFactory5.addErrorPages(errorPageArray11);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray11);
        org.springframework.core.io.ResourceLoader resourceLoader15 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        tomcatEmbeddedServletContainerFactory0.tldSkip = "UTF-8";
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList6);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection7);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(resourceLoader10);
        org.junit.Assert.assertNotNull(errorPageArray11);
        org.junit.Assert.assertNull(resourceLoader15);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        boolean boolean13 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers = tomcatConnectorCustomizerList17;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        java.net.InetAddress inetAddress20 = tomcatEmbeddedServletContainerFactory14.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory14.resourceLoader;
        java.io.File file23 = tomcatEmbeddedServletContainerFactory14.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file23;
        java.util.List<org.apache.catalina.connector.Connector> connectorList25 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.net.InetAddress inetAddress26 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress26);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection33 = tomcatEmbeddedServletContainerFactory28.getTomcatConnectorCustomizers();
        boolean boolean34 = tomcatEmbeddedServletContainerFactory28.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress35 = null;
        tomcatEmbeddedServletContainerFactory28.setAddress(inetAddress35);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer37 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray38 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer37 };
        tomcatEmbeddedServletContainerFactory28.addConnectorCustomizers(tomcatConnectorCustomizerArray38);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection40 = tomcatEmbeddedServletContainerFactory28.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory28.getAdditionalTomcatConnectors();
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory28.getDEFAULT_PROTOCOL();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList43 = tomcatEmbeddedServletContainerFactory28.tomcatConnectorCustomizers;
        java.net.InetAddress inetAddress44 = tomcatEmbeddedServletContainerFactory28.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory46.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet49 = tomcatEmbeddedServletContainerFactory46.getErrorPages();
        tomcatEmbeddedServletContainerFactory28.setErrorPages(errorPageSet49);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet49);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNull(inetAddress20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file23.toString(), "/tmp/web-app>\n.4857826689461658448.8080");
        org.junit.Assert.assertNotNull(connectorList25);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection40);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str42, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList43);
        org.junit.Assert.assertNull(inetAddress44);
        org.junit.Assert.assertNotNull(errorPageSet49);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setTldSkip("UTF-8");
        java.io.File file20 = tomcatEmbeddedServletContainerFactory14.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file20);
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 100);
        int int24 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file20.toString(), "/tmp/UTF-8.5505618516780382203.0");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.net.InetAddress inetAddress13 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader17);
        tomcatEmbeddedServletContainerFactory16.setPort(10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList21;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory23.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList28 = tomcatEmbeddedServletContainerFactory27.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection29 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList30 = tomcatEmbeddedServletContainerFactory27.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection31 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory27.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory27.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory27.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = tomcatEmbeddedServletContainerFactory41.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList43 = tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList43;
        org.apache.catalina.Context context45 = null;
        tomcatEmbeddedServletContainerFactory36.postProcessContext(context45);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory49.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray51 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory49.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        tomcatEmbeddedServletContainerFactory36.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        tomcatEmbeddedServletContainerFactory27.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        tomcatEmbeddedServletContainerFactory23.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList57 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-8" + "'", str26, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection29);
        org.junit.Assert.assertNotNull(valveList30);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection31);
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(connectorList43);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray51);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList57);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) ' ');
        boolean boolean2 = tomcatEmbeddedServletContainerFactory1.isRegisterJspServlet();
        int int3 = tomcatEmbeddedServletContainerFactory1.getPort();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 32 + "'", int3 == 32);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList3 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        tomcatEmbeddedServletContainerFactory0.tldSkip = "org.apache.coyote.http11.Http11NioProtocol";
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertNotNull(connectorList3);
    }
}
