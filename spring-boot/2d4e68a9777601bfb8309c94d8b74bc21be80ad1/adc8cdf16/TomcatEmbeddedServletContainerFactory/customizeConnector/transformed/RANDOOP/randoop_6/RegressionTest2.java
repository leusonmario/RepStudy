import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.io.File file5 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.apache.catalina.connector.Connector connector21 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        org.apache.catalina.connector.Connector connector11 = null;
        org.apache.catalina.connector.Connector[] connectorArray12 = new org.apache.catalina.connector.Connector[] { connector11 };
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList15 = tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection16 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList17 = tomcatEmbeddedServletContainerFactory14.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection18);
        java.net.InetAddress inetAddress20 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress20);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection23 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(connectorArray12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection16);
        org.junit.Assert.assertNotNull(valveList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection23);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader13 = tomcatEmbeddedServletContainerFactory11.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection19 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList20 = tomcatEmbeddedServletContainerFactory14.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory11.tomcatContextCustomizers = tomcatContextCustomizerList20;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList22 = tomcatEmbeddedServletContainerFactory11.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList30 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors = connectorList30;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory23.protocol;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory23.protocol;
        java.net.InetAddress inetAddress34 = null;
        tomcatEmbeddedServletContainerFactory23.setAddress(inetAddress34);
        int int36 = tomcatEmbeddedServletContainerFactory23.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory37.tomcatConnectorCustomizers = tomcatConnectorCustomizerList40;
        tomcatEmbeddedServletContainerFactory23.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList40);
        tomcatEmbeddedServletContainerFactory11.tomcatConnectorCustomizers = tomcatConnectorCustomizerList40;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory44.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory44.addInitializers(servletContextInitializerArray46);
        tomcatEmbeddedServletContainerFactory44.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray50 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory44.addContextLifecycleListeners(lifecycleListenerArray50);
        tomcatEmbeddedServletContainerFactory11.addContextLifecycleListeners(lifecycleListenerArray50);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray50);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList55 = tomcatEmbeddedServletContainerFactory54.tomcatConnectorCustomizers;
        int int56 = tomcatEmbeddedServletContainerFactory54.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList58 = tomcatEmbeddedServletContainerFactory57.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory54.tomcatConnectorCustomizers = tomcatConnectorCustomizerList58;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory60.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory60.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection65 = tomcatEmbeddedServletContainerFactory60.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory60.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector68 = null;
        org.apache.catalina.connector.Connector[] connectorArray69 = new org.apache.catalina.connector.Connector[] { connector68 };
        tomcatEmbeddedServletContainerFactory60.addAdditionalTomcatConnectors(connectorArray69);
        tomcatEmbeddedServletContainerFactory54.addAdditionalTomcatConnectors(connectorArray69);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray69);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection19);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList20);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList22);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(connectorList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-8" + "'", str45, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
        org.junit.Assert.assertNotNull(lifecycleListenerArray50);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList58);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection65);
        org.junit.Assert.assertNotNull(connectorArray69);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.apache.catalina.Context context16 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context16);
        org.apache.catalina.Context context18 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        tomcatEmbeddedServletContainerFactory2.setPort(10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory2.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory2.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory2.uriEncoding;
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        org.apache.catalina.Context context9 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context9);
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors = connectorList19;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory12.protocol;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory12.protocol;
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file29 = tomcatEmbeddedServletContainerFactory27.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory12.setBaseDirectory(file29);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file29);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory34.getUriEncoding();
        int int36 = tomcatEmbeddedServletContainerFactory34.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader41 = null;
        tomcatEmbeddedServletContainerFactory40.setResourceLoader(resourceLoader41);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet43 = tomcatEmbeddedServletContainerFactory40.getErrorPages();
        tomcatEmbeddedServletContainerFactory34.setErrorPages(errorPageSet43);
        java.io.File file45 = tomcatEmbeddedServletContainerFactory34.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList47 = tomcatEmbeddedServletContainerFactory46.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection48 = tomcatEmbeddedServletContainerFactory46.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader51 = tomcatEmbeddedServletContainerFactory49.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray52 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory49.addErrorPages(errorPageArray52);
        tomcatEmbeddedServletContainerFactory46.addErrorPages(errorPageArray52);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory55.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = tomcatEmbeddedServletContainerFactory60.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList62 = tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList63 = tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors = connectorList63;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory65.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory65.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection70 = tomcatEmbeddedServletContainerFactory65.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList71 = tomcatEmbeddedServletContainerFactory65.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory55.tomcatContextCustomizers = tomcatContextCustomizerList71;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str74 = storeMergedWebXmlListener73.getEmptyWebXml();
        java.lang.String str75 = storeMergedWebXmlListener73.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str77 = storeMergedWebXmlListener76.getMERGED_WEB_XML();
        java.lang.String str78 = storeMergedWebXmlListener76.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray79 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener73, storeMergedWebXmlListener76 };
        tomcatEmbeddedServletContainerFactory55.addContextLifecycleListeners(lifecycleListenerArray79);
        tomcatEmbeddedServletContainerFactory46.addContextLifecycleListeners(lifecycleListenerArray79);
        tomcatEmbeddedServletContainerFactory34.addContextLifecycleListeners(lifecycleListenerArray79);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray79);
        org.apache.catalina.connector.Connector connector84 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file29.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.175147155240831403.100");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-8" + "'", str35, "UTF-8");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8080 + "'", int36 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(errorPageSet43);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList47);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection48);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNull(resourceLoader51);
        org.junit.Assert.assertNotNull(errorPageArray52);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNotNull(connectorList62);
        org.junit.Assert.assertNotNull(connectorList63);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection70);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str74, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str75, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str77, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str78, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray79);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        java.util.List<org.apache.catalina.connector.Connector> connectorList3 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.io.File file6 = tomcatEmbeddedServletContainerFactory0.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.apache.catalina.connector.Connector connector7 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectorList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file6.toString(), "/tmp/web-app>\n.8613352483712040422.0");
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Initializers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList6 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file10 = tomcatEmbeddedServletContainerFactory0.createTempDir("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Prefix string too short");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(lifecycleListenerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str5 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str6 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.LifecycleEvent lifecycleEvent7 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str6, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        int int5 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        int int8 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection14 = tomcatEmbeddedServletContainerFactory9.getTomcatConnectorCustomizers();
        boolean boolean15 = tomcatEmbeddedServletContainerFactory9.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress16 = null;
        tomcatEmbeddedServletContainerFactory9.setAddress(inetAddress16);
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory9.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList20 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection21 = tomcatEmbeddedServletContainerFactory19.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList22 = tomcatEmbeddedServletContainerFactory19.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection23 = tomcatEmbeddedServletContainerFactory19.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList24 = tomcatEmbeddedServletContainerFactory19.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory19.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList27 = tomcatEmbeddedServletContainerFactory19.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors = connectorList35;
        org.apache.catalina.Context context37 = null;
        tomcatEmbeddedServletContainerFactory28.postProcessContext(context37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory41.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray43 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory41.addConnectorCustomizers(tomcatConnectorCustomizerArray43);
        tomcatEmbeddedServletContainerFactory28.addConnectorCustomizers(tomcatConnectorCustomizerArray43);
        tomcatEmbeddedServletContainerFactory19.addConnectorCustomizers(tomcatConnectorCustomizerArray43);
        tomcatEmbeddedServletContainerFactory9.addConnectorCustomizers(tomcatConnectorCustomizerArray43);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray43);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList20);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection21);
        org.junit.Assert.assertNotNull(valveList22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection23);
        org.junit.Assert.assertNotNull(connectorList24);
        org.junit.Assert.assertNotNull(connectorList27);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray43);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList3 = null;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList3;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader5;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList14;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory7.protocol;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory7.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        tomcatEmbeddedServletContainerFactory7.setMimeMappings(mimeMappings22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection28 = tomcatEmbeddedServletContainerFactory24.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray29 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList30 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList30, lifecycleListenerArray29);
        tomcatEmbeddedServletContainerFactory24.contextLifecycleListeners = lifecycleListenerList30;
        tomcatEmbeddedServletContainerFactory7.contextLifecycleListeners = lifecycleListenerList30;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection34 = tomcatEmbeddedServletContainerFactory7.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory35.setProtocol("hi!");
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory35.protocol;
        tomcatEmbeddedServletContainerFactory35.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory43.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection48 = tomcatEmbeddedServletContainerFactory43.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList49 = tomcatEmbeddedServletContainerFactory43.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory35.tomcatContextCustomizers = tomcatContextCustomizerList49;
        tomcatEmbeddedServletContainerFactory7.tomcatContextCustomizers = tomcatContextCustomizerList49;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList49;
        org.apache.catalina.Context context53 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(valveCollection28);
        org.junit.Assert.assertNotNull(lifecycleListenerArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection34);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection48);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList49);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory3.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers = tomcatConnectorCustomizerList4;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory1.getContextLifecycleListeners();
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory1.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory1.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList18;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory11.protocol;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory11.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList27 = tomcatEmbeddedServletContainerFactory22.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        tomcatEmbeddedServletContainerFactory22.setMimeMappings(mimeMappings31);
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings31);
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory11.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList35 = tomcatEmbeddedServletContainerFactory11.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory11.uriEncoding = "";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList41 = tomcatEmbeddedServletContainerFactory40.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory38.tomcatConnectorCustomizers = tomcatConnectorCustomizerList41;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection43 = tomcatEmbeddedServletContainerFactory38.getContextLifecycleListeners();
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory38.uriEncoding;
        tomcatEmbeddedServletContainerFactory38.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = tomcatEmbeddedServletContainerFactory48.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList51 = tomcatEmbeddedServletContainerFactory50.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory48.tomcatConnectorCustomizers = tomcatConnectorCustomizerList51;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection53 = tomcatEmbeddedServletContainerFactory48.getContextLifecycleListeners();
        java.lang.String str54 = tomcatEmbeddedServletContainerFactory48.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList55 = tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory47.additionalTomcatConnectors = connectorList55;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray57 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory47.addContextCustomizers(tomcatContextCustomizerArray57);
        tomcatEmbeddedServletContainerFactory38.addContextCustomizers(tomcatContextCustomizerArray57);
        tomcatEmbeddedServletContainerFactory11.addContextCustomizers(tomcatContextCustomizerArray57);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray57);
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) -1);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str10, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList27);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-8" + "'", str34, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList35);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList41);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-8" + "'", str44, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList51);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-8" + "'", str54, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList55);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray57);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection2 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList10 = tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory3.additionalTomcatConnectors = connectorList10;
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory3.protocol;
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory3.protocol;
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection16 = tomcatEmbeddedServletContainerFactory3.getTomcatContextCustomizers();
        int int17 = tomcatEmbeddedServletContainerFactory3.getPort();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader22 = tomcatEmbeddedServletContainerFactory20.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection28 = tomcatEmbeddedServletContainerFactory23.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList29 = tomcatEmbeddedServletContainerFactory23.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory20.tomcatContextCustomizers = tomcatContextCustomizerList29;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList31 = tomcatEmbeddedServletContainerFactory20.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory3.tomcatConnectorCustomizers = tomcatConnectorCustomizerList31;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList31;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveCollection2);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(connectorList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNull(resourceLoader22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection28);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList29);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList31);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader7 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.net.InetAddress inetAddress8 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress8);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setSessionTimeout((int) (short) 100);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList19 = tomcatEmbeddedServletContainerFactory10.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory20.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList27 = tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors = connectorList27;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory20.protocol;
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory20.protocol;
        tomcatEmbeddedServletContainerFactory20.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection33 = tomcatEmbeddedServletContainerFactory20.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList34 = tomcatEmbeddedServletContainerFactory20.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList34;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList34;
        org.springframework.core.io.ResourceLoader resourceLoader37 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader37;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet39 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.Class<?> wildcardClass40 = errorPageSet39.getClass();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList19);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNotNull(connectorList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection33);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList34);
        org.junit.Assert.assertNotNull(errorPageSet39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList6 = tomcatEmbeddedServletContainerFactory5.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection7 = tomcatEmbeddedServletContainerFactory5.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader10 = tomcatEmbeddedServletContainerFactory8.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray11 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory8.addErrorPages(errorPageArray11);
        tomcatEmbeddedServletContainerFactory5.addErrorPages(errorPageArray11);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray11);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors = connectorList22;
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory15.protocol;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory15.protocol;
        tomcatEmbeddedServletContainerFactory15.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection28 = tomcatEmbeddedServletContainerFactory15.getTomcatContextCustomizers();
        int int29 = tomcatEmbeddedServletContainerFactory15.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory30.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory35.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory35.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors = connectorList37;
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory30.protocol;
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory30.protocol;
        java.net.InetAddress inetAddress41 = null;
        tomcatEmbeddedServletContainerFactory30.setAddress(inetAddress41);
        java.util.List<org.apache.catalina.connector.Connector> connectorList43 = tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory44.setTldSkip("UTF-8");
        java.io.File file50 = tomcatEmbeddedServletContainerFactory44.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory30.setDocumentRoot(file50);
        tomcatEmbeddedServletContainerFactory15.setDocumentRoot(file50);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory53.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory53.setProtocol("hi!");
        java.lang.String str58 = tomcatEmbeddedServletContainerFactory53.protocol;
        tomcatEmbeddedServletContainerFactory53.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory61.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory61.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection66 = tomcatEmbeddedServletContainerFactory61.getTomcatConnectorCustomizers();
        boolean boolean67 = tomcatEmbeddedServletContainerFactory61.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings69 = tomcatEmbeddedServletContainerFactory68.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader70 = tomcatEmbeddedServletContainerFactory68.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory71.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory71.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection76 = tomcatEmbeddedServletContainerFactory71.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList77 = tomcatEmbeddedServletContainerFactory71.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory68.tomcatContextCustomizers = tomcatContextCustomizerList77;
        tomcatEmbeddedServletContainerFactory61.tomcatContextCustomizers = tomcatContextCustomizerList77;
        tomcatEmbeddedServletContainerFactory53.tomcatContextCustomizers = tomcatContextCustomizerList77;
        boolean boolean81 = tomcatEmbeddedServletContainerFactory53.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory83.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList86 = tomcatEmbeddedServletContainerFactory83.tomcatConnectorCustomizers;
        java.io.File file87 = tomcatEmbeddedServletContainerFactory83.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList88 = tomcatEmbeddedServletContainerFactory83.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory53.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList88);
        tomcatEmbeddedServletContainerFactory15.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList88);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList88);
        org.apache.catalina.Context context92 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList6);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection7);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(resourceLoader10);
        org.junit.Assert.assertNotNull(errorPageArray11);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(connectorList43);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file50.toString(), "/tmp/UTF-8.2474960068196220841.0");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(mimeMappings69);
        org.junit.Assert.assertNull(resourceLoader70);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection76);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList86);
        org.junit.Assert.assertNull(file87);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList88);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.apache.catalina.Context context14 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList12 = tomcatEmbeddedServletContainerFactory10.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList12;
        tomcatEmbeddedServletContainerFactory0.tldSkip = "";
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList22 = tomcatEmbeddedServletContainerFactory21.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers = tomcatConnectorCustomizerList22;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection24 = tomcatEmbeddedServletContainerFactory19.getContextLifecycleListeners();
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory19.uriEncoding;
        tomcatEmbeddedServletContainerFactory19.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection33 = tomcatEmbeddedServletContainerFactory28.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory28.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection36 = tomcatEmbeddedServletContainerFactory28.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector37 = null;
        org.apache.catalina.connector.Connector[] connectorArray38 = new org.apache.catalina.connector.Connector[] { connector37 };
        tomcatEmbeddedServletContainerFactory28.addAdditionalTomcatConnectors(connectorArray38);
        tomcatEmbeddedServletContainerFactory19.addAdditionalTomcatConnectors(connectorArray38);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray38);
        boolean boolean42 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        boolean boolean43 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valveList12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList22);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection33);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection36);
        org.junit.Assert.assertNotNull(connectorArray38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader15;
        org.apache.catalina.Context context17 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.io.File file7 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setProtocol("UTF-8");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList17 = tomcatEmbeddedServletContainerFactory11.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList17;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList19 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ErrorPages must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(lifecycleListenerList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList19);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader5 = tomcatEmbeddedServletContainerFactory3.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory3.addErrorPages(errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.protocol = "";
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNull(resourceLoader5);
        org.junit.Assert.assertNotNull(errorPageArray6);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        java.io.File file2 = null;
        tomcatEmbeddedServletContainerFactory1.setBaseDirectory(file2);
        java.lang.Class<?> wildcardClass4 = tomcatEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory2.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray4 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory2.addConnectorCustomizers(tomcatConnectorCustomizerArray4);
        java.net.InetAddress inetAddress6 = tomcatEmbeddedServletContainerFactory2.getAddress();
        tomcatEmbeddedServletContainerFactory2.setRegisterDefaultServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader9 = tomcatEmbeddedServletContainerFactory2.resourceLoader;
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray4);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNull(resourceLoader9);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        int int6 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader9 = tomcatEmbeddedServletContainerFactory7.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray10 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory7.addErrorPages(errorPageArray10);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray10);
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNull(resourceLoader9);
        org.junit.Assert.assertNotNull(errorPageArray10);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader14 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors = connectorList22;
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory15.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean26 = tomcatEmbeddedServletContainerFactory25.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList27 = tomcatEmbeddedServletContainerFactory25.contextValves;
        tomcatEmbeddedServletContainerFactory15.contextValves = valveList27;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory15.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory30.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection35 = tomcatEmbeddedServletContainerFactory30.getTomcatConnectorCustomizers();
        java.io.File file36 = tomcatEmbeddedServletContainerFactory30.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory37.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory42.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors = connectorList44;
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory37.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory47.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory47.getMimeMappings();
        tomcatEmbeddedServletContainerFactory37.setMimeMappings(mimeMappings50);
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory37.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory53.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory53.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings59 = tomcatEmbeddedServletContainerFactory58.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList60 = tomcatEmbeddedServletContainerFactory58.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors = connectorList60;
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory53.protocol;
        java.lang.String str63 = tomcatEmbeddedServletContainerFactory53.protocol;
        tomcatEmbeddedServletContainerFactory53.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection66 = tomcatEmbeddedServletContainerFactory53.getTomcatContextCustomizers();
        int int67 = tomcatEmbeddedServletContainerFactory53.getPort();
        java.io.File file69 = tomcatEmbeddedServletContainerFactory53.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory37.baseDirectory = file69;
        tomcatEmbeddedServletContainerFactory30.setBaseDirectory(file69);
        tomcatEmbeddedServletContainerFactory15.setBaseDirectory(file69);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file69);
        org.apache.catalina.connector.Connector connector74 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(valveList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(mimeMappings59);
        org.junit.Assert.assertNotNull(connectorList60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file69.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.376557976194192984.0");
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList16;
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection23 = tomcatEmbeddedServletContainerFactory22.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList24 = tomcatEmbeddedServletContainerFactory22.contextLifecycleListeners;
        java.util.List<org.apache.catalina.Valve> valveList25 = tomcatEmbeddedServletContainerFactory22.contextValves;
        org.springframework.core.io.ResourceLoader resourceLoader26 = null;
        tomcatEmbeddedServletContainerFactory22.setResourceLoader(resourceLoader26);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors = connectorList35;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory28.protocol;
        org.apache.catalina.Context context38 = null;
        tomcatEmbeddedServletContainerFactory28.postProcessContext(context38);
        java.net.InetAddress inetAddress40 = tomcatEmbeddedServletContainerFactory28.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader41 = null;
        tomcatEmbeddedServletContainerFactory28.setResourceLoader(resourceLoader41);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        tomcatEmbeddedServletContainerFactory28.setMimeMappings(mimeMappings46);
        tomcatEmbeddedServletContainerFactory22.setMimeMappings(mimeMappings46);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings46);
        java.util.concurrent.TimeUnit timeUnit51 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 0, timeUnit51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection23);
        org.junit.Assert.assertNotNull(lifecycleListenerList24);
        org.junit.Assert.assertNotNull(valveList25);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNull(inetAddress40);
        org.junit.Assert.assertNotNull(mimeMappings46);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList6 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.apache.catalina.Context context7 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList6);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 1);
        java.util.List<org.apache.catalina.Valve> valveList2 = tomcatEmbeddedServletContainerFactory1.contextValves;
        org.junit.Assert.assertNotNull(valveList2);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.io.File file5 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        java.io.File file23 = tomcatEmbeddedServletContainerFactory20.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file23;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory26.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection28 = tomcatEmbeddedServletContainerFactory26.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList32 = tomcatEmbeddedServletContainerFactory31.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers = tomcatConnectorCustomizerList32;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection34 = tomcatEmbeddedServletContainerFactory29.getContextLifecycleListeners();
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory29.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = tomcatEmbeddedServletContainerFactory41.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList43 = tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList44;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory46.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray48 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory46.addInitializers(servletContextInitializerArray48);
        tomcatEmbeddedServletContainerFactory46.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray52 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory46.addContextLifecycleListeners(lifecycleListenerArray52);
        tomcatEmbeddedServletContainerFactory36.addContextLifecycleListeners(lifecycleListenerArray52);
        tomcatEmbeddedServletContainerFactory29.addContextLifecycleListeners(lifecycleListenerArray52);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray56 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory29.addContextCustomizers(tomcatContextCustomizerArray56);
        tomcatEmbeddedServletContainerFactory26.addContextCustomizers(tomcatContextCustomizerArray56);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray56);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory60.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory60.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings66 = tomcatEmbeddedServletContainerFactory65.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList67 = tomcatEmbeddedServletContainerFactory65.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors = connectorList67;
        java.lang.String str69 = tomcatEmbeddedServletContainerFactory60.protocol;
        java.lang.String str70 = tomcatEmbeddedServletContainerFactory60.protocol;
        tomcatEmbeddedServletContainerFactory60.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection73 = tomcatEmbeddedServletContainerFactory60.getTomcatContextCustomizers();
        java.io.File file74 = tomcatEmbeddedServletContainerFactory60.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList76 = tomcatEmbeddedServletContainerFactory75.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory60.tomcatConnectorCustomizers = tomcatConnectorCustomizerList76;
        boolean boolean78 = tomcatEmbeddedServletContainerFactory60.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory60.tldSkip = "";
        java.io.File file81 = tomcatEmbeddedServletContainerFactory60.baseDirectory;
        java.lang.String str82 = tomcatEmbeddedServletContainerFactory60.protocol;
        org.springframework.core.io.ResourceLoader resourceLoader83 = null;
        tomcatEmbeddedServletContainerFactory60.resourceLoader = resourceLoader83;
        java.io.File file86 = tomcatEmbeddedServletContainerFactory60.createTempDir("hi!");
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file86);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file23.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.5612987271995004233.8080");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(valveCollection28);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList32);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-8" + "'", str35, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(connectorList43);
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-8" + "'", str47, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray48);
        org.junit.Assert.assertNotNull(lifecycleListenerArray52);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray56);
        org.junit.Assert.assertNotNull(mimeMappings66);
        org.junit.Assert.assertNotNull(connectorList67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection73);
        org.junit.Assert.assertNull(file74);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(file81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertNotNull(file86);
        org.junit.Assert.assertEquals(file86.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file86.toString(), "/tmp/hi!.5928850872069536013.0");
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader14);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        java.lang.Class<?> wildcardClass18 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str17, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.apache.catalina.Context context2 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context2);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        tomcatEmbeddedServletContainerFactory6.setResourceLoader(resourceLoader7);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection14 = tomcatEmbeddedServletContainerFactory9.getTomcatConnectorCustomizers();
        boolean boolean15 = tomcatEmbeddedServletContainerFactory9.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress16 = null;
        tomcatEmbeddedServletContainerFactory9.setAddress(inetAddress16);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray18 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory9.addContextCustomizers(tomcatContextCustomizerArray18);
        tomcatEmbeddedServletContainerFactory6.addContextCustomizers(tomcatContextCustomizerArray18);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        boolean boolean28 = tomcatEmbeddedServletContainerFactory22.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress29 = null;
        tomcatEmbeddedServletContainerFactory22.setAddress(inetAddress29);
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory22.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList33 = tomcatEmbeddedServletContainerFactory32.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection34 = tomcatEmbeddedServletContainerFactory32.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList35 = tomcatEmbeddedServletContainerFactory32.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection36 = tomcatEmbeddedServletContainerFactory32.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory32.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory32.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList40 = tomcatEmbeddedServletContainerFactory32.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory41.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory41.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = tomcatEmbeddedServletContainerFactory46.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList48 = tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors = connectorList48;
        org.apache.catalina.Context context50 = null;
        tomcatEmbeddedServletContainerFactory41.postProcessContext(context50);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str55 = tomcatEmbeddedServletContainerFactory54.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray56 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory54.addConnectorCustomizers(tomcatConnectorCustomizerArray56);
        tomcatEmbeddedServletContainerFactory41.addConnectorCustomizers(tomcatConnectorCustomizerArray56);
        tomcatEmbeddedServletContainerFactory32.addConnectorCustomizers(tomcatConnectorCustomizerArray56);
        tomcatEmbeddedServletContainerFactory22.addConnectorCustomizers(tomcatConnectorCustomizerArray56);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray56);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str1, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray18);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList33);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection34);
        org.junit.Assert.assertNotNull(valveList35);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection36);
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertNotNull(connectorList40);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNotNull(connectorList48);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray56);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList16 = tomcatEmbeddedServletContainerFactory11.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings20);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings20);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList24 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory27.tomcatConnectorCustomizers = tomcatConnectorCustomizerList30;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection32 = tomcatEmbeddedServletContainerFactory27.getContextLifecycleListeners();
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory27.uriEncoding;
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory37.tomcatConnectorCustomizers = tomcatConnectorCustomizerList40;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection42 = tomcatEmbeddedServletContainerFactory37.getContextLifecycleListeners();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory37.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList44;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray46 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory36.addContextCustomizers(tomcatContextCustomizerArray46);
        tomcatEmbeddedServletContainerFactory27.addContextCustomizers(tomcatContextCustomizerArray46);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray46);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = tomcatEmbeddedServletContainerFactory50.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList53 = tomcatEmbeddedServletContainerFactory52.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory50.tomcatConnectorCustomizers = tomcatConnectorCustomizerList53;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection55 = tomcatEmbeddedServletContainerFactory50.getContextLifecycleListeners();
        java.lang.String str56 = tomcatEmbeddedServletContainerFactory50.uriEncoding;
        java.lang.String str57 = tomcatEmbeddedServletContainerFactory50.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory58.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray60 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory58.addInitializers(servletContextInitializerArray60);
        tomcatEmbeddedServletContainerFactory50.addInitializers(servletContextInitializerArray60);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray60);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory64.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory64.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings70 = tomcatEmbeddedServletContainerFactory69.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList71 = tomcatEmbeddedServletContainerFactory69.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory64.additionalTomcatConnectors = connectorList71;
        org.apache.catalina.Context context73 = null;
        tomcatEmbeddedServletContainerFactory64.postProcessContext(context73);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str78 = tomcatEmbeddedServletContainerFactory77.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray79 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory77.addConnectorCustomizers(tomcatConnectorCustomizerArray79);
        tomcatEmbeddedServletContainerFactory64.addConnectorCustomizers(tomcatConnectorCustomizerArray79);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray79);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList16);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList24);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray46);
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList53);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "UTF-8" + "'", str56, "UTF-8");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "UTF-8" + "'", str57, "UTF-8");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "UTF-8" + "'", str59, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray60);
        org.junit.Assert.assertNotNull(mimeMappings70);
        org.junit.Assert.assertNotNull(connectorList71);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray79);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory8.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer10 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer10 };
        tomcatEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray11);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection14 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        int int14 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.io.File file16 = tomcatEmbeddedServletContainerFactory0.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        java.util.Collection<org.apache.catalina.Valve> valveCollection17 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.lang.Class<?> wildcardClass18 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file16.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.713116148474569345.0");
        org.junit.Assert.assertNotNull(valveCollection17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.Context context4 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader11 = tomcatEmbeddedServletContainerFactory9.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray12 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory9.addErrorPages(errorPageArray12);
        tomcatEmbeddedServletContainerFactory6.addErrorPages(errorPageArray12);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray12);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection16 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory18.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray20);
        tomcatEmbeddedServletContainerFactory18.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray24 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory18.addContextLifecycleListeners(lifecycleListenerArray24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors = connectorList33;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory26.protocol;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory26.protocol;
        tomcatEmbeddedServletContainerFactory26.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection39 = tomcatEmbeddedServletContainerFactory26.getTomcatContextCustomizers();
        int int40 = tomcatEmbeddedServletContainerFactory26.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory41.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory41.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = tomcatEmbeddedServletContainerFactory46.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList48 = tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors = connectorList48;
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory41.protocol;
        java.lang.String str51 = tomcatEmbeddedServletContainerFactory41.protocol;
        java.net.InetAddress inetAddress52 = null;
        tomcatEmbeddedServletContainerFactory41.setAddress(inetAddress52);
        java.util.List<org.apache.catalina.connector.Connector> connectorList54 = tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory55.setTldSkip("UTF-8");
        java.io.File file61 = tomcatEmbeddedServletContainerFactory55.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory41.setDocumentRoot(file61);
        tomcatEmbeddedServletContainerFactory26.setDocumentRoot(file61);
        tomcatEmbeddedServletContainerFactory18.baseDirectory = file61;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings66 = tomcatEmbeddedServletContainerFactory65.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList68 = tomcatEmbeddedServletContainerFactory67.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory65.tomcatConnectorCustomizers = tomcatConnectorCustomizerList68;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet70 = tomcatEmbeddedServletContainerFactory65.getErrorPages();
        tomcatEmbeddedServletContainerFactory18.setErrorPages(errorPageSet70);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet70);
        java.util.List<org.apache.catalina.connector.Connector> connectorList73 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNull(resourceLoader11);
        org.junit.Assert.assertNotNull(errorPageArray12);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection16);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertNotNull(lifecycleListenerArray24);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNotNull(connectorList48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(connectorList54);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file61.toString(), "/tmp/UTF-8.3287055144377272738.0");
        org.junit.Assert.assertNotNull(mimeMappings66);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList68);
        org.junit.Assert.assertNotNull(errorPageSet70);
        org.junit.Assert.assertNotNull(connectorList73);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet5 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList6 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.util.List<org.apache.catalina.Valve> valveList9 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader10;
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(errorPageSet5);
        org.junit.Assert.assertNotNull(lifecycleListenerList6);
        org.junit.Assert.assertNotNull(valveList9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str12, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        java.util.List<org.apache.catalina.Valve> valveList9 = tomcatEmbeddedServletContainerFactory0.contextValves;
        int int10 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.Context context11 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context11);
        tomcatEmbeddedServletContainerFactory0.tldSkip = "hi!";
        org.apache.catalina.Context context15 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(valveList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n", (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        int int6 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList10 = tomcatEmbeddedServletContainerFactory9.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory7.tomcatConnectorCustomizers = tomcatConnectorCustomizerList10;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection12 = tomcatEmbeddedServletContainerFactory7.getContextLifecycleListeners();
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory7.uriEncoding;
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory7.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory15.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray17);
        tomcatEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray17);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray17);
        org.apache.catalina.startup.Tomcat tomcat21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer22 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList10);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-8" + "'", str14, "UTF-8");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray17);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList15;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray19);
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray23 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory17.addContextLifecycleListeners(lifecycleListenerArray23);
        tomcatEmbeddedServletContainerFactory7.addContextLifecycleListeners(lifecycleListenerArray23);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray23);
        boolean boolean27 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 0);
        java.util.concurrent.TimeUnit timeUnit31 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1, timeUnit31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(lifecycleListenerArray23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors = connectorList15;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory8.protocol;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory8.protocol;
        tomcatEmbeddedServletContainerFactory8.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection21 = tomcatEmbeddedServletContainerFactory8.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList22 = tomcatEmbeddedServletContainerFactory8.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList22;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList27 = tomcatEmbeddedServletContainerFactory26.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory24.tomcatConnectorCustomizers = tomcatConnectorCustomizerList27;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = tomcatEmbeddedServletContainerFactory24.getErrorPages();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList30 = tomcatEmbeddedServletContainerFactory24.contextLifecycleListeners;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings31);
        int int33 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        boolean boolean36 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection21);
        org.junit.Assert.assertNotNull(valveList22);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList27);
        org.junit.Assert.assertNotNull(errorPageSet29);
        org.junit.Assert.assertNotNull(lifecycleListenerList30);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer13 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray14 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer13 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray14);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection16 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection17 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection16);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection17);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.Class<?> wildcardClass5 = storeMergedWebXmlListener0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory7.protocol;
        tomcatEmbeddedServletContainerFactory7.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList23 = tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors = connectorList23;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory25.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray27);
        tomcatEmbeddedServletContainerFactory25.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray31 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory25.addContextLifecycleListeners(lifecycleListenerArray31);
        tomcatEmbeddedServletContainerFactory15.addContextLifecycleListeners(lifecycleListenerArray31);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList34 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory7.tomcatConnectorCustomizers = tomcatConnectorCustomizerList34;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList34);
        org.springframework.core.io.ResourceLoader resourceLoader37 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.apache.catalina.Context context39 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertNotNull(connectorList23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-8" + "'", str26, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(lifecycleListenerArray31);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList34);
        org.junit.Assert.assertNull(resourceLoader37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-8" + "'", str38, "UTF-8");
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        int int17 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray18 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory15.addContextLifecycleListeners(lifecycleListenerArray18);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray18);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader23 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        tomcatEmbeddedServletContainerFactory0.tldSkip = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors = connectorList34;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList34;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray18);
        org.junit.Assert.assertNull(resourceLoader23);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertNotNull(connectorList34);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.io.File file5 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList18 = null;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList18;
        tomcatEmbeddedServletContainerFactory0.setPort(8080);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader24 = tomcatEmbeddedServletContainerFactory22.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray25 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory22.addErrorPages(errorPageArray25);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray25);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory28.protocol;
        tomcatEmbeddedServletContainerFactory28.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection41 = tomcatEmbeddedServletContainerFactory36.getTomcatConnectorCustomizers();
        boolean boolean42 = tomcatEmbeddedServletContainerFactory36.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader45 = tomcatEmbeddedServletContainerFactory43.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory46.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory46.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection51 = tomcatEmbeddedServletContainerFactory46.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList52 = tomcatEmbeddedServletContainerFactory46.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory43.tomcatContextCustomizers = tomcatContextCustomizerList52;
        tomcatEmbeddedServletContainerFactory36.tomcatContextCustomizers = tomcatContextCustomizerList52;
        tomcatEmbeddedServletContainerFactory28.tomcatContextCustomizers = tomcatContextCustomizerList52;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList52;
        java.io.File file58 = tomcatEmbeddedServletContainerFactory0.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        org.apache.catalina.Context context59 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context59);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory61.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory61.setTldSkip("UTF-8");
        int int66 = tomcatEmbeddedServletContainerFactory61.getPort();
        tomcatEmbeddedServletContainerFactory61.setRegisterDefaultServlet(false);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList69 = tomcatEmbeddedServletContainerFactory61.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList69;
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertNotNull(errorPageArray25);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNull(resourceLoader45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection51);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList52);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file58.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.4306611709483023663.8080");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerList69);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray2 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray2);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray6 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors = connectorList15;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory8.protocol;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory8.protocol;
        tomcatEmbeddedServletContainerFactory8.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection21 = tomcatEmbeddedServletContainerFactory8.getTomcatContextCustomizers();
        int int22 = tomcatEmbeddedServletContainerFactory8.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList30 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors = connectorList30;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory23.protocol;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory23.protocol;
        java.net.InetAddress inetAddress34 = null;
        tomcatEmbeddedServletContainerFactory23.setAddress(inetAddress34);
        java.util.List<org.apache.catalina.connector.Connector> connectorList36 = tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory37.setTldSkip("UTF-8");
        java.io.File file43 = tomcatEmbeddedServletContainerFactory37.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory23.setDocumentRoot(file43);
        tomcatEmbeddedServletContainerFactory8.setDocumentRoot(file43);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file43;
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory50.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList53 = tomcatEmbeddedServletContainerFactory50.tomcatConnectorCustomizers;
        java.io.File file54 = tomcatEmbeddedServletContainerFactory50.baseDirectory;
        java.io.File file55 = tomcatEmbeddedServletContainerFactory50.baseDirectory;
        boolean boolean56 = tomcatEmbeddedServletContainerFactory50.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory57.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = tomcatEmbeddedServletContainerFactory57.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection61 = tomcatEmbeddedServletContainerFactory57.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader62 = tomcatEmbeddedServletContainerFactory57.resourceLoader;
        tomcatEmbeddedServletContainerFactory57.setTldSkip("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings66 = tomcatEmbeddedServletContainerFactory65.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList68 = tomcatEmbeddedServletContainerFactory67.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory65.tomcatConnectorCustomizers = tomcatConnectorCustomizerList68;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList71 = tomcatEmbeddedServletContainerFactory70.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection72 = tomcatEmbeddedServletContainerFactory70.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings74 = tomcatEmbeddedServletContainerFactory73.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader75 = tomcatEmbeddedServletContainerFactory73.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray76 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory73.addErrorPages(errorPageArray76);
        tomcatEmbeddedServletContainerFactory70.addErrorPages(errorPageArray76);
        tomcatEmbeddedServletContainerFactory65.addErrorPages(errorPageArray76);
        tomcatEmbeddedServletContainerFactory57.addErrorPages(errorPageArray76);
        tomcatEmbeddedServletContainerFactory50.addErrorPages(errorPageArray76);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray76);
        org.apache.catalina.connector.Connector connector83 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray2);
        org.junit.Assert.assertNotNull(lifecycleListenerArray6);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(connectorList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(connectorList36);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file43.toString(), "/tmp/UTF-8.8618302657816949424.0");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNull(file55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(mimeMappings60);
        org.junit.Assert.assertNotNull(valveCollection61);
        org.junit.Assert.assertNull(resourceLoader62);
        org.junit.Assert.assertNotNull(mimeMappings66);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList68);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList71);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection72);
        org.junit.Assert.assertNotNull(mimeMappings74);
        org.junit.Assert.assertNull(resourceLoader75);
        org.junit.Assert.assertNotNull(errorPageArray76);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList11 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors = connectorList19;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory12.protocol;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory12.protocol;
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection25 = tomcatEmbeddedServletContainerFactory12.getTomcatContextCustomizers();
        int int26 = tomcatEmbeddedServletContainerFactory12.getPort();
        java.io.File file28 = tomcatEmbeddedServletContainerFactory12.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file28;
        org.apache.catalina.Valve[] valveArray30 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray30);
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.util.Collection<org.apache.catalina.Valve> valveCollection33 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList11);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file28.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.3914315749447269888.0");
        org.junit.Assert.assertNotNull(valveArray30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str32, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(valveCollection33);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader14);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.Context context17 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList25 = tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors = connectorList25;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory18.protocol;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory18.protocol;
        java.net.InetAddress inetAddress29 = null;
        tomcatEmbeddedServletContainerFactory18.setAddress(inetAddress29);
        java.io.File file31 = null;
        tomcatEmbeddedServletContainerFactory18.setBaseDirectory(file31);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection33 = tomcatEmbeddedServletContainerFactory18.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList35 = tomcatEmbeddedServletContainerFactory34.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection36 = tomcatEmbeddedServletContainerFactory34.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader39 = tomcatEmbeddedServletContainerFactory37.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray40 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory37.addErrorPages(errorPageArray40);
        tomcatEmbeddedServletContainerFactory34.addErrorPages(errorPageArray40);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray43 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory34.addInitializers(servletContextInitializerArray43);
        tomcatEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray43);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context17, servletContextInitializerArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(connectorList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection33);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList35);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection36);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNull(resourceLoader39);
        org.junit.Assert.assertNotNull(errorPageArray40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray43);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.io.File file5 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList18 = null;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList18;
        tomcatEmbeddedServletContainerFactory0.setPort(8080);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader24 = tomcatEmbeddedServletContainerFactory22.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray25 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory22.addErrorPages(errorPageArray25);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray25);
        org.apache.catalina.Context context28 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertNotNull(errorPageArray25);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray16 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors = connectorList26;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.net.InetAddress inetAddress30 = null;
        tomcatEmbeddedServletContainerFactory19.setAddress(inetAddress30);
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setTldSkip("UTF-8");
        java.io.File file39 = tomcatEmbeddedServletContainerFactory33.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory19.setDocumentRoot(file39);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file39);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray44);
        tomcatEmbeddedServletContainerFactory42.setUriEncoding("hi!");
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        tomcatEmbeddedServletContainerFactory42.setSessionTimeout((int) (short) 100);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList51 = tomcatEmbeddedServletContainerFactory42.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory52.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = tomcatEmbeddedServletContainerFactory57.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList59 = tomcatEmbeddedServletContainerFactory57.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory52.additionalTomcatConnectors = connectorList59;
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory52.protocol;
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory52.protocol;
        tomcatEmbeddedServletContainerFactory52.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection65 = tomcatEmbeddedServletContainerFactory52.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList66 = tomcatEmbeddedServletContainerFactory52.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory42.tomcatContextCustomizers = tomcatContextCustomizerList66;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList66;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList70 = tomcatEmbeddedServletContainerFactory69.tomcatConnectorCustomizers;
        java.io.File file71 = tomcatEmbeddedServletContainerFactory69.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList72 = tomcatEmbeddedServletContainerFactory69.tomcatConnectorCustomizers;
        java.util.List<org.apache.catalina.connector.Connector> connectorList73 = tomcatEmbeddedServletContainerFactory69.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList73;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(lifecycleListenerArray16);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/tmp/UTF-8.5507535617872085360.0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList51);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(connectorList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection65);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList66);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList70);
        org.junit.Assert.assertNull(file71);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList72);
        org.junit.Assert.assertNotNull(connectorList73);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        org.apache.catalina.connector.Connector connector11 = null;
        org.apache.catalina.connector.Connector[] connectorArray12 = new org.apache.catalina.connector.Connector[] { connector11 };
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList15 = tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection16 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList17 = tomcatEmbeddedServletContainerFactory14.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection18);
        java.net.InetAddress inetAddress20 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress20);
        java.util.List<org.apache.catalina.Valve> valveList22 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.util.Collection<org.apache.catalina.Valve> valveCollection24 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory25.setProtocol("hi!");
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory25.protocol;
        tomcatEmbeddedServletContainerFactory25.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.io.File file34 = tomcatEmbeddedServletContainerFactory25.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file34;
        org.apache.catalina.Context context36 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(connectorArray12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection16);
        org.junit.Assert.assertNotNull(valveList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(valveList22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(valveCollection24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.8512044566639493365.0");
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str2 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.apache.catalina.Context context3 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory6.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer8 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray9 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer8 };
        tomcatEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray9);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context3, servletContextInitializerArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-8" + "'", str2, "UTF-8");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(servletContextInitializerArray9);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.apache.catalina.Context context2 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context2);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory4.getMimeMappings();
        tomcatEmbeddedServletContainerFactory4.setProtocol("UTF-8");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory4.protocol;
        tomcatEmbeddedServletContainerFactory4.setTldSkip("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = tomcatEmbeddedServletContainerFactory4.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList14 = tomcatEmbeddedServletContainerFactory4.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList14);
        org.apache.catalina.Context context16 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader20 = null;
        tomcatEmbeddedServletContainerFactory19.setResourceLoader(resourceLoader20);
        tomcatEmbeddedServletContainerFactory19.setContextPath("");
        boolean boolean24 = tomcatEmbeddedServletContainerFactory19.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader25 = tomcatEmbeddedServletContainerFactory19.resourceLoader;
        boolean boolean26 = tomcatEmbeddedServletContainerFactory19.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory27.tomcatConnectorCustomizers = tomcatConnectorCustomizerList30;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = tomcatEmbeddedServletContainerFactory27.getErrorPages();
        java.net.InetAddress inetAddress33 = tomcatEmbeddedServletContainerFactory27.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory34.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors = connectorList41;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory34.protocol;
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory34.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory45.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = tomcatEmbeddedServletContainerFactory45.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = tomcatEmbeddedServletContainerFactory45.getMimeMappings();
        tomcatEmbeddedServletContainerFactory34.setMimeMappings(mimeMappings49);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory51.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory51.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection55 = tomcatEmbeddedServletContainerFactory51.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray56 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList57 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList57, lifecycleListenerArray56);
        tomcatEmbeddedServletContainerFactory51.contextLifecycleListeners = lifecycleListenerList57;
        tomcatEmbeddedServletContainerFactory34.contextLifecycleListeners = lifecycleListenerList57;
        tomcatEmbeddedServletContainerFactory27.contextLifecycleListeners = lifecycleListenerList57;
        tomcatEmbeddedServletContainerFactory27.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = tomcatEmbeddedServletContainerFactory64.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList67 = tomcatEmbeddedServletContainerFactory66.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory64.tomcatConnectorCustomizers = tomcatConnectorCustomizerList67;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection69 = tomcatEmbeddedServletContainerFactory64.getContextLifecycleListeners();
        java.lang.String str70 = tomcatEmbeddedServletContainerFactory64.uriEncoding;
        java.lang.String str71 = tomcatEmbeddedServletContainerFactory64.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str73 = tomcatEmbeddedServletContainerFactory72.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray74 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory72.addInitializers(servletContextInitializerArray74);
        tomcatEmbeddedServletContainerFactory64.addInitializers(servletContextInitializerArray74);
        tomcatEmbeddedServletContainerFactory27.addInitializers(servletContextInitializerArray74);
        tomcatEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray74);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context16, servletContextInitializerArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str1, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList14);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(resourceLoader25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertNull(inetAddress33);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(valveCollection55);
        org.junit.Assert.assertNotNull(lifecycleListenerArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList67);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "UTF-8" + "'", str70, "UTF-8");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "UTF-8" + "'", str71, "UTF-8");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "UTF-8" + "'", str73, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray74);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList8 = tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers;
        java.util.List<org.apache.catalina.connector.Connector> connectorList9 = tomcatEmbeddedServletContainerFactory2.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList17;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory10.protocol;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory10.protocol;
        java.net.InetAddress inetAddress21 = null;
        tomcatEmbeddedServletContainerFactory10.setAddress(inetAddress21);
        java.util.List<org.apache.catalina.connector.Connector> connectorList23 = tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setTldSkip("UTF-8");
        java.io.File file30 = tomcatEmbeddedServletContainerFactory24.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory10.setDocumentRoot(file30);
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 100);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList34 = tomcatEmbeddedServletContainerFactory10.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers = tomcatConnectorCustomizerList34;
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList8);
        org.junit.Assert.assertNotNull(connectorList9);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(connectorList23);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file30.toString(), "/tmp/UTF-8.3736294398811888445.0");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList34);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.io.File file7 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "";
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection11 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.apache.catalina.Context context13 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection11);
        org.junit.Assert.assertNull(resourceLoader12);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.apache.catalina.Context context17 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context17, servletContextInitializerArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader8 = tomcatEmbeddedServletContainerFactory6.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection14 = tomcatEmbeddedServletContainerFactory9.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList15 = tomcatEmbeddedServletContainerFactory9.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory6.tomcatContextCustomizers = tomcatContextCustomizerList15;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList25 = tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors = connectorList25;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory18.protocol;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory18.protocol;
        tomcatEmbeddedServletContainerFactory18.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection31 = tomcatEmbeddedServletContainerFactory18.getTomcatContextCustomizers();
        int int32 = tomcatEmbeddedServletContainerFactory18.getPort();
        java.io.File file34 = tomcatEmbeddedServletContainerFactory18.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory6.baseDirectory = file34;
        org.apache.catalina.Valve[] valveArray36 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory6.addContextValves(valveArray36);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray36);
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory40.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = tomcatEmbeddedServletContainerFactory45.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList47 = tomcatEmbeddedServletContainerFactory45.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory40.additionalTomcatConnectors = connectorList47;
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory40.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = tomcatEmbeddedServletContainerFactory50.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader52 = tomcatEmbeddedServletContainerFactory50.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory53.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory53.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection58 = tomcatEmbeddedServletContainerFactory53.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList59 = tomcatEmbeddedServletContainerFactory53.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory50.tomcatContextCustomizers = tomcatContextCustomizerList59;
        tomcatEmbeddedServletContainerFactory40.tomcatContextCustomizers = tomcatContextCustomizerList59;
        tomcatEmbeddedServletContainerFactory40.setJspServletClassName("UTF-8");
        java.lang.String str64 = tomcatEmbeddedServletContainerFactory40.getUriEncoding();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection65 = tomcatEmbeddedServletContainerFactory40.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory66.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory66.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings72 = tomcatEmbeddedServletContainerFactory71.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList73 = tomcatEmbeddedServletContainerFactory71.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory66.additionalTomcatConnectors = connectorList73;
        java.lang.String str75 = tomcatEmbeddedServletContainerFactory66.protocol;
        java.lang.String str76 = tomcatEmbeddedServletContainerFactory66.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory77.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory77.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings83 = tomcatEmbeddedServletContainerFactory82.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList84 = tomcatEmbeddedServletContainerFactory82.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory77.additionalTomcatConnectors = connectorList84;
        java.lang.String str86 = tomcatEmbeddedServletContainerFactory77.protocol;
        java.lang.String str87 = tomcatEmbeddedServletContainerFactory77.protocol;
        java.net.InetAddress inetAddress88 = null;
        tomcatEmbeddedServletContainerFactory77.setAddress(inetAddress88);
        int int90 = tomcatEmbeddedServletContainerFactory77.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory91 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings92 = tomcatEmbeddedServletContainerFactory91.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory93 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList94 = tomcatEmbeddedServletContainerFactory93.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory91.tomcatConnectorCustomizers = tomcatConnectorCustomizerList94;
        tomcatEmbeddedServletContainerFactory77.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList94);
        tomcatEmbeddedServletContainerFactory66.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList94);
        tomcatEmbeddedServletContainerFactory40.tomcatConnectorCustomizers = tomcatConnectorCustomizerList94;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList94);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNull(resourceLoader8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection14);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(connectorList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6710890722958304564.0");
        org.junit.Assert.assertNotNull(valveArray36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-8" + "'", str39, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(connectorList47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertNull(resourceLoader52);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection58);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList59);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "UTF-8" + "'", str64, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection65);
        org.junit.Assert.assertNotNull(mimeMappings72);
        org.junit.Assert.assertNotNull(connectorList73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings83);
        org.junit.Assert.assertNotNull(connectorList84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(mimeMappings92);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList94);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory1.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers;
        java.io.File file5 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        java.io.File file6 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        boolean boolean7 = tomcatEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory1.protocol = "UTF-8";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        java.io.File file15 = tomcatEmbeddedServletContainerFactory10.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList19;
        tomcatEmbeddedServletContainerFactory1.additionalTomcatConnectors = connectorList19;
        java.net.InetAddress inetAddress22 = tomcatEmbeddedServletContainerFactory1.getAddress();
        org.apache.catalina.Context context23 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory24.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray26);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str29 = storeMergedWebXmlListener28.getMERGED_WEB_XML();
        java.lang.String str30 = storeMergedWebXmlListener28.getMERGED_WEB_XML();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str33 = storeMergedWebXmlListener32.getMERGED_WEB_XML();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray34 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener28, storeMergedWebXmlListener31, storeMergedWebXmlListener32 };
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList35 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList35, lifecycleListenerArray34);
        tomcatEmbeddedServletContainerFactory24.contextLifecycleListeners = lifecycleListenerList35;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray38 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray38);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.configureContext(context23, servletContextInitializerArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertNull(inetAddress22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str29, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str30, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str33, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertNotNull(lifecycleListenerArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(servletContextInitializerArray38);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList8 = tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers;
        int int9 = tomcatEmbeddedServletContainerFactory2.getPort();
        org.apache.catalina.Context context10 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.addJspServlet(context10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList8 = tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader9);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList18;
        org.apache.catalina.Context context20 = null;
        tomcatEmbeddedServletContainerFactory11.postProcessContext(context20);
        java.net.InetAddress inetAddress22 = tomcatEmbeddedServletContainerFactory11.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList24 = tomcatEmbeddedServletContainerFactory23.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection25 = tomcatEmbeddedServletContainerFactory23.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory26.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader28 = tomcatEmbeddedServletContainerFactory26.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray29 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory26.addErrorPages(errorPageArray29);
        tomcatEmbeddedServletContainerFactory23.addErrorPages(errorPageArray29);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory32.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList39 = tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList40 = tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory32.additionalTomcatConnectors = connectorList40;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory42.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection47 = tomcatEmbeddedServletContainerFactory42.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList48 = tomcatEmbeddedServletContainerFactory42.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory32.tomcatContextCustomizers = tomcatContextCustomizerList48;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str51 = storeMergedWebXmlListener50.getEmptyWebXml();
        java.lang.String str52 = storeMergedWebXmlListener50.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str54 = storeMergedWebXmlListener53.getMERGED_WEB_XML();
        java.lang.String str55 = storeMergedWebXmlListener53.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray56 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener50, storeMergedWebXmlListener53 };
        tomcatEmbeddedServletContainerFactory32.addContextLifecycleListeners(lifecycleListenerArray56);
        tomcatEmbeddedServletContainerFactory23.addContextLifecycleListeners(lifecycleListenerArray56);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = tomcatEmbeddedServletContainerFactory59.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList62 = tomcatEmbeddedServletContainerFactory61.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory59.tomcatConnectorCustomizers = tomcatConnectorCustomizerList62;
        tomcatEmbeddedServletContainerFactory23.tomcatConnectorCustomizers = tomcatConnectorCustomizerList62;
        org.springframework.core.io.ResourceLoader resourceLoader65 = null;
        tomcatEmbeddedServletContainerFactory23.resourceLoader = resourceLoader65;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory67.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory67.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings73 = tomcatEmbeddedServletContainerFactory72.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList74 = tomcatEmbeddedServletContainerFactory72.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList75 = tomcatEmbeddedServletContainerFactory72.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory67.additionalTomcatConnectors = connectorList75;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str78 = tomcatEmbeddedServletContainerFactory77.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray79 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory77.addInitializers(servletContextInitializerArray79);
        tomcatEmbeddedServletContainerFactory77.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray83 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory77.addContextLifecycleListeners(lifecycleListenerArray83);
        tomcatEmbeddedServletContainerFactory67.addContextLifecycleListeners(lifecycleListenerArray83);
        org.apache.catalina.Context context86 = null;
        tomcatEmbeddedServletContainerFactory67.postProcessContext(context86);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList88 = tomcatEmbeddedServletContainerFactory67.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory23.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList88);
        java.io.File file91 = tomcatEmbeddedServletContainerFactory23.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory11.setDocumentRoot(file91);
        tomcatEmbeddedServletContainerFactory2.setDocumentRoot(file91);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList8);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertNull(inetAddress22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection25);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertNotNull(errorPageArray29);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(connectorList39);
        org.junit.Assert.assertNotNull(connectorList40);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection47);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str51, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str52, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str54, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str55, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray56);
        org.junit.Assert.assertNotNull(mimeMappings60);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList62);
        org.junit.Assert.assertNotNull(mimeMappings73);
        org.junit.Assert.assertNotNull(connectorList74);
        org.junit.Assert.assertNotNull(connectorList75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "UTF-8" + "'", str78, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray79);
        org.junit.Assert.assertNotNull(lifecycleListenerArray83);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList88);
        org.junit.Assert.assertNotNull(file91);
        org.junit.Assert.assertEquals(file91.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file91.toString(), "/tmp/UTF-8.6422718500867172391.8080");
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory10.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        org.springframework.core.io.ResourceLoader resourceLoader24 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader24);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str2 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str5 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str6 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str7 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str8 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str2, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str6, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str7, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str8, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) 1);
        java.util.List<org.apache.catalina.Valve> valveList2 = tomcatEmbeddedServletContainerFactory1.contextValves;
        org.apache.catalina.Context context3 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory4.additionalTomcatConnectors = connectorList11;
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory4.protocol;
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory4.protocol;
        tomcatEmbeddedServletContainerFactory4.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection17 = tomcatEmbeddedServletContainerFactory4.getTomcatContextCustomizers();
        java.io.File file18 = tomcatEmbeddedServletContainerFactory4.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList20 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory4.tomcatConnectorCustomizers = tomcatConnectorCustomizerList20;
        boolean boolean22 = tomcatEmbeddedServletContainerFactory4.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory4.uriEncoding = "UTF-8";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList25 = tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory27.tomcatConnectorCustomizers = tomcatConnectorCustomizerList30;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection32 = tomcatEmbeddedServletContainerFactory27.getContextLifecycleListeners();
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory27.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors = connectorList34;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory26.protocol;
        tomcatEmbeddedServletContainerFactory26.setSessionTimeout(0);
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory26.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory40.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = tomcatEmbeddedServletContainerFactory45.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList47 = tomcatEmbeddedServletContainerFactory45.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList48 = tomcatEmbeddedServletContainerFactory45.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory40.additionalTomcatConnectors = connectorList48;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str51 = tomcatEmbeddedServletContainerFactory50.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray52 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory50.addInitializers(servletContextInitializerArray52);
        tomcatEmbeddedServletContainerFactory50.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray56 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory50.addContextLifecycleListeners(lifecycleListenerArray56);
        tomcatEmbeddedServletContainerFactory40.addContextLifecycleListeners(lifecycleListenerArray56);
        org.apache.catalina.Context context59 = null;
        tomcatEmbeddedServletContainerFactory40.postProcessContext(context59);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory61.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = tomcatEmbeddedServletContainerFactory61.getMimeMappings();
        tomcatEmbeddedServletContainerFactory61.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str70 = tomcatEmbeddedServletContainerFactory69.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer71 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray72 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer71 };
        tomcatEmbeddedServletContainerFactory69.addInitializers(servletContextInitializerArray72);
        tomcatEmbeddedServletContainerFactory61.addInitializers(servletContextInitializerArray72);
        tomcatEmbeddedServletContainerFactory40.addInitializers(servletContextInitializerArray72);
        tomcatEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray72);
        tomcatEmbeddedServletContainerFactory4.addInitializers(servletContextInitializerArray72);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.configureContext(context3, servletContextInitializerArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(valveList2);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection17);
        org.junit.Assert.assertNull(file18);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList25);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str36, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str39, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(connectorList47);
        org.junit.Assert.assertNotNull(connectorList48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "UTF-8" + "'", str51, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray52);
        org.junit.Assert.assertNotNull(lifecycleListenerArray56);
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(servletContextInitializerArray72);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection12 = tomcatEmbeddedServletContainerFactory7.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory7.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector15 = null;
        org.apache.catalina.connector.Connector[] connectorArray16 = new org.apache.catalina.connector.Connector[] { connector15 };
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray16);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray16);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList19 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList30 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors = connectorList30;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory23.protocol;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory23.protocol;
        tomcatEmbeddedServletContainerFactory23.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection36 = tomcatEmbeddedServletContainerFactory23.getTomcatContextCustomizers();
        java.io.File file37 = tomcatEmbeddedServletContainerFactory23.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList39 = tomcatEmbeddedServletContainerFactory38.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory23.tomcatConnectorCustomizers = tomcatConnectorCustomizerList39;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory41.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray43 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory41.addInitializers(servletContextInitializerArray43);
        tomcatEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray43);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray43);
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 1);
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection12);
        org.junit.Assert.assertNotNull(connectorArray16);
        org.junit.Assert.assertNotNull(lifecycleListenerList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(connectorList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection36);
        org.junit.Assert.assertNull(file37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-8" + "'", str42, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray43);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        org.apache.catalina.Context context18 = null;
        tomcatEmbeddedServletContainerFactory9.postProcessContext(context18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory22.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray24 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory22.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory9.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.Valve> valveList30 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection31 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList33 = tomcatEmbeddedServletContainerFactory32.tomcatConnectorCustomizers;
        int int34 = tomcatEmbeddedServletContainerFactory32.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory32.uriEncoding = "hi!";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory37.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray39 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray39);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str42 = storeMergedWebXmlListener41.getMERGED_WEB_XML();
        java.lang.String str43 = storeMergedWebXmlListener41.getMERGED_WEB_XML();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str46 = storeMergedWebXmlListener45.getMERGED_WEB_XML();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray47 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener41, storeMergedWebXmlListener44, storeMergedWebXmlListener45 };
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList48 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList48, lifecycleListenerArray47);
        tomcatEmbeddedServletContainerFactory37.contextLifecycleListeners = lifecycleListenerList48;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray51 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray51);
        tomcatEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray51);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray51);
        java.lang.String str55 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray24);
        org.junit.Assert.assertNotNull(valveList30);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection31);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-8" + "'", str38, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str42, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str43, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str46, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertNotNull(lifecycleListenerArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(servletContextInitializerArray51);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.apache.catalina.connector.Connector connector9 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertNotNull(connectorList8);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer9 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray10 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer9 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray10);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList15 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10);
        java.io.File file19 = tomcatEmbeddedServletContainerFactory0.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection12);
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str14, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList15);
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file19.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.3253551649613512462.0");
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList16 = tomcatEmbeddedServletContainerFactory11.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings20);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings20);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList24 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        int int28 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList16);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList14;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory18.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory21.getUriEncoding();
        int int23 = tomcatEmbeddedServletContainerFactory21.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory18.setMimeMappings(mimeMappings24);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader29 = tomcatEmbeddedServletContainerFactory27.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray30 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory27.addErrorPages(errorPageArray30);
        boolean boolean32 = tomcatEmbeddedServletContainerFactory27.isRegisterJspServlet();
        java.net.InetAddress inetAddress33 = tomcatEmbeddedServletContainerFactory27.getAddress();
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = tomcatEmbeddedServletContainerFactory27.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList34;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8080 + "'", int23 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNull(resourceLoader29);
        org.junit.Assert.assertNotNull(errorPageArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(inetAddress33);
        org.junit.Assert.assertNotNull(connectorList34);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection3 = tomcatEmbeddedServletContainerFactory2.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList4 = tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners;
        java.util.List<org.apache.catalina.Valve> valveList5 = tomcatEmbeddedServletContainerFactory2.contextValves;
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader6);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList8 = tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory2.getContextPath();
        boolean boolean10 = tomcatEmbeddedServletContainerFactory2.isRegisterJspServlet();
        tomcatEmbeddedServletContainerFactory2.tldSkip = "hi!";
        java.util.concurrent.TimeUnit timeUnit14 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.setSessionTimeout(0, timeUnit14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection3);
        org.junit.Assert.assertNotNull(lifecycleListenerList4);
        org.junit.Assert.assertNotNull(valveList5);
        org.junit.Assert.assertNotNull(lifecycleListenerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        org.apache.catalina.Context context18 = null;
        tomcatEmbeddedServletContainerFactory9.postProcessContext(context18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory22.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray24 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory22.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory9.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory31.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList38 = tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors = connectorList38;
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory31.protocol;
        java.lang.String str41 = tomcatEmbeddedServletContainerFactory31.protocol;
        java.net.InetAddress inetAddress42 = null;
        tomcatEmbeddedServletContainerFactory31.setAddress(inetAddress42);
        int int44 = tomcatEmbeddedServletContainerFactory31.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader45 = tomcatEmbeddedServletContainerFactory31.resourceLoader;
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory31.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray47 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet48, errorPageArray47);
        tomcatEmbeddedServletContainerFactory31.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet48);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet48);
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.apache.catalina.connector.Connector connector54 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-8" + "'", str30, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(connectorList38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(resourceLoader45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str46, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(errorPageArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet5 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.net.InetAddress inetAddress6 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList14;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory7.protocol;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory7.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        tomcatEmbeddedServletContainerFactory7.setMimeMappings(mimeMappings22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection28 = tomcatEmbeddedServletContainerFactory24.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray29 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList30 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList30, lifecycleListenerArray29);
        tomcatEmbeddedServletContainerFactory24.contextLifecycleListeners = lifecycleListenerList30;
        tomcatEmbeddedServletContainerFactory7.contextLifecycleListeners = lifecycleListenerList30;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList30;
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory37.tomcatConnectorCustomizers = tomcatConnectorCustomizerList40;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection42 = tomcatEmbeddedServletContainerFactory37.getContextLifecycleListeners();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory37.uriEncoding;
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory37.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory45.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray47 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory45.addInitializers(servletContextInitializerArray47);
        tomcatEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray47);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray47);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean52 = tomcatEmbeddedServletContainerFactory51.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection53 = tomcatEmbeddedServletContainerFactory51.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory54.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection59 = tomcatEmbeddedServletContainerFactory54.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory54.setSessionTimeout((int) (byte) -1);
        tomcatEmbeddedServletContainerFactory54.protocol = "org.apache.coyote.http11.Http11NioProtocol";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory64.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory64.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection69 = tomcatEmbeddedServletContainerFactory64.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList70 = tomcatEmbeddedServletContainerFactory64.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory54.tomcatContextCustomizers = tomcatContextCustomizerList70;
        tomcatEmbeddedServletContainerFactory51.tomcatContextCustomizers = tomcatContextCustomizerList70;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList70;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection74 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(errorPageSet5);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(valveCollection28);
        org.junit.Assert.assertNotNull(lifecycleListenerArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-8" + "'", str44, "UTF-8");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "UTF-8" + "'", str46, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(valveCollection53);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection59);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection69);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList70);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection74);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory4.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        java.io.File file8 = tomcatEmbeddedServletContainerFactory6.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList9 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory4.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList9);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList9);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList20 = tomcatEmbeddedServletContainerFactory15.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory15.setMimeMappings(mimeMappings24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList27 = tomcatEmbeddedServletContainerFactory26.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection28 = tomcatEmbeddedServletContainerFactory26.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader31 = tomcatEmbeddedServletContainerFactory29.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray32 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory29.addErrorPages(errorPageArray32);
        tomcatEmbeddedServletContainerFactory26.addErrorPages(errorPageArray32);
        tomcatEmbeddedServletContainerFactory15.addErrorPages(errorPageArray32);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray32);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.io.File file39 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.apache.catalina.connector.Connector[] connectorArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Connectors must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str5, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection12);
        org.junit.Assert.assertNotNull(lifecycleListenerList20);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection28);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNull(resourceLoader31);
        org.junit.Assert.assertNotNull(errorPageArray32);
        org.junit.Assert.assertNull(file39);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.Context context4 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader11 = tomcatEmbeddedServletContainerFactory9.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray12 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory9.addErrorPages(errorPageArray12);
        tomcatEmbeddedServletContainerFactory6.addErrorPages(errorPageArray12);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray12);
        java.util.List<org.apache.catalina.Valve> valveList16 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection17 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.apache.catalina.Context context18 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNull(resourceLoader11);
        org.junit.Assert.assertNotNull(errorPageArray12);
        org.junit.Assert.assertNotNull(valveList16);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection17);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str2 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.Context context4 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str2, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.io.File file9 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str12, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList5 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.apache.catalina.Valve> valveCollection6 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection7 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList5);
        org.junit.Assert.assertNotNull(valveCollection6);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection7);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        int int17 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray18 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory15.addContextLifecycleListeners(lifecycleListenerArray18);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray18);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader23 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList27 = tomcatEmbeddedServletContainerFactory26.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory24.tomcatConnectorCustomizers = tomcatConnectorCustomizerList27;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection29 = tomcatEmbeddedServletContainerFactory24.getContextLifecycleListeners();
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory24.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList31 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.ErrorPage errorPage32 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray33 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage32 };
        tomcatEmbeddedServletContainerFactory24.addErrorPages(errorPageArray33);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray33);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader38 = tomcatEmbeddedServletContainerFactory36.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory39.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory39.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection44 = tomcatEmbeddedServletContainerFactory39.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList45 = tomcatEmbeddedServletContainerFactory39.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory36.tomcatContextCustomizers = tomcatContextCustomizerList45;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList47 = tomcatEmbeddedServletContainerFactory36.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection48 = tomcatEmbeddedServletContainerFactory36.getTomcatConnectorCustomizers();
        boolean boolean49 = tomcatEmbeddedServletContainerFactory36.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory50.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory50.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = tomcatEmbeddedServletContainerFactory55.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList57 = tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory50.additionalTomcatConnectors = connectorList57;
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory50.protocol;
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory50.protocol;
        java.net.InetAddress inetAddress61 = null;
        tomcatEmbeddedServletContainerFactory50.setAddress(inetAddress61);
        java.util.List<org.apache.catalina.connector.Connector> connectorList63 = tomcatEmbeddedServletContainerFactory50.additionalTomcatConnectors;
        org.springframework.core.io.ResourceLoader resourceLoader64 = null;
        tomcatEmbeddedServletContainerFactory50.setResourceLoader(resourceLoader64);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings66 = tomcatEmbeddedServletContainerFactory50.getMimeMappings();
        tomcatEmbeddedServletContainerFactory36.setMimeMappings(mimeMappings66);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings70 = tomcatEmbeddedServletContainerFactory69.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList72 = tomcatEmbeddedServletContainerFactory71.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory69.tomcatConnectorCustomizers = tomcatConnectorCustomizerList72;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection74 = tomcatEmbeddedServletContainerFactory69.getContextLifecycleListeners();
        java.lang.String str75 = tomcatEmbeddedServletContainerFactory69.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList76 = tomcatEmbeddedServletContainerFactory69.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory68.additionalTomcatConnectors = connectorList76;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray78 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory68.addContextCustomizers(tomcatContextCustomizerArray78);
        tomcatEmbeddedServletContainerFactory36.addContextCustomizers(tomcatContextCustomizerArray78);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray78);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray18);
        org.junit.Assert.assertNull(resourceLoader23);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList27);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-8" + "'", str30, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList31);
        org.junit.Assert.assertNotNull(errorPageArray33);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNull(resourceLoader38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection44);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList47);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNotNull(connectorList57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(connectorList63);
        org.junit.Assert.assertNotNull(mimeMappings66);
        org.junit.Assert.assertNotNull(mimeMappings70);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList72);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "UTF-8" + "'", str75, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList76);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray78);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList10 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.apache.catalina.Context context13 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory16.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer18 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer18 };
        tomcatEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray19);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context13, servletContextInitializerArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(lifecycleListenerList10);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray15 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16, errorPageArray15);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) '#');
        tomcatEmbeddedServletContainerFactory0.setProtocol("org.apache.coyote.http11.Http11NioProtocol");
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(errorPageArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str23, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection7 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.setPort(100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList17;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory10.protocol;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory10.protocol;
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection23 = tomcatEmbeddedServletContainerFactory10.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList24 = tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tldSkip = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setProtocol("hi!");
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory29.protocol;
        int int35 = tomcatEmbeddedServletContainerFactory29.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList39 = tomcatEmbeddedServletContainerFactory38.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory36.tomcatConnectorCustomizers = tomcatConnectorCustomizerList39;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection41 = tomcatEmbeddedServletContainerFactory36.getContextLifecycleListeners();
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory36.uriEncoding;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory36.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory44.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory44.addInitializers(servletContextInitializerArray46);
        tomcatEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray46);
        tomcatEmbeddedServletContainerFactory29.addInitializers(servletContextInitializerArray46);
        tomcatEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray46);
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray46);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray46);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList53 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection7);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection23);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList24);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList39);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-8" + "'", str42, "UTF-8");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-8" + "'", str45, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList53);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.io.File file13 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file13);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection15 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList23 = tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors = connectorList23;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory16.protocol;
        org.apache.catalina.Context context26 = null;
        tomcatEmbeddedServletContainerFactory16.postProcessContext(context26);
        java.io.File file29 = tomcatEmbeddedServletContainerFactory16.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file29);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        boolean boolean33 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n";
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection15);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(connectorList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file29.toString(), "/tmp/UTF-8.932665035285221624.0");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList14;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory18.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList23 = tomcatEmbeddedServletContainerFactory18.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList23;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(8080);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection32 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        boolean boolean33 = tomcatEmbeddedServletContainerFactory27.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress34 = null;
        tomcatEmbeddedServletContainerFactory27.setAddress(inetAddress34);
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory27.getContextPath();
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader41 = tomcatEmbeddedServletContainerFactory39.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory42.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection47 = tomcatEmbeddedServletContainerFactory42.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList48 = tomcatEmbeddedServletContainerFactory42.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory39.tomcatContextCustomizers = tomcatContextCustomizerList48;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList50 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory51.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory51.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = tomcatEmbeddedServletContainerFactory56.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList58 = tomcatEmbeddedServletContainerFactory56.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory51.additionalTomcatConnectors = connectorList58;
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory51.protocol;
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory51.protocol;
        tomcatEmbeddedServletContainerFactory51.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection64 = tomcatEmbeddedServletContainerFactory51.getTomcatContextCustomizers();
        int int65 = tomcatEmbeddedServletContainerFactory51.getPort();
        java.io.File file67 = tomcatEmbeddedServletContainerFactory51.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory39.baseDirectory = file67;
        org.apache.catalina.Valve[] valveArray69 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory39.addContextValves(valveArray69);
        tomcatEmbeddedServletContainerFactory27.addContextValves(valveArray69);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings72 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        tomcatEmbeddedServletContainerFactory26.setMimeMappings(mimeMappings72);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings72);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str17, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNull(resourceLoader41);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection47);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList48);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList50);
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertNotNull(connectorList58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(file67);
        org.junit.Assert.assertEquals(file67.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file67.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.7572019922826791202.0");
        org.junit.Assert.assertNotNull(valveArray69);
        org.junit.Assert.assertNotNull(mimeMappings72);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.io.File file6 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList14;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory7.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory7.setMimeMappings(mimeMappings20);
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory7.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList30 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors = connectorList30;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory23.protocol;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory23.protocol;
        tomcatEmbeddedServletContainerFactory23.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection36 = tomcatEmbeddedServletContainerFactory23.getTomcatContextCustomizers();
        int int37 = tomcatEmbeddedServletContainerFactory23.getPort();
        java.io.File file39 = tomcatEmbeddedServletContainerFactory23.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory7.baseDirectory = file39;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file39);
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        tomcatEmbeddedServletContainerFactory0.protocol = "hi!";
        tomcatEmbeddedServletContainerFactory0.setPort((int) '4');
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(connectorList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.9041608087779918055.0");
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers = tomcatConnectorCustomizerList17;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList17);
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        org.apache.catalina.Context context26 = null;
        tomcatEmbeddedServletContainerFactory22.postProcessContext(context26);
        java.util.Collection<org.apache.catalina.Valve> valveCollection28 = tomcatEmbeddedServletContainerFactory22.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList36 = tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors = connectorList36;
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory29.protocol;
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory29.protocol;
        java.net.InetAddress inetAddress40 = null;
        tomcatEmbeddedServletContainerFactory29.setAddress(inetAddress40);
        int int42 = tomcatEmbeddedServletContainerFactory29.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader43 = tomcatEmbeddedServletContainerFactory29.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory44.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection49 = tomcatEmbeddedServletContainerFactory44.getTomcatConnectorCustomizers();
        boolean boolean50 = tomcatEmbeddedServletContainerFactory44.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress51 = null;
        tomcatEmbeddedServletContainerFactory44.setAddress(inetAddress51);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray53 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory44.addContextCustomizers(tomcatContextCustomizerArray53);
        tomcatEmbeddedServletContainerFactory29.addContextCustomizers(tomcatContextCustomizerArray53);
        tomcatEmbeddedServletContainerFactory22.addContextCustomizers(tomcatContextCustomizerArray53);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray53);
        int int58 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet59 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(valveCollection28);
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNotNull(connectorList36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(resourceLoader43);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(errorPageSet59);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList6 = tomcatEmbeddedServletContainerFactory5.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection7 = tomcatEmbeddedServletContainerFactory5.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader10 = tomcatEmbeddedServletContainerFactory8.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray11 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory8.addErrorPages(errorPageArray11);
        tomcatEmbeddedServletContainerFactory5.addErrorPages(errorPageArray11);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray11);
        org.springframework.core.io.ResourceLoader resourceLoader15 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        int int20 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.startup.Tomcat tomcat21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer22 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList6);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection7);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(resourceLoader10);
        org.junit.Assert.assertNotNull(errorPageArray11);
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.Class<?> wildcardClass12 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.apache.catalina.Context context10 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection17 = tomcatEmbeddedServletContainerFactory12.getTomcatConnectorCustomizers();
        boolean boolean18 = tomcatEmbeddedServletContainerFactory12.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress19 = null;
        tomcatEmbeddedServletContainerFactory12.setAddress(inetAddress19);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer21 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray22 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer21 };
        tomcatEmbeddedServletContainerFactory12.addConnectorCustomizers(tomcatConnectorCustomizerArray22);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory25.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory30.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors = connectorList32;
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory25.protocol;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory25.protocol;
        java.net.InetAddress inetAddress36 = null;
        tomcatEmbeddedServletContainerFactory25.setAddress(inetAddress36);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer38 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray39 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer38 };
        tomcatEmbeddedServletContainerFactory25.addConnectorCustomizers(tomcatConnectorCustomizerArray39);
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection46 = tomcatEmbeddedServletContainerFactory42.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader47 = tomcatEmbeddedServletContainerFactory42.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory48.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList53 = tomcatEmbeddedServletContainerFactory48.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList54 = tomcatEmbeddedServletContainerFactory48.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory42.tomcatConnectorCustomizers = tomcatConnectorCustomizerList54;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = tomcatEmbeddedServletContainerFactory56.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList59 = tomcatEmbeddedServletContainerFactory58.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory56.tomcatConnectorCustomizers = tomcatConnectorCustomizerList59;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet61 = tomcatEmbeddedServletContainerFactory56.getErrorPages();
        java.net.InetAddress inetAddress62 = tomcatEmbeddedServletContainerFactory56.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader63 = tomcatEmbeddedServletContainerFactory56.resourceLoader;
        java.io.File file65 = tomcatEmbeddedServletContainerFactory56.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.apache.catalina.Valve[] valveArray66 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory56.addContextValves(valveArray66);
        tomcatEmbeddedServletContainerFactory42.addContextValves(valveArray66);
        tomcatEmbeddedServletContainerFactory25.addContextValves(valveArray66);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray66);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 100);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 0);
        java.lang.String str75 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray22);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray39);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNotNull(valveCollection46);
        org.junit.Assert.assertNull(resourceLoader47);
        org.junit.Assert.assertNotNull(lifecycleListenerList53);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList54);
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList59);
        org.junit.Assert.assertNotNull(errorPageSet61);
        org.junit.Assert.assertNull(inetAddress62);
        org.junit.Assert.assertNull(resourceLoader63);
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file65.toString(), "/tmp/web-app>\n.5048647981176437800.8080");
        org.junit.Assert.assertNotNull(valveArray66);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList11 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors = connectorList19;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory12.protocol;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory12.protocol;
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection25 = tomcatEmbeddedServletContainerFactory12.getTomcatContextCustomizers();
        int int26 = tomcatEmbeddedServletContainerFactory12.getPort();
        java.io.File file28 = tomcatEmbeddedServletContainerFactory12.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file28;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList31 = tomcatEmbeddedServletContainerFactory30.tomcatConnectorCustomizers;
        int int32 = tomcatEmbeddedServletContainerFactory30.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray33 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory30.addContextLifecycleListeners(lifecycleListenerArray33);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray33);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection36 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.apache.catalina.Context context37 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context37);
        boolean boolean39 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList11);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file28.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.8209321501527097977.0");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray33);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader4;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet6 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.io.File file7 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection8 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.Class<?> wildcardClass9 = lifecycleListenerCollection8.getClass();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(errorPageSet6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.apache.catalina.Context context13 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context13);
        org.springframework.core.io.ResourceLoader resourceLoader15 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        boolean boolean16 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList18 = tomcatEmbeddedServletContainerFactory17.tomcatConnectorCustomizers;
        int int19 = tomcatEmbeddedServletContainerFactory17.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray20 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory17.addContextLifecycleListeners(lifecycleListenerArray20);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray20);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setProtocol("org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList16 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList16, valveArray15);
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList16;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory19.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList28 = tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers = tomcatContextCustomizerList28;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        org.apache.catalina.Valve valve31 = null;
        org.apache.catalina.Valve[] valveArray32 = new org.apache.catalina.Valve[] { valve31 };
        tomcatEmbeddedServletContainerFactory19.addContextValves(valveArray32);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray32);
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.core.io.ResourceLoader resourceLoader38 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(valveArray32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(resourceLoader38);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory4.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        java.io.File file8 = tomcatEmbeddedServletContainerFactory6.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList9 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory4.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList9);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList9);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        boolean boolean15 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.apache.catalina.Context context16 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str5, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList10 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList18;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory11.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings24);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory11.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = tomcatEmbeddedServletContainerFactory32.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors = connectorList34;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory27.protocol;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory27.protocol;
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection40 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        int int41 = tomcatEmbeddedServletContainerFactory27.getPort();
        java.io.File file43 = tomcatEmbeddedServletContainerFactory27.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory11.baseDirectory = file43;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file43);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList46 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory49.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray51 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory49.addInitializers(servletContextInitializerArray51);
        tomcatEmbeddedServletContainerFactory49.setUriEncoding("hi!");
        java.lang.String str55 = tomcatEmbeddedServletContainerFactory49.getUriEncoding();
        tomcatEmbeddedServletContainerFactory49.setSessionTimeout((int) (short) 100);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection58 = tomcatEmbeddedServletContainerFactory49.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory49.setTldSkip("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory61.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory61.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings67 = tomcatEmbeddedServletContainerFactory66.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList68 = tomcatEmbeddedServletContainerFactory66.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory61.additionalTomcatConnectors = connectorList68;
        org.apache.catalina.Context context70 = null;
        tomcatEmbeddedServletContainerFactory61.postProcessContext(context70);
        java.lang.String str72 = tomcatEmbeddedServletContainerFactory61.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory73.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory73.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings79 = tomcatEmbeddedServletContainerFactory78.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList80 = tomcatEmbeddedServletContainerFactory78.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory73.additionalTomcatConnectors = connectorList80;
        java.lang.String str82 = tomcatEmbeddedServletContainerFactory73.protocol;
        java.lang.String str83 = tomcatEmbeddedServletContainerFactory73.protocol;
        tomcatEmbeddedServletContainerFactory73.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory88 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file90 = tomcatEmbeddedServletContainerFactory88.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory73.setBaseDirectory(file90);
        tomcatEmbeddedServletContainerFactory61.setDocumentRoot(file90);
        tomcatEmbeddedServletContainerFactory49.setDocumentRoot(file90);
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file90);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(lifecycleListenerList10);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(connectorList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file43.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6928022701371151029.0");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-8" + "'", str50, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray51);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection58);
        org.junit.Assert.assertNotNull(mimeMappings67);
        org.junit.Assert.assertNotNull(connectorList68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "UTF-8" + "'", str72, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings79);
        org.junit.Assert.assertNotNull(connectorList80);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file90.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.2042821220861299637.100");
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str4 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str5 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str6 = storeMergedWebXmlListener0.getEmptyWebXml();
        org.apache.catalina.Context context7 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str4, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str6, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection12 = tomcatEmbeddedServletContainerFactory7.getTomcatConnectorCustomizers();
        boolean boolean13 = tomcatEmbeddedServletContainerFactory7.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress14 = null;
        tomcatEmbeddedServletContainerFactory7.setAddress(inetAddress14);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer16 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray17 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer16 };
        tomcatEmbeddedServletContainerFactory7.addConnectorCustomizers(tomcatConnectorCustomizerArray17);
        java.util.Collection<org.apache.catalina.Valve> valveCollection19 = tomcatEmbeddedServletContainerFactory7.getValves();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader23 = tomcatEmbeddedServletContainerFactory21.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection29 = tomcatEmbeddedServletContainerFactory24.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList30 = tomcatEmbeddedServletContainerFactory24.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory21.tomcatContextCustomizers = tomcatContextCustomizerList30;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList32 = tomcatEmbeddedServletContainerFactory21.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList40 = tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors = connectorList40;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory33.protocol;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory33.protocol;
        tomcatEmbeddedServletContainerFactory33.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection46 = tomcatEmbeddedServletContainerFactory33.getTomcatContextCustomizers();
        int int47 = tomcatEmbeddedServletContainerFactory33.getPort();
        java.io.File file49 = tomcatEmbeddedServletContainerFactory33.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory21.baseDirectory = file49;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList52 = tomcatEmbeddedServletContainerFactory51.tomcatConnectorCustomizers;
        int int53 = tomcatEmbeddedServletContainerFactory51.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray54 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory51.addContextLifecycleListeners(lifecycleListenerArray54);
        tomcatEmbeddedServletContainerFactory21.addContextLifecycleListeners(lifecycleListenerArray54);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList58 = tomcatEmbeddedServletContainerFactory57.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection59 = tomcatEmbeddedServletContainerFactory57.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = tomcatEmbeddedServletContainerFactory60.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader62 = tomcatEmbeddedServletContainerFactory60.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray63 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory60.addErrorPages(errorPageArray63);
        tomcatEmbeddedServletContainerFactory57.addErrorPages(errorPageArray63);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory66.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory66.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings72 = tomcatEmbeddedServletContainerFactory71.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList73 = tomcatEmbeddedServletContainerFactory71.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory66.additionalTomcatConnectors = connectorList73;
        java.lang.String str75 = tomcatEmbeddedServletContainerFactory66.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory76.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings79 = tomcatEmbeddedServletContainerFactory76.getMimeMappings();
        tomcatEmbeddedServletContainerFactory66.setMimeMappings(mimeMappings79);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList82 = tomcatEmbeddedServletContainerFactory81.tomcatConnectorCustomizers;
        int int83 = tomcatEmbeddedServletContainerFactory81.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray84 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory81.addContextLifecycleListeners(lifecycleListenerArray84);
        tomcatEmbeddedServletContainerFactory66.addContextLifecycleListeners(lifecycleListenerArray84);
        java.util.List<org.apache.catalina.Valve> valveList87 = tomcatEmbeddedServletContainerFactory66.contextValves;
        tomcatEmbeddedServletContainerFactory57.contextValves = valveList87;
        tomcatEmbeddedServletContainerFactory21.contextValves = valveList87;
        tomcatEmbeddedServletContainerFactory7.contextValves = valveList87;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList87;
        java.io.File file92 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray17);
        org.junit.Assert.assertNotNull(valveCollection19);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNull(resourceLoader23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection29);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList30);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList32);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(connectorList40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(file49);
        org.junit.Assert.assertEquals(file49.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file49.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6087825605019743169.0");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray54);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList58);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection59);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNull(resourceLoader62);
        org.junit.Assert.assertNotNull(errorPageArray63);
        org.junit.Assert.assertNotNull(mimeMappings72);
        org.junit.Assert.assertNotNull(connectorList73);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings79);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray84);
        org.junit.Assert.assertNotNull(valveList87);
        org.junit.Assert.assertNull(file92);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        org.springframework.core.io.ResourceLoader resourceLoader13 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.io.File file15 = tomcatEmbeddedServletContainerFactory0.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        org.apache.catalina.Context context18 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context18);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNotNull(file15);
        org.junit.Assert.assertEquals(file15.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file15.toString(), "/tmp/web-app>\n.1031515390424505301.0");
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList16;
        boolean boolean18 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        org.apache.catalina.Context context21 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet5 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.List<org.apache.catalina.Valve> valveList6 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.apache.catalina.Context context7 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(errorPageSet5);
        org.junit.Assert.assertNotNull(valveList6);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList12 = tomcatEmbeddedServletContainerFactory10.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList12;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader17);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet19);
        java.util.Collection<org.apache.catalina.Valve> valveCollection21 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection26 = tomcatEmbeddedServletContainerFactory22.getValves();
        java.net.InetAddress inetAddress27 = tomcatEmbeddedServletContainerFactory22.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean29 = tomcatEmbeddedServletContainerFactory28.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList30 = tomcatEmbeddedServletContainerFactory28.contextValves;
        tomcatEmbeddedServletContainerFactory22.contextValves = valveList30;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList30;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList33 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.Context context35 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context35, servletContextInitializerArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valveList12);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNotNull(valveCollection21);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(valveCollection26);
        org.junit.Assert.assertNull(inetAddress27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(valveList30);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList33);
        org.junit.Assert.assertNotNull(mimeMappings34);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str4 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str5 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.LifecycleEvent lifecycleEvent6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str4 = storeMergedWebXmlListener0.getEmptyWebXml();
        org.apache.catalina.LifecycleEvent lifecycleEvent5 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str2, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str4, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        tomcatEmbeddedServletContainerFactory0.tldSkip = "";
        int int17 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.Context context18 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context18);
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        org.springframework.core.io.ResourceLoader resourceLoader22 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader22;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList18;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory11.protocol;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory11.protocol;
        tomcatEmbeddedServletContainerFactory11.setUriEncoding("hi!");
        boolean boolean24 = tomcatEmbeddedServletContainerFactory11.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory25.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory30.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors = connectorList32;
        org.apache.catalina.Context context34 = null;
        tomcatEmbeddedServletContainerFactory25.postProcessContext(context34);
        java.net.InetAddress inetAddress36 = tomcatEmbeddedServletContainerFactory25.getAddress();
        tomcatEmbeddedServletContainerFactory25.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory39.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory39.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = tomcatEmbeddedServletContainerFactory44.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList46 = tomcatEmbeddedServletContainerFactory44.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors = connectorList46;
        org.apache.catalina.Context context48 = null;
        tomcatEmbeddedServletContainerFactory39.postProcessContext(context48);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory52.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray54 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory52.addConnectorCustomizers(tomcatConnectorCustomizerArray54);
        tomcatEmbeddedServletContainerFactory39.addConnectorCustomizers(tomcatConnectorCustomizerArray54);
        tomcatEmbeddedServletContainerFactory25.addConnectorCustomizers(tomcatConnectorCustomizerArray54);
        tomcatEmbeddedServletContainerFactory11.addConnectorCustomizers(tomcatConnectorCustomizerArray54);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray54);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("org.apache.tomcat.util.scan.MergedWebXml");
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertNull(inetAddress36);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNotNull(connectorList46);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray54);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray15);
        org.springframework.core.io.ResourceLoader resourceLoader17 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader20 = tomcatEmbeddedServletContainerFactory18.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory21.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection26 = tomcatEmbeddedServletContainerFactory21.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList27 = tomcatEmbeddedServletContainerFactory21.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory18.tomcatContextCustomizers = tomcatContextCustomizerList27;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList29 = tomcatEmbeddedServletContainerFactory18.tomcatConnectorCustomizers;
        org.apache.catalina.Valve valve30 = null;
        org.apache.catalina.Valve[] valveArray31 = new org.apache.catalina.Valve[] { valve30 };
        tomcatEmbeddedServletContainerFactory18.addContextValves(valveArray31);
        boolean boolean33 = tomcatEmbeddedServletContainerFactory18.isRegisterJspServlet();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList34 = tomcatEmbeddedServletContainerFactory18.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList34);
        boolean boolean36 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection26);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList29);
        org.junit.Assert.assertNotNull(valveArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.io.File file13 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file13);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray15 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray15);
        java.util.List<org.apache.catalina.Valve> valveList17 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors = connectorList26;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory19.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader31 = tomcatEmbeddedServletContainerFactory29.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory32.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection37 = tomcatEmbeddedServletContainerFactory32.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList38 = tomcatEmbeddedServletContainerFactory32.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory29.tomcatContextCustomizers = tomcatContextCustomizerList38;
        tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers = tomcatContextCustomizerList38;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList38;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        java.util.List<org.apache.catalina.connector.Connector> connectorList46 = tomcatEmbeddedServletContainerFactory42.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory47.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory47.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList52 = tomcatEmbeddedServletContainerFactory47.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory53.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        tomcatEmbeddedServletContainerFactory47.setMimeMappings(mimeMappings56);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList59 = tomcatEmbeddedServletContainerFactory58.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection60 = tomcatEmbeddedServletContainerFactory58.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings62 = tomcatEmbeddedServletContainerFactory61.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader63 = tomcatEmbeddedServletContainerFactory61.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray64 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory61.addErrorPages(errorPageArray64);
        tomcatEmbeddedServletContainerFactory58.addErrorPages(errorPageArray64);
        tomcatEmbeddedServletContainerFactory47.addErrorPages(errorPageArray64);
        tomcatEmbeddedServletContainerFactory42.addErrorPages(errorPageArray64);
        org.apache.catalina.Valve[] valveArray69 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory42.addContextValves(valveArray69);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray69);
        java.lang.String str72 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray15);
        org.junit.Assert.assertNotNull(valveList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str18, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNull(resourceLoader31);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection37);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList38);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-8" + "'", str45, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList46);
        org.junit.Assert.assertNotNull(lifecycleListenerList52);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList59);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection60);
        org.junit.Assert.assertNotNull(mimeMappings62);
        org.junit.Assert.assertNull(resourceLoader63);
        org.junit.Assert.assertNotNull(errorPageArray64);
        org.junit.Assert.assertNotNull(valveArray69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str72, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList10 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList18;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory11.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings24);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory11.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = tomcatEmbeddedServletContainerFactory32.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors = connectorList34;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory27.protocol;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory27.protocol;
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection40 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        int int41 = tomcatEmbeddedServletContainerFactory27.getPort();
        java.io.File file43 = tomcatEmbeddedServletContainerFactory27.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory11.baseDirectory = file43;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file43);
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "org.apache.coyote.http11.Http11NioProtocol";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection48 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Mappings must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(lifecycleListenerList10);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(connectorList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file43.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6295135546330273989.0");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection48);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader8 = tomcatEmbeddedServletContainerFactory6.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection14 = tomcatEmbeddedServletContainerFactory9.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList15 = tomcatEmbeddedServletContainerFactory9.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory6.tomcatContextCustomizers = tomcatContextCustomizerList15;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList25 = tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors = connectorList25;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory18.protocol;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory18.protocol;
        tomcatEmbeddedServletContainerFactory18.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection31 = tomcatEmbeddedServletContainerFactory18.getTomcatContextCustomizers();
        int int32 = tomcatEmbeddedServletContainerFactory18.getPort();
        java.io.File file34 = tomcatEmbeddedServletContainerFactory18.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory6.baseDirectory = file34;
        org.apache.catalina.Valve[] valveArray36 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory6.addContextValves(valveArray36);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray36);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection41 = tomcatEmbeddedServletContainerFactory39.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader44 = tomcatEmbeddedServletContainerFactory42.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray45 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory42.addErrorPages(errorPageArray45);
        tomcatEmbeddedServletContainerFactory39.addErrorPages(errorPageArray45);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray45);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean50 = tomcatEmbeddedServletContainerFactory49.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection51 = tomcatEmbeddedServletContainerFactory49.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings52);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory54.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection59 = tomcatEmbeddedServletContainerFactory54.getTomcatConnectorCustomizers();
        boolean boolean60 = tomcatEmbeddedServletContainerFactory54.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress61 = null;
        tomcatEmbeddedServletContainerFactory54.setAddress(inetAddress61);
        java.util.List<org.apache.catalina.Valve> valveList63 = tomcatEmbeddedServletContainerFactory54.contextValves;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = tomcatEmbeddedServletContainerFactory54.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory65.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings68 = tomcatEmbeddedServletContainerFactory65.getMimeMappings();
        tomcatEmbeddedServletContainerFactory54.setMimeMappings(mimeMappings68);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings68);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection71 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.util.Collection<org.apache.catalina.Valve> valveCollection72 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNull(resourceLoader8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection14);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(connectorList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6701897095191058983.0");
        org.junit.Assert.assertNotNull(valveArray36);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection41);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNull(resourceLoader44);
        org.junit.Assert.assertNotNull(errorPageArray45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(valveCollection51);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(valveList63);
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNotNull(mimeMappings68);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection71);
        org.junit.Assert.assertNotNull(valveCollection72);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.io.File file5 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = null;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory21.setTldSkip("UTF-8");
        java.net.InetAddress inetAddress26 = tomcatEmbeddedServletContainerFactory21.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = tomcatEmbeddedServletContainerFactory32.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors = connectorList34;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory27.protocol;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory27.protocol;
        java.net.InetAddress inetAddress38 = null;
        tomcatEmbeddedServletContainerFactory27.setAddress(inetAddress38);
        java.io.File file40 = null;
        tomcatEmbeddedServletContainerFactory27.setBaseDirectory(file40);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray42 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory27.addContextCustomizers(tomcatContextCustomizerArray42);
        tomcatEmbeddedServletContainerFactory21.addContextCustomizers(tomcatContextCustomizerArray42);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings45);
        java.io.File file47 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNull(inetAddress26);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(connectorList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray42);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNull(file47);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer9 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray10 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer9 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray10);
        java.util.Collection<org.apache.catalina.Valve> valveCollection12 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.apache.catalina.Context context14 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory17.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList22 = tomcatEmbeddedServletContainerFactory17.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList23 = tomcatEmbeddedServletContainerFactory17.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers = tomcatConnectorCustomizerList23;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList25 = null;
        tomcatEmbeddedServletContainerFactory16.tomcatContextCustomizers = tomcatContextCustomizerList25;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection27 = tomcatEmbeddedServletContainerFactory16.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList36 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors = connectorList36;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory38.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray40 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory38.addInitializers(servletContextInitializerArray40);
        tomcatEmbeddedServletContainerFactory38.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray44 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory38.addContextLifecycleListeners(lifecycleListenerArray44);
        tomcatEmbeddedServletContainerFactory28.addContextLifecycleListeners(lifecycleListenerArray44);
        org.apache.catalina.Context context47 = null;
        tomcatEmbeddedServletContainerFactory28.postProcessContext(context47);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory49.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        tomcatEmbeddedServletContainerFactory49.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str58 = tomcatEmbeddedServletContainerFactory57.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer59 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray60 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer59 };
        tomcatEmbeddedServletContainerFactory57.addInitializers(servletContextInitializerArray60);
        tomcatEmbeddedServletContainerFactory49.addInitializers(servletContextInitializerArray60);
        tomcatEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray60);
        tomcatEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray60);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context14, servletContextInitializerArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray10);
        org.junit.Assert.assertNotNull(valveCollection12);
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(lifecycleListenerList22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList23);
        org.junit.Assert.assertNull(tomcatContextCustomizerCollection27);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertNotNull(connectorList36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-8" + "'", str39, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray40);
        org.junit.Assert.assertNotNull(lifecycleListenerArray44);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(servletContextInitializerArray60);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        org.apache.catalina.connector.Connector connector11 = null;
        org.apache.catalina.connector.Connector[] connectorArray12 = new org.apache.catalina.connector.Connector[] { connector11 };
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray12);
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader15);
        java.util.List<org.apache.catalina.Valve> valveList17 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(connectorArray12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(valveList17);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection2 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList6 = tomcatEmbeddedServletContainerFactory5.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory3.tomcatConnectorCustomizers = tomcatConnectorCustomizerList6;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection8 = tomcatEmbeddedServletContainerFactory3.getContextLifecycleListeners();
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory3.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList18;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray22);
        tomcatEmbeddedServletContainerFactory20.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray26 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory20.addContextLifecycleListeners(lifecycleListenerArray26);
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray26);
        tomcatEmbeddedServletContainerFactory3.addContextLifecycleListeners(lifecycleListenerArray26);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray30 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory3.addContextCustomizers(tomcatContextCustomizerArray30);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray30);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList36 = tomcatEmbeddedServletContainerFactory35.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory33.tomcatConnectorCustomizers = tomcatConnectorCustomizerList36;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection38 = tomcatEmbeddedServletContainerFactory33.getContextLifecycleListeners();
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory33.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList40 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.ErrorPage errorPage41 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray42 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage41 };
        tomcatEmbeddedServletContainerFactory33.addErrorPages(errorPageArray42);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray42);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection45 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.apache.catalina.startup.Tomcat tomcat46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer47 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(valveCollection2);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList6);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(lifecycleListenerArray26);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray30);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList36);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-8" + "'", str39, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList40);
        org.junit.Assert.assertNotNull(errorPageArray42);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection45);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tldSkip = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory19.protocol;
        int int25 = tomcatEmbeddedServletContainerFactory19.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory26.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList29 = tomcatEmbeddedServletContainerFactory28.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory26.tomcatConnectorCustomizers = tomcatConnectorCustomizerList29;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection31 = tomcatEmbeddedServletContainerFactory26.getContextLifecycleListeners();
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory26.uriEncoding;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory26.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory34.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory34.addInitializers(servletContextInitializerArray36);
        tomcatEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray36);
        tomcatEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray36);
        tomcatEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray36);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray36);
        java.util.concurrent.TimeUnit timeUnit43 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 1, timeUnit43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList29);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-8" + "'", str32, "UTF-8");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-8" + "'", str35, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList3 = null;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList3;
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader5;
        org.springframework.core.io.ResourceLoader resourceLoader7 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int11 = tomcatEmbeddedServletContainerFactory10.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory12.protocol;
        tomcatEmbeddedServletContainerFactory12.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory20.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection25 = tomcatEmbeddedServletContainerFactory20.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList26 = tomcatEmbeddedServletContainerFactory20.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory12.tomcatContextCustomizers = tomcatContextCustomizerList26;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList28 = tomcatEmbeddedServletContainerFactory12.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList28;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList28;
        java.net.InetAddress inetAddress31 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress31);
        java.net.InetAddress inetAddress33 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress33);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection25);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList26);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList28);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory2.getContextPath();
        java.io.File file6 = tomcatEmbeddedServletContainerFactory2.getDocumentRoot();
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader7);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection9 = tomcatEmbeddedServletContainerFactory2.getTomcatContextCustomizers();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection9);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList12 = tomcatEmbeddedServletContainerFactory7.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        tomcatEmbeddedServletContainerFactory7.setMimeMappings(mimeMappings16);
        org.apache.catalina.connector.Connector connector18 = null;
        org.apache.catalina.connector.Connector[] connectorArray19 = new org.apache.catalina.connector.Connector[] { connector18 };
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray19);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList22 = tomcatEmbeddedServletContainerFactory21.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection23 = tomcatEmbeddedServletContainerFactory21.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList24 = tomcatEmbeddedServletContainerFactory21.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection25 = tomcatEmbeddedServletContainerFactory21.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory7.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection25);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection25);
        java.net.InetAddress inetAddress28 = tomcatEmbeddedServletContainerFactory0.getAddress();
        tomcatEmbeddedServletContainerFactory0.tldSkip = "";
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerList12);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(connectorArray19);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection23);
        org.junit.Assert.assertNotNull(valveList24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection25);
        org.junit.Assert.assertNull(inetAddress28);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader5 = tomcatEmbeddedServletContainerFactory3.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory3.addErrorPages(errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList17;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection24 = tomcatEmbeddedServletContainerFactory19.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList25 = tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory9.tomcatContextCustomizers = tomcatContextCustomizerList25;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str28 = storeMergedWebXmlListener27.getEmptyWebXml();
        java.lang.String str29 = storeMergedWebXmlListener27.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str31 = storeMergedWebXmlListener30.getMERGED_WEB_XML();
        java.lang.String str32 = storeMergedWebXmlListener30.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray33 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener27, storeMergedWebXmlListener30 };
        tomcatEmbeddedServletContainerFactory9.addContextLifecycleListeners(lifecycleListenerArray33);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray33);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList39 = tomcatEmbeddedServletContainerFactory38.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory36.tomcatConnectorCustomizers = tomcatConnectorCustomizerList39;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList39;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet42 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean44 = tomcatEmbeddedServletContainerFactory43.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList45 = tomcatEmbeddedServletContainerFactory43.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory46.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory46.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = tomcatEmbeddedServletContainerFactory51.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList53 = tomcatEmbeddedServletContainerFactory51.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList54 = tomcatEmbeddedServletContainerFactory51.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors = connectorList54;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList56 = tomcatEmbeddedServletContainerFactory46.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory57.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory57.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings63 = tomcatEmbeddedServletContainerFactory62.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList64 = tomcatEmbeddedServletContainerFactory62.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory57.additionalTomcatConnectors = connectorList64;
        java.lang.String str66 = tomcatEmbeddedServletContainerFactory57.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory67.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings70 = tomcatEmbeddedServletContainerFactory67.getMimeMappings();
        tomcatEmbeddedServletContainerFactory57.setMimeMappings(mimeMappings70);
        java.lang.String str72 = tomcatEmbeddedServletContainerFactory57.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory73.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory73.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings79 = tomcatEmbeddedServletContainerFactory78.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList80 = tomcatEmbeddedServletContainerFactory78.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory73.additionalTomcatConnectors = connectorList80;
        java.lang.String str82 = tomcatEmbeddedServletContainerFactory73.protocol;
        java.lang.String str83 = tomcatEmbeddedServletContainerFactory73.protocol;
        tomcatEmbeddedServletContainerFactory73.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection86 = tomcatEmbeddedServletContainerFactory73.getTomcatContextCustomizers();
        int int87 = tomcatEmbeddedServletContainerFactory73.getPort();
        java.io.File file89 = tomcatEmbeddedServletContainerFactory73.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory57.baseDirectory = file89;
        tomcatEmbeddedServletContainerFactory46.setDocumentRoot(file89);
        tomcatEmbeddedServletContainerFactory43.setBaseDirectory(file89);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file89);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNull(resourceLoader5);
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection24);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str28, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str29, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str31, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str32, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray33);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList39);
        org.junit.Assert.assertNotNull(errorPageSet42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList45);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNotNull(connectorList53);
        org.junit.Assert.assertNotNull(connectorList54);
        org.junit.Assert.assertNotNull(lifecycleListenerList56);
        org.junit.Assert.assertNotNull(mimeMappings63);
        org.junit.Assert.assertNotNull(connectorList64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(mimeMappings79);
        org.junit.Assert.assertNotNull(connectorList80);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(file89);
        org.junit.Assert.assertEquals(file89.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file89.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.3912854305644756194.0");
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.io.File file13 = tomcatEmbeddedServletContainerFactory8.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection19 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory14.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector22 = null;
        org.apache.catalina.connector.Connector[] connectorArray23 = new org.apache.catalina.connector.Connector[] { connector22 };
        tomcatEmbeddedServletContainerFactory14.addAdditionalTomcatConnectors(connectorArray23);
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray23);
        tomcatEmbeddedServletContainerFactory8.setRegisterJspServlet(false);
        tomcatEmbeddedServletContainerFactory8.tldSkip = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.apache.catalina.connector.Connector> connectorList30 = tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors;
        org.apache.catalina.Valve[] valveArray31 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory8.addContextValves(valveArray31);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray31);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList34 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.setProtocol("org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection19);
        org.junit.Assert.assertNotNull(connectorArray23);
        org.junit.Assert.assertNotNull(connectorList30);
        org.junit.Assert.assertNotNull(valveArray31);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList34);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        boolean boolean15 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader16 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(resourceLoader16);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList12 = tomcatEmbeddedServletContainerFactory10.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList12;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader17);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet19);
        java.util.Collection<org.apache.catalina.Valve> valveCollection21 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection26 = tomcatEmbeddedServletContainerFactory22.getValves();
        java.net.InetAddress inetAddress27 = tomcatEmbeddedServletContainerFactory22.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean29 = tomcatEmbeddedServletContainerFactory28.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList30 = tomcatEmbeddedServletContainerFactory28.contextValves;
        tomcatEmbeddedServletContainerFactory22.contextValves = valveList30;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList30;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList33 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        boolean boolean34 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.apache.catalina.Context context35 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valveList12);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNotNull(valveCollection21);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(valveCollection26);
        org.junit.Assert.assertNull(inetAddress27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(valveList30);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        tomcatEmbeddedServletContainerFactory0.tldSkip = "";
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.io.File file20 = tomcatEmbeddedServletContainerFactory0.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        java.io.File file21 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file20.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.2888483535310765618.0");
        org.junit.Assert.assertNull(file21);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory2.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer4 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray5 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer4 };
        tomcatEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray5);
        java.lang.Class<?> wildcardClass7 = tomcatEmbeddedServletContainerFactory2.getClass();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(servletContextInitializerArray5);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.io.File file3 = tomcatEmbeddedServletContainerFactory0.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.tldSkip = "UTF-8";
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file3.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.8529391299324554240.8080");
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        tomcatEmbeddedServletContainerFactory2.setPort(10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory2.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader10);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray12 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.addContextCustomizers(tomcatContextCustomizerArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatContextCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectorList7);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList14;
        boolean boolean16 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList20 = null;
        tomcatEmbeddedServletContainerFactory17.contextLifecycleListeners = lifecycleListenerList20;
        org.springframework.core.io.ResourceLoader resourceLoader22 = null;
        tomcatEmbeddedServletContainerFactory17.resourceLoader = resourceLoader22;
        org.springframework.core.io.ResourceLoader resourceLoader24 = tomcatEmbeddedServletContainerFactory17.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int28 = tomcatEmbeddedServletContainerFactory27.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setProtocol("hi!");
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory29.protocol;
        tomcatEmbeddedServletContainerFactory29.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory37.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection42 = tomcatEmbeddedServletContainerFactory37.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList43 = tomcatEmbeddedServletContainerFactory37.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory29.tomcatContextCustomizers = tomcatContextCustomizerList43;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList45 = tomcatEmbeddedServletContainerFactory29.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory27.tomcatContextCustomizers = tomcatContextCustomizerList45;
        tomcatEmbeddedServletContainerFactory17.tomcatContextCustomizers = tomcatContextCustomizerList45;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList45;
        org.apache.catalina.startup.Tomcat tomcat49 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer50 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection42);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList43);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList45);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.lang.Class<?> wildcardClass7 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file4 = tomcatEmbeddedServletContainerFactory2.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray5 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList6 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList6, tomcatConnectorCustomizerArray5);
        tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers = tomcatConnectorCustomizerList6;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        org.apache.catalina.Context context13 = null;
        tomcatEmbeddedServletContainerFactory9.postProcessContext(context13);
        java.util.List<org.apache.catalina.Valve> valveList15 = tomcatEmbeddedServletContainerFactory9.contextValves;
        tomcatEmbeddedServletContainerFactory2.contextValves = valveList15;
        tomcatEmbeddedServletContainerFactory2.setSessionTimeout((int) (short) -1);
        java.net.InetAddress inetAddress19 = tomcatEmbeddedServletContainerFactory2.getAddress();
        tomcatEmbeddedServletContainerFactory2.setRegisterDefaultServlet(false);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file4.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.5757199527086924091.100");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(valveList15);
        org.junit.Assert.assertNull(inetAddress19);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory4.protocol;
        tomcatEmbeddedServletContainerFactory4.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection17 = tomcatEmbeddedServletContainerFactory12.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList18 = tomcatEmbeddedServletContainerFactory12.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers = tomcatContextCustomizerList18;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList20 = tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList20;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader24 = tomcatEmbeddedServletContainerFactory22.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory25.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection30 = tomcatEmbeddedServletContainerFactory25.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList31 = tomcatEmbeddedServletContainerFactory25.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers = tomcatContextCustomizerList31;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList33 = tomcatEmbeddedServletContainerFactory22.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory34.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors = connectorList41;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory34.protocol;
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory34.protocol;
        tomcatEmbeddedServletContainerFactory34.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection47 = tomcatEmbeddedServletContainerFactory34.getTomcatContextCustomizers();
        int int48 = tomcatEmbeddedServletContainerFactory34.getPort();
        java.io.File file50 = tomcatEmbeddedServletContainerFactory34.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory22.baseDirectory = file50;
        tomcatEmbeddedServletContainerFactory2.setDocumentRoot(file50);
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory2.getUriEncoding();
        int int54 = tomcatEmbeddedServletContainerFactory2.getPort();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection17);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList20);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection30);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList31);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList33);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(file50);
        org.junit.Assert.assertEquals(file50.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file50.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.1170916036722334368.0");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-8" + "'", str53, "UTF-8");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 100 + "'", int54 == 100);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory5.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer7 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer7 };
        tomcatEmbeddedServletContainerFactory5.addInitializers(servletContextInitializerArray8);
        tomcatEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray8);
        tomcatEmbeddedServletContainerFactory2.setTldSkip("org.apache.tomcat.util.scan.MergedWebXml");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory2.getDEFAULT_PROTOCOL();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection14 = tomcatEmbeddedServletContainerFactory2.getContextLifecycleListeners();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str13, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection14);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory10.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader27 = null;
        tomcatEmbeddedServletContainerFactory26.setResourceLoader(resourceLoader27);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = tomcatEmbeddedServletContainerFactory26.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory30.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory35.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory35.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors = connectorList37;
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory30.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory40.getMimeMappings();
        tomcatEmbeddedServletContainerFactory30.setMimeMappings(mimeMappings43);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList46 = tomcatEmbeddedServletContainerFactory45.tomcatConnectorCustomizers;
        int int47 = tomcatEmbeddedServletContainerFactory45.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray48 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory45.addContextLifecycleListeners(lifecycleListenerArray48);
        tomcatEmbeddedServletContainerFactory30.addContextLifecycleListeners(lifecycleListenerArray48);
        tomcatEmbeddedServletContainerFactory30.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader53 = tomcatEmbeddedServletContainerFactory30.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = tomcatEmbeddedServletContainerFactory54.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList57 = tomcatEmbeddedServletContainerFactory56.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory54.tomcatConnectorCustomizers = tomcatConnectorCustomizerList57;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection59 = tomcatEmbeddedServletContainerFactory54.getContextLifecycleListeners();
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory54.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList61 = tomcatEmbeddedServletContainerFactory54.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.ErrorPage errorPage62 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray63 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage62 };
        tomcatEmbeddedServletContainerFactory54.addErrorPages(errorPageArray63);
        tomcatEmbeddedServletContainerFactory30.addErrorPages(errorPageArray63);
        tomcatEmbeddedServletContainerFactory26.addErrorPages(errorPageArray63);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray63);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatContextCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(errorPageSet29);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray48);
        org.junit.Assert.assertNull(resourceLoader53);
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList57);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "UTF-8" + "'", str60, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList61);
        org.junit.Assert.assertNotNull(errorPageArray63);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.apache.catalina.Context context2 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context2);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        tomcatEmbeddedServletContainerFactory6.setResourceLoader(resourceLoader7);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection14 = tomcatEmbeddedServletContainerFactory9.getTomcatConnectorCustomizers();
        boolean boolean15 = tomcatEmbeddedServletContainerFactory9.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress16 = null;
        tomcatEmbeddedServletContainerFactory9.setAddress(inetAddress16);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray18 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory9.addContextCustomizers(tomcatContextCustomizerArray18);
        tomcatEmbeddedServletContainerFactory6.addContextCustomizers(tomcatContextCustomizerArray18);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray18);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str1, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray18);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader14 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors = connectorList22;
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory15.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean26 = tomcatEmbeddedServletContainerFactory25.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList27 = tomcatEmbeddedServletContainerFactory25.contextValves;
        tomcatEmbeddedServletContainerFactory15.contextValves = valveList27;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory15.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory30.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection35 = tomcatEmbeddedServletContainerFactory30.getTomcatConnectorCustomizers();
        java.io.File file36 = tomcatEmbeddedServletContainerFactory30.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory37.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory42.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors = connectorList44;
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory37.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory47.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory47.getMimeMappings();
        tomcatEmbeddedServletContainerFactory37.setMimeMappings(mimeMappings50);
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory37.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory53.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory53.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings59 = tomcatEmbeddedServletContainerFactory58.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList60 = tomcatEmbeddedServletContainerFactory58.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors = connectorList60;
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory53.protocol;
        java.lang.String str63 = tomcatEmbeddedServletContainerFactory53.protocol;
        tomcatEmbeddedServletContainerFactory53.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection66 = tomcatEmbeddedServletContainerFactory53.getTomcatContextCustomizers();
        int int67 = tomcatEmbeddedServletContainerFactory53.getPort();
        java.io.File file69 = tomcatEmbeddedServletContainerFactory53.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory37.baseDirectory = file69;
        tomcatEmbeddedServletContainerFactory30.setBaseDirectory(file69);
        tomcatEmbeddedServletContainerFactory15.setBaseDirectory(file69);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file69);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList74 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(valveList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection35);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(mimeMappings59);
        org.junit.Assert.assertNotNull(connectorList60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(file69);
        org.junit.Assert.assertEquals(file69.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file69.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.4487275877932789641.0");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList74);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList12 = tomcatEmbeddedServletContainerFactory10.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList12;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader17);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet19);
        java.io.File file21 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        int int22 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory26.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection30 = tomcatEmbeddedServletContainerFactory26.getValves();
        java.net.InetAddress inetAddress31 = tomcatEmbeddedServletContainerFactory26.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean33 = tomcatEmbeddedServletContainerFactory32.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList34 = tomcatEmbeddedServletContainerFactory32.contextValves;
        tomcatEmbeddedServletContainerFactory26.contextValves = valveList34;
        tomcatEmbeddedServletContainerFactory25.contextValves = valveList34;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList37 = tomcatEmbeddedServletContainerFactory25.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory38.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList45 = tomcatEmbeddedServletContainerFactory43.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList46 = tomcatEmbeddedServletContainerFactory43.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors = connectorList46;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory48.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray50 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory48.addInitializers(servletContextInitializerArray50);
        tomcatEmbeddedServletContainerFactory48.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray54 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory48.addContextLifecycleListeners(lifecycleListenerArray54);
        tomcatEmbeddedServletContainerFactory38.addContextLifecycleListeners(lifecycleListenerArray54);
        org.apache.catalina.Context context57 = null;
        tomcatEmbeddedServletContainerFactory38.postProcessContext(context57);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory59.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings62 = tomcatEmbeddedServletContainerFactory59.getMimeMappings();
        tomcatEmbeddedServletContainerFactory59.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str68 = tomcatEmbeddedServletContainerFactory67.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer69 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray70 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer69 };
        tomcatEmbeddedServletContainerFactory67.addInitializers(servletContextInitializerArray70);
        tomcatEmbeddedServletContainerFactory59.addInitializers(servletContextInitializerArray70);
        tomcatEmbeddedServletContainerFactory38.addInitializers(servletContextInitializerArray70);
        tomcatEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray70);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray70);
        java.io.File file76 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        java.lang.String str77 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valveList12);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(valveCollection30);
        org.junit.Assert.assertNull(inetAddress31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(valveList34);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList37);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNotNull(connectorList45);
        org.junit.Assert.assertNotNull(connectorList46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-8" + "'", str49, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray50);
        org.junit.Assert.assertNotNull(lifecycleListenerArray54);
        org.junit.Assert.assertNotNull(mimeMappings62);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(servletContextInitializerArray70);
        org.junit.Assert.assertNull(file76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory6.additionalTomcatConnectors = connectorList13;
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory6.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        tomcatEmbeddedServletContainerFactory6.setMimeMappings(mimeMappings19);
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory6.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList29 = tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors = connectorList29;
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory22.protocol;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory22.protocol;
        tomcatEmbeddedServletContainerFactory22.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection35 = tomcatEmbeddedServletContainerFactory22.getTomcatContextCustomizers();
        int int36 = tomcatEmbeddedServletContainerFactory22.getPort();
        java.io.File file38 = tomcatEmbeddedServletContainerFactory22.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory6.baseDirectory = file38;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file38);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList41 = null;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList41;
        boolean boolean43 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection5);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(connectorList29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(file38);
        org.junit.Assert.assertEquals(file38.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file38.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.7299777054820389206.0");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        java.io.File file4 = tomcatEmbeddedServletContainerFactory2.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList5 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList5);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory9.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray11 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory9.addConnectorCustomizers(tomcatConnectorCustomizerArray11);
        java.net.InetAddress inetAddress13 = tomcatEmbeddedServletContainerFactory9.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory14.setProtocol("UTF-8");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory14.protocol;
        tomcatEmbeddedServletContainerFactory14.setTldSkip("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        tomcatEmbeddedServletContainerFactory9.setErrorPages(errorPageSet23);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet23);
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        tomcatEmbeddedServletContainerFactory0.setProtocol("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        java.util.concurrent.TimeUnit timeUnit31 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 10, timeUnit31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str1, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray11);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet23);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory5.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection10 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList18;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory11.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings24);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory11.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = tomcatEmbeddedServletContainerFactory32.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors = connectorList34;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory27.protocol;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory27.protocol;
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection40 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        int int41 = tomcatEmbeddedServletContainerFactory27.getPort();
        java.io.File file43 = tomcatEmbeddedServletContainerFactory27.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory11.baseDirectory = file43;
        tomcatEmbeddedServletContainerFactory5.setBaseDirectory(file43);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file43;
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection10);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(connectorList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file43.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6604939059821239876.0");
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection7 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.apache.catalina.Context context8 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        java.io.File file14 = tomcatEmbeddedServletContainerFactory9.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection20 = tomcatEmbeddedServletContainerFactory15.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory15.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector23 = null;
        org.apache.catalina.connector.Connector[] connectorArray24 = new org.apache.catalina.connector.Connector[] { connector23 };
        tomcatEmbeddedServletContainerFactory15.addAdditionalTomcatConnectors(connectorArray24);
        tomcatEmbeddedServletContainerFactory9.addAdditionalTomcatConnectors(connectorArray24);
        tomcatEmbeddedServletContainerFactory9.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory34.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer36 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray37 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer36 };
        tomcatEmbeddedServletContainerFactory34.addInitializers(servletContextInitializerArray37);
        tomcatEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray37);
        tomcatEmbeddedServletContainerFactory9.addInitializers(servletContextInitializerArray37);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context8, servletContextInitializerArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection7);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection20);
        org.junit.Assert.assertNotNull(connectorArray24);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(servletContextInitializerArray37);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory4.additionalTomcatConnectors = connectorList11;
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory4.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory4.setMimeMappings(mimeMappings17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList20 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        int int21 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory19.addContextLifecycleListeners(lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory4.addContextLifecycleListeners(lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection31 = tomcatEmbeddedServletContainerFactory26.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory26.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector34 = null;
        org.apache.catalina.connector.Connector[] connectorArray35 = new org.apache.catalina.connector.Connector[] { connector34 };
        tomcatEmbeddedServletContainerFactory26.addAdditionalTomcatConnectors(connectorArray35);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray35);
        tomcatEmbeddedServletContainerFactory0.setProtocol("org.apache.coyote.http11.Http11NioProtocol");
        java.net.InetAddress inetAddress40 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader41 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader41;
        org.apache.catalina.startup.Tomcat tomcat43 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer44 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection31);
        org.junit.Assert.assertNotNull(connectorArray35);
        org.junit.Assert.assertNull(inetAddress40);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        java.util.List<org.apache.catalina.Valve> valveList9 = tomcatEmbeddedServletContainerFactory0.contextValves;
        int int10 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.Context context11 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context11);
        tomcatEmbeddedServletContainerFactory0.tldSkip = "hi!";
        org.apache.catalina.Context context15 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context15);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(valveList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.io.File file7 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setProtocol("UTF-8");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList17 = tomcatEmbeddedServletContainerFactory11.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList17;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList19 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(lifecycleListenerList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((-1));
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatConnectorCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (short) 1);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        org.apache.catalina.Context context9 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context9);
        java.net.InetAddress inetAddress11 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader12 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader12;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers = tomcatConnectorCustomizerList17;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList20 = tomcatEmbeddedServletContainerFactory14.contextLifecycleListeners;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings21);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList27 = tomcatEmbeddedServletContainerFactory26.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection28 = tomcatEmbeddedServletContainerFactory26.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory25.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection28);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection28);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNotNull(lifecycleListenerList20);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection28);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory4.additionalTomcatConnectors = connectorList11;
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory4.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory4.setMimeMappings(mimeMappings17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList20 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        int int21 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory19.addContextLifecycleListeners(lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory4.addContextLifecycleListeners(lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray22);
        java.util.List<org.apache.catalina.Valve> valveList26 = tomcatEmbeddedServletContainerFactory0.contextValves;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertNotNull(valveList26);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory4.protocol;
        tomcatEmbeddedServletContainerFactory4.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection17 = tomcatEmbeddedServletContainerFactory12.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList18 = tomcatEmbeddedServletContainerFactory12.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers = tomcatContextCustomizerList18;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList20 = tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList20;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory22.protocol;
        tomcatEmbeddedServletContainerFactory22.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory30.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection35 = tomcatEmbeddedServletContainerFactory30.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList36 = tomcatEmbeddedServletContainerFactory30.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers = tomcatContextCustomizerList36;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList38 = tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList38;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList40 = tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory41.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory41.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = tomcatEmbeddedServletContainerFactory46.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList48 = tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList49 = tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors = connectorList49;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory51.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory51.addInitializers(servletContextInitializerArray53);
        tomcatEmbeddedServletContainerFactory51.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray57 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory51.addContextLifecycleListeners(lifecycleListenerArray57);
        tomcatEmbeddedServletContainerFactory41.addContextLifecycleListeners(lifecycleListenerArray57);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList60 = tomcatEmbeddedServletContainerFactory41.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory41.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = tomcatEmbeddedServletContainerFactory63.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader65 = tomcatEmbeddedServletContainerFactory63.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory66.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory66.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection71 = tomcatEmbeddedServletContainerFactory66.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList72 = tomcatEmbeddedServletContainerFactory66.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory63.tomcatContextCustomizers = tomcatContextCustomizerList72;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList74 = tomcatEmbeddedServletContainerFactory63.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory75.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory75.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings81 = tomcatEmbeddedServletContainerFactory80.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList82 = tomcatEmbeddedServletContainerFactory80.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory75.additionalTomcatConnectors = connectorList82;
        java.lang.String str84 = tomcatEmbeddedServletContainerFactory75.protocol;
        java.lang.String str85 = tomcatEmbeddedServletContainerFactory75.protocol;
        java.net.InetAddress inetAddress86 = null;
        tomcatEmbeddedServletContainerFactory75.setAddress(inetAddress86);
        int int88 = tomcatEmbeddedServletContainerFactory75.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory89 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings90 = tomcatEmbeddedServletContainerFactory89.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory91 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList92 = tomcatEmbeddedServletContainerFactory91.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory89.tomcatConnectorCustomizers = tomcatConnectorCustomizerList92;
        tomcatEmbeddedServletContainerFactory75.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList92);
        tomcatEmbeddedServletContainerFactory63.tomcatConnectorCustomizers = tomcatConnectorCustomizerList92;
        tomcatEmbeddedServletContainerFactory41.tomcatConnectorCustomizers = tomcatConnectorCustomizerList92;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList97 = tomcatEmbeddedServletContainerFactory41.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners = lifecycleListenerList97;
        java.io.File file99 = tomcatEmbeddedServletContainerFactory2.getDocumentRoot();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection17);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection35);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList36);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList38);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList40);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNotNull(connectorList48);
        org.junit.Assert.assertNotNull(connectorList49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "UTF-8" + "'", str52, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(lifecycleListenerArray57);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList60);
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNull(resourceLoader65);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection71);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList72);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList74);
        org.junit.Assert.assertNotNull(mimeMappings81);
        org.junit.Assert.assertNotNull(connectorList82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(mimeMappings90);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList92);
        org.junit.Assert.assertNotNull(lifecycleListenerList97);
        org.junit.Assert.assertNull(file99);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList23 = tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors = connectorList23;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory16.protocol;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory16.protocol;
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection29 = tomcatEmbeddedServletContainerFactory16.getTomcatContextCustomizers();
        int int30 = tomcatEmbeddedServletContainerFactory16.getPort();
        java.io.File file32 = tomcatEmbeddedServletContainerFactory16.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file32;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory34.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList42 = tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors = connectorList42;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory44.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection49 = tomcatEmbeddedServletContainerFactory44.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList50 = tomcatEmbeddedServletContainerFactory44.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory34.tomcatContextCustomizers = tomcatContextCustomizerList50;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str53 = storeMergedWebXmlListener52.getEmptyWebXml();
        java.lang.String str54 = storeMergedWebXmlListener52.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str56 = storeMergedWebXmlListener55.getMERGED_WEB_XML();
        java.lang.String str57 = storeMergedWebXmlListener55.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray58 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener52, storeMergedWebXmlListener55 };
        tomcatEmbeddedServletContainerFactory34.addContextLifecycleListeners(lifecycleListenerArray58);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray58);
        tomcatEmbeddedServletContainerFactory0.setPort(10);
        java.lang.String str63 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        tomcatEmbeddedServletContainerFactory0.setProtocol("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        java.util.concurrent.TimeUnit timeUnit67 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(10, timeUnit67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(connectorList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file32.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.761893682400636120.0");
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertNotNull(connectorList42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection49);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str53, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str54, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str56, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str57, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray58);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList16 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList16, valveArray15);
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList16;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory19.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList28 = tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers = tomcatContextCustomizerList28;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        org.apache.catalina.Valve valve31 = null;
        org.apache.catalina.Valve[] valveArray32 = new org.apache.catalina.Valve[] { valve31 };
        tomcatEmbeddedServletContainerFactory19.addContextValves(valveArray32);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray32);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) 10);
        java.net.InetAddress inetAddress37 = tomcatEmbeddedServletContainerFactory36.getAddress();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList41 = tomcatEmbeddedServletContainerFactory40.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection42 = tomcatEmbeddedServletContainerFactory40.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList43 = tomcatEmbeddedServletContainerFactory40.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection44 = tomcatEmbeddedServletContainerFactory40.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList45 = tomcatEmbeddedServletContainerFactory40.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList45;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList45;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n";
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet51 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(valveArray32);
        org.junit.Assert.assertNull(inetAddress37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList41);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection42);
        org.junit.Assert.assertNotNull(valveList43);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection44);
        org.junit.Assert.assertNotNull(connectorList45);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNotNull(errorPageSet51);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors = connectorList15;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory8.protocol;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory8.protocol;
        tomcatEmbeddedServletContainerFactory8.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection21 = tomcatEmbeddedServletContainerFactory8.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList22 = tomcatEmbeddedServletContainerFactory8.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList22;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList27 = tomcatEmbeddedServletContainerFactory26.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory24.tomcatConnectorCustomizers = tomcatConnectorCustomizerList27;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = tomcatEmbeddedServletContainerFactory24.getErrorPages();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList30 = tomcatEmbeddedServletContainerFactory24.contextLifecycleListeners;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings31);
        int int33 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.net.InetAddress inetAddress34 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.Context context36 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection21);
        org.junit.Assert.assertNotNull(valveList22);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList27);
        org.junit.Assert.assertNotNull(errorPageSet29);
        org.junit.Assert.assertNotNull(lifecycleListenerList30);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(inetAddress34);
        org.junit.Assert.assertNotNull(mimeMappings35);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory5.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection10 = tomcatEmbeddedServletContainerFactory5.getTomcatConnectorCustomizers();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory5.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress12 = null;
        tomcatEmbeddedServletContainerFactory5.setAddress(inetAddress12);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray14 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory5.addContextCustomizers(tomcatContextCustomizerArray14);
        tomcatEmbeddedServletContainerFactory2.addContextCustomizers(tomcatContextCustomizerArray14);
        java.net.InetAddress inetAddress17 = tomcatEmbeddedServletContainerFactory2.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        tomcatEmbeddedServletContainerFactory2.resourceLoader = resourceLoader18;
        org.apache.catalina.Context context20 = null;
        tomcatEmbeddedServletContainerFactory2.postProcessContext(context20);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray14);
        org.junit.Assert.assertNull(inetAddress17);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        org.apache.catalina.Context context5 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context5);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList14;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory7.protocol;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory7.protocol;
        java.net.InetAddress inetAddress18 = null;
        tomcatEmbeddedServletContainerFactory7.setAddress(inetAddress18);
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors;
        java.io.File file21 = tomcatEmbeddedServletContainerFactory7.baseDirectory;
        org.apache.catalina.Valve[] valveArray22 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory7.addContextValves(valveArray22);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray22);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection25 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNotNull(valveArray22);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection25);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.apache.catalina.Context context13 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context13);
        org.springframework.core.io.ResourceLoader resourceLoader15 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        boolean boolean16 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(mimeMappings19);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory3.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers = tomcatConnectorCustomizerList4;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory1.getContextLifecycleListeners();
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory1.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory1.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList10 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.io.File file12 = tomcatEmbeddedServletContainerFactory0.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.util.concurrent.TimeUnit timeUnit15 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) '4', timeUnit15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList10);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.5339039659548296322.8080");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8080 + "'", int13 == 8080);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.apache.catalina.Context context2 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context2);
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader4;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet6 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str1, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(errorPageSet6);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList14;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory7.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory7.setMimeMappings(mimeMappings20);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList23 = tomcatEmbeddedServletContainerFactory22.tomcatConnectorCustomizers;
        int int24 = tomcatEmbeddedServletContainerFactory22.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray25 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory22.addContextLifecycleListeners(lifecycleListenerArray25);
        tomcatEmbeddedServletContainerFactory7.addContextLifecycleListeners(lifecycleListenerArray25);
        tomcatEmbeddedServletContainerFactory7.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader30 = tomcatEmbeddedServletContainerFactory7.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList34 = tomcatEmbeddedServletContainerFactory33.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory31.tomcatConnectorCustomizers = tomcatConnectorCustomizerList34;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection36 = tomcatEmbeddedServletContainerFactory31.getContextLifecycleListeners();
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory31.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList38 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.ErrorPage errorPage39 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray40 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage39 };
        tomcatEmbeddedServletContainerFactory31.addErrorPages(errorPageArray40);
        tomcatEmbeddedServletContainerFactory7.addErrorPages(errorPageArray40);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray40);
        java.net.InetAddress inetAddress44 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress44);
        java.net.InetAddress inetAddress46 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress46);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray25);
        org.junit.Assert.assertNull(resourceLoader30);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList34);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-8" + "'", str37, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList38);
        org.junit.Assert.assertNotNull(errorPageArray40);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader9 = tomcatEmbeddedServletContainerFactory7.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection15 = tomcatEmbeddedServletContainerFactory10.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory7.tomcatContextCustomizers = tomcatContextCustomizerList16;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList16;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory20.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection25 = tomcatEmbeddedServletContainerFactory20.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory20.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector28 = null;
        org.apache.catalina.connector.Connector[] connectorArray29 = new org.apache.catalina.connector.Connector[] { connector28 };
        tomcatEmbeddedServletContainerFactory20.addAdditionalTomcatConnectors(connectorArray29);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray29);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader34 = tomcatEmbeddedServletContainerFactory32.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory35.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection40 = tomcatEmbeddedServletContainerFactory35.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList41 = tomcatEmbeddedServletContainerFactory35.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory32.tomcatContextCustomizers = tomcatContextCustomizerList41;
        tomcatEmbeddedServletContainerFactory32.uriEncoding = "UTF-8";
        int int45 = tomcatEmbeddedServletContainerFactory32.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean47 = tomcatEmbeddedServletContainerFactory46.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection48 = tomcatEmbeddedServletContainerFactory46.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = tomcatEmbeddedServletContainerFactory46.getMimeMappings();
        tomcatEmbeddedServletContainerFactory32.setMimeMappings(mimeMappings49);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory51.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory51.getMimeMappings();
        tomcatEmbeddedServletContainerFactory51.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection57 = tomcatEmbeddedServletContainerFactory51.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory58.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory58.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = tomcatEmbeddedServletContainerFactory63.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList65 = tomcatEmbeddedServletContainerFactory63.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory58.additionalTomcatConnectors = connectorList65;
        java.lang.String str67 = tomcatEmbeddedServletContainerFactory58.protocol;
        org.apache.catalina.Context context68 = null;
        tomcatEmbeddedServletContainerFactory58.postProcessContext(context68);
        java.io.File file71 = tomcatEmbeddedServletContainerFactory58.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory51.setBaseDirectory(file71);
        tomcatEmbeddedServletContainerFactory32.baseDirectory = file71;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory74.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings77 = tomcatEmbeddedServletContainerFactory74.getMimeMappings();
        org.apache.catalina.Context context78 = null;
        tomcatEmbeddedServletContainerFactory74.postProcessContext(context78);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList81 = tomcatEmbeddedServletContainerFactory80.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection82 = tomcatEmbeddedServletContainerFactory80.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings84 = tomcatEmbeddedServletContainerFactory83.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader85 = tomcatEmbeddedServletContainerFactory83.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray86 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory83.addErrorPages(errorPageArray86);
        tomcatEmbeddedServletContainerFactory80.addErrorPages(errorPageArray86);
        tomcatEmbeddedServletContainerFactory74.addErrorPages(errorPageArray86);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection90 = tomcatEmbeddedServletContainerFactory74.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList91 = tomcatEmbeddedServletContainerFactory74.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory32.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList91);
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList91;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList94 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNull(resourceLoader9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection15);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection25);
        org.junit.Assert.assertNotNull(connectorArray29);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNull(resourceLoader34);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection40);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8080 + "'", int45 == 8080);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(valveCollection48);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection57);
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNotNull(connectorList65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(file71);
        org.junit.Assert.assertEquals(file71.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file71.toString(), "/tmp/UTF-8.6513389183752300142.0");
        org.junit.Assert.assertNotNull(mimeMappings77);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList81);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection82);
        org.junit.Assert.assertNotNull(mimeMappings84);
        org.junit.Assert.assertNull(resourceLoader85);
        org.junit.Assert.assertNotNull(errorPageArray86);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection90);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList91);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList94);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList11 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors = connectorList19;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory12.protocol;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory12.protocol;
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection25 = tomcatEmbeddedServletContainerFactory12.getTomcatContextCustomizers();
        int int26 = tomcatEmbeddedServletContainerFactory12.getPort();
        java.io.File file28 = tomcatEmbeddedServletContainerFactory12.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file28;
        org.apache.catalina.Valve[] valveArray30 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray30);
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList40 = tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors = connectorList40;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory33.protocol;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory33.protocol;
        java.net.InetAddress inetAddress44 = null;
        tomcatEmbeddedServletContainerFactory33.setAddress(inetAddress44);
        java.util.List<org.apache.catalina.connector.Connector> connectorList46 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        java.io.File file47 = tomcatEmbeddedServletContainerFactory33.baseDirectory;
        org.apache.catalina.Valve[] valveArray48 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory33.addContextValves(valveArray48);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList50 = tomcatEmbeddedServletContainerFactory33.tomcatConnectorCustomizers;
        java.net.InetAddress inetAddress51 = tomcatEmbeddedServletContainerFactory33.getAddress();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList52 = tomcatEmbeddedServletContainerFactory33.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList52;
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList11);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file28.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6113431492209518399.0");
        org.junit.Assert.assertNotNull(valveArray30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str32, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(connectorList40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(connectorList46);
        org.junit.Assert.assertNull(file47);
        org.junit.Assert.assertNotNull(valveArray48);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList50);
        org.junit.Assert.assertNull(inetAddress51);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList52);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader15);
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList25 = tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors = connectorList25;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory18.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader30 = tomcatEmbeddedServletContainerFactory28.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory31.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection36 = tomcatEmbeddedServletContainerFactory31.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList37 = tomcatEmbeddedServletContainerFactory31.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory28.tomcatContextCustomizers = tomcatContextCustomizerList37;
        tomcatEmbeddedServletContainerFactory18.tomcatContextCustomizers = tomcatContextCustomizerList37;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory40.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = tomcatEmbeddedServletContainerFactory45.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList47 = tomcatEmbeddedServletContainerFactory45.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory40.additionalTomcatConnectors = connectorList47;
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory40.protocol;
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory40.protocol;
        java.net.InetAddress inetAddress51 = null;
        tomcatEmbeddedServletContainerFactory40.setAddress(inetAddress51);
        tomcatEmbeddedServletContainerFactory40.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray55 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList56 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList56, valveArray55);
        tomcatEmbeddedServletContainerFactory40.contextValves = valveList56;
        tomcatEmbeddedServletContainerFactory18.contextValves = valveList56;
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory18.uriEncoding;
        java.io.File file62 = tomcatEmbeddedServletContainerFactory18.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file62);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList65 = tomcatEmbeddedServletContainerFactory64.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection66 = tomcatEmbeddedServletContainerFactory64.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings68 = tomcatEmbeddedServletContainerFactory67.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader69 = tomcatEmbeddedServletContainerFactory67.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray70 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory67.addErrorPages(errorPageArray70);
        tomcatEmbeddedServletContainerFactory64.addErrorPages(errorPageArray70);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray73 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory64.addInitializers(servletContextInitializerArray73);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory75.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory75.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings81 = tomcatEmbeddedServletContainerFactory80.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList82 = tomcatEmbeddedServletContainerFactory80.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory75.additionalTomcatConnectors = connectorList82;
        java.lang.String str84 = tomcatEmbeddedServletContainerFactory75.protocol;
        java.lang.String str85 = tomcatEmbeddedServletContainerFactory75.protocol;
        java.net.InetAddress inetAddress86 = null;
        tomcatEmbeddedServletContainerFactory75.setAddress(inetAddress86);
        java.io.File file88 = null;
        tomcatEmbeddedServletContainerFactory75.setBaseDirectory(file88);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray90 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory75.addContextCustomizers(tomcatContextCustomizerArray90);
        tomcatEmbeddedServletContainerFactory64.addContextCustomizers(tomcatContextCustomizerArray90);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray90);
        java.lang.String str94 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.core.io.ResourceLoader resourceLoader95 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader95);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(connectorList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNull(resourceLoader30);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection36);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList37);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(connectorList47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(valveArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "UTF-8" + "'", str60, "UTF-8");
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file62.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.4077994633292742636.0");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList65);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection66);
        org.junit.Assert.assertNotNull(mimeMappings68);
        org.junit.Assert.assertNull(resourceLoader69);
        org.junit.Assert.assertNotNull(errorPageArray70);
        org.junit.Assert.assertNotNull(servletContextInitializerArray73);
        org.junit.Assert.assertNotNull(mimeMappings81);
        org.junit.Assert.assertNotNull(connectorList82);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray90);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "hi!" + "'", str94, "hi!");
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory4.additionalTomcatConnectors = connectorList11;
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory4.protocol;
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory4.protocol;
        java.net.InetAddress inetAddress15 = null;
        tomcatEmbeddedServletContainerFactory4.setAddress(inetAddress15);
        java.io.File file17 = null;
        tomcatEmbeddedServletContainerFactory4.setBaseDirectory(file17);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray19 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory4.addContextCustomizers(tomcatContextCustomizerArray19);
        java.util.List<org.apache.catalina.Valve> valveList21 = tomcatEmbeddedServletContainerFactory4.contextValves;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory4.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList30 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors = connectorList30;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory23.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader35 = tomcatEmbeddedServletContainerFactory33.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection41 = tomcatEmbeddedServletContainerFactory36.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList42 = tomcatEmbeddedServletContainerFactory36.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory33.tomcatContextCustomizers = tomcatContextCustomizerList42;
        tomcatEmbeddedServletContainerFactory23.tomcatContextCustomizers = tomcatContextCustomizerList42;
        tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers = tomcatContextCustomizerList42;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList42;
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory2.getUriEncoding();
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory2.uriEncoding;
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory2.tldSkip;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray19);
        org.junit.Assert.assertNotNull(valveList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str22, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(connectorList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNull(resourceLoader35);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection41);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-8" + "'", str47, "UTF-8");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-8" + "'", str48, "UTF-8");
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file4 = tomcatEmbeddedServletContainerFactory2.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray5 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList6 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList6, tomcatConnectorCustomizerArray5);
        tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers = tomcatConnectorCustomizerList6;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        org.apache.catalina.Context context13 = null;
        tomcatEmbeddedServletContainerFactory9.postProcessContext(context13);
        java.util.List<org.apache.catalina.Valve> valveList15 = tomcatEmbeddedServletContainerFactory9.contextValves;
        tomcatEmbeddedServletContainerFactory2.contextValves = valveList15;
        boolean boolean17 = tomcatEmbeddedServletContainerFactory2.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList21 = tomcatEmbeddedServletContainerFactory20.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory18.tomcatConnectorCustomizers = tomcatConnectorCustomizerList21;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection23 = tomcatEmbeddedServletContainerFactory18.getContextLifecycleListeners();
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory18.uriEncoding;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory18.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList27 = tomcatEmbeddedServletContainerFactory26.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory18.tomcatConnectorCustomizers = tomcatConnectorCustomizerList27;
        org.apache.catalina.Context context29 = null;
        tomcatEmbeddedServletContainerFactory18.postProcessContext(context29);
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory18.getUriEncoding();
        tomcatEmbeddedServletContainerFactory18.setRegisterDefaultServlet(false);
        java.io.File file34 = tomcatEmbeddedServletContainerFactory18.baseDirectory;
        java.net.InetAddress inetAddress35 = tomcatEmbeddedServletContainerFactory18.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory38.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer40 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer40 };
        tomcatEmbeddedServletContainerFactory38.addInitializers(servletContextInitializerArray41);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory43.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = tomcatEmbeddedServletContainerFactory48.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList50 = tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList51 = tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory43.additionalTomcatConnectors = connectorList51;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory53.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory53.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection58 = tomcatEmbeddedServletContainerFactory53.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList59 = tomcatEmbeddedServletContainerFactory53.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory43.tomcatContextCustomizers = tomcatContextCustomizerList59;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str62 = storeMergedWebXmlListener61.getEmptyWebXml();
        java.lang.String str63 = storeMergedWebXmlListener61.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str65 = storeMergedWebXmlListener64.getMERGED_WEB_XML();
        java.lang.String str66 = storeMergedWebXmlListener64.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray67 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener61, storeMergedWebXmlListener64 };
        tomcatEmbeddedServletContainerFactory43.addContextLifecycleListeners(lifecycleListenerArray67);
        tomcatEmbeddedServletContainerFactory38.addContextLifecycleListeners(lifecycleListenerArray67);
        tomcatEmbeddedServletContainerFactory18.addContextLifecycleListeners(lifecycleListenerArray67);
        tomcatEmbeddedServletContainerFactory2.addContextLifecycleListeners(lifecycleListenerArray67);
        java.util.List<org.apache.catalina.connector.Connector> connectorList72 = tomcatEmbeddedServletContainerFactory2.getAdditionalTomcatConnectors();
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file4.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.8836255165150418343.100");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(valveList15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList21);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-8" + "'", str24, "UTF-8");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-8" + "'", str31, "UTF-8");
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNull(inetAddress35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(connectorList50);
        org.junit.Assert.assertNotNull(connectorList51);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection58);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str62, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str63, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str65, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str66, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray67);
        org.junit.Assert.assertNotNull(connectorList72);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        int int14 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.io.File file16 = tomcatEmbeddedServletContainerFactory0.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.setTldSkip("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.apache.catalina.startup.Tomcat tomcat19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer20 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file16.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.582127713779623855.0");
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.io.File file9 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        int int12 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str5 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str6 = storeMergedWebXmlListener0.getEmptyWebXml();
        org.apache.catalina.Context context7 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str6, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.apache.catalina.Context context2 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context2);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.tomcat.util.scan.MergedWebXml");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.List<org.apache.catalina.Valve> valveList7 = tomcatEmbeddedServletContainerFactory0.contextValves;
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 100);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(valveList7);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader20 = tomcatEmbeddedServletContainerFactory18.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory21.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection26 = tomcatEmbeddedServletContainerFactory21.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList27 = tomcatEmbeddedServletContainerFactory21.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory18.tomcatContextCustomizers = tomcatContextCustomizerList27;
        java.util.List<org.apache.catalina.Valve> valveList29 = tomcatEmbeddedServletContainerFactory18.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList29;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory31.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList36 = tomcatEmbeddedServletContainerFactory31.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        tomcatEmbeddedServletContainerFactory31.setMimeMappings(mimeMappings40);
        org.apache.catalina.connector.Connector connector42 = null;
        org.apache.catalina.connector.Connector[] connectorArray43 = new org.apache.catalina.connector.Connector[] { connector42 };
        tomcatEmbeddedServletContainerFactory31.addAdditionalTomcatConnectors(connectorArray43);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray43);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray46 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatConnectorCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNull(resourceLoader20);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection26);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList27);
        org.junit.Assert.assertNotNull(valveList29);
        org.junit.Assert.assertNotNull(lifecycleListenerList36);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(connectorArray43);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.apache.catalina.Valve valve5 = null;
        org.apache.catalina.Valve[] valveArray6 = new org.apache.catalina.Valve[] { valve5 };
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray6);
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.List<org.apache.catalina.connector.Connector> connectorList10 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-8" + "'", str4, "UTF-8");
        org.junit.Assert.assertNotNull(valveArray6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertNotNull(connectorList10);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector9 = null;
        org.apache.catalina.connector.Connector[] connectorArray10 = new org.apache.catalina.connector.Connector[] { connector9 };
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray10);
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        tomcatEmbeddedServletContainerFactory0.protocol = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n";
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(connectorArray10);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.apache.catalina.Context context2 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context2);
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.Class<?> wildcardClass8 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        org.springframework.core.io.ResourceLoader resourceLoader13 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setTldSkip("UTF-8");
        java.io.File file22 = tomcatEmbeddedServletContainerFactory16.createTempDir("UTF-8");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings23);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection25 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNotNull(file22);
        org.junit.Assert.assertEquals(file22.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file22.toString(), "/tmp/UTF-8.4291276702745496141.0");
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection25);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.apache.catalina.Context context2 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context2);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.tomcat.util.scan.MergedWebXml");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.List<org.apache.catalina.Valve> valveList7 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList8 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.net.InetAddress inetAddress9 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(valveList7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList8);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory2.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory2.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList9 = tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory2.additionalTomcatConnectors = connectorList9;
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory2.protocol;
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory2.protocol;
        tomcatEmbeddedServletContainerFactory2.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file19 = tomcatEmbeddedServletContainerFactory17.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory2.setBaseDirectory(file19);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file19;
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(connectorList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(file19);
        org.junit.Assert.assertEquals(file19.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file19.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6041175630413506256.100");
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.net.InetAddress inetAddress6 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection7 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        java.io.File file9 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection15 = tomcatEmbeddedServletContainerFactory10.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList16;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setTldSkip("UTF-8");
        int int23 = tomcatEmbeddedServletContainerFactory18.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList31 = tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors = connectorList31;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.net.InetAddress inetAddress35 = null;
        tomcatEmbeddedServletContainerFactory24.setAddress(inetAddress35);
        tomcatEmbeddedServletContainerFactory24.setJspServletClassName("");
        org.springframework.core.io.ResourceLoader resourceLoader39 = null;
        tomcatEmbeddedServletContainerFactory24.setResourceLoader(resourceLoader39);
        java.net.InetAddress inetAddress41 = tomcatEmbeddedServletContainerFactory24.getAddress();
        java.util.List<org.apache.catalina.connector.Connector> connectorList42 = tomcatEmbeddedServletContainerFactory24.getAdditionalTomcatConnectors();
        java.util.Collection<org.apache.catalina.Valve> valveCollection43 = tomcatEmbeddedServletContainerFactory24.getValves();
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors = connectorList44;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList44;
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList49 = tomcatEmbeddedServletContainerFactory48.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory48.uriEncoding = "";
        tomcatEmbeddedServletContainerFactory48.setContextPath("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection54 = tomcatEmbeddedServletContainerFactory48.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = tomcatEmbeddedServletContainerFactory55.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader57 = tomcatEmbeddedServletContainerFactory55.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory58.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory58.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection63 = tomcatEmbeddedServletContainerFactory58.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList64 = tomcatEmbeddedServletContainerFactory58.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory55.tomcatContextCustomizers = tomcatContextCustomizerList64;
        tomcatEmbeddedServletContainerFactory55.uriEncoding = "UTF-8";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection68 = tomcatEmbeddedServletContainerFactory55.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList69 = tomcatEmbeddedServletContainerFactory55.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory48.tomcatContextCustomizers = tomcatContextCustomizerList69;
        tomcatEmbeddedServletContainerFactory48.setRegisterJspServlet(false);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList73 = tomcatEmbeddedServletContainerFactory48.tomcatConnectorCustomizers;
        java.io.File file75 = tomcatEmbeddedServletContainerFactory48.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file75);
        java.lang.String str77 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection15);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNotNull(connectorList31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNull(inetAddress41);
        org.junit.Assert.assertNotNull(connectorList42);
        org.junit.Assert.assertNotNull(valveCollection43);
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-8" + "'", str47, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList49);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection54);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNull(resourceLoader57);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection63);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList64);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection68);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList69);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList73);
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file75.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.8790068149283970808.8080");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "UTF-8" + "'", str77, "UTF-8");
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader5 = tomcatEmbeddedServletContainerFactory3.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory3.addErrorPages(errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray6);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList11 = tomcatEmbeddedServletContainerFactory10.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection12 = tomcatEmbeddedServletContainerFactory10.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList13 = tomcatEmbeddedServletContainerFactory10.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection14 = tomcatEmbeddedServletContainerFactory10.getTomcatConnectorCustomizers();
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory10.getContextPath();
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        java.io.File file17 = tomcatEmbeddedServletContainerFactory10.getDocumentRoot();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory10.uriEncoding = "";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory21.setProtocol("UTF-8");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList27 = tomcatEmbeddedServletContainerFactory21.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory10.contextLifecycleListeners = lifecycleListenerList27;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList27;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection32 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNull(resourceLoader5);
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str9, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList11);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection12);
        org.junit.Assert.assertNotNull(valveList13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(lifecycleListenerList27);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection32);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.io.File file7 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-8" + "'", str4, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.apache.catalina.Context context4 = null;
        tomcatEmbeddedServletContainerFactory2.postProcessContext(context4);
        org.apache.catalina.connector.Connector connector6 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.customizeConnector(connector6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList16;
        boolean boolean18 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList21 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.apache.catalina.Context context22 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection28 = tomcatEmbeddedServletContainerFactory23.getTomcatConnectorCustomizers();
        boolean boolean29 = tomcatEmbeddedServletContainerFactory23.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress30 = null;
        tomcatEmbeddedServletContainerFactory23.setAddress(inetAddress30);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer32 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray33 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer32 };
        tomcatEmbeddedServletContainerFactory23.addConnectorCustomizers(tomcatConnectorCustomizerArray33);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection35 = tomcatEmbeddedServletContainerFactory23.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList39 = tomcatEmbeddedServletContainerFactory38.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory36.tomcatConnectorCustomizers = tomcatConnectorCustomizerList39;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection41 = tomcatEmbeddedServletContainerFactory36.getContextLifecycleListeners();
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory36.uriEncoding;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory36.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory44.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray46 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory44.addInitializers(servletContextInitializerArray46);
        tomcatEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray46);
        tomcatEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray46);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context22, servletContextInitializerArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray33);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection35);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList39);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-8" + "'", str42, "UTF-8");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-8" + "'", str45, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray46);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        tomcatEmbeddedServletContainerFactory2.setPort(10);
        tomcatEmbeddedServletContainerFactory2.setTldSkip("");
        int int9 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.apache.catalina.Context context10 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.addDefaultServlet(context10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList14;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.springframework.core.io.ResourceLoader resourceLoader18 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "hi!";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList24 = tomcatEmbeddedServletContainerFactory23.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory21.tomcatConnectorCustomizers = tomcatConnectorCustomizerList24;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection26 = tomcatEmbeddedServletContainerFactory21.getContextLifecycleListeners();
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory21.uriEncoding;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory21.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList36 = tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors = connectorList36;
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory29.protocol;
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory29.protocol;
        tomcatEmbeddedServletContainerFactory29.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection42 = tomcatEmbeddedServletContainerFactory29.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList43 = tomcatEmbeddedServletContainerFactory29.contextValves;
        tomcatEmbeddedServletContainerFactory21.contextValves = valveList43;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = tomcatEmbeddedServletContainerFactory45.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList48 = tomcatEmbeddedServletContainerFactory47.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory45.tomcatConnectorCustomizers = tomcatConnectorCustomizerList48;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet50 = tomcatEmbeddedServletContainerFactory45.getErrorPages();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList51 = tomcatEmbeddedServletContainerFactory45.contextLifecycleListeners;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = tomcatEmbeddedServletContainerFactory45.getMimeMappings();
        tomcatEmbeddedServletContainerFactory21.setMimeMappings(mimeMappings52);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings52);
        java.lang.String str55 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str17, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNull(resourceLoader18);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList24);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UTF-8" + "'", str28, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNotNull(connectorList36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection42);
        org.junit.Assert.assertNotNull(valveList43);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList48);
        org.junit.Assert.assertNotNull(errorPageSet50);
        org.junit.Assert.assertNotNull(lifecycleListenerList51);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray15);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.protocol = "hi!";
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setTldSkip("UTF-8");
        java.io.File file28 = tomcatEmbeddedServletContainerFactory22.createTempDir("UTF-8");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory30.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList35 = tomcatEmbeddedServletContainerFactory30.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList36 = tomcatEmbeddedServletContainerFactory30.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory22.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList36);
        java.util.List<org.apache.catalina.connector.Connector> connectorList38 = null;
        tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors = connectorList38;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList40 = tomcatEmbeddedServletContainerFactory22.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList40;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader44 = tomcatEmbeddedServletContainerFactory42.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory45.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory45.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection50 = tomcatEmbeddedServletContainerFactory45.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList51 = tomcatEmbeddedServletContainerFactory45.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory42.tomcatContextCustomizers = tomcatContextCustomizerList51;
        tomcatEmbeddedServletContainerFactory42.uriEncoding = "UTF-8";
        tomcatEmbeddedServletContainerFactory42.tldSkip = "UTF-8";
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList57 = null;
        tomcatEmbeddedServletContainerFactory42.contextLifecycleListeners = lifecycleListenerList57;
        java.io.File file60 = tomcatEmbeddedServletContainerFactory42.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file60);
        org.apache.catalina.startup.Tomcat tomcat62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer63 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str20, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file28.toString(), "/tmp/UTF-8.5921697925315336446.0");
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(lifecycleListenerList35);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList36);
        org.junit.Assert.assertNotNull(lifecycleListenerList40);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNull(resourceLoader44);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection50);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList51);
        org.junit.Assert.assertNotNull(file60);
        org.junit.Assert.assertEquals(file60.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file60.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.5217602905282449828.8080");
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection7 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.setPort(100);
        java.net.InetAddress inetAddress10 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.util.concurrent.TimeUnit timeUnit12 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 100, timeUnit12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection7);
        org.junit.Assert.assertNull(inetAddress10);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) 10);
        java.net.InetAddress inetAddress2 = tomcatEmbeddedServletContainerFactory1.getAddress();
        java.io.File file4 = tomcatEmbeddedServletContainerFactory1.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory1.resourceLoader = resourceLoader5;
        int int7 = tomcatEmbeddedServletContainerFactory1.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = tomcatEmbeddedServletContainerFactory1.getErrorPages();
        tomcatEmbeddedServletContainerFactory1.setPort(0);
        org.apache.catalina.Context context11 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors = connectorList19;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory12.protocol;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory12.protocol;
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection25 = tomcatEmbeddedServletContainerFactory12.getTomcatContextCustomizers();
        java.io.File file26 = tomcatEmbeddedServletContainerFactory12.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList28 = tomcatEmbeddedServletContainerFactory27.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory12.tomcatConnectorCustomizers = tomcatConnectorCustomizerList28;
        boolean boolean30 = tomcatEmbeddedServletContainerFactory12.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory12.uriEncoding = "UTF-8";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList33 = tomcatEmbeddedServletContainerFactory12.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory35.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList38 = tomcatEmbeddedServletContainerFactory37.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory35.tomcatConnectorCustomizers = tomcatConnectorCustomizerList38;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection40 = tomcatEmbeddedServletContainerFactory35.getContextLifecycleListeners();
        java.lang.String str41 = tomcatEmbeddedServletContainerFactory35.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList42 = tomcatEmbeddedServletContainerFactory35.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors = connectorList42;
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory34.protocol;
        tomcatEmbeddedServletContainerFactory34.setSessionTimeout(0);
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory34.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory48.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList55 = tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList56 = tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors = connectorList56;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory58.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray60 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory58.addInitializers(servletContextInitializerArray60);
        tomcatEmbeddedServletContainerFactory58.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray64 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory58.addContextLifecycleListeners(lifecycleListenerArray64);
        tomcatEmbeddedServletContainerFactory48.addContextLifecycleListeners(lifecycleListenerArray64);
        org.apache.catalina.Context context67 = null;
        tomcatEmbeddedServletContainerFactory48.postProcessContext(context67);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory69.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings72 = tomcatEmbeddedServletContainerFactory69.getMimeMappings();
        tomcatEmbeddedServletContainerFactory69.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str78 = tomcatEmbeddedServletContainerFactory77.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer79 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray80 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer79 };
        tomcatEmbeddedServletContainerFactory77.addInitializers(servletContextInitializerArray80);
        tomcatEmbeddedServletContainerFactory69.addInitializers(servletContextInitializerArray80);
        tomcatEmbeddedServletContainerFactory48.addInitializers(servletContextInitializerArray80);
        tomcatEmbeddedServletContainerFactory34.addInitializers(servletContextInitializerArray80);
        tomcatEmbeddedServletContainerFactory12.addInitializers(servletContextInitializerArray80);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.configureContext(context11, servletContextInitializerArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(inetAddress2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file4.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.1107967734916493930.10");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNotNull(errorPageSet8);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList33);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList38);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-8" + "'", str41, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str44, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str47, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(connectorList55);
        org.junit.Assert.assertNotNull(connectorList56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "UTF-8" + "'", str59, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray60);
        org.junit.Assert.assertNotNull(lifecycleListenerArray64);
        org.junit.Assert.assertNotNull(mimeMappings72);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(servletContextInitializerArray80);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str4 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str5 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.Context context6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str4, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray15 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16, errorPageArray15);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList23 = tomcatEmbeddedServletContainerFactory22.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection24 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory21.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors = connectorList33;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory26.protocol;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory26.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory37.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory42.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors = connectorList44;
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory37.protocol;
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory37.protocol;
        java.net.InetAddress inetAddress48 = null;
        tomcatEmbeddedServletContainerFactory37.setAddress(inetAddress48);
        int int50 = tomcatEmbeddedServletContainerFactory37.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = tomcatEmbeddedServletContainerFactory51.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList54 = tomcatEmbeddedServletContainerFactory53.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory51.tomcatConnectorCustomizers = tomcatConnectorCustomizerList54;
        tomcatEmbeddedServletContainerFactory37.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList54);
        tomcatEmbeddedServletContainerFactory26.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList54);
        tomcatEmbeddedServletContainerFactory21.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList54);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList54);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n";
        org.apache.catalina.startup.Tomcat tomcat64 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer65 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat64);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(errorPageArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection24);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList54);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader7 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.net.InetAddress inetAddress8 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress8);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setSessionTimeout((int) (short) 100);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList19 = tomcatEmbeddedServletContainerFactory10.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory20.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList27 = tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors = connectorList27;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory20.protocol;
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory20.protocol;
        tomcatEmbeddedServletContainerFactory20.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection33 = tomcatEmbeddedServletContainerFactory20.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList34 = tomcatEmbeddedServletContainerFactory20.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList34;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList34;
        org.apache.catalina.Context context37 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray38 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context37, servletContextInitializerArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList19);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNotNull(connectorList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection33);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList34);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList16;
        boolean boolean18 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.tldSkip = "";
        java.io.File file21 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.core.io.ResourceLoader resourceLoader23 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader23;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray25 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList26 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList26, tomcatConnectorCustomizerArray25);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList26);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection29 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection29);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory2.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory2.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList7 = tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList8 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers = tomcatConnectorCustomizerList8;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList10 = null;
        tomcatEmbeddedServletContainerFactory1.tomcatContextCustomizers = tomcatContextCustomizerList10;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory1.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors = connectorList21;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory23.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray25);
        tomcatEmbeddedServletContainerFactory23.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray29 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory23.addContextLifecycleListeners(lifecycleListenerArray29);
        tomcatEmbeddedServletContainerFactory13.addContextLifecycleListeners(lifecycleListenerArray29);
        org.apache.catalina.Context context32 = null;
        tomcatEmbeddedServletContainerFactory13.postProcessContext(context32);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        tomcatEmbeddedServletContainerFactory34.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory42.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer44 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray45 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer44 };
        tomcatEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray45);
        tomcatEmbeddedServletContainerFactory34.addInitializers(servletContextInitializerArray45);
        tomcatEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray45);
        tomcatEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray45);
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory1.getUriEncoding();
        org.junit.Assert.assertNotNull(lifecycleListenerList7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList8);
        org.junit.Assert.assertNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-8" + "'", str24, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(lifecycleListenerArray29);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(servletContextInitializerArray45);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-8" + "'", str50, "UTF-8");
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = tomcatEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory4.tomcatConnectorCustomizers = tomcatConnectorCustomizerList7;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection9 = tomcatEmbeddedServletContainerFactory4.getContextLifecycleListeners();
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory4.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList19;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory21.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory21.addInitializers(servletContextInitializerArray23);
        tomcatEmbeddedServletContainerFactory21.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray27 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory21.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory11.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory4.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray27);
        int int32 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "hi!";
        boolean boolean35 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(lifecycleListenerArray27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer13 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray14 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer13 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray14);
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.apache.catalina.connector.Connector connector18 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray14);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-8" + "'", str17, "UTF-8");
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        int int14 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory10.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader27 = null;
        tomcatEmbeddedServletContainerFactory26.setResourceLoader(resourceLoader27);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = tomcatEmbeddedServletContainerFactory26.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory30.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory35.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory35.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors = connectorList37;
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory30.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory40.getMimeMappings();
        tomcatEmbeddedServletContainerFactory30.setMimeMappings(mimeMappings43);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList46 = tomcatEmbeddedServletContainerFactory45.tomcatConnectorCustomizers;
        int int47 = tomcatEmbeddedServletContainerFactory45.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray48 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory45.addContextLifecycleListeners(lifecycleListenerArray48);
        tomcatEmbeddedServletContainerFactory30.addContextLifecycleListeners(lifecycleListenerArray48);
        tomcatEmbeddedServletContainerFactory30.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader53 = tomcatEmbeddedServletContainerFactory30.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = tomcatEmbeddedServletContainerFactory54.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList57 = tomcatEmbeddedServletContainerFactory56.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory54.tomcatConnectorCustomizers = tomcatConnectorCustomizerList57;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection59 = tomcatEmbeddedServletContainerFactory54.getContextLifecycleListeners();
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory54.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList61 = tomcatEmbeddedServletContainerFactory54.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.ErrorPage errorPage62 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray63 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage62 };
        tomcatEmbeddedServletContainerFactory54.addErrorPages(errorPageArray63);
        tomcatEmbeddedServletContainerFactory30.addErrorPages(errorPageArray63);
        tomcatEmbeddedServletContainerFactory26.addErrorPages(errorPageArray63);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray63);
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(errorPageSet29);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray48);
        org.junit.Assert.assertNull(resourceLoader53);
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList57);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "UTF-8" + "'", str60, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList61);
        org.junit.Assert.assertNotNull(errorPageArray63);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList15;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray19);
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray23 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory17.addContextLifecycleListeners(lifecycleListenerArray23);
        tomcatEmbeddedServletContainerFactory7.addContextLifecycleListeners(lifecycleListenerArray23);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray23);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) '4');
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList29 = tomcatEmbeddedServletContainerFactory28.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) '#');
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory35.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader37 = tomcatEmbeddedServletContainerFactory35.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory38.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection43 = tomcatEmbeddedServletContainerFactory38.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList44 = tomcatEmbeddedServletContainerFactory38.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory35.tomcatContextCustomizers = tomcatContextCustomizerList44;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList46 = tomcatEmbeddedServletContainerFactory35.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory47.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory47.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings53 = tomcatEmbeddedServletContainerFactory52.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList54 = tomcatEmbeddedServletContainerFactory52.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory47.additionalTomcatConnectors = connectorList54;
        java.lang.String str56 = tomcatEmbeddedServletContainerFactory47.protocol;
        java.lang.String str57 = tomcatEmbeddedServletContainerFactory47.protocol;
        tomcatEmbeddedServletContainerFactory47.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection60 = tomcatEmbeddedServletContainerFactory47.getTomcatContextCustomizers();
        int int61 = tomcatEmbeddedServletContainerFactory47.getPort();
        java.io.File file63 = tomcatEmbeddedServletContainerFactory47.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory35.baseDirectory = file63;
        org.apache.catalina.Valve[] valveArray65 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory35.addContextValves(valveArray65);
        tomcatEmbeddedServletContainerFactory34.addContextValves(valveArray65);
        tomcatEmbeddedServletContainerFactory32.addContextValves(valveArray65);
        tomcatEmbeddedServletContainerFactory28.addContextValves(valveArray65);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray65);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(lifecycleListenerArray23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList29);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNull(resourceLoader37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection43);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList44);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList46);
        org.junit.Assert.assertNotNull(mimeMappings53);
        org.junit.Assert.assertNotNull(connectorList54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(file63);
        org.junit.Assert.assertEquals(file63.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file63.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.4631669514229795890.0");
        org.junit.Assert.assertNotNull(valveArray65);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("org.apache.coyote.http11.Http11NioProtocol", (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection3 = tomcatEmbeddedServletContainerFactory2.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList4 = tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners;
        java.util.List<org.apache.catalina.Valve> valveList5 = tomcatEmbeddedServletContainerFactory2.contextValves;
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader10 = tomcatEmbeddedServletContainerFactory8.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection16 = tomcatEmbeddedServletContainerFactory11.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList17 = tomcatEmbeddedServletContainerFactory11.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers = tomcatContextCustomizerList17;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList19 = tomcatEmbeddedServletContainerFactory8.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection20 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory21.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList26 = tomcatEmbeddedServletContainerFactory21.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        tomcatEmbeddedServletContainerFactory21.setMimeMappings(mimeMappings30);
        org.apache.catalina.connector.Connector connector32 = null;
        org.apache.catalina.connector.Connector[] connectorArray33 = new org.apache.catalina.connector.Connector[] { connector32 };
        tomcatEmbeddedServletContainerFactory21.addAdditionalTomcatConnectors(connectorArray33);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList36 = tomcatEmbeddedServletContainerFactory35.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection37 = tomcatEmbeddedServletContainerFactory35.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList38 = tomcatEmbeddedServletContainerFactory35.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection39 = tomcatEmbeddedServletContainerFactory35.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory21.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection39);
        java.net.InetAddress inetAddress41 = null;
        tomcatEmbeddedServletContainerFactory21.setAddress(inetAddress41);
        java.util.List<org.apache.catalina.Valve> valveList43 = tomcatEmbeddedServletContainerFactory21.contextValves;
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory21.protocol;
        java.util.Collection<org.apache.catalina.Valve> valveCollection45 = tomcatEmbeddedServletContainerFactory21.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory46.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory46.setProtocol("hi!");
        java.lang.String str51 = tomcatEmbeddedServletContainerFactory46.protocol;
        tomcatEmbeddedServletContainerFactory46.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.io.File file55 = tomcatEmbeddedServletContainerFactory46.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        tomcatEmbeddedServletContainerFactory21.baseDirectory = file55;
        tomcatEmbeddedServletContainerFactory8.setDocumentRoot(file55);
        tomcatEmbeddedServletContainerFactory2.setDocumentRoot(file55);
        tomcatEmbeddedServletContainerFactory2.protocol = "";
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection3);
        org.junit.Assert.assertNotNull(lifecycleListenerList4);
        org.junit.Assert.assertNotNull(valveList5);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(resourceLoader10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection16);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList19);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection20);
        org.junit.Assert.assertNotNull(lifecycleListenerList26);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNotNull(connectorArray33);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList36);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection37);
        org.junit.Assert.assertNotNull(valveList38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection39);
        org.junit.Assert.assertNotNull(valveList43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(valveCollection45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(file55);
        org.junit.Assert.assertEquals(file55.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file55.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.4362942620874257562.0");
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList11 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors = connectorList19;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory12.protocol;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory12.protocol;
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection25 = tomcatEmbeddedServletContainerFactory12.getTomcatContextCustomizers();
        int int26 = tomcatEmbeddedServletContainerFactory12.getPort();
        java.io.File file28 = tomcatEmbeddedServletContainerFactory12.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file28;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList31 = tomcatEmbeddedServletContainerFactory30.tomcatConnectorCustomizers;
        int int32 = tomcatEmbeddedServletContainerFactory30.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray33 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory30.addContextLifecycleListeners(lifecycleListenerArray33);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray33);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection36 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory0.protocol;
        int int38 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList11);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(file28);
        org.junit.Assert.assertEquals(file28.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file28.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6240509125397938462.0");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray33);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str37, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory2.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray4 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory2.addConnectorCustomizers(tomcatConnectorCustomizerArray4);
        java.net.InetAddress inetAddress6 = tomcatEmbeddedServletContainerFactory2.getAddress();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList7 = tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers;
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray4);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList7);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList16 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList16, valveArray15);
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList16;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory19.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList28 = tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers = tomcatContextCustomizerList28;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        org.apache.catalina.Valve valve31 = null;
        org.apache.catalina.Valve[] valveArray32 = new org.apache.catalina.Valve[] { valve31 };
        tomcatEmbeddedServletContainerFactory19.addContextValves(valveArray32);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray32);
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.io.File file37 = tomcatEmbeddedServletContainerFactory0.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        int int38 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(valveArray32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file37.toString(), "/tmp/web-app>\n.1328306831878129374.0");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int2 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) -1);
        org.apache.catalina.Context context6 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList15;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray19);
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray23 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory17.addContextLifecycleListeners(lifecycleListenerArray23);
        tomcatEmbeddedServletContainerFactory7.addContextLifecycleListeners(lifecycleListenerArray23);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList26 = tomcatEmbeddedServletContainerFactory7.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory27.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray29 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory27.addInitializers(servletContextInitializerArray29);
        tomcatEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray29);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context6, servletContextInitializerArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(lifecycleListenerArray23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UTF-8" + "'", str28, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray29);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        java.util.List<org.apache.catalina.Valve> valveList11 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        tomcatEmbeddedServletContainerFactory0.protocol = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n";
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(1);
        boolean boolean18 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection21 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(valveList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str12, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection21);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        tomcatEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList12 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors = connectorList20;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory13.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean24 = tomcatEmbeddedServletContainerFactory23.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList25 = tomcatEmbeddedServletContainerFactory23.contextValves;
        tomcatEmbeddedServletContainerFactory13.contextValves = valveList25;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory13.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors = connectorList35;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory28.protocol;
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory28.protocol;
        java.net.InetAddress inetAddress39 = null;
        tomcatEmbeddedServletContainerFactory28.setAddress(inetAddress39);
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory42.setTldSkip("UTF-8");
        java.io.File file48 = tomcatEmbeddedServletContainerFactory42.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory28.setDocumentRoot(file48);
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory52.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = tomcatEmbeddedServletContainerFactory57.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList59 = tomcatEmbeddedServletContainerFactory57.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory52.additionalTomcatConnectors = connectorList59;
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory52.protocol;
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory52.protocol;
        tomcatEmbeddedServletContainerFactory52.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection65 = tomcatEmbeddedServletContainerFactory52.getTomcatContextCustomizers();
        int int66 = tomcatEmbeddedServletContainerFactory52.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory67.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory67.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings73 = tomcatEmbeddedServletContainerFactory72.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList74 = tomcatEmbeddedServletContainerFactory72.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory67.additionalTomcatConnectors = connectorList74;
        java.lang.String str76 = tomcatEmbeddedServletContainerFactory67.protocol;
        java.lang.String str77 = tomcatEmbeddedServletContainerFactory67.protocol;
        java.net.InetAddress inetAddress78 = null;
        tomcatEmbeddedServletContainerFactory67.setAddress(inetAddress78);
        java.util.List<org.apache.catalina.connector.Connector> connectorList80 = tomcatEmbeddedServletContainerFactory67.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory81.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory81.setTldSkip("UTF-8");
        java.io.File file87 = tomcatEmbeddedServletContainerFactory81.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory67.setDocumentRoot(file87);
        tomcatEmbeddedServletContainerFactory52.setDocumentRoot(file87);
        tomcatEmbeddedServletContainerFactory28.baseDirectory = file87;
        tomcatEmbeddedServletContainerFactory13.setDocumentRoot(file87);
        tomcatEmbeddedServletContainerFactory9.baseDirectory = file87;
        tomcatEmbeddedServletContainerFactory2.baseDirectory = file87;
        java.lang.String str94 = tomcatEmbeddedServletContainerFactory2.getUriEncoding();
        tomcatEmbeddedServletContainerFactory2.protocol = "";
        tomcatEmbeddedServletContainerFactory2.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertNotNull(connectorList12);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(valveList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/tmp/UTF-8.7136233155126817931.0");
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(connectorList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(mimeMappings73);
        org.junit.Assert.assertNotNull(connectorList74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(connectorList80);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file87.toString(), "/tmp/UTF-8.3307474555605719954.0");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "UTF-8" + "'", str94, "UTF-8");
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray5 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList6 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList6, lifecycleListenerArray5);
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList6;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory9.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory19.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList28 = tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers = tomcatContextCustomizerList28;
        tomcatEmbeddedServletContainerFactory9.tomcatContextCustomizers = tomcatContextCustomizerList28;
        java.io.File file32 = tomcatEmbeddedServletContainerFactory9.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file32);
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "hi!";
        java.util.Collection<org.apache.catalina.Valve> valveCollection36 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNotNull(lifecycleListenerArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList28);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file32.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.2193859067466137555.0");
        org.junit.Assert.assertNotNull(valveCollection36);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray5 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList6 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList6, lifecycleListenerArray5);
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList6;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory9.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory19.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList28 = tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers = tomcatContextCustomizerList28;
        tomcatEmbeddedServletContainerFactory9.tomcatContextCustomizers = tomcatContextCustomizerList28;
        java.io.File file32 = tomcatEmbeddedServletContainerFactory9.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file32);
        tomcatEmbeddedServletContainerFactory0.protocol = "hi!";
        org.apache.catalina.startup.Tomcat tomcat36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer37 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNotNull(lifecycleListenerArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList28);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file32.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.7272494840046391549.0");
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.io.File file6 = tomcatEmbeddedServletContainerFactory0.createTempDir("UTF-8");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList13 = tomcatEmbeddedServletContainerFactory8.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList14);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        boolean boolean19 = tomcatEmbeddedServletContainerFactory16.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory16.setRegisterDefaultServlet(true);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList22 = tomcatEmbeddedServletContainerFactory16.tomcatContextCustomizers;
        java.io.File file24 = tomcatEmbeddedServletContainerFactory16.createTempDir("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList26 = tomcatEmbeddedServletContainerFactory25.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory25.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader30 = tomcatEmbeddedServletContainerFactory28.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray31 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory28.addErrorPages(errorPageArray31);
        tomcatEmbeddedServletContainerFactory25.addErrorPages(errorPageArray31);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory34.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList42 = tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors = connectorList42;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory44.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection49 = tomcatEmbeddedServletContainerFactory44.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList50 = tomcatEmbeddedServletContainerFactory44.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory34.tomcatContextCustomizers = tomcatContextCustomizerList50;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str53 = storeMergedWebXmlListener52.getEmptyWebXml();
        java.lang.String str54 = storeMergedWebXmlListener52.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str56 = storeMergedWebXmlListener55.getMERGED_WEB_XML();
        java.lang.String str57 = storeMergedWebXmlListener55.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray58 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener52, storeMergedWebXmlListener55 };
        tomcatEmbeddedServletContainerFactory34.addContextLifecycleListeners(lifecycleListenerArray58);
        tomcatEmbeddedServletContainerFactory25.addContextLifecycleListeners(lifecycleListenerArray58);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings62 = tomcatEmbeddedServletContainerFactory61.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList64 = tomcatEmbeddedServletContainerFactory63.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory61.tomcatConnectorCustomizers = tomcatConnectorCustomizerList64;
        tomcatEmbeddedServletContainerFactory25.tomcatConnectorCustomizers = tomcatConnectorCustomizerList64;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet67 = tomcatEmbeddedServletContainerFactory25.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory68.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings71 = tomcatEmbeddedServletContainerFactory68.getMimeMappings();
        tomcatEmbeddedServletContainerFactory68.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection74 = tomcatEmbeddedServletContainerFactory68.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader78 = null;
        tomcatEmbeddedServletContainerFactory77.setResourceLoader(resourceLoader78);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet80 = tomcatEmbeddedServletContainerFactory77.getErrorPages();
        tomcatEmbeddedServletContainerFactory68.setErrorPages(errorPageSet80);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory84 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader85 = null;
        tomcatEmbeddedServletContainerFactory84.setResourceLoader(resourceLoader85);
        tomcatEmbeddedServletContainerFactory84.setPort(10);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet89 = tomcatEmbeddedServletContainerFactory84.getErrorPages();
        tomcatEmbeddedServletContainerFactory68.setErrorPages(errorPageSet89);
        tomcatEmbeddedServletContainerFactory25.setErrorPages(errorPageSet89);
        tomcatEmbeddedServletContainerFactory16.setErrorPages(errorPageSet89);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet89);
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file6.toString(), "/tmp/UTF-8.7158630865957925641.0");
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(lifecycleListenerList13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file24.toString(), "/tmp/hi!.2132184256259989748.0");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList26);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNull(resourceLoader30);
        org.junit.Assert.assertNotNull(errorPageArray31);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertNotNull(connectorList42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection49);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str53, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str54, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str56, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str57, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray58);
        org.junit.Assert.assertNotNull(mimeMappings62);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList64);
        org.junit.Assert.assertNotNull(errorPageSet67);
        org.junit.Assert.assertNotNull(mimeMappings71);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection74);
        org.junit.Assert.assertNotNull(errorPageSet80);
        org.junit.Assert.assertNotNull(errorPageSet89);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str5 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.LifecycleEvent lifecycleEvent6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader7 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.net.InetAddress inetAddress8 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress8);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setSessionTimeout((int) (short) 100);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList19 = tomcatEmbeddedServletContainerFactory10.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory20.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList27 = tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors = connectorList27;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory20.protocol;
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory20.protocol;
        tomcatEmbeddedServletContainerFactory20.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection33 = tomcatEmbeddedServletContainerFactory20.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList34 = tomcatEmbeddedServletContainerFactory20.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList34;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList34;
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file40 = tomcatEmbeddedServletContainerFactory0.createTempDir("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Prefix string too short");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList19);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNotNull(connectorList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection33);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList34);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.net.InetAddress inetAddress13 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader17);
        tomcatEmbeddedServletContainerFactory16.setPort(10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList21;
        boolean boolean23 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", 0);
        org.apache.catalina.Context context3 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = tomcatEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory4.tomcatConnectorCustomizers = tomcatConnectorCustomizerList7;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = tomcatEmbeddedServletContainerFactory4.getErrorPages();
        java.net.InetAddress inetAddress10 = tomcatEmbeddedServletContainerFactory4.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList18;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory11.protocol;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory11.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings26);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection32 = tomcatEmbeddedServletContainerFactory28.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray33 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList34 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList34, lifecycleListenerArray33);
        tomcatEmbeddedServletContainerFactory28.contextLifecycleListeners = lifecycleListenerList34;
        tomcatEmbeddedServletContainerFactory11.contextLifecycleListeners = lifecycleListenerList34;
        tomcatEmbeddedServletContainerFactory4.contextLifecycleListeners = lifecycleListenerList34;
        tomcatEmbeddedServletContainerFactory4.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = tomcatEmbeddedServletContainerFactory41.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList44 = tomcatEmbeddedServletContainerFactory43.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory41.tomcatConnectorCustomizers = tomcatConnectorCustomizerList44;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection46 = tomcatEmbeddedServletContainerFactory41.getContextLifecycleListeners();
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory41.uriEncoding;
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory41.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory49.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray51 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory49.addInitializers(servletContextInitializerArray51);
        tomcatEmbeddedServletContainerFactory41.addInitializers(servletContextInitializerArray51);
        tomcatEmbeddedServletContainerFactory4.addInitializers(servletContextInitializerArray51);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.configureContext(context3, servletContextInitializerArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(valveCollection32);
        org.junit.Assert.assertNotNull(lifecycleListenerArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList44);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-8" + "'", str47, "UTF-8");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-8" + "'", str48, "UTF-8");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-8" + "'", str50, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray51);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection8 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.coyote.http11.Http11NioProtocol";
        tomcatEmbeddedServletContainerFactory0.setTldSkip("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        org.apache.catalina.Context context15 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection8);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList11 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors = connectorList20;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory22.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory22.addInitializers(servletContextInitializerArray24);
        tomcatEmbeddedServletContainerFactory22.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray28 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory22.addContextLifecycleListeners(lifecycleListenerArray28);
        tomcatEmbeddedServletContainerFactory12.addContextLifecycleListeners(lifecycleListenerArray28);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray28);
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        java.io.File file34 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList11);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertNotNull(lifecycleListenerArray28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertNull(file34);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "";
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection6 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader9 = tomcatEmbeddedServletContainerFactory7.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection15 = tomcatEmbeddedServletContainerFactory10.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory7.tomcatContextCustomizers = tomcatContextCustomizerList16;
        tomcatEmbeddedServletContainerFactory7.uriEncoding = "UTF-8";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection20 = tomcatEmbeddedServletContainerFactory7.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList21 = tomcatEmbeddedServletContainerFactory7.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList21;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader25 = tomcatEmbeddedServletContainerFactory23.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection31 = tomcatEmbeddedServletContainerFactory26.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList32 = tomcatEmbeddedServletContainerFactory26.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory23.tomcatContextCustomizers = tomcatContextCustomizerList32;
        tomcatEmbeddedServletContainerFactory23.uriEncoding = "UTF-8";
        tomcatEmbeddedServletContainerFactory23.setSessionTimeout(100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList39 = tomcatEmbeddedServletContainerFactory38.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection40 = tomcatEmbeddedServletContainerFactory38.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = tomcatEmbeddedServletContainerFactory41.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader43 = tomcatEmbeddedServletContainerFactory41.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray44 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory41.addErrorPages(errorPageArray44);
        tomcatEmbeddedServletContainerFactory38.addErrorPages(errorPageArray44);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray47 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory38.addInitializers(servletContextInitializerArray47);
        tomcatEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray47);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray47);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNull(resourceLoader9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection15);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection20);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList21);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(resourceLoader25);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection31);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList32);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList39);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection40);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNull(resourceLoader43);
        org.junit.Assert.assertNotNull(errorPageArray44);
        org.junit.Assert.assertNotNull(servletContextInitializerArray47);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (short) -1);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory2.tldSkip;
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection12 = tomcatEmbeddedServletContainerFactory7.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory7.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector15 = null;
        org.apache.catalina.connector.Connector[] connectorArray16 = new org.apache.catalina.connector.Connector[] { connector15 };
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray16);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray16);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList19 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        java.util.concurrent.TimeUnit timeUnit24 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) '#', timeUnit24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection12);
        org.junit.Assert.assertNotNull(connectorArray16);
        org.junit.Assert.assertNotNull(lifecycleListenerList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList8 = tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory9.protocol;
        tomcatEmbeddedServletContainerFactory9.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory17.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection22 = tomcatEmbeddedServletContainerFactory17.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList23 = tomcatEmbeddedServletContainerFactory17.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory9.tomcatContextCustomizers = tomcatContextCustomizerList23;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList23;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory2.tldSkip;
        org.apache.catalina.startup.Tomcat tomcat27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer28 = tomcatEmbeddedServletContainerFactory2.getTomcatEmbeddedServletContainer(tomcat27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection22);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList23);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str5 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.Context context6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList16;
        boolean boolean18 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList21 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.core.io.ResourceLoader resourceLoader23 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader23);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader27 = tomcatEmbeddedServletContainerFactory25.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection33 = tomcatEmbeddedServletContainerFactory28.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList34 = tomcatEmbeddedServletContainerFactory28.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory25.tomcatContextCustomizers = tomcatContextCustomizerList34;
        tomcatEmbeddedServletContainerFactory25.uriEncoding = "UTF-8";
        int int38 = tomcatEmbeddedServletContainerFactory25.getPort();
        java.net.InetAddress inetAddress39 = null;
        tomcatEmbeddedServletContainerFactory25.setAddress(inetAddress39);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList42 = tomcatEmbeddedServletContainerFactory41.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection43 = tomcatEmbeddedServletContainerFactory41.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList44 = tomcatEmbeddedServletContainerFactory41.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection45 = tomcatEmbeddedServletContainerFactory41.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList46 = tomcatEmbeddedServletContainerFactory41.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory41.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList49 = tomcatEmbeddedServletContainerFactory41.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory50.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory50.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = tomcatEmbeddedServletContainerFactory55.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList57 = tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory50.additionalTomcatConnectors = connectorList57;
        org.apache.catalina.Context context59 = null;
        tomcatEmbeddedServletContainerFactory50.postProcessContext(context59);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str64 = tomcatEmbeddedServletContainerFactory63.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray65 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory63.addConnectorCustomizers(tomcatConnectorCustomizerArray65);
        tomcatEmbeddedServletContainerFactory50.addConnectorCustomizers(tomcatConnectorCustomizerArray65);
        tomcatEmbeddedServletContainerFactory41.addConnectorCustomizers(tomcatConnectorCustomizerArray65);
        tomcatEmbeddedServletContainerFactory41.setProtocol("hi!");
        java.util.List<org.apache.catalina.Valve> valveList71 = tomcatEmbeddedServletContainerFactory41.contextValves;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection72 = tomcatEmbeddedServletContainerFactory41.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList74 = tomcatEmbeddedServletContainerFactory73.tomcatConnectorCustomizers;
        int int75 = tomcatEmbeddedServletContainerFactory73.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory73.uriEncoding = "hi!";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str79 = tomcatEmbeddedServletContainerFactory78.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray80 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory78.addInitializers(servletContextInitializerArray80);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener82 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str83 = storeMergedWebXmlListener82.getMERGED_WEB_XML();
        java.lang.String str84 = storeMergedWebXmlListener82.getMERGED_WEB_XML();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener85 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener86 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str87 = storeMergedWebXmlListener86.getMERGED_WEB_XML();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray88 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener82, storeMergedWebXmlListener85, storeMergedWebXmlListener86 };
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList89 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList89, lifecycleListenerArray88);
        tomcatEmbeddedServletContainerFactory78.contextLifecycleListeners = lifecycleListenerList89;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray92 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory78.addInitializers(servletContextInitializerArray92);
        tomcatEmbeddedServletContainerFactory73.addInitializers(servletContextInitializerArray92);
        tomcatEmbeddedServletContainerFactory41.addInitializers(servletContextInitializerArray92);
        tomcatEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray92);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray92);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNull(resourceLoader27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection33);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8080 + "'", int38 == 8080);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection43);
        org.junit.Assert.assertNotNull(valveList44);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection45);
        org.junit.Assert.assertNotNull(connectorList46);
        org.junit.Assert.assertNotNull(connectorList49);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNotNull(connectorList57);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray65);
        org.junit.Assert.assertNotNull(valveList71);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection72);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "UTF-8" + "'", str79, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str83, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str84, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str87, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertNotNull(lifecycleListenerArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(servletContextInitializerArray92);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader17;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str13, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection2 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader9;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveCollection2);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str4, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader15);
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        int int19 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList20 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList20);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList2 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray3 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList4, tomcatConnectorCustomizerArray3);
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList4;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory9.protocol;
        tomcatEmbeddedServletContainerFactory9.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection22 = tomcatEmbeddedServletContainerFactory9.getTomcatContextCustomizers();
        int int23 = tomcatEmbeddedServletContainerFactory9.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList31 = tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors = connectorList31;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.net.InetAddress inetAddress35 = null;
        tomcatEmbeddedServletContainerFactory24.setAddress(inetAddress35);
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory38.setTldSkip("UTF-8");
        java.io.File file44 = tomcatEmbeddedServletContainerFactory38.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory24.setDocumentRoot(file44);
        tomcatEmbeddedServletContainerFactory9.setDocumentRoot(file44);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file44;
        org.springframework.core.io.ResourceLoader resourceLoader48 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        tomcatEmbeddedServletContainerFactory0.tldSkip = "hi!";
        org.apache.catalina.startup.Tomcat tomcat51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer52 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveList2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNotNull(connectorList31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file44.toString(), "/tmp/UTF-8.7844639441580874527.0");
        org.junit.Assert.assertNull(resourceLoader48);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) '4');
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList10 = tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory3.additionalTomcatConnectors = connectorList10;
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory3.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean14 = tomcatEmbeddedServletContainerFactory13.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList15 = tomcatEmbeddedServletContainerFactory13.contextValves;
        tomcatEmbeddedServletContainerFactory3.contextValves = valveList15;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection17 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory2.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection17);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(connectorList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(valveList15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection17);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory4.protocol;
        tomcatEmbeddedServletContainerFactory4.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection17 = tomcatEmbeddedServletContainerFactory12.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList18 = tomcatEmbeddedServletContainerFactory12.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers = tomcatContextCustomizerList18;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList20 = tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList20;
        java.net.InetAddress inetAddress22 = tomcatEmbeddedServletContainerFactory2.getAddress();
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory2.getUriEncoding();
        org.springframework.core.io.ResourceLoader resourceLoader24 = tomcatEmbeddedServletContainerFactory2.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory25.getUriEncoding();
        int int27 = tomcatEmbeddedServletContainerFactory25.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader29 = null;
        tomcatEmbeddedServletContainerFactory25.resourceLoader = resourceLoader29;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory31.setTldSkip("UTF-8");
        java.io.File file37 = tomcatEmbeddedServletContainerFactory31.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory25.setBaseDirectory(file37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList42 = tomcatEmbeddedServletContainerFactory41.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers = tomcatConnectorCustomizerList42;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList45 = tomcatEmbeddedServletContainerFactory44.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection46 = tomcatEmbeddedServletContainerFactory44.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = tomcatEmbeddedServletContainerFactory47.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader49 = tomcatEmbeddedServletContainerFactory47.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray50 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory47.addErrorPages(errorPageArray50);
        tomcatEmbeddedServletContainerFactory44.addErrorPages(errorPageArray50);
        tomcatEmbeddedServletContainerFactory39.addErrorPages(errorPageArray50);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory54.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection59 = tomcatEmbeddedServletContainerFactory54.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory54.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection62 = tomcatEmbeddedServletContainerFactory54.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector63 = null;
        org.apache.catalina.connector.Connector[] connectorArray64 = new org.apache.catalina.connector.Connector[] { connector63 };
        tomcatEmbeddedServletContainerFactory54.addAdditionalTomcatConnectors(connectorArray64);
        tomcatEmbeddedServletContainerFactory39.addAdditionalTomcatConnectors(connectorArray64);
        tomcatEmbeddedServletContainerFactory25.addAdditionalTomcatConnectors(connectorArray64);
        tomcatEmbeddedServletContainerFactory2.addAdditionalTomcatConnectors(connectorArray64);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection69 = tomcatEmbeddedServletContainerFactory2.getTomcatContextCustomizers();
        java.lang.String str70 = tomcatEmbeddedServletContainerFactory2.getContextPath();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection17);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList20);
        org.junit.Assert.assertNull(inetAddress22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-8" + "'", str26, "UTF-8");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 8080 + "'", int27 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file37.toString(), "/tmp/UTF-8.3582746308319892790.0");
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection46);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNull(resourceLoader49);
        org.junit.Assert.assertNotNull(errorPageArray50);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection59);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection62);
        org.junit.Assert.assertNotNull(connectorArray64);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList14;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.apache.catalina.Context context18 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context18);
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList24 = tomcatEmbeddedServletContainerFactory23.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory21.tomcatConnectorCustomizers = tomcatConnectorCustomizerList24;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection26 = tomcatEmbeddedServletContainerFactory21.getContextLifecycleListeners();
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory21.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection33 = tomcatEmbeddedServletContainerFactory28.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory28.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector36 = null;
        org.apache.catalina.connector.Connector[] connectorArray37 = new org.apache.catalina.connector.Connector[] { connector36 };
        tomcatEmbeddedServletContainerFactory28.addAdditionalTomcatConnectors(connectorArray37);
        tomcatEmbeddedServletContainerFactory21.addAdditionalTomcatConnectors(connectorArray37);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList40 = tomcatEmbeddedServletContainerFactory21.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList42 = tomcatEmbeddedServletContainerFactory41.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection43 = tomcatEmbeddedServletContainerFactory41.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList44 = tomcatEmbeddedServletContainerFactory41.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection45 = tomcatEmbeddedServletContainerFactory41.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList46 = tomcatEmbeddedServletContainerFactory41.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory41.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList49 = tomcatEmbeddedServletContainerFactory41.getAdditionalTomcatConnectors();
        boolean boolean50 = tomcatEmbeddedServletContainerFactory41.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory51.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory51.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection55 = tomcatEmbeddedServletContainerFactory51.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray56 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList57 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList57, lifecycleListenerArray56);
        tomcatEmbeddedServletContainerFactory51.contextLifecycleListeners = lifecycleListenerList57;
        java.io.File file61 = tomcatEmbeddedServletContainerFactory51.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        tomcatEmbeddedServletContainerFactory41.setBaseDirectory(file61);
        tomcatEmbeddedServletContainerFactory21.baseDirectory = file61;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file61);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str17, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList24);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection33);
        org.junit.Assert.assertNotNull(connectorArray37);
        org.junit.Assert.assertNotNull(lifecycleListenerList40);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection43);
        org.junit.Assert.assertNotNull(valveList44);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection45);
        org.junit.Assert.assertNotNull(connectorList46);
        org.junit.Assert.assertNotNull(connectorList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(valveCollection55);
        org.junit.Assert.assertNotNull(lifecycleListenerArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(file61);
        org.junit.Assert.assertEquals(file61.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file61.toString(), "/tmp/web-app>\n.6740384436386830047.0");
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) -1);
        int int2 = tomcatEmbeddedServletContainerFactory1.getPort();
        org.apache.catalina.Context context3 = null;
        tomcatEmbeddedServletContainerFactory1.postProcessContext(context3);
        boolean boolean5 = tomcatEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory6.additionalTomcatConnectors = connectorList14;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory16.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray18);
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory16.addContextLifecycleListeners(lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory6.addContextLifecycleListeners(lifecycleListenerArray22);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList25 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory26.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray28 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray28);
        tomcatEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray28);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        tomcatEmbeddedServletContainerFactory31.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory39.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer41 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray42 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer41 };
        tomcatEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray42);
        tomcatEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray42);
        tomcatEmbeddedServletContainerFactory6.addInitializers(servletContextInitializerArray42);
        tomcatEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray42);
        tomcatEmbeddedServletContainerFactory1.tldSkip = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n";
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-8" + "'", str17, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray28);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray42);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList16 = tomcatEmbeddedServletContainerFactory11.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings20);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings20);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList24 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory27.tomcatConnectorCustomizers = tomcatConnectorCustomizerList30;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection32 = tomcatEmbeddedServletContainerFactory27.getContextLifecycleListeners();
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory27.uriEncoding;
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory37.tomcatConnectorCustomizers = tomcatConnectorCustomizerList40;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection42 = tomcatEmbeddedServletContainerFactory37.getContextLifecycleListeners();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory37.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList44;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray46 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory36.addContextCustomizers(tomcatContextCustomizerArray46);
        tomcatEmbeddedServletContainerFactory27.addContextCustomizers(tomcatContextCustomizerArray46);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray46);
        org.apache.catalina.Context context50 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList16);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList24);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray46);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str2 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.Context context5 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList6 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setTldSkip("UTF-8");
        java.io.File file13 = tomcatEmbeddedServletContainerFactory7.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file13);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection15 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList6);
        org.junit.Assert.assertNotNull(file13);
        org.junit.Assert.assertEquals(file13.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file13.toString(), "/tmp/UTF-8.5134843226994103931.0");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection15);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int2 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str4, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory2.uriEncoding;
        org.apache.catalina.Context context4 = null;
        tomcatEmbeddedServletContainerFactory2.postProcessContext(context4);
        int int6 = tomcatEmbeddedServletContainerFactory2.getPort();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str2 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str4 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str5 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str6 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str7 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.LifecycleEvent lifecycleEvent8 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str2, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str4, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str6, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str7, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.Context context4 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context4);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        boolean boolean11 = tomcatEmbeddedServletContainerFactory8.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors = connectorList19;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory12.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        tomcatEmbeddedServletContainerFactory12.setMimeMappings(mimeMappings25);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList28 = tomcatEmbeddedServletContainerFactory27.tomcatConnectorCustomizers;
        int int29 = tomcatEmbeddedServletContainerFactory27.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray30 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory27.addContextLifecycleListeners(lifecycleListenerArray30);
        tomcatEmbeddedServletContainerFactory12.addContextLifecycleListeners(lifecycleListenerArray30);
        tomcatEmbeddedServletContainerFactory8.addContextLifecycleListeners(lifecycleListenerArray30);
        java.util.List<org.apache.catalina.Valve> valveList34 = tomcatEmbeddedServletContainerFactory8.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList34;
        org.apache.catalina.Context context36 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context36);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray30);
        org.junit.Assert.assertNotNull(valveList34);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.Context context4 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection2 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.tldSkip = "UTF-8";
        tomcatEmbeddedServletContainerFactory0.setProtocol("org.apache.coyote.http11.Http11NioProtocol");
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.net.InetAddress inetAddress20 = null;
        tomcatEmbeddedServletContainerFactory9.setAddress(inetAddress20);
        int int22 = tomcatEmbeddedServletContainerFactory9.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader23 = tomcatEmbeddedServletContainerFactory9.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection29 = tomcatEmbeddedServletContainerFactory24.getTomcatConnectorCustomizers();
        boolean boolean30 = tomcatEmbeddedServletContainerFactory24.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress31 = null;
        tomcatEmbeddedServletContainerFactory24.setAddress(inetAddress31);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray33 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory24.addContextCustomizers(tomcatContextCustomizerArray33);
        tomcatEmbeddedServletContainerFactory9.addContextCustomizers(tomcatContextCustomizerArray33);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection36 = tomcatEmbeddedServletContainerFactory9.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory9.getAdditionalTomcatConnectors();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = tomcatEmbeddedServletContainerFactory9.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet38);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveCollection2);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(resourceLoader23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray33);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection36);
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertNotNull(errorPageSet38);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str4 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str5 = storeMergedWebXmlListener0.getEmptyWebXml();
        org.apache.catalina.Context context6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str5, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.io.File file5 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList18 = null;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList18;
        tomcatEmbeddedServletContainerFactory0.setPort(8080);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader24 = tomcatEmbeddedServletContainerFactory22.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray25 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory22.addErrorPages(errorPageArray25);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray25);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory28.protocol;
        tomcatEmbeddedServletContainerFactory28.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection41 = tomcatEmbeddedServletContainerFactory36.getTomcatConnectorCustomizers();
        boolean boolean42 = tomcatEmbeddedServletContainerFactory36.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader45 = tomcatEmbeddedServletContainerFactory43.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory46.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory46.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection51 = tomcatEmbeddedServletContainerFactory46.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList52 = tomcatEmbeddedServletContainerFactory46.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory43.tomcatContextCustomizers = tomcatContextCustomizerList52;
        tomcatEmbeddedServletContainerFactory36.tomcatContextCustomizers = tomcatContextCustomizerList52;
        tomcatEmbeddedServletContainerFactory28.tomcatContextCustomizers = tomcatContextCustomizerList52;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList52;
        java.io.File file58 = tomcatEmbeddedServletContainerFactory0.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        org.apache.catalina.Context context59 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context59);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory61.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory61.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection66 = tomcatEmbeddedServletContainerFactory61.getTomcatConnectorCustomizers();
        boolean boolean67 = tomcatEmbeddedServletContainerFactory61.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress68 = null;
        tomcatEmbeddedServletContainerFactory61.setAddress(inetAddress68);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer70 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray71 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer70 };
        tomcatEmbeddedServletContainerFactory61.addConnectorCustomizers(tomcatConnectorCustomizerArray71);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection73 = tomcatEmbeddedServletContainerFactory61.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList74 = tomcatEmbeddedServletContainerFactory61.getAdditionalTomcatConnectors();
        java.lang.String str75 = tomcatEmbeddedServletContainerFactory61.getDEFAULT_PROTOCOL();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList76 = tomcatEmbeddedServletContainerFactory61.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory79 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str80 = tomcatEmbeddedServletContainerFactory79.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer81 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray82 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer81 };
        tomcatEmbeddedServletContainerFactory79.addInitializers(servletContextInitializerArray82);
        tomcatEmbeddedServletContainerFactory61.addInitializers(servletContextInitializerArray82);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray82);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection86 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertNotNull(errorPageArray25);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNull(resourceLoader45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection51);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList52);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file58.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.6292431998619533307.8080");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray71);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection73);
        org.junit.Assert.assertNotNull(connectorList74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str75, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList76);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(servletContextInitializerArray82);
        org.junit.Assert.assertNull(tomcatConnectorCustomizerCollection86);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList16 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList16, valveArray15);
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList16;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory19.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList28 = tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers = tomcatContextCustomizerList28;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        org.apache.catalina.Valve valve31 = null;
        org.apache.catalina.Valve[] valveArray32 = new org.apache.catalina.Valve[] { valve31 };
        tomcatEmbeddedServletContainerFactory19.addContextValves(valveArray32);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray32);
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.apache.catalina.Context context36 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context36);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("org.apache.coyote.http11.Http11NioProtocol");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(valveArray32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray16 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors = connectorList26;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.net.InetAddress inetAddress30 = null;
        tomcatEmbeddedServletContainerFactory19.setAddress(inetAddress30);
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setTldSkip("UTF-8");
        java.io.File file39 = tomcatEmbeddedServletContainerFactory33.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory19.setDocumentRoot(file39);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file39);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray44);
        tomcatEmbeddedServletContainerFactory42.setUriEncoding("hi!");
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        tomcatEmbeddedServletContainerFactory42.setSessionTimeout((int) (short) 100);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList51 = tomcatEmbeddedServletContainerFactory42.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory52.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = tomcatEmbeddedServletContainerFactory57.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList59 = tomcatEmbeddedServletContainerFactory57.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory52.additionalTomcatConnectors = connectorList59;
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory52.protocol;
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory52.protocol;
        tomcatEmbeddedServletContainerFactory52.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection65 = tomcatEmbeddedServletContainerFactory52.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList66 = tomcatEmbeddedServletContainerFactory52.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory42.tomcatContextCustomizers = tomcatContextCustomizerList66;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList66;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(lifecycleListenerArray16);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/tmp/UTF-8.3886919705673967621.0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList51);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(connectorList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection65);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList66);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.io.File file7 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList8 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        java.lang.Class<?> wildcardClass9 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(lifecycleListenerList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str5 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str6 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.Context context7 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str6, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection3 = tomcatEmbeddedServletContainerFactory2.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList4 = tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners;
        java.util.List<org.apache.catalina.Valve> valveList5 = tomcatEmbeddedServletContainerFactory2.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection6 = tomcatEmbeddedServletContainerFactory2.getTomcatConnectorCustomizers();
        org.apache.catalina.Context context7 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory11.getValves();
        java.net.InetAddress inetAddress16 = tomcatEmbeddedServletContainerFactory11.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean18 = tomcatEmbeddedServletContainerFactory17.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList19 = tomcatEmbeddedServletContainerFactory17.contextValves;
        tomcatEmbeddedServletContainerFactory11.contextValves = valveList19;
        tomcatEmbeddedServletContainerFactory10.contextValves = valveList19;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList22 = tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList30 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList31 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors = connectorList31;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory33.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory33.addInitializers(servletContextInitializerArray35);
        tomcatEmbeddedServletContainerFactory33.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray39 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory33.addContextLifecycleListeners(lifecycleListenerArray39);
        tomcatEmbeddedServletContainerFactory23.addContextLifecycleListeners(lifecycleListenerArray39);
        org.apache.catalina.Context context42 = null;
        tomcatEmbeddedServletContainerFactory23.postProcessContext(context42);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = tomcatEmbeddedServletContainerFactory44.getMimeMappings();
        tomcatEmbeddedServletContainerFactory44.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory52.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer54 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer54 };
        tomcatEmbeddedServletContainerFactory52.addInitializers(servletContextInitializerArray55);
        tomcatEmbeddedServletContainerFactory44.addInitializers(servletContextInitializerArray55);
        tomcatEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray55);
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray55);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.configureContext(context7, servletContextInitializerArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection3);
        org.junit.Assert.assertNotNull(lifecycleListenerList4);
        org.junit.Assert.assertNotNull(valveList5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNull(inetAddress16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(valveList19);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList22);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(connectorList30);
        org.junit.Assert.assertNotNull(connectorList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-8" + "'", str34, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertNotNull(lifecycleListenerArray39);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList6 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList6);
        org.junit.Assert.assertNotNull(mimeMappings9);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList12 = tomcatEmbeddedServletContainerFactory10.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList12;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader17);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet19);
        java.io.File file21 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        java.io.File file22 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valveList12);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertNull(file22);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "";
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet4 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(errorPageSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.Context context4 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader11 = tomcatEmbeddedServletContainerFactory9.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray12 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory9.addErrorPages(errorPageArray12);
        tomcatEmbeddedServletContainerFactory6.addErrorPages(errorPageArray12);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray12);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection16 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList21 = tomcatEmbeddedServletContainerFactory20.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory18.tomcatConnectorCustomizers = tomcatConnectorCustomizerList21;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection23 = tomcatEmbeddedServletContainerFactory18.getContextLifecycleListeners();
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory18.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory25.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory30.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors = connectorList33;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory35.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray37 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray37);
        tomcatEmbeddedServletContainerFactory35.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray41 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory35.addContextLifecycleListeners(lifecycleListenerArray41);
        tomcatEmbeddedServletContainerFactory25.addContextLifecycleListeners(lifecycleListenerArray41);
        tomcatEmbeddedServletContainerFactory18.addContextLifecycleListeners(lifecycleListenerArray41);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) '4');
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList47 = tomcatEmbeddedServletContainerFactory46.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) '#');
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader55 = tomcatEmbeddedServletContainerFactory53.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory56.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory56.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection61 = tomcatEmbeddedServletContainerFactory56.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList62 = tomcatEmbeddedServletContainerFactory56.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory53.tomcatContextCustomizers = tomcatContextCustomizerList62;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList64 = tomcatEmbeddedServletContainerFactory53.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory65.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory65.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings71 = tomcatEmbeddedServletContainerFactory70.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList72 = tomcatEmbeddedServletContainerFactory70.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory65.additionalTomcatConnectors = connectorList72;
        java.lang.String str74 = tomcatEmbeddedServletContainerFactory65.protocol;
        java.lang.String str75 = tomcatEmbeddedServletContainerFactory65.protocol;
        tomcatEmbeddedServletContainerFactory65.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection78 = tomcatEmbeddedServletContainerFactory65.getTomcatContextCustomizers();
        int int79 = tomcatEmbeddedServletContainerFactory65.getPort();
        java.io.File file81 = tomcatEmbeddedServletContainerFactory65.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory53.baseDirectory = file81;
        org.apache.catalina.Valve[] valveArray83 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory53.addContextValves(valveArray83);
        tomcatEmbeddedServletContainerFactory52.addContextValves(valveArray83);
        tomcatEmbeddedServletContainerFactory50.addContextValves(valveArray83);
        tomcatEmbeddedServletContainerFactory46.addContextValves(valveArray83);
        tomcatEmbeddedServletContainerFactory18.addContextValves(valveArray83);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray83);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNull(resourceLoader11);
        org.junit.Assert.assertNotNull(errorPageArray12);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection16);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList21);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-8" + "'", str24, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-8" + "'", str36, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray37);
        org.junit.Assert.assertNotNull(lifecycleListenerArray41);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList47);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNull(resourceLoader55);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection61);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList62);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList64);
        org.junit.Assert.assertNotNull(mimeMappings71);
        org.junit.Assert.assertNotNull(connectorList72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(file81);
        org.junit.Assert.assertEquals(file81.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file81.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.4772734236497645035.0");
        org.junit.Assert.assertNotNull(valveArray83);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory1.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers;
        java.io.File file5 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        java.io.File file6 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        boolean boolean7 = tomcatEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory1.protocol = "UTF-8";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList17;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory10.protocol;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory10.protocol;
        java.net.InetAddress inetAddress21 = null;
        tomcatEmbeddedServletContainerFactory10.setAddress(inetAddress21);
        tomcatEmbeddedServletContainerFactory10.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray25 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList26 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList26, valveArray25);
        tomcatEmbeddedServletContainerFactory10.contextValves = valveList26;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader31 = tomcatEmbeddedServletContainerFactory29.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory32.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection37 = tomcatEmbeddedServletContainerFactory32.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList38 = tomcatEmbeddedServletContainerFactory32.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory29.tomcatContextCustomizers = tomcatContextCustomizerList38;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers;
        org.apache.catalina.Valve valve41 = null;
        org.apache.catalina.Valve[] valveArray42 = new org.apache.catalina.Valve[] { valve41 };
        tomcatEmbeddedServletContainerFactory29.addContextValves(valveArray42);
        tomcatEmbeddedServletContainerFactory10.addContextValves(valveArray42);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) 10);
        java.net.InetAddress inetAddress47 = tomcatEmbeddedServletContainerFactory46.getAddress();
        tomcatEmbeddedServletContainerFactory46.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList51 = tomcatEmbeddedServletContainerFactory50.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection52 = tomcatEmbeddedServletContainerFactory50.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList53 = tomcatEmbeddedServletContainerFactory50.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection54 = tomcatEmbeddedServletContainerFactory50.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList55 = tomcatEmbeddedServletContainerFactory50.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors = connectorList55;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList55;
        tomcatEmbeddedServletContainerFactory1.additionalTomcatConnectors = connectorList55;
        java.util.List<org.apache.catalina.Valve> valveList59 = tomcatEmbeddedServletContainerFactory1.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory60.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory60.setTldSkip("UTF-8");
        java.io.File file66 = tomcatEmbeddedServletContainerFactory60.createTempDir("UTF-8");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings67 = tomcatEmbeddedServletContainerFactory60.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory68.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory68.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList73 = tomcatEmbeddedServletContainerFactory68.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList74 = tomcatEmbeddedServletContainerFactory68.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory60.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList74);
        tomcatEmbeddedServletContainerFactory1.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList74);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(valveArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNull(resourceLoader31);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection37);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertNotNull(valveArray42);
        org.junit.Assert.assertNull(inetAddress47);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList51);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection52);
        org.junit.Assert.assertNotNull(valveList53);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection54);
        org.junit.Assert.assertNotNull(connectorList55);
        org.junit.Assert.assertNotNull(valveList59);
        org.junit.Assert.assertNotNull(file66);
        org.junit.Assert.assertEquals(file66.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file66.toString(), "/tmp/UTF-8.4521366398672879410.0");
        org.junit.Assert.assertNotNull(mimeMappings67);
        org.junit.Assert.assertNotNull(lifecycleListenerList73);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList74);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet5 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.net.InetAddress inetAddress6 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList14;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory7.protocol;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory7.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        tomcatEmbeddedServletContainerFactory7.setMimeMappings(mimeMappings22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection28 = tomcatEmbeddedServletContainerFactory24.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray29 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList30 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList30, lifecycleListenerArray29);
        tomcatEmbeddedServletContainerFactory24.contextLifecycleListeners = lifecycleListenerList30;
        tomcatEmbeddedServletContainerFactory7.contextLifecycleListeners = lifecycleListenerList30;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList30;
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory37.tomcatConnectorCustomizers = tomcatConnectorCustomizerList40;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection42 = tomcatEmbeddedServletContainerFactory37.getContextLifecycleListeners();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory37.uriEncoding;
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory37.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory45.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray47 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory45.addInitializers(servletContextInitializerArray47);
        tomcatEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray47);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray47);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean52 = tomcatEmbeddedServletContainerFactory51.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection53 = tomcatEmbeddedServletContainerFactory51.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory54.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection59 = tomcatEmbeddedServletContainerFactory54.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory54.setSessionTimeout((int) (byte) -1);
        tomcatEmbeddedServletContainerFactory54.protocol = "org.apache.coyote.http11.Http11NioProtocol";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory64.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory64.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection69 = tomcatEmbeddedServletContainerFactory64.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList70 = tomcatEmbeddedServletContainerFactory64.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory54.tomcatContextCustomizers = tomcatContextCustomizerList70;
        tomcatEmbeddedServletContainerFactory51.tomcatContextCustomizers = tomcatContextCustomizerList70;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList70;
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 0);
        java.util.concurrent.TimeUnit timeUnit77 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(100, timeUnit77);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(errorPageSet5);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(valveCollection28);
        org.junit.Assert.assertNotNull(lifecycleListenerArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-8" + "'", str44, "UTF-8");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "UTF-8" + "'", str46, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(valveCollection53);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection59);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection69);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList70);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.net.InetAddress inetAddress6 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection7 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        boolean boolean14 = tomcatEmbeddedServletContainerFactory8.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader17 = tomcatEmbeddedServletContainerFactory15.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection23 = tomcatEmbeddedServletContainerFactory18.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList24 = tomcatEmbeddedServletContainerFactory18.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory15.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers = tomcatContextCustomizerList24;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory8.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection33 = tomcatEmbeddedServletContainerFactory28.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory28.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector36 = null;
        org.apache.catalina.connector.Connector[] connectorArray37 = new org.apache.catalina.connector.Connector[] { connector36 };
        tomcatEmbeddedServletContainerFactory28.addAdditionalTomcatConnectors(connectorArray37);
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory40.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = tomcatEmbeddedServletContainerFactory45.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList47 = tomcatEmbeddedServletContainerFactory45.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory40.additionalTomcatConnectors = connectorList47;
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory40.protocol;
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory40.protocol;
        java.net.InetAddress inetAddress51 = null;
        tomcatEmbeddedServletContainerFactory40.setAddress(inetAddress51);
        java.io.File file53 = null;
        tomcatEmbeddedServletContainerFactory40.setBaseDirectory(file53);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray55 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory40.addContextCustomizers(tomcatContextCustomizerArray55);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = tomcatEmbeddedServletContainerFactory57.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader59 = tomcatEmbeddedServletContainerFactory57.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory60.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory60.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection65 = tomcatEmbeddedServletContainerFactory60.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList66 = tomcatEmbeddedServletContainerFactory60.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory57.tomcatContextCustomizers = tomcatContextCustomizerList66;
        tomcatEmbeddedServletContainerFactory57.uriEncoding = "UTF-8";
        int int70 = tomcatEmbeddedServletContainerFactory57.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean72 = tomcatEmbeddedServletContainerFactory71.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection73 = tomcatEmbeddedServletContainerFactory71.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings74 = tomcatEmbeddedServletContainerFactory71.getMimeMappings();
        tomcatEmbeddedServletContainerFactory57.setMimeMappings(mimeMappings74);
        tomcatEmbeddedServletContainerFactory40.setMimeMappings(mimeMappings74);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean78 = tomcatEmbeddedServletContainerFactory77.isRegisterDefaultServlet();
        org.apache.catalina.Context context79 = null;
        tomcatEmbeddedServletContainerFactory77.postProcessContext(context79);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory81.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory81.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection86 = tomcatEmbeddedServletContainerFactory81.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory81.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector89 = null;
        org.apache.catalina.connector.Connector[] connectorArray90 = new org.apache.catalina.connector.Connector[] { connector89 };
        tomcatEmbeddedServletContainerFactory81.addAdditionalTomcatConnectors(connectorArray90);
        tomcatEmbeddedServletContainerFactory77.addAdditionalTomcatConnectors(connectorArray90);
        tomcatEmbeddedServletContainerFactory40.addAdditionalTomcatConnectors(connectorArray90);
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray90);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray90);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection23);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection33);
        org.junit.Assert.assertNotNull(connectorArray37);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(connectorList47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray55);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNull(resourceLoader59);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection65);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList66);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 8080 + "'", int70 == 8080);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(valveCollection73);
        org.junit.Assert.assertNotNull(mimeMappings74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection86);
        org.junit.Assert.assertNotNull(connectorArray90);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.apache.catalina.Context context2 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context2);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.tomcat.util.scan.MergedWebXml");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray7 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatConnectorCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory4.additionalTomcatConnectors = connectorList11;
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory4.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory4.setMimeMappings(mimeMappings17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList20 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        int int21 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory19.addContextLifecycleListeners(lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory4.addContextLifecycleListeners(lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray22);
        java.lang.Class<?> wildcardClass26 = lifecycleListenerArray22.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean8 = tomcatEmbeddedServletContainerFactory7.isRegisterDefaultServlet();
        org.apache.catalina.Context context9 = null;
        tomcatEmbeddedServletContainerFactory7.postProcessContext(context9);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection16 = tomcatEmbeddedServletContainerFactory11.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory11.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector19 = null;
        org.apache.catalina.connector.Connector[] connectorArray20 = new org.apache.catalina.connector.Connector[] { connector19 };
        tomcatEmbeddedServletContainerFactory11.addAdditionalTomcatConnectors(connectorArray20);
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray20);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray20);
        java.util.concurrent.TimeUnit timeUnit25 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) 'a', timeUnit25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection16);
        org.junit.Assert.assertNotNull(connectorArray20);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(8080);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory2.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory2.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection7 = tomcatEmbeddedServletContainerFactory2.getTomcatConnectorCustomizers();
        boolean boolean8 = tomcatEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress9 = null;
        tomcatEmbeddedServletContainerFactory2.setAddress(inetAddress9);
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory2.getContextPath();
        tomcatEmbeddedServletContainerFactory2.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader16 = tomcatEmbeddedServletContainerFactory14.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory17.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection22 = tomcatEmbeddedServletContainerFactory17.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList23 = tomcatEmbeddedServletContainerFactory17.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory14.tomcatContextCustomizers = tomcatContextCustomizerList23;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList25 = tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors = connectorList33;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory26.protocol;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory26.protocol;
        tomcatEmbeddedServletContainerFactory26.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection39 = tomcatEmbeddedServletContainerFactory26.getTomcatContextCustomizers();
        int int40 = tomcatEmbeddedServletContainerFactory26.getPort();
        java.io.File file42 = tomcatEmbeddedServletContainerFactory26.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory14.baseDirectory = file42;
        org.apache.catalina.Valve[] valveArray44 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory14.addContextValves(valveArray44);
        tomcatEmbeddedServletContainerFactory2.addContextValves(valveArray44);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        tomcatEmbeddedServletContainerFactory1.setMimeMappings(mimeMappings47);
        java.util.List<org.apache.catalina.Valve> valveList49 = tomcatEmbeddedServletContainerFactory1.contextValves;
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNull(resourceLoader16);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection22);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList25);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(file42);
        org.junit.Assert.assertEquals(file42.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file42.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.2039448835488849760.0");
        org.junit.Assert.assertNotNull(valveArray44);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNotNull(valveList49);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        org.apache.catalina.connector.Connector connector11 = null;
        org.apache.catalina.connector.Connector[] connectorArray12 = new org.apache.catalina.connector.Connector[] { connector11 };
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList15 = tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection16 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList17 = tomcatEmbeddedServletContainerFactory14.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection18);
        java.net.InetAddress inetAddress20 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress20);
        java.util.List<org.apache.catalina.Valve> valveList22 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.util.Collection<org.apache.catalina.Valve> valveCollection24 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory25.setProtocol("hi!");
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory25.protocol;
        tomcatEmbeddedServletContainerFactory25.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.io.File file34 = tomcatEmbeddedServletContainerFactory25.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file34;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(connectorArray12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection16);
        org.junit.Assert.assertNotNull(valveList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(valveList22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(valveCollection24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(file34);
        org.junit.Assert.assertEquals(file34.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file34.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.1671037705950516914.0");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str36, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection8 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.coyote.http11.Http11NioProtocol";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (short) 0);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection14 = tomcatEmbeddedServletContainerFactory13.getContextLifecycleListeners();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList15 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList16 = tomcatEmbeddedServletContainerFactory13.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList16;
        java.lang.Class<?> wildcardClass18 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection8);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection14);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList15);
        org.junit.Assert.assertNotNull(lifecycleListenerList16);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.io.File file13 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file13);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray15 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader19 = tomcatEmbeddedServletContainerFactory17.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory20.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection25 = tomcatEmbeddedServletContainerFactory20.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList26 = tomcatEmbeddedServletContainerFactory20.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory17.tomcatContextCustomizers = tomcatContextCustomizerList26;
        tomcatEmbeddedServletContainerFactory17.uriEncoding = "UTF-8";
        int int30 = tomcatEmbeddedServletContainerFactory17.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean32 = tomcatEmbeddedServletContainerFactory31.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection33 = tomcatEmbeddedServletContainerFactory31.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        tomcatEmbeddedServletContainerFactory17.setMimeMappings(mimeMappings34);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings34);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader40 = null;
        tomcatEmbeddedServletContainerFactory39.setResourceLoader(resourceLoader40);
        tomcatEmbeddedServletContainerFactory39.setContextPath("");
        boolean boolean44 = tomcatEmbeddedServletContainerFactory39.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader45 = tomcatEmbeddedServletContainerFactory39.resourceLoader;
        boolean boolean46 = tomcatEmbeddedServletContainerFactory39.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = tomcatEmbeddedServletContainerFactory47.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList50 = tomcatEmbeddedServletContainerFactory49.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory47.tomcatConnectorCustomizers = tomcatConnectorCustomizerList50;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet52 = tomcatEmbeddedServletContainerFactory47.getErrorPages();
        java.net.InetAddress inetAddress53 = tomcatEmbeddedServletContainerFactory47.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory54.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = tomcatEmbeddedServletContainerFactory59.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList61 = tomcatEmbeddedServletContainerFactory59.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory54.additionalTomcatConnectors = connectorList61;
        java.lang.String str63 = tomcatEmbeddedServletContainerFactory54.protocol;
        java.lang.String str64 = tomcatEmbeddedServletContainerFactory54.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory65.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings68 = tomcatEmbeddedServletContainerFactory65.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings69 = tomcatEmbeddedServletContainerFactory65.getMimeMappings();
        tomcatEmbeddedServletContainerFactory54.setMimeMappings(mimeMappings69);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory71.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings74 = tomcatEmbeddedServletContainerFactory71.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection75 = tomcatEmbeddedServletContainerFactory71.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray76 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList77 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList77, lifecycleListenerArray76);
        tomcatEmbeddedServletContainerFactory71.contextLifecycleListeners = lifecycleListenerList77;
        tomcatEmbeddedServletContainerFactory54.contextLifecycleListeners = lifecycleListenerList77;
        tomcatEmbeddedServletContainerFactory47.contextLifecycleListeners = lifecycleListenerList77;
        tomcatEmbeddedServletContainerFactory47.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory84 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings85 = tomcatEmbeddedServletContainerFactory84.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory86 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList87 = tomcatEmbeddedServletContainerFactory86.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory84.tomcatConnectorCustomizers = tomcatConnectorCustomizerList87;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection89 = tomcatEmbeddedServletContainerFactory84.getContextLifecycleListeners();
        java.lang.String str90 = tomcatEmbeddedServletContainerFactory84.uriEncoding;
        java.lang.String str91 = tomcatEmbeddedServletContainerFactory84.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory92 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str93 = tomcatEmbeddedServletContainerFactory92.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray94 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory92.addInitializers(servletContextInitializerArray94);
        tomcatEmbeddedServletContainerFactory84.addInitializers(servletContextInitializerArray94);
        tomcatEmbeddedServletContainerFactory47.addInitializers(servletContextInitializerArray94);
        tomcatEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray94);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray94);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray15);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNull(resourceLoader19);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection25);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8080 + "'", int30 == 8080);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(valveCollection33);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(resourceLoader45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList50);
        org.junit.Assert.assertNotNull(errorPageSet52);
        org.junit.Assert.assertNull(inetAddress53);
        org.junit.Assert.assertNotNull(mimeMappings60);
        org.junit.Assert.assertNotNull(connectorList61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings68);
        org.junit.Assert.assertNotNull(mimeMappings69);
        org.junit.Assert.assertNotNull(mimeMappings74);
        org.junit.Assert.assertNotNull(valveCollection75);
        org.junit.Assert.assertNotNull(lifecycleListenerArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(mimeMappings85);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList87);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "UTF-8" + "'", str90, "UTF-8");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "UTF-8" + "'", str91, "UTF-8");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "UTF-8" + "'", str93, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray94);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.io.File file6 = tomcatEmbeddedServletContainerFactory0.createTempDir("UTF-8");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList13 = tomcatEmbeddedServletContainerFactory8.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList14);
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = null;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList16;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection23 = tomcatEmbeddedServletContainerFactory18.getTomcatConnectorCustomizers();
        boolean boolean24 = tomcatEmbeddedServletContainerFactory18.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress25 = null;
        tomcatEmbeddedServletContainerFactory18.setAddress(inetAddress25);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer27 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray28 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer27 };
        tomcatEmbeddedServletContainerFactory18.addConnectorCustomizers(tomcatConnectorCustomizerArray28);
        java.util.Collection<org.apache.catalina.Valve> valveCollection30 = tomcatEmbeddedServletContainerFactory18.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory31.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList36 = tomcatEmbeddedServletContainerFactory31.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        tomcatEmbeddedServletContainerFactory31.setMimeMappings(mimeMappings40);
        org.apache.catalina.connector.Connector connector42 = null;
        org.apache.catalina.connector.Connector[] connectorArray43 = new org.apache.catalina.connector.Connector[] { connector42 };
        tomcatEmbeddedServletContainerFactory31.addAdditionalTomcatConnectors(connectorArray43);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList46 = tomcatEmbeddedServletContainerFactory45.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection47 = tomcatEmbeddedServletContainerFactory45.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList48 = tomcatEmbeddedServletContainerFactory45.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection49 = tomcatEmbeddedServletContainerFactory45.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory31.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection49);
        java.net.InetAddress inetAddress51 = null;
        tomcatEmbeddedServletContainerFactory31.setAddress(inetAddress51);
        java.util.List<org.apache.catalina.Valve> valveList53 = tomcatEmbeddedServletContainerFactory31.contextValves;
        tomcatEmbeddedServletContainerFactory18.contextValves = valveList53;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList53;
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file6.toString(), "/tmp/UTF-8.3050085710854743089.0");
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(lifecycleListenerList13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray28);
        org.junit.Assert.assertNotNull(valveCollection30);
        org.junit.Assert.assertNotNull(lifecycleListenerList36);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(connectorArray43);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList46);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection47);
        org.junit.Assert.assertNotNull(valveList48);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection49);
        org.junit.Assert.assertNotNull(valveList53);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file4 = tomcatEmbeddedServletContainerFactory2.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        java.net.InetAddress inetAddress5 = null;
        tomcatEmbeddedServletContainerFactory2.setAddress(inetAddress5);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection11 = tomcatEmbeddedServletContainerFactory7.getValves();
        java.net.InetAddress inetAddress12 = tomcatEmbeddedServletContainerFactory7.getAddress();
        tomcatEmbeddedServletContainerFactory7.setJspServletClassName("UTF-8");
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        boolean boolean20 = tomcatEmbeddedServletContainerFactory17.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory21.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory26.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList28 = tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors = connectorList28;
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory21.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        tomcatEmbeddedServletContainerFactory21.setMimeMappings(mimeMappings34);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList37 = tomcatEmbeddedServletContainerFactory36.tomcatConnectorCustomizers;
        int int38 = tomcatEmbeddedServletContainerFactory36.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray39 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory36.addContextLifecycleListeners(lifecycleListenerArray39);
        tomcatEmbeddedServletContainerFactory21.addContextLifecycleListeners(lifecycleListenerArray39);
        tomcatEmbeddedServletContainerFactory17.addContextLifecycleListeners(lifecycleListenerArray39);
        tomcatEmbeddedServletContainerFactory7.addContextLifecycleListeners(lifecycleListenerArray39);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection44 = tomcatEmbeddedServletContainerFactory7.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory45.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory45.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = tomcatEmbeddedServletContainerFactory50.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList52 = tomcatEmbeddedServletContainerFactory50.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList53 = tomcatEmbeddedServletContainerFactory50.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory45.additionalTomcatConnectors = connectorList53;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList53;
        tomcatEmbeddedServletContainerFactory2.additionalTomcatConnectors = connectorList53;
        tomcatEmbeddedServletContainerFactory2.setUriEncoding("hi!");
        java.net.InetAddress inetAddress59 = tomcatEmbeddedServletContainerFactory2.getAddress();
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file4.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.3099336951134752096.100");
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(valveCollection11);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(connectorList28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray39);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection44);
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertNotNull(connectorList52);
        org.junit.Assert.assertNotNull(connectorList53);
        org.junit.Assert.assertNull(inetAddress59);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.Context context3 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet5 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.net.InetAddress inetAddress6 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList8 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory11.tldSkip;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList13 = tomcatEmbeddedServletContainerFactory11.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList13;
        org.apache.catalina.startup.Tomcat tomcat15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer16 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(errorPageSet5);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList13);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader7 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.net.InetAddress inetAddress8 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress8);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList15 = tomcatEmbeddedServletContainerFactory10.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList15;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        org.springframework.core.io.ResourceLoader resourceLoader19 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader19;
        org.springframework.core.io.ResourceLoader resourceLoader21 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader21);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertNotNull(lifecycleListenerList15);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.io.File file7 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList8 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(8080);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(lifecycleListenerList8);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.io.File file5 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList18 = null;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList18;
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(connectorList20);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory2.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray4 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory2.addConnectorCustomizers(tomcatConnectorCustomizerArray4);
        java.io.File file6 = tomcatEmbeddedServletContainerFactory2.baseDirectory;
        tomcatEmbeddedServletContainerFactory2.setTldSkip("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray4);
        org.junit.Assert.assertNull(file6);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.getEmptyWebXml();
        org.apache.catalina.LifecycleEvent lifecycleEvent5 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str4, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.Valve> valveList13 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection14 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors = connectorList22;
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory15.protocol;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory15.protocol;
        tomcatEmbeddedServletContainerFactory15.setUriEncoding("hi!");
        boolean boolean28 = tomcatEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList36 = tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors = connectorList36;
        org.apache.catalina.Context context38 = null;
        tomcatEmbeddedServletContainerFactory29.postProcessContext(context38);
        java.net.InetAddress inetAddress40 = tomcatEmbeddedServletContainerFactory29.getAddress();
        tomcatEmbeddedServletContainerFactory29.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory43.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = tomcatEmbeddedServletContainerFactory48.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList50 = tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory43.additionalTomcatConnectors = connectorList50;
        org.apache.catalina.Context context52 = null;
        tomcatEmbeddedServletContainerFactory43.postProcessContext(context52);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str57 = tomcatEmbeddedServletContainerFactory56.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray58 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory56.addConnectorCustomizers(tomcatConnectorCustomizerArray58);
        tomcatEmbeddedServletContainerFactory43.addConnectorCustomizers(tomcatConnectorCustomizerArray58);
        tomcatEmbeddedServletContainerFactory29.addConnectorCustomizers(tomcatConnectorCustomizerArray58);
        tomcatEmbeddedServletContainerFactory15.addConnectorCustomizers(tomcatConnectorCustomizerArray58);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray58);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory64.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory64.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection69 = tomcatEmbeddedServletContainerFactory64.getTomcatConnectorCustomizers();
        boolean boolean70 = tomcatEmbeddedServletContainerFactory64.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress71 = null;
        tomcatEmbeddedServletContainerFactory64.setAddress(inetAddress71);
        java.lang.String str73 = tomcatEmbeddedServletContainerFactory64.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings75 = tomcatEmbeddedServletContainerFactory74.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader76 = tomcatEmbeddedServletContainerFactory74.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory77.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory77.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection82 = tomcatEmbeddedServletContainerFactory77.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList83 = tomcatEmbeddedServletContainerFactory77.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory74.tomcatContextCustomizers = tomcatContextCustomizerList83;
        tomcatEmbeddedServletContainerFactory74.uriEncoding = "UTF-8";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection87 = tomcatEmbeddedServletContainerFactory74.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList88 = tomcatEmbeddedServletContainerFactory74.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory64.tomcatContextCustomizers = tomcatContextCustomizerList88;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList88;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(valveList13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection14);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNotNull(connectorList36);
        org.junit.Assert.assertNull(inetAddress40);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(connectorList50);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray58);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(mimeMappings75);
        org.junit.Assert.assertNull(resourceLoader76);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection82);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList83);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection87);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList88);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.io.File file5 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        java.io.File file23 = tomcatEmbeddedServletContainerFactory20.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file23;
        boolean boolean25 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList26 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file23.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.5146337171091261023.8080");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(valveList26);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean15 = tomcatEmbeddedServletContainerFactory14.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection16 = tomcatEmbeddedServletContainerFactory14.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        tomcatEmbeddedServletContainerFactory19.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection25 = tomcatEmbeddedServletContainerFactory19.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors = connectorList33;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory26.protocol;
        org.apache.catalina.Context context36 = null;
        tomcatEmbeddedServletContainerFactory26.postProcessContext(context36);
        java.io.File file39 = tomcatEmbeddedServletContainerFactory26.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory19.setBaseDirectory(file39);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file39;
        int int42 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        tomcatEmbeddedServletContainerFactory43.setTldSkip("");
        int int49 = tomcatEmbeddedServletContainerFactory43.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader50 = tomcatEmbeddedServletContainerFactory43.resourceLoader;
        java.net.InetAddress inetAddress51 = null;
        tomcatEmbeddedServletContainerFactory43.setAddress(inetAddress51);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory53.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory53.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList58 = tomcatEmbeddedServletContainerFactory53.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory43.contextLifecycleListeners = lifecycleListenerList58;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList58;
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8080 + "'", int13 == 8080);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(valveCollection16);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection25);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/tmp/UTF-8.2593517886326820376.0");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8080 + "'", int42 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(resourceLoader50);
        org.junit.Assert.assertNotNull(lifecycleListenerList58);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        tomcatEmbeddedServletContainerFactory2.setUriEncoding("");
        tomcatEmbeddedServletContainerFactory2.setUriEncoding("");
        org.junit.Assert.assertNotNull(mimeMappings7);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.Context context4 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context4);
        java.util.Collection<org.apache.catalina.Valve> valveCollection6 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList10 = tomcatEmbeddedServletContainerFactory9.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory7.tomcatConnectorCustomizers = tomcatConnectorCustomizerList10;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection12 = tomcatEmbeddedServletContainerFactory7.getContextLifecycleListeners();
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory7.uriEncoding;
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection21 = tomcatEmbeddedServletContainerFactory16.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory16.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection24 = tomcatEmbeddedServletContainerFactory16.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector25 = null;
        org.apache.catalina.connector.Connector[] connectorArray26 = new org.apache.catalina.connector.Connector[] { connector25 };
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray26);
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray26);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray26);
        org.springframework.core.io.ResourceLoader resourceLoader30 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection6);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList10);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection24);
        org.junit.Assert.assertNotNull(connectorArray26);
        org.junit.Assert.assertNull(resourceLoader30);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        org.apache.catalina.Context context18 = null;
        tomcatEmbeddedServletContainerFactory9.postProcessContext(context18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory22.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray24 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory22.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory9.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        java.io.File file28 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        java.io.File file30 = tomcatEmbeddedServletContainerFactory0.createTempDir("hi!");
        java.io.File file31 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray24);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file30.toString(), "/tmp/hi!.926768204456242058.8080");
        org.junit.Assert.assertNull(file31);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(97);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory2.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory2.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList9 = tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList10 = tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory2.additionalTomcatConnectors = connectorList10;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList12 = tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors = connectorList20;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory13.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        tomcatEmbeddedServletContainerFactory13.setMimeMappings(mimeMappings26);
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory13.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList36 = tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors = connectorList36;
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory29.protocol;
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory29.protocol;
        tomcatEmbeddedServletContainerFactory29.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection42 = tomcatEmbeddedServletContainerFactory29.getTomcatContextCustomizers();
        int int43 = tomcatEmbeddedServletContainerFactory29.getPort();
        java.io.File file45 = tomcatEmbeddedServletContainerFactory29.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory13.baseDirectory = file45;
        tomcatEmbeddedServletContainerFactory2.setDocumentRoot(file45);
        java.net.InetAddress inetAddress48 = tomcatEmbeddedServletContainerFactory2.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader51 = tomcatEmbeddedServletContainerFactory49.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory52.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection57 = tomcatEmbeddedServletContainerFactory52.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList58 = tomcatEmbeddedServletContainerFactory52.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory49.tomcatContextCustomizers = tomcatContextCustomizerList58;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList60 = tomcatEmbeddedServletContainerFactory49.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory61.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory61.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings67 = tomcatEmbeddedServletContainerFactory66.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList68 = tomcatEmbeddedServletContainerFactory66.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory61.additionalTomcatConnectors = connectorList68;
        java.lang.String str70 = tomcatEmbeddedServletContainerFactory61.protocol;
        java.lang.String str71 = tomcatEmbeddedServletContainerFactory61.protocol;
        java.net.InetAddress inetAddress72 = null;
        tomcatEmbeddedServletContainerFactory61.setAddress(inetAddress72);
        int int74 = tomcatEmbeddedServletContainerFactory61.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings76 = tomcatEmbeddedServletContainerFactory75.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList78 = tomcatEmbeddedServletContainerFactory77.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory75.tomcatConnectorCustomizers = tomcatConnectorCustomizerList78;
        tomcatEmbeddedServletContainerFactory61.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList78);
        tomcatEmbeddedServletContainerFactory49.tomcatConnectorCustomizers = tomcatConnectorCustomizerList78;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str83 = tomcatEmbeddedServletContainerFactory82.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray84 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory82.addInitializers(servletContextInitializerArray84);
        tomcatEmbeddedServletContainerFactory82.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray88 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory82.addContextLifecycleListeners(lifecycleListenerArray88);
        tomcatEmbeddedServletContainerFactory49.addContextLifecycleListeners(lifecycleListenerArray88);
        tomcatEmbeddedServletContainerFactory2.addContextLifecycleListeners(lifecycleListenerArray88);
        tomcatEmbeddedServletContainerFactory1.addContextLifecycleListeners(lifecycleListenerArray88);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(connectorList9);
        org.junit.Assert.assertNotNull(connectorList10);
        org.junit.Assert.assertNotNull(lifecycleListenerList12);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNotNull(connectorList36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file45.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.8240764469677929233.0");
        org.junit.Assert.assertNull(inetAddress48);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNull(resourceLoader51);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection57);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList58);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList60);
        org.junit.Assert.assertNotNull(mimeMappings67);
        org.junit.Assert.assertNotNull(connectorList68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(mimeMappings76);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList78);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "UTF-8" + "'", str83, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray84);
        org.junit.Assert.assertNotNull(lifecycleListenerArray88);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader14);
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader16);
        java.util.Collection<org.apache.catalina.Valve> valveCollection18 = tomcatEmbeddedServletContainerFactory0.getValves();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(valveCollection18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str5 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str6 = storeMergedWebXmlListener0.getEmptyWebXml();
        org.apache.catalina.LifecycleEvent lifecycleEvent7 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str6, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList14 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList18 = tomcatEmbeddedServletContainerFactory17.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers = tomcatConnectorCustomizerList18;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = tomcatEmbeddedServletContainerFactory15.getErrorPages();
        java.net.InetAddress inetAddress21 = tomcatEmbeddedServletContainerFactory15.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader22 = tomcatEmbeddedServletContainerFactory15.resourceLoader;
        java.io.File file24 = tomcatEmbeddedServletContainerFactory15.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.apache.catalina.Valve[] valveArray25 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray25);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray25);
        org.apache.catalina.Context context28 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNotNull(valveList14);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList18);
        org.junit.Assert.assertNotNull(errorPageSet20);
        org.junit.Assert.assertNull(inetAddress21);
        org.junit.Assert.assertNull(resourceLoader22);
        org.junit.Assert.assertNotNull(file24);
        org.junit.Assert.assertEquals(file24.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file24.toString(), "/tmp/web-app>\n.7841967433363214667.8080");
        org.junit.Assert.assertNotNull(valveArray25);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection8 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.coyote.http11.Http11NioProtocol";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList11 = null;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList11;
        org.apache.catalina.Context context13 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context13);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection8);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        boolean boolean14 = tomcatEmbeddedServletContainerFactory8.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader17 = tomcatEmbeddedServletContainerFactory15.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection23 = tomcatEmbeddedServletContainerFactory18.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList24 = tomcatEmbeddedServletContainerFactory18.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory15.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.apache.catalina.Context context30 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection23);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList24);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.tldSkip = "org.apache.tomcat.util.scan.MergedWebXml";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.io.File file13 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file13);
        java.net.InetAddress inetAddress15 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(inetAddress15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList14 = tomcatEmbeddedServletContainerFactory9.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList14;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str17 = storeMergedWebXmlListener16.getMERGED_WEB_XML();
        java.lang.String str18 = storeMergedWebXmlListener16.MERGED_WEB_XML;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str20 = storeMergedWebXmlListener19.getEmptyWebXml();
        java.lang.String str21 = storeMergedWebXmlListener19.getEmptyWebXml();
        java.lang.String str22 = storeMergedWebXmlListener19.MERGED_WEB_XML;
        java.lang.String str23 = storeMergedWebXmlListener19.getMERGED_WEB_XML();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str25 = storeMergedWebXmlListener24.getMERGED_WEB_XML();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str27 = storeMergedWebXmlListener26.getEmptyWebXml();
        java.lang.String str28 = storeMergedWebXmlListener26.getEmptyWebXml();
        java.lang.String str29 = storeMergedWebXmlListener26.MERGED_WEB_XML;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray30 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener16, storeMergedWebXmlListener19, storeMergedWebXmlListener24, storeMergedWebXmlListener26 };
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray30);
        tomcatEmbeddedServletContainerFactory0.tldSkip = "org.apache.tomcat.util.scan.MergedWebXml";
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.core.io.ResourceLoader resourceLoader35 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader35);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection37 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(lifecycleListenerList14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str17, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str18, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str20, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str21, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str22, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str23, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str25, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str27, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str28, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str29, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertNotNull(lifecycleListenerArray30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-8" + "'", str34, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection37);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors = connectorList16;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory18.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray20);
        tomcatEmbeddedServletContainerFactory18.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray24 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory18.addContextLifecycleListeners(lifecycleListenerArray24);
        tomcatEmbeddedServletContainerFactory8.addContextLifecycleListeners(lifecycleListenerArray24);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList27 = tomcatEmbeddedServletContainerFactory8.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList27;
        java.util.Collection<org.apache.catalina.Valve> valveCollection29 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.io.File file30 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean32 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertNotNull(lifecycleListenerArray24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList27);
        org.junit.Assert.assertNotNull(valveCollection29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-8" + "'", str31, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        boolean boolean13 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers = tomcatConnectorCustomizerList17;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        java.net.InetAddress inetAddress20 = tomcatEmbeddedServletContainerFactory14.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory14.resourceLoader;
        java.io.File file23 = tomcatEmbeddedServletContainerFactory14.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file23;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        org.apache.catalina.Context context27 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context27);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        tomcatEmbeddedServletContainerFactory0.setProtocol("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        tomcatEmbeddedServletContainerFactory34.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection40 = tomcatEmbeddedServletContainerFactory34.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory41.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory41.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = tomcatEmbeddedServletContainerFactory46.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList48 = tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors = connectorList48;
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory41.protocol;
        org.apache.catalina.Context context51 = null;
        tomcatEmbeddedServletContainerFactory41.postProcessContext(context51);
        java.io.File file54 = tomcatEmbeddedServletContainerFactory41.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory34.setBaseDirectory(file54);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file54;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNull(inetAddress20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file23.toString(), "/tmp/web-app>\n.6610846763973006437.8080");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str31, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection40);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNotNull(connectorList48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file54.toString(), "/tmp/UTF-8.5170583026358129849.0");
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList5 = tomcatEmbeddedServletContainerFactory4.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection6 = tomcatEmbeddedServletContainerFactory4.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList7 = tomcatEmbeddedServletContainerFactory4.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory4.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList9 = tomcatEmbeddedServletContainerFactory4.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory4.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList12 = tomcatEmbeddedServletContainerFactory4.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors = connectorList20;
        org.apache.catalina.Context context22 = null;
        tomcatEmbeddedServletContainerFactory13.postProcessContext(context22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory26.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray28 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory26.addConnectorCustomizers(tomcatConnectorCustomizerArray28);
        tomcatEmbeddedServletContainerFactory13.addConnectorCustomizers(tomcatConnectorCustomizerArray28);
        tomcatEmbeddedServletContainerFactory4.addConnectorCustomizers(tomcatConnectorCustomizerArray28);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray28);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList34 = tomcatEmbeddedServletContainerFactory33.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection35 = tomcatEmbeddedServletContainerFactory33.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader38 = tomcatEmbeddedServletContainerFactory36.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray39 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory36.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory33.addErrorPages(errorPageArray39);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory42.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = tomcatEmbeddedServletContainerFactory47.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList49 = tomcatEmbeddedServletContainerFactory47.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory42.additionalTomcatConnectors = connectorList49;
        java.lang.String str51 = tomcatEmbeddedServletContainerFactory42.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = tomcatEmbeddedServletContainerFactory52.getMimeMappings();
        tomcatEmbeddedServletContainerFactory42.setMimeMappings(mimeMappings55);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList58 = tomcatEmbeddedServletContainerFactory57.tomcatConnectorCustomizers;
        int int59 = tomcatEmbeddedServletContainerFactory57.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray60 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory57.addContextLifecycleListeners(lifecycleListenerArray60);
        tomcatEmbeddedServletContainerFactory42.addContextLifecycleListeners(lifecycleListenerArray60);
        java.util.List<org.apache.catalina.Valve> valveList63 = tomcatEmbeddedServletContainerFactory42.contextValves;
        tomcatEmbeddedServletContainerFactory33.contextValves = valveList63;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList63;
        tomcatEmbeddedServletContainerFactory0.tldSkip = "org.apache.tomcat.util.scan.MergedWebXml";
        boolean boolean68 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection6);
        org.junit.Assert.assertNotNull(valveList7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(connectorList9);
        org.junit.Assert.assertNotNull(connectorList12);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList34);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection35);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNull(resourceLoader38);
        org.junit.Assert.assertNotNull(errorPageArray39);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNotNull(connectorList49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray60);
        org.junit.Assert.assertNotNull(valveList63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        java.net.InetAddress inetAddress12 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.apache.catalina.Context context13 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers = tomcatConnectorCustomizerList17;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        java.net.InetAddress inetAddress20 = tomcatEmbeddedServletContainerFactory14.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory21.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory26.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList28 = tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors = connectorList28;
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory21.protocol;
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory21.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        tomcatEmbeddedServletContainerFactory21.setMimeMappings(mimeMappings36);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection42 = tomcatEmbeddedServletContainerFactory38.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray43 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList44 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList44, lifecycleListenerArray43);
        tomcatEmbeddedServletContainerFactory38.contextLifecycleListeners = lifecycleListenerList44;
        tomcatEmbeddedServletContainerFactory21.contextLifecycleListeners = lifecycleListenerList44;
        tomcatEmbeddedServletContainerFactory14.contextLifecycleListeners = lifecycleListenerList44;
        tomcatEmbeddedServletContainerFactory14.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = tomcatEmbeddedServletContainerFactory51.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList54 = tomcatEmbeddedServletContainerFactory53.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory51.tomcatConnectorCustomizers = tomcatConnectorCustomizerList54;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection56 = tomcatEmbeddedServletContainerFactory51.getContextLifecycleListeners();
        java.lang.String str57 = tomcatEmbeddedServletContainerFactory51.uriEncoding;
        java.lang.String str58 = tomcatEmbeddedServletContainerFactory51.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory59.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray61 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory59.addInitializers(servletContextInitializerArray61);
        tomcatEmbeddedServletContainerFactory51.addInitializers(servletContextInitializerArray61);
        tomcatEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray61);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context13, servletContextInitializerArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNull(inetAddress20);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(connectorList28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertNotNull(valveCollection42);
        org.junit.Assert.assertNotNull(lifecycleListenerArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList54);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "UTF-8" + "'", str57, "UTF-8");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "UTF-8" + "'", str58, "UTF-8");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "UTF-8" + "'", str60, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray61);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        org.apache.catalina.Context context9 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context9);
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors = connectorList19;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory12.protocol;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory12.protocol;
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file29 = tomcatEmbeddedServletContainerFactory27.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory12.setBaseDirectory(file29);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file29);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory34.getUriEncoding();
        int int36 = tomcatEmbeddedServletContainerFactory34.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader41 = null;
        tomcatEmbeddedServletContainerFactory40.setResourceLoader(resourceLoader41);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet43 = tomcatEmbeddedServletContainerFactory40.getErrorPages();
        tomcatEmbeddedServletContainerFactory34.setErrorPages(errorPageSet43);
        java.io.File file45 = tomcatEmbeddedServletContainerFactory34.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList47 = tomcatEmbeddedServletContainerFactory46.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection48 = tomcatEmbeddedServletContainerFactory46.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader51 = tomcatEmbeddedServletContainerFactory49.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray52 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory49.addErrorPages(errorPageArray52);
        tomcatEmbeddedServletContainerFactory46.addErrorPages(errorPageArray52);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory55.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = tomcatEmbeddedServletContainerFactory60.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList62 = tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList63 = tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors = connectorList63;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory65.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory65.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection70 = tomcatEmbeddedServletContainerFactory65.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList71 = tomcatEmbeddedServletContainerFactory65.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory55.tomcatContextCustomizers = tomcatContextCustomizerList71;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str74 = storeMergedWebXmlListener73.getEmptyWebXml();
        java.lang.String str75 = storeMergedWebXmlListener73.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str77 = storeMergedWebXmlListener76.getMERGED_WEB_XML();
        java.lang.String str78 = storeMergedWebXmlListener76.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray79 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener73, storeMergedWebXmlListener76 };
        tomcatEmbeddedServletContainerFactory55.addContextLifecycleListeners(lifecycleListenerArray79);
        tomcatEmbeddedServletContainerFactory46.addContextLifecycleListeners(lifecycleListenerArray79);
        tomcatEmbeddedServletContainerFactory34.addContextLifecycleListeners(lifecycleListenerArray79);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray79);
        boolean boolean84 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file29.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.5583133189649368326.100");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-8" + "'", str35, "UTF-8");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8080 + "'", int36 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(errorPageSet43);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList47);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection48);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNull(resourceLoader51);
        org.junit.Assert.assertNotNull(errorPageArray52);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNotNull(connectorList62);
        org.junit.Assert.assertNotNull(connectorList63);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection70);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str74, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str75, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str77, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str78, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory10.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        java.io.File file23 = tomcatEmbeddedServletContainerFactory0.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection24 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file23.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.1773791963910329042.0");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection24);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory2.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory2.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList7 = tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList8 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers = tomcatConnectorCustomizerList8;
        java.io.File file10 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        int int11 = tomcatEmbeddedServletContainerFactory1.getPort();
        tomcatEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray14 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.addConnectorCustomizers(tomcatConnectorCustomizerArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatConnectorCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(lifecycleListenerList7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList8);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader5 = tomcatEmbeddedServletContainerFactory3.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory3.addErrorPages(errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList17;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection24 = tomcatEmbeddedServletContainerFactory19.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList25 = tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory9.tomcatContextCustomizers = tomcatContextCustomizerList25;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str28 = storeMergedWebXmlListener27.getEmptyWebXml();
        java.lang.String str29 = storeMergedWebXmlListener27.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str31 = storeMergedWebXmlListener30.getMERGED_WEB_XML();
        java.lang.String str32 = storeMergedWebXmlListener30.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray33 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener27, storeMergedWebXmlListener30 };
        tomcatEmbeddedServletContainerFactory9.addContextLifecycleListeners(lifecycleListenerArray33);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray33);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList39 = tomcatEmbeddedServletContainerFactory38.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory36.tomcatConnectorCustomizers = tomcatConnectorCustomizerList39;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList39;
        org.springframework.core.io.ResourceLoader resourceLoader42 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader42;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory44.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList51 = tomcatEmbeddedServletContainerFactory49.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList52 = tomcatEmbeddedServletContainerFactory49.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory44.additionalTomcatConnectors = connectorList52;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str55 = tomcatEmbeddedServletContainerFactory54.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray56 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory54.addInitializers(servletContextInitializerArray56);
        tomcatEmbeddedServletContainerFactory54.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray60 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory54.addContextLifecycleListeners(lifecycleListenerArray60);
        tomcatEmbeddedServletContainerFactory44.addContextLifecycleListeners(lifecycleListenerArray60);
        org.apache.catalina.Context context63 = null;
        tomcatEmbeddedServletContainerFactory44.postProcessContext(context63);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList65 = tomcatEmbeddedServletContainerFactory44.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList65);
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection69 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNull(resourceLoader5);
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection24);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str28, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str29, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str31, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str32, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray33);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList39);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNotNull(connectorList51);
        org.junit.Assert.assertNotNull(connectorList52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "UTF-8" + "'", str55, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray56);
        org.junit.Assert.assertNotNull(lifecycleListenerArray60);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList65);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection69);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList10 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList18;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory11.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings24);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory11.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = tomcatEmbeddedServletContainerFactory32.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors = connectorList34;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory27.protocol;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory27.protocol;
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection40 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        int int41 = tomcatEmbeddedServletContainerFactory27.getPort();
        java.io.File file43 = tomcatEmbeddedServletContainerFactory27.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory11.baseDirectory = file43;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file43);
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "org.apache.coyote.http11.Http11NioProtocol";
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection48 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory49.getUriEncoding();
        tomcatEmbeddedServletContainerFactory49.setSessionTimeout((int) (short) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str54 = tomcatEmbeddedServletContainerFactory53.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList56 = tomcatEmbeddedServletContainerFactory55.tomcatConnectorCustomizers;
        java.io.File file57 = tomcatEmbeddedServletContainerFactory55.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList58 = tomcatEmbeddedServletContainerFactory55.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory53.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList58);
        tomcatEmbeddedServletContainerFactory49.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList58);
        java.util.List<org.apache.catalina.Valve> valveList61 = tomcatEmbeddedServletContainerFactory49.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList61;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(lifecycleListenerList10);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(connectorList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file43.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.4302180138046091257.0");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-8" + "'", str50, "UTF-8");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str54, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList56);
        org.junit.Assert.assertNull(file57);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList58);
        org.junit.Assert.assertNotNull(valveList61);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = tomcatEmbeddedServletContainerFactory4.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory4.tomcatConnectorCustomizers = tomcatConnectorCustomizerList7;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection9 = tomcatEmbeddedServletContainerFactory4.getContextLifecycleListeners();
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory4.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList19;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory21.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory21.addInitializers(servletContextInitializerArray23);
        tomcatEmbeddedServletContainerFactory21.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray27 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory21.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory11.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory4.addContextLifecycleListeners(lifecycleListenerArray27);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray27);
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.springframework.core.io.ResourceLoader resourceLoader33 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader33);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertNotNull(lifecycleListenerArray27);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet5 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        boolean boolean7 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors = connectorList15;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory8.protocol;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory8.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList24 = tomcatEmbeddedServletContainerFactory19.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        tomcatEmbeddedServletContainerFactory19.setMimeMappings(mimeMappings28);
        tomcatEmbeddedServletContainerFactory8.setMimeMappings(mimeMappings28);
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory8.getUriEncoding();
        int int32 = tomcatEmbeddedServletContainerFactory8.getPort();
        java.io.File file33 = tomcatEmbeddedServletContainerFactory8.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory34.getUriEncoding();
        int int36 = tomcatEmbeddedServletContainerFactory34.getSessionTimeout();
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory34.getContextPath();
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory34.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        tomcatEmbeddedServletContainerFactory39.setRegisterDefaultServlet(false);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList43 = tomcatEmbeddedServletContainerFactory39.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory34.contextLifecycleListeners = lifecycleListenerList43;
        tomcatEmbeddedServletContainerFactory8.contextLifecycleListeners = lifecycleListenerList43;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList43;
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(errorPageSet5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList24);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-8" + "'", str31, "UTF-8");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-8" + "'", str35, "UTF-8");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str38, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(lifecycleListenerList43);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList16;
        java.net.InetAddress inetAddress18 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress18);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection20 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection20);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.io.File file2 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        tomcatEmbeddedServletContainerFactory0.tldSkip = "hi!";
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader5;
        org.springframework.core.io.ResourceLoader resourceLoader7 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(resourceLoader7);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        boolean boolean15 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory17.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        int int22 = tomcatEmbeddedServletContainerFactory20.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        tomcatEmbeddedServletContainerFactory17.setMimeMappings(mimeMappings23);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory25.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray27);
        tomcatEmbeddedServletContainerFactory25.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray31 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory25.addContextLifecycleListeners(lifecycleListenerArray31);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList40 = tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors = connectorList40;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory33.protocol;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory33.protocol;
        tomcatEmbeddedServletContainerFactory33.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection46 = tomcatEmbeddedServletContainerFactory33.getTomcatContextCustomizers();
        int int47 = tomcatEmbeddedServletContainerFactory33.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory48.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList55 = tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors = connectorList55;
        java.lang.String str57 = tomcatEmbeddedServletContainerFactory48.protocol;
        java.lang.String str58 = tomcatEmbeddedServletContainerFactory48.protocol;
        java.net.InetAddress inetAddress59 = null;
        tomcatEmbeddedServletContainerFactory48.setAddress(inetAddress59);
        java.util.List<org.apache.catalina.connector.Connector> connectorList61 = tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory62.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory62.setTldSkip("UTF-8");
        java.io.File file68 = tomcatEmbeddedServletContainerFactory62.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory48.setDocumentRoot(file68);
        tomcatEmbeddedServletContainerFactory33.setDocumentRoot(file68);
        tomcatEmbeddedServletContainerFactory25.baseDirectory = file68;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings73 = tomcatEmbeddedServletContainerFactory72.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList75 = tomcatEmbeddedServletContainerFactory74.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory72.tomcatConnectorCustomizers = tomcatConnectorCustomizerList75;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet77 = tomcatEmbeddedServletContainerFactory72.getErrorPages();
        tomcatEmbeddedServletContainerFactory25.setErrorPages(errorPageSet77);
        tomcatEmbeddedServletContainerFactory17.setErrorPages(errorPageSet77);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet77);
        java.net.InetAddress inetAddress81 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress81);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8080 + "'", int22 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-8" + "'", str26, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(lifecycleListenerArray31);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(connectorList40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(connectorList55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(connectorList61);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file68.toString(), "/tmp/UTF-8.4170307800812253362.0");
        org.junit.Assert.assertNotNull(mimeMappings73);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList75);
        org.junit.Assert.assertNotNull(errorPageSet77);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer9 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray10 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer9 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray10);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        java.util.List<org.apache.catalina.connector.Connector> connectorList3 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.coyote.http11.Http11NioProtocol";
        org.junit.Assert.assertNotNull(connectorList3);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        java.util.List<org.apache.catalina.Valve> valveList15 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(valveList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int2 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        tomcatEmbeddedServletContainerFactory6.setResourceLoader(resourceLoader7);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = tomcatEmbeddedServletContainerFactory6.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet9);
        java.io.File file11 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors = connectorList21;
        org.apache.catalina.Context context23 = null;
        tomcatEmbeddedServletContainerFactory13.postProcessContext(context23);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory25.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory30.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors = connectorList32;
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory25.protocol;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory25.protocol;
        java.net.InetAddress inetAddress36 = null;
        tomcatEmbeddedServletContainerFactory25.setAddress(inetAddress36);
        java.util.List<org.apache.catalina.connector.Connector> connectorList38 = tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors;
        java.io.File file39 = tomcatEmbeddedServletContainerFactory25.baseDirectory;
        org.apache.catalina.Valve[] valveArray40 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory25.addContextValves(valveArray40);
        tomcatEmbeddedServletContainerFactory13.addContextValves(valveArray40);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray40);
        java.util.concurrent.TimeUnit timeUnit45 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(97, timeUnit45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8080 + "'", int2 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertNull(file11);
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(connectorList38);
        org.junit.Assert.assertNull(file39);
        org.junit.Assert.assertNotNull(valveArray40);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers = tomcatConnectorCustomizerList17;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList17);
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.apache.catalina.Valve> valveList22 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.net.InetAddress inetAddress23 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(valveList22);
        org.junit.Assert.assertNull(inetAddress23);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory2.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList14 = tomcatEmbeddedServletContainerFactory9.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        tomcatEmbeddedServletContainerFactory9.setMimeMappings(mimeMappings18);
        org.apache.catalina.connector.Connector connector20 = null;
        org.apache.catalina.connector.Connector[] connectorArray21 = new org.apache.catalina.connector.Connector[] { connector20 };
        tomcatEmbeddedServletContainerFactory9.addAdditionalTomcatConnectors(connectorArray21);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory9.tldSkip;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        tomcatEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings24);
        tomcatEmbeddedServletContainerFactory2.setPort((int) (short) 1);
        java.util.List<org.apache.catalina.connector.Connector> connectorList28 = tomcatEmbeddedServletContainerFactory2.additionalTomcatConnectors;
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str8, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(lifecycleListenerList14);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(connectorArray21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(connectorList28);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        org.apache.catalina.Context context9 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context9);
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors = connectorList19;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory12.protocol;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory12.protocol;
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file29 = tomcatEmbeddedServletContainerFactory27.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory12.setBaseDirectory(file29);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file29);
        tomcatEmbeddedServletContainerFactory0.tldSkip = "org.apache.coyote.http11.Http11NioProtocol";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory36.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray38 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory36.addConnectorCustomizers(tomcatConnectorCustomizerArray38);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray38);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory41.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory41.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = tomcatEmbeddedServletContainerFactory46.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList48 = tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList49 = tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors = connectorList49;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory51.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory51.addInitializers(servletContextInitializerArray53);
        tomcatEmbeddedServletContainerFactory51.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray57 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory51.addContextLifecycleListeners(lifecycleListenerArray57);
        tomcatEmbeddedServletContainerFactory41.addContextLifecycleListeners(lifecycleListenerArray57);
        org.apache.catalina.Context context60 = null;
        tomcatEmbeddedServletContainerFactory41.postProcessContext(context60);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory62.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = tomcatEmbeddedServletContainerFactory62.getMimeMappings();
        tomcatEmbeddedServletContainerFactory62.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str71 = tomcatEmbeddedServletContainerFactory70.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer72 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray73 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer72 };
        tomcatEmbeddedServletContainerFactory70.addInitializers(servletContextInitializerArray73);
        tomcatEmbeddedServletContainerFactory62.addInitializers(servletContextInitializerArray73);
        tomcatEmbeddedServletContainerFactory41.addInitializers(servletContextInitializerArray73);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray73);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(32);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file29.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.8561110441956563555.100");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray38);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNotNull(connectorList48);
        org.junit.Assert.assertNotNull(connectorList49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "UTF-8" + "'", str52, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(lifecycleListenerArray57);
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(servletContextInitializerArray73);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        org.apache.catalina.Context context9 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context9);
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors = connectorList19;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory12.protocol;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory12.protocol;
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file29 = tomcatEmbeddedServletContainerFactory27.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory12.setBaseDirectory(file29);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file29);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory34.getUriEncoding();
        int int36 = tomcatEmbeddedServletContainerFactory34.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader41 = null;
        tomcatEmbeddedServletContainerFactory40.setResourceLoader(resourceLoader41);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet43 = tomcatEmbeddedServletContainerFactory40.getErrorPages();
        tomcatEmbeddedServletContainerFactory34.setErrorPages(errorPageSet43);
        java.io.File file45 = tomcatEmbeddedServletContainerFactory34.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList47 = tomcatEmbeddedServletContainerFactory46.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection48 = tomcatEmbeddedServletContainerFactory46.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader51 = tomcatEmbeddedServletContainerFactory49.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray52 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory49.addErrorPages(errorPageArray52);
        tomcatEmbeddedServletContainerFactory46.addErrorPages(errorPageArray52);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory55.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = tomcatEmbeddedServletContainerFactory60.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList62 = tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList63 = tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors = connectorList63;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory65.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory65.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection70 = tomcatEmbeddedServletContainerFactory65.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList71 = tomcatEmbeddedServletContainerFactory65.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory55.tomcatContextCustomizers = tomcatContextCustomizerList71;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str74 = storeMergedWebXmlListener73.getEmptyWebXml();
        java.lang.String str75 = storeMergedWebXmlListener73.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str77 = storeMergedWebXmlListener76.getMERGED_WEB_XML();
        java.lang.String str78 = storeMergedWebXmlListener76.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray79 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener73, storeMergedWebXmlListener76 };
        tomcatEmbeddedServletContainerFactory55.addContextLifecycleListeners(lifecycleListenerArray79);
        tomcatEmbeddedServletContainerFactory46.addContextLifecycleListeners(lifecycleListenerArray79);
        tomcatEmbeddedServletContainerFactory34.addContextLifecycleListeners(lifecycleListenerArray79);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray79);
        boolean boolean84 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.io.File file85 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        boolean boolean86 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file29.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6190078467593133048.100");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-8" + "'", str35, "UTF-8");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8080 + "'", int36 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(errorPageSet43);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList47);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection48);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNull(resourceLoader51);
        org.junit.Assert.assertNotNull(errorPageArray52);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNotNull(connectorList62);
        org.junit.Assert.assertNotNull(connectorList63);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection70);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str74, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str75, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str77, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str78, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file85.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6190078467593133048.100");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory2.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray4 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory2.addConnectorCustomizers(tomcatConnectorCustomizerArray4);
        java.net.InetAddress inetAddress6 = tomcatEmbeddedServletContainerFactory2.getAddress();
        tomcatEmbeddedServletContainerFactory2.setRegisterDefaultServlet(false);
        org.apache.catalina.startup.Tomcat tomcat9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer10 = tomcatEmbeddedServletContainerFactory2.getTomcatEmbeddedServletContainer(tomcat9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray4);
        org.junit.Assert.assertNull(inetAddress6);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList12 = tomcatEmbeddedServletContainerFactory11.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory9.tomcatConnectorCustomizers = tomcatConnectorCustomizerList12;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection14 = tomcatEmbeddedServletContainerFactory9.getContextLifecycleListeners();
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory9.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors = connectorList16;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray18 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory8.addContextCustomizers(tomcatContextCustomizerArray18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory20.setTldSkip("UTF-8");
        java.io.File file26 = tomcatEmbeddedServletContainerFactory20.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory8.setDocumentRoot(file26);
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file26);
        java.util.List<org.apache.catalina.connector.Connector> connectorList29 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList12);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray18);
        org.junit.Assert.assertNotNull(file26);
        org.junit.Assert.assertEquals(file26.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file26.toString(), "/tmp/UTF-8.6672552153469903623.0");
        org.junit.Assert.assertNotNull(connectorList29);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList6 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.tldSkip = "hi!";
        java.util.concurrent.TimeUnit timeUnit11 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1, timeUnit11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(lifecycleListenerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection21 = tomcatEmbeddedServletContainerFactory17.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList23 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList23, lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory17.contextLifecycleListeners = lifecycleListenerList23;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList23;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection27 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory28.protocol;
        tomcatEmbeddedServletContainerFactory28.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection41 = tomcatEmbeddedServletContainerFactory36.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList42 = tomcatEmbeddedServletContainerFactory36.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory28.tomcatContextCustomizers = tomcatContextCustomizerList42;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList42;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection45 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.apache.catalina.Context context46 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context46);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean49 = tomcatEmbeddedServletContainerFactory48.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList50 = tomcatEmbeddedServletContainerFactory48.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory51.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory51.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = tomcatEmbeddedServletContainerFactory56.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList58 = tomcatEmbeddedServletContainerFactory56.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList59 = tomcatEmbeddedServletContainerFactory56.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory51.additionalTomcatConnectors = connectorList59;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList61 = tomcatEmbeddedServletContainerFactory51.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory62.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory62.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings68 = tomcatEmbeddedServletContainerFactory67.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList69 = tomcatEmbeddedServletContainerFactory67.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory62.additionalTomcatConnectors = connectorList69;
        java.lang.String str71 = tomcatEmbeddedServletContainerFactory62.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory72.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings75 = tomcatEmbeddedServletContainerFactory72.getMimeMappings();
        tomcatEmbeddedServletContainerFactory62.setMimeMappings(mimeMappings75);
        java.lang.String str77 = tomcatEmbeddedServletContainerFactory62.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory78.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory78.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings84 = tomcatEmbeddedServletContainerFactory83.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList85 = tomcatEmbeddedServletContainerFactory83.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory78.additionalTomcatConnectors = connectorList85;
        java.lang.String str87 = tomcatEmbeddedServletContainerFactory78.protocol;
        java.lang.String str88 = tomcatEmbeddedServletContainerFactory78.protocol;
        tomcatEmbeddedServletContainerFactory78.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection91 = tomcatEmbeddedServletContainerFactory78.getTomcatContextCustomizers();
        int int92 = tomcatEmbeddedServletContainerFactory78.getPort();
        java.io.File file94 = tomcatEmbeddedServletContainerFactory78.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory62.baseDirectory = file94;
        tomcatEmbeddedServletContainerFactory51.setDocumentRoot(file94);
        tomcatEmbeddedServletContainerFactory48.setBaseDirectory(file94);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file94);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(valveCollection21);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection41);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList50);
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertNotNull(connectorList58);
        org.junit.Assert.assertNotNull(connectorList59);
        org.junit.Assert.assertNotNull(lifecycleListenerList61);
        org.junit.Assert.assertNotNull(mimeMappings68);
        org.junit.Assert.assertNotNull(connectorList69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings75);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(mimeMappings84);
        org.junit.Assert.assertNotNull(connectorList85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertNotNull(file94);
        org.junit.Assert.assertEquals(file94.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file94.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6079503311966455625.0");
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("UTF-8", (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory1.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers;
        java.io.File file5 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList6 = tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers;
        java.util.List<org.apache.catalina.Valve> valveList7 = null;
        tomcatEmbeddedServletContainerFactory1.contextValves = valveList7;
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList6);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory2.uriEncoding;
        tomcatEmbeddedServletContainerFactory2.setUriEncoding("");
        tomcatEmbeddedServletContainerFactory2.setPort((int) ' ');
        int int8 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int2 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        java.io.File file9 = tomcatEmbeddedServletContainerFactory4.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection15 = tomcatEmbeddedServletContainerFactory10.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory10.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector18 = null;
        org.apache.catalina.connector.Connector[] connectorArray19 = new org.apache.catalina.connector.Connector[] { connector18 };
        tomcatEmbeddedServletContainerFactory10.addAdditionalTomcatConnectors(connectorArray19);
        tomcatEmbeddedServletContainerFactory4.addAdditionalTomcatConnectors(connectorArray19);
        tomcatEmbeddedServletContainerFactory4.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory24.getUriEncoding();
        java.io.File file27 = tomcatEmbeddedServletContainerFactory24.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory4.baseDirectory = file27;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file27);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList31 = tomcatEmbeddedServletContainerFactory30.tomcatConnectorCustomizers;
        int int32 = tomcatEmbeddedServletContainerFactory30.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList34 = tomcatEmbeddedServletContainerFactory33.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory30.tomcatConnectorCustomizers = tomcatConnectorCustomizerList34;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList34);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("org.apache.coyote.http11.Http11NioProtocol");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8080 + "'", int2 == 8080);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNull(file9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection15);
        org.junit.Assert.assertNotNull(connectorArray19);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertNotNull(file27);
        org.junit.Assert.assertEquals(file27.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file27.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.2676627944914089013.8080");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList34);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory4.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        java.io.File file8 = tomcatEmbeddedServletContainerFactory6.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList9 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory4.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList9);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList9);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory15.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList18 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        java.io.File file19 = tomcatEmbeddedServletContainerFactory15.baseDirectory;
        java.io.File file20 = tomcatEmbeddedServletContainerFactory15.baseDirectory;
        boolean boolean21 = tomcatEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection26 = tomcatEmbeddedServletContainerFactory22.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader27 = tomcatEmbeddedServletContainerFactory22.resourceLoader;
        tomcatEmbeddedServletContainerFactory22.setTldSkip("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory30.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList33 = tomcatEmbeddedServletContainerFactory32.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory30.tomcatConnectorCustomizers = tomcatConnectorCustomizerList33;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList36 = tomcatEmbeddedServletContainerFactory35.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection37 = tomcatEmbeddedServletContainerFactory35.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader40 = tomcatEmbeddedServletContainerFactory38.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray41 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory38.addErrorPages(errorPageArray41);
        tomcatEmbeddedServletContainerFactory35.addErrorPages(errorPageArray41);
        tomcatEmbeddedServletContainerFactory30.addErrorPages(errorPageArray41);
        tomcatEmbeddedServletContainerFactory22.addErrorPages(errorPageArray41);
        tomcatEmbeddedServletContainerFactory15.addErrorPages(errorPageArray41);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray41);
        java.util.List<org.apache.catalina.connector.Connector> connectorList48 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str5, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList18);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(valveCollection26);
        org.junit.Assert.assertNull(resourceLoader27);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList33);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList36);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection37);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNull(resourceLoader40);
        org.junit.Assert.assertNotNull(errorPageArray41);
        org.junit.Assert.assertNotNull(connectorList48);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        tomcatEmbeddedServletContainerFactory0.tldSkip = "";
        int int17 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setPort(1);
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory21.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory26.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList28 = tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors = connectorList28;
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory21.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        tomcatEmbeddedServletContainerFactory21.setMimeMappings(mimeMappings34);
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory21.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory37.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory42.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors = connectorList44;
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory37.protocol;
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory37.protocol;
        tomcatEmbeddedServletContainerFactory37.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection50 = tomcatEmbeddedServletContainerFactory37.getTomcatContextCustomizers();
        int int51 = tomcatEmbeddedServletContainerFactory37.getPort();
        java.io.File file53 = tomcatEmbeddedServletContainerFactory37.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory21.baseDirectory = file53;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory55.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = tomcatEmbeddedServletContainerFactory60.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList62 = tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList63 = tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors = connectorList63;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory65.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory65.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection70 = tomcatEmbeddedServletContainerFactory65.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList71 = tomcatEmbeddedServletContainerFactory65.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory55.tomcatContextCustomizers = tomcatContextCustomizerList71;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str74 = storeMergedWebXmlListener73.getEmptyWebXml();
        java.lang.String str75 = storeMergedWebXmlListener73.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str77 = storeMergedWebXmlListener76.getMERGED_WEB_XML();
        java.lang.String str78 = storeMergedWebXmlListener76.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray79 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener73, storeMergedWebXmlListener76 };
        tomcatEmbeddedServletContainerFactory55.addContextLifecycleListeners(lifecycleListenerArray79);
        tomcatEmbeddedServletContainerFactory21.addContextLifecycleListeners(lifecycleListenerArray79);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray79);
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(connectorList28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file53.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.7100190733815589570.0");
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNotNull(connectorList62);
        org.junit.Assert.assertNotNull(connectorList63);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection70);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str74, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str75, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str77, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str78, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray79);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors = connectorList15;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory8.protocol;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory8.protocol;
        java.net.InetAddress inetAddress19 = null;
        tomcatEmbeddedServletContainerFactory8.setAddress(inetAddress19);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection21 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList29 = tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList30 = tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors = connectorList30;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory32.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray34);
        tomcatEmbeddedServletContainerFactory32.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray38 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory32.addContextLifecycleListeners(lifecycleListenerArray38);
        tomcatEmbeddedServletContainerFactory22.addContextLifecycleListeners(lifecycleListenerArray38);
        tomcatEmbeddedServletContainerFactory8.addContextLifecycleListeners(lifecycleListenerArray38);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray38);
        tomcatEmbeddedServletContainerFactory0.setPort((int) ' ');
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection21);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(connectorList29);
        org.junit.Assert.assertNotNull(connectorList30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertNotNull(lifecycleListenerArray38);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.io.File file7 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList10 = tomcatEmbeddedServletContainerFactory9.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory9.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection11);
        java.lang.Class<?> wildcardClass13 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(8080);
        java.net.InetAddress inetAddress17 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress17);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection19 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection19);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) -1);
        int int2 = tomcatEmbeddedServletContainerFactory1.getPort();
        org.apache.catalina.Context context3 = null;
        tomcatEmbeddedServletContainerFactory1.postProcessContext(context3);
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory1.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory6.additionalTomcatConnectors = connectorList13;
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory6.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean17 = tomcatEmbeddedServletContainerFactory16.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList18 = tomcatEmbeddedServletContainerFactory16.contextValves;
        tomcatEmbeddedServletContainerFactory6.contextValves = valveList18;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader23 = null;
        tomcatEmbeddedServletContainerFactory22.setResourceLoader(resourceLoader23);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = tomcatEmbeddedServletContainerFactory22.getErrorPages();
        tomcatEmbeddedServletContainerFactory6.setErrorPages(errorPageSet25);
        java.util.Collection<org.apache.catalina.Valve> valveCollection27 = tomcatEmbeddedServletContainerFactory6.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        tomcatEmbeddedServletContainerFactory6.resourceLoader = resourceLoader28;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers = tomcatConnectorCustomizerList30;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory1.uriEncoding;
        org.apache.catalina.Context context33 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.addDefaultServlet(context33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(valveList18);
        org.junit.Assert.assertNotNull(errorPageSet25);
        org.junit.Assert.assertNotNull(valveCollection27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-8" + "'", str32, "UTF-8");
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader6);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList2 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray3 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList4, tomcatConnectorCustomizerArray3);
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList4;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory9.protocol;
        tomcatEmbeddedServletContainerFactory9.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection22 = tomcatEmbeddedServletContainerFactory9.getTomcatContextCustomizers();
        int int23 = tomcatEmbeddedServletContainerFactory9.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList31 = tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors = connectorList31;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.net.InetAddress inetAddress35 = null;
        tomcatEmbeddedServletContainerFactory24.setAddress(inetAddress35);
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory38.setTldSkip("UTF-8");
        java.io.File file44 = tomcatEmbeddedServletContainerFactory38.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory24.setDocumentRoot(file44);
        tomcatEmbeddedServletContainerFactory9.setDocumentRoot(file44);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file44;
        tomcatEmbeddedServletContainerFactory0.protocol = "UTF-8";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory50.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory50.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = tomcatEmbeddedServletContainerFactory55.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList57 = tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory50.additionalTomcatConnectors = connectorList57;
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory50.protocol;
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory50.protocol;
        java.net.InetAddress inetAddress61 = null;
        tomcatEmbeddedServletContainerFactory50.setAddress(inetAddress61);
        int int63 = tomcatEmbeddedServletContainerFactory50.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader64 = tomcatEmbeddedServletContainerFactory50.resourceLoader;
        java.lang.String str65 = tomcatEmbeddedServletContainerFactory50.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray66 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet67 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet67, errorPageArray66);
        tomcatEmbeddedServletContainerFactory50.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet67);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet67);
        java.lang.String str71 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection72 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings73 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.protocol = "";
        boolean boolean76 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveList2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNotNull(connectorList31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertNotNull(file44);
        org.junit.Assert.assertEquals(file44.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file44.toString(), "/tmp/UTF-8.7146164629793943132.0");
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNotNull(connectorList57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(resourceLoader64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str65, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(errorPageArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "UTF-8" + "'", str71, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection72);
        org.junit.Assert.assertNotNull(mimeMappings73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList9 = tomcatEmbeddedServletContainerFactory8.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList9;
        org.apache.catalina.Context context11 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context11);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory13.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray15 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray15);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray15);
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-8" + "'", str14, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        boolean boolean17 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.apache.catalina.Context context20 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str13, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.core.io.ResourceLoader resourceLoader12 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader12;
        java.net.InetAddress inetAddress14 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(inetAddress14);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory1.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers;
        java.io.File file5 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        java.io.File file6 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        boolean boolean7 = tomcatEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory1.protocol = "UTF-8";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        java.io.File file15 = tomcatEmbeddedServletContainerFactory10.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList19;
        tomcatEmbeddedServletContainerFactory1.additionalTomcatConnectors = connectorList19;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection22 = tomcatEmbeddedServletContainerFactory1.getTomcatContextCustomizers();
        java.io.File file23 = tomcatEmbeddedServletContainerFactory1.getDocumentRoot();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(file15);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection22);
        org.junit.Assert.assertNull(file23);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str5 = storeMergedWebXmlListener0.getEmptyWebXml();
        org.apache.catalina.LifecycleEvent lifecycleEvent6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str5, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray2 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray2);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray6 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList11 = tomcatEmbeddedServletContainerFactory10.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory8.tomcatConnectorCustomizers = tomcatConnectorCustomizerList11;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection13 = tomcatEmbeddedServletContainerFactory8.getContextLifecycleListeners();
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory8.uriEncoding;
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory8.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory16.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray18 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray18);
        tomcatEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray18);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray18);
        org.springframework.core.io.ResourceLoader resourceLoader22 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader22;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection24 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray2);
        org.junit.Assert.assertNotNull(lifecycleListenerArray6);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList11);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-8" + "'", str14, "UTF-8");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-8" + "'", str17, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection24);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory2.uriEncoding;
        tomcatEmbeddedServletContainerFactory2.setUriEncoding("");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory2.protocol;
        tomcatEmbeddedServletContainerFactory2.setUriEncoding("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        tomcatEmbeddedServletContainerFactory2.resourceLoader = resourceLoader9;
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str6, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList10 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection16 = tomcatEmbeddedServletContainerFactory11.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory17.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList24 = tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors = connectorList24;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory17.protocol;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory17.protocol;
        java.net.InetAddress inetAddress28 = null;
        tomcatEmbeddedServletContainerFactory17.setAddress(inetAddress28);
        java.io.File file30 = null;
        tomcatEmbeddedServletContainerFactory17.setBaseDirectory(file30);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray32 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory17.addContextCustomizers(tomcatContextCustomizerArray32);
        tomcatEmbeddedServletContainerFactory11.addContextCustomizers(tomcatContextCustomizerArray32);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray32);
        org.springframework.core.io.ResourceLoader resourceLoader36 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader36);
        java.util.concurrent.TimeUnit timeUnit39 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((-1), timeUnit39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList10);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection16);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(connectorList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray32);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList10 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors = connectorList18;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory11.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings24);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory11.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = tomcatEmbeddedServletContainerFactory32.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors = connectorList34;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory27.protocol;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory27.protocol;
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection40 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        int int41 = tomcatEmbeddedServletContainerFactory27.getPort();
        java.io.File file43 = tomcatEmbeddedServletContainerFactory27.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory11.baseDirectory = file43;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file43);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList46 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.io.File file48 = tomcatEmbeddedServletContainerFactory0.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(lifecycleListenerList10);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertNotNull(connectorList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(file43);
        org.junit.Assert.assertEquals(file43.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file43.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.1488909426732066423.0");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList46);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.2475458553950832732.0");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection3 = tomcatEmbeddedServletContainerFactory2.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList4 = tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners;
        java.util.List<org.apache.catalina.Valve> valveList5 = tomcatEmbeddedServletContainerFactory2.contextValves;
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader6);
        org.apache.catalina.Context context8 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList12 = tomcatEmbeddedServletContainerFactory11.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory9.tomcatConnectorCustomizers = tomcatConnectorCustomizerList12;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection14 = tomcatEmbeddedServletContainerFactory9.getContextLifecycleListeners();
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory9.uriEncoding;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory9.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList18 = tomcatEmbeddedServletContainerFactory17.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory9.tomcatConnectorCustomizers = tomcatConnectorCustomizerList18;
        org.apache.catalina.Context context20 = null;
        tomcatEmbeddedServletContainerFactory9.postProcessContext(context20);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory22.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory22.addInitializers(servletContextInitializerArray24);
        tomcatEmbeddedServletContainerFactory9.addInitializers(servletContextInitializerArray24);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.configureContext(context8, servletContextInitializerArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection3);
        org.junit.Assert.assertNotNull(lifecycleListenerList4);
        org.junit.Assert.assertNotNull(valveList5);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList12);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray15 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16, errorPageArray15);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList23 = tomcatEmbeddedServletContainerFactory22.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection24 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory21.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors = connectorList33;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory26.protocol;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory26.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory37.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory42.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors = connectorList44;
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory37.protocol;
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory37.protocol;
        java.net.InetAddress inetAddress48 = null;
        tomcatEmbeddedServletContainerFactory37.setAddress(inetAddress48);
        int int50 = tomcatEmbeddedServletContainerFactory37.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = tomcatEmbeddedServletContainerFactory51.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList54 = tomcatEmbeddedServletContainerFactory53.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory51.tomcatConnectorCustomizers = tomcatConnectorCustomizerList54;
        tomcatEmbeddedServletContainerFactory37.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList54);
        tomcatEmbeddedServletContainerFactory26.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList54);
        tomcatEmbeddedServletContainerFactory21.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList54);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList54);
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.core.io.ResourceLoader resourceLoader61 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader61);
        java.lang.Class<?> wildcardClass63 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(errorPageArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection24);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList54);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        org.apache.catalina.Context context18 = null;
        tomcatEmbeddedServletContainerFactory9.postProcessContext(context18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory22.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray24 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory22.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory9.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.Valve> valveList30 = tomcatEmbeddedServletContainerFactory0.contextValves;
        org.springframework.core.io.ResourceLoader resourceLoader31 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader31;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setProtocol("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader38 = null;
        tomcatEmbeddedServletContainerFactory33.setResourceLoader(resourceLoader38);
        java.io.File file41 = tomcatEmbeddedServletContainerFactory33.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file41);
        java.lang.Class<?> wildcardClass43 = file41.getClass();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray24);
        org.junit.Assert.assertNotNull(valveList30);
        org.junit.Assert.assertNotNull(file41);
        org.junit.Assert.assertEquals(file41.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file41.toString(), "/tmp/UTF-8.7323022159973729510.0");
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        tomcatEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList12 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors = connectorList20;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory13.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean24 = tomcatEmbeddedServletContainerFactory23.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList25 = tomcatEmbeddedServletContainerFactory23.contextValves;
        tomcatEmbeddedServletContainerFactory13.contextValves = valveList25;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory13.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors = connectorList35;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory28.protocol;
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory28.protocol;
        java.net.InetAddress inetAddress39 = null;
        tomcatEmbeddedServletContainerFactory28.setAddress(inetAddress39);
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory42.setTldSkip("UTF-8");
        java.io.File file48 = tomcatEmbeddedServletContainerFactory42.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory28.setDocumentRoot(file48);
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory52.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = tomcatEmbeddedServletContainerFactory57.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList59 = tomcatEmbeddedServletContainerFactory57.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory52.additionalTomcatConnectors = connectorList59;
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory52.protocol;
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory52.protocol;
        tomcatEmbeddedServletContainerFactory52.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection65 = tomcatEmbeddedServletContainerFactory52.getTomcatContextCustomizers();
        int int66 = tomcatEmbeddedServletContainerFactory52.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory67.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory67.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings73 = tomcatEmbeddedServletContainerFactory72.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList74 = tomcatEmbeddedServletContainerFactory72.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory67.additionalTomcatConnectors = connectorList74;
        java.lang.String str76 = tomcatEmbeddedServletContainerFactory67.protocol;
        java.lang.String str77 = tomcatEmbeddedServletContainerFactory67.protocol;
        java.net.InetAddress inetAddress78 = null;
        tomcatEmbeddedServletContainerFactory67.setAddress(inetAddress78);
        java.util.List<org.apache.catalina.connector.Connector> connectorList80 = tomcatEmbeddedServletContainerFactory67.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory81.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory81.setTldSkip("UTF-8");
        java.io.File file87 = tomcatEmbeddedServletContainerFactory81.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory67.setDocumentRoot(file87);
        tomcatEmbeddedServletContainerFactory52.setDocumentRoot(file87);
        tomcatEmbeddedServletContainerFactory28.baseDirectory = file87;
        tomcatEmbeddedServletContainerFactory13.setDocumentRoot(file87);
        tomcatEmbeddedServletContainerFactory9.baseDirectory = file87;
        tomcatEmbeddedServletContainerFactory2.baseDirectory = file87;
        java.lang.String str94 = tomcatEmbeddedServletContainerFactory2.getUriEncoding();
        org.springframework.core.io.ResourceLoader resourceLoader95 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader95);
        tomcatEmbeddedServletContainerFactory2.setProtocol("org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertNotNull(connectorList12);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(valveList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/tmp/UTF-8.6604493178036238953.0");
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(connectorList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(mimeMappings73);
        org.junit.Assert.assertNotNull(connectorList74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(connectorList80);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file87.toString(), "/tmp/UTF-8.1769188258042292034.0");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "UTF-8" + "'", str94, "UTF-8");
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory4.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        java.io.File file8 = tomcatEmbeddedServletContainerFactory6.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList9 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory4.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList9);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList9);
        int int12 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList13 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str5, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-8" + "'", str14, "UTF-8");
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = tomcatEmbeddedServletContainerFactory2.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory5.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection10 = tomcatEmbeddedServletContainerFactory5.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList11 = tomcatEmbeddedServletContainerFactory5.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList11;
        tomcatEmbeddedServletContainerFactory2.uriEncoding = "UTF-8";
        int int15 = tomcatEmbeddedServletContainerFactory2.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean17 = tomcatEmbeddedServletContainerFactory16.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection18 = tomcatEmbeddedServletContainerFactory16.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        tomcatEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings19);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings19);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList29 = tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors = connectorList29;
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory22.protocol;
        org.apache.catalina.Context context32 = null;
        tomcatEmbeddedServletContainerFactory22.postProcessContext(context32);
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = tomcatEmbeddedServletContainerFactory22.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList34;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.connector.Connector connector37 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection10);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8080 + "'", int15 == 8080);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(valveCollection18);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(connectorList29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(connectorList34);
        org.junit.Assert.assertNotNull(mimeMappings36);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.net.InetAddress inetAddress13 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader17);
        tomcatEmbeddedServletContainerFactory16.setPort(10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList21;
        java.io.File file23 = null;
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file23;
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList27 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors = connectorList35;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory28.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader40 = tomcatEmbeddedServletContainerFactory38.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory41.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory41.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection46 = tomcatEmbeddedServletContainerFactory41.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList47 = tomcatEmbeddedServletContainerFactory41.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory38.tomcatContextCustomizers = tomcatContextCustomizerList47;
        tomcatEmbeddedServletContainerFactory28.tomcatContextCustomizers = tomcatContextCustomizerList47;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory50.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory50.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = tomcatEmbeddedServletContainerFactory55.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList57 = tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory50.additionalTomcatConnectors = connectorList57;
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory50.protocol;
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory50.protocol;
        java.net.InetAddress inetAddress61 = null;
        tomcatEmbeddedServletContainerFactory50.setAddress(inetAddress61);
        tomcatEmbeddedServletContainerFactory50.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray65 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList66 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList66, valveArray65);
        tomcatEmbeddedServletContainerFactory50.contextValves = valveList66;
        tomcatEmbeddedServletContainerFactory28.contextValves = valveList66;
        java.lang.String str70 = tomcatEmbeddedServletContainerFactory28.uriEncoding;
        java.io.File file72 = tomcatEmbeddedServletContainerFactory28.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file72;
        java.lang.String str74 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertNotNull(connectorList27);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNull(resourceLoader40);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection46);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList47);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNotNull(connectorList57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(valveArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "UTF-8" + "'", str70, "UTF-8");
        org.junit.Assert.assertNotNull(file72);
        org.junit.Assert.assertEquals(file72.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file72.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.8827463204027358899.0");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str74, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader14 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.util.List<org.apache.catalina.Valve> valveList15 = null;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList15;
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory10.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        java.io.File file23 = tomcatEmbeddedServletContainerFactory0.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        tomcatEmbeddedServletContainerFactory0.setPort((int) '4');
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList26 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader29 = tomcatEmbeddedServletContainerFactory27.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory30.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection35 = tomcatEmbeddedServletContainerFactory30.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList36 = tomcatEmbeddedServletContainerFactory30.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory27.tomcatContextCustomizers = tomcatContextCustomizerList36;
        tomcatEmbeddedServletContainerFactory27.uriEncoding = "UTF-8";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection40 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList41 = tomcatEmbeddedServletContainerFactory27.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList45 = tomcatEmbeddedServletContainerFactory44.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory42.tomcatConnectorCustomizers = tomcatConnectorCustomizerList45;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet47 = tomcatEmbeddedServletContainerFactory42.getErrorPages();
        java.net.InetAddress inetAddress48 = tomcatEmbeddedServletContainerFactory42.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader49 = tomcatEmbeddedServletContainerFactory42.resourceLoader;
        java.io.File file51 = tomcatEmbeddedServletContainerFactory42.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.apache.catalina.Valve[] valveArray52 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory42.addContextValves(valveArray52);
        tomcatEmbeddedServletContainerFactory27.addContextValves(valveArray52);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection55 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = tomcatEmbeddedServletContainerFactory56.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList58 = tomcatEmbeddedServletContainerFactory56.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList59 = tomcatEmbeddedServletContainerFactory56.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList60 = tomcatEmbeddedServletContainerFactory56.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory27.contextLifecycleListeners = lifecycleListenerList60;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList60;
        org.apache.catalina.Context context63 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context63, servletContextInitializerArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file23.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.3943179027778621423.0");
        org.junit.Assert.assertNotNull(lifecycleListenerList26);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNull(resourceLoader29);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection35);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList36);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection40);
        org.junit.Assert.assertNotNull(valveList41);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList45);
        org.junit.Assert.assertNotNull(errorPageSet47);
        org.junit.Assert.assertNull(inetAddress48);
        org.junit.Assert.assertNull(resourceLoader49);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file51.toString(), "/tmp/web-app>\n.145483200189524322.8080");
        org.junit.Assert.assertNotNull(valveArray52);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection55);
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertNotNull(connectorList58);
        org.junit.Assert.assertNotNull(connectorList59);
        org.junit.Assert.assertNotNull(lifecycleListenerList60);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory4.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        java.io.File file8 = tomcatEmbeddedServletContainerFactory6.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList9 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory4.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList9);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList9);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray15 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatContextCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str5, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection12);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.net.InetAddress inetAddress5 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory6.additionalTomcatConnectors = connectorList13;
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory6.protocol;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory6.protocol;
        tomcatEmbeddedServletContainerFactory6.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file23 = tomcatEmbeddedServletContainerFactory21.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory6.setBaseDirectory(file23);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file23);
        org.apache.catalina.Context context26 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(inetAddress5);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file23.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.4166635001313608228.100");
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.net.InetAddress inetAddress13 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader17);
        tomcatEmbeddedServletContainerFactory16.setPort(10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList21;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory23.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList28 = tomcatEmbeddedServletContainerFactory27.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection29 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList30 = tomcatEmbeddedServletContainerFactory27.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection31 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory27.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory27.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory27.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = tomcatEmbeddedServletContainerFactory41.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList43 = tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList43;
        org.apache.catalina.Context context45 = null;
        tomcatEmbeddedServletContainerFactory36.postProcessContext(context45);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory49.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray51 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory49.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        tomcatEmbeddedServletContainerFactory36.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        tomcatEmbeddedServletContainerFactory27.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        tomcatEmbeddedServletContainerFactory23.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray51);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList60 = tomcatEmbeddedServletContainerFactory59.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection61 = tomcatEmbeddedServletContainerFactory59.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings63 = tomcatEmbeddedServletContainerFactory62.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader64 = tomcatEmbeddedServletContainerFactory62.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray65 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory62.addErrorPages(errorPageArray65);
        tomcatEmbeddedServletContainerFactory59.addErrorPages(errorPageArray65);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray68 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory59.addInitializers(servletContextInitializerArray68);
        java.io.File file70 = tomcatEmbeddedServletContainerFactory59.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str74 = tomcatEmbeddedServletContainerFactory73.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer75 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray76 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer75 };
        tomcatEmbeddedServletContainerFactory73.addInitializers(servletContextInitializerArray76);
        tomcatEmbeddedServletContainerFactory59.addInitializers(servletContextInitializerArray76);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList79 = tomcatEmbeddedServletContainerFactory59.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList79;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory81.setPort((int) (short) 0);
        boolean boolean84 = tomcatEmbeddedServletContainerFactory81.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory81.setRegisterDefaultServlet(true);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList87 = tomcatEmbeddedServletContainerFactory81.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList87;
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-8" + "'", str26, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection29);
        org.junit.Assert.assertNotNull(valveList30);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection31);
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(connectorList43);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray51);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList60);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection61);
        org.junit.Assert.assertNotNull(mimeMappings63);
        org.junit.Assert.assertNull(resourceLoader64);
        org.junit.Assert.assertNotNull(errorPageArray65);
        org.junit.Assert.assertNotNull(servletContextInitializerArray68);
        org.junit.Assert.assertNull(file70);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(servletContextInitializerArray76);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList87);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str5 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str6 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str7 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str8 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.LifecycleEvent lifecycleEvent9 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str3, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str5, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str6, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str7, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str8, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        org.apache.catalina.Context context6 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer9 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray10 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer9 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray10);
        java.util.Collection<org.apache.catalina.Valve> valveCollection12 = tomcatEmbeddedServletContainerFactory0.getValves();
        tomcatEmbeddedServletContainerFactory0.setProtocol("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection21 = tomcatEmbeddedServletContainerFactory16.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList22 = tomcatEmbeddedServletContainerFactory16.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings23);
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        org.apache.catalina.Context context27 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray10);
        org.junit.Assert.assertNotNull(valveCollection12);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection21);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList22);
        org.junit.Assert.assertNotNull(mimeMappings23);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory10.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader26 = tomcatEmbeddedServletContainerFactory24.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection32 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList33 = tomcatEmbeddedServletContainerFactory27.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory24.tomcatContextCustomizers = tomcatContextCustomizerList33;
        tomcatEmbeddedServletContainerFactory24.uriEncoding = "UTF-8";
        org.springframework.core.io.ResourceLoader resourceLoader37 = null;
        tomcatEmbeddedServletContainerFactory24.setResourceLoader(resourceLoader37);
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory24.tldSkip;
        tomcatEmbeddedServletContainerFactory24.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader44 = tomcatEmbeddedServletContainerFactory42.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory45.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory45.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection50 = tomcatEmbeddedServletContainerFactory45.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList51 = tomcatEmbeddedServletContainerFactory45.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory42.tomcatContextCustomizers = tomcatContextCustomizerList51;
        java.util.List<org.apache.catalina.Valve> valveList53 = tomcatEmbeddedServletContainerFactory42.contextValves;
        tomcatEmbeddedServletContainerFactory24.contextValves = valveList53;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory55.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList60 = tomcatEmbeddedServletContainerFactory55.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory61.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = tomcatEmbeddedServletContainerFactory61.getMimeMappings();
        tomcatEmbeddedServletContainerFactory55.setMimeMappings(mimeMappings64);
        org.apache.catalina.connector.Connector connector66 = null;
        org.apache.catalina.connector.Connector[] connectorArray67 = new org.apache.catalina.connector.Connector[] { connector66 };
        tomcatEmbeddedServletContainerFactory55.addAdditionalTomcatConnectors(connectorArray67);
        tomcatEmbeddedServletContainerFactory24.addAdditionalTomcatConnectors(connectorArray67);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray67);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 0);
        java.util.List<org.apache.catalina.connector.Connector> connectorList73 = tomcatEmbeddedServletContainerFactory72.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList73;
        // The following exception was thrown during execution in test generation
        try {
            java.io.File file76 = tomcatEmbeddedServletContainerFactory0.createTempDir("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Prefix string too short");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNull(resourceLoader26);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection32);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNull(resourceLoader44);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection50);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList51);
        org.junit.Assert.assertNotNull(valveList53);
        org.junit.Assert.assertNotNull(lifecycleListenerList60);
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNotNull(connectorArray67);
        org.junit.Assert.assertNotNull(connectorList73);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory1.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers;
        java.io.File file5 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        java.io.File file6 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        boolean boolean7 = tomcatEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.apache.catalina.startup.Tomcat tomcat8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer9 = tomcatEmbeddedServletContainerFactory1.getTomcatEmbeddedServletContainer(tomcat8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList6 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection11 = tomcatEmbeddedServletContainerFactory7.getValves();
        java.net.InetAddress inetAddress12 = tomcatEmbeddedServletContainerFactory7.getAddress();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection13 = tomcatEmbeddedServletContainerFactory7.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory7.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory7.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList16;
        org.apache.catalina.startup.Tomcat tomcat18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer19 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList6);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(valveCollection11);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection3 = tomcatEmbeddedServletContainerFactory2.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList4 = tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners;
        java.util.List<org.apache.catalina.Valve> valveList5 = tomcatEmbeddedServletContainerFactory2.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection6 = tomcatEmbeddedServletContainerFactory2.getTomcatConnectorCustomizers();
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory2.tldSkip;
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection3);
        org.junit.Assert.assertNotNull(lifecycleListenerList4);
        org.junit.Assert.assertNotNull(valveList5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        boolean boolean12 = tomcatEmbeddedServletContainerFactory6.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress13 = null;
        tomcatEmbeddedServletContainerFactory6.setAddress(inetAddress13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory6.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory16.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList19 = tomcatEmbeddedServletContainerFactory16.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection20 = tomcatEmbeddedServletContainerFactory16.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory16.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory16.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList24 = tomcatEmbeddedServletContainerFactory16.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory25.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory30.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors = connectorList32;
        org.apache.catalina.Context context34 = null;
        tomcatEmbeddedServletContainerFactory25.postProcessContext(context34);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory38.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray40 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory38.addConnectorCustomizers(tomcatConnectorCustomizerArray40);
        tomcatEmbeddedServletContainerFactory25.addConnectorCustomizers(tomcatConnectorCustomizerArray40);
        tomcatEmbeddedServletContainerFactory16.addConnectorCustomizers(tomcatConnectorCustomizerArray40);
        tomcatEmbeddedServletContainerFactory6.addConnectorCustomizers(tomcatConnectorCustomizerArray40);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray40);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(valveList19);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection20);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertNotNull(connectorList24);
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray40);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader5 = tomcatEmbeddedServletContainerFactory3.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory3.addErrorPages(errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList17;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection24 = tomcatEmbeddedServletContainerFactory19.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList25 = tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory9.tomcatContextCustomizers = tomcatContextCustomizerList25;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str28 = storeMergedWebXmlListener27.getEmptyWebXml();
        java.lang.String str29 = storeMergedWebXmlListener27.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str31 = storeMergedWebXmlListener30.getMERGED_WEB_XML();
        java.lang.String str32 = storeMergedWebXmlListener30.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray33 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener27, storeMergedWebXmlListener30 };
        tomcatEmbeddedServletContainerFactory9.addContextLifecycleListeners(lifecycleListenerArray33);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray33);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList39 = tomcatEmbeddedServletContainerFactory38.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory36.tomcatConnectorCustomizers = tomcatConnectorCustomizerList39;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList39;
        org.springframework.core.io.ResourceLoader resourceLoader42 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader42;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory44.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList51 = tomcatEmbeddedServletContainerFactory49.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList52 = tomcatEmbeddedServletContainerFactory49.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory44.additionalTomcatConnectors = connectorList52;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str55 = tomcatEmbeddedServletContainerFactory54.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray56 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory54.addInitializers(servletContextInitializerArray56);
        tomcatEmbeddedServletContainerFactory54.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray60 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory54.addContextLifecycleListeners(lifecycleListenerArray60);
        tomcatEmbeddedServletContainerFactory44.addContextLifecycleListeners(lifecycleListenerArray60);
        org.apache.catalina.Context context63 = null;
        tomcatEmbeddedServletContainerFactory44.postProcessContext(context63);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList65 = tomcatEmbeddedServletContainerFactory44.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList65);
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.apache.catalina.Context context69 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNull(resourceLoader5);
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection24);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str28, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str29, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str31, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str32, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray33);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList39);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNotNull(connectorList51);
        org.junit.Assert.assertNotNull(connectorList52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "UTF-8" + "'", str55, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray56);
        org.junit.Assert.assertNotNull(lifecycleListenerArray60);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList65);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(0);
        org.apache.catalina.Context context2 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList10 = tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory3.additionalTomcatConnectors = connectorList10;
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory3.protocol;
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory3.protocol;
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection16 = tomcatEmbeddedServletContainerFactory3.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList17 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory3.tldSkip = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory22.protocol;
        int int28 = tomcatEmbeddedServletContainerFactory22.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList32 = tomcatEmbeddedServletContainerFactory31.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers = tomcatConnectorCustomizerList32;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection34 = tomcatEmbeddedServletContainerFactory29.getContextLifecycleListeners();
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory29.uriEncoding;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory29.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory37.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray39 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray39);
        tomcatEmbeddedServletContainerFactory29.addInitializers(servletContextInitializerArray39);
        tomcatEmbeddedServletContainerFactory22.addInitializers(servletContextInitializerArray39);
        tomcatEmbeddedServletContainerFactory21.addInitializers(servletContextInitializerArray39);
        tomcatEmbeddedServletContainerFactory3.addInitializers(servletContextInitializerArray39);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.configureContext(context2, servletContextInitializerArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(connectorList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection16);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList17);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList32);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-8" + "'", str35, "UTF-8");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-8" + "'", str36, "UTF-8");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-8" + "'", str38, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray39);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory10.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        boolean boolean28 = tomcatEmbeddedServletContainerFactory22.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress29 = null;
        tomcatEmbeddedServletContainerFactory22.setAddress(inetAddress29);
        java.util.List<org.apache.catalina.Valve> valveList31 = tomcatEmbeddedServletContainerFactory22.contextValves;
        int int32 = tomcatEmbeddedServletContainerFactory22.getSessionTimeout();
        org.apache.catalina.Context context33 = null;
        tomcatEmbeddedServletContainerFactory22.postProcessContext(context33);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList35 = tomcatEmbeddedServletContainerFactory22.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList35;
        org.apache.catalina.Context context37 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(valveList31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerList35);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader15 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.apache.catalina.Context context16 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNull(resourceLoader15);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress5 = tomcatEmbeddedServletContainerFactory0.getAddress();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        boolean boolean13 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors = connectorList21;
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory14.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        tomcatEmbeddedServletContainerFactory14.setMimeMappings(mimeMappings27);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers;
        int int31 = tomcatEmbeddedServletContainerFactory29.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray32 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory29.addContextLifecycleListeners(lifecycleListenerArray32);
        tomcatEmbeddedServletContainerFactory14.addContextLifecycleListeners(lifecycleListenerArray32);
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray32);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray32);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection37 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.core.io.ResourceLoader resourceLoader38 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.net.InetAddress inetAddress39 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress39);
        org.apache.catalina.startup.Tomcat tomcat41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer42 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNull(inetAddress5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray32);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection37);
        org.junit.Assert.assertNull(resourceLoader38);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader14 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        int int16 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection17 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        java.io.File file23 = tomcatEmbeddedServletContainerFactory18.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection29 = tomcatEmbeddedServletContainerFactory24.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory24.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector32 = null;
        org.apache.catalina.connector.Connector[] connectorArray33 = new org.apache.catalina.connector.Connector[] { connector32 };
        tomcatEmbeddedServletContainerFactory24.addAdditionalTomcatConnectors(connectorArray33);
        tomcatEmbeddedServletContainerFactory18.addAdditionalTomcatConnectors(connectorArray33);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection36 = tomcatEmbeddedServletContainerFactory18.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList37 = null;
        tomcatEmbeddedServletContainerFactory18.tomcatContextCustomizers = tomcatContextCustomizerList37;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory39.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        tomcatEmbeddedServletContainerFactory39.setTldSkip("");
        int int45 = tomcatEmbeddedServletContainerFactory39.getSessionTimeout();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection46 = tomcatEmbeddedServletContainerFactory39.getContextLifecycleListeners();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection47 = tomcatEmbeddedServletContainerFactory39.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory48.getUriEncoding();
        int int50 = tomcatEmbeddedServletContainerFactory48.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = tomcatEmbeddedServletContainerFactory48.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader55 = null;
        tomcatEmbeddedServletContainerFactory54.setResourceLoader(resourceLoader55);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet57 = tomcatEmbeddedServletContainerFactory54.getErrorPages();
        tomcatEmbeddedServletContainerFactory48.setErrorPages(errorPageSet57);
        tomcatEmbeddedServletContainerFactory39.setErrorPages(errorPageSet57);
        tomcatEmbeddedServletContainerFactory18.setErrorPages(errorPageSet57);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet57);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str15, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection17);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection29);
        org.junit.Assert.assertNotNull(connectorArray33);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection36);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection46);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-8" + "'", str49, "UTF-8");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 8080 + "'", int50 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertNotNull(errorPageSet57);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList2 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str3, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray5 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList6 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList6, lifecycleListenerArray5);
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList6;
        java.io.File file10 = tomcatEmbeddedServletContainerFactory0.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList15 = tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection16 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory13.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        tomcatEmbeddedServletContainerFactory18.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader26 = tomcatEmbeddedServletContainerFactory24.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection32 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList33 = tomcatEmbeddedServletContainerFactory27.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory24.tomcatContextCustomizers = tomcatContextCustomizerList33;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList35 = tomcatEmbeddedServletContainerFactory24.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = tomcatEmbeddedServletContainerFactory41.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList43 = tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList43;
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory36.protocol;
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory36.protocol;
        tomcatEmbeddedServletContainerFactory36.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection49 = tomcatEmbeddedServletContainerFactory36.getTomcatContextCustomizers();
        int int50 = tomcatEmbeddedServletContainerFactory36.getPort();
        java.io.File file52 = tomcatEmbeddedServletContainerFactory36.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory24.baseDirectory = file52;
        org.apache.catalina.Valve[] valveArray54 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory24.addContextValves(valveArray54);
        tomcatEmbeddedServletContainerFactory18.addContextValves(valveArray54);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList58 = tomcatEmbeddedServletContainerFactory57.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection59 = tomcatEmbeddedServletContainerFactory57.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = tomcatEmbeddedServletContainerFactory60.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader62 = tomcatEmbeddedServletContainerFactory60.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray63 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory60.addErrorPages(errorPageArray63);
        tomcatEmbeddedServletContainerFactory57.addErrorPages(errorPageArray63);
        tomcatEmbeddedServletContainerFactory18.addErrorPages(errorPageArray63);
        tomcatEmbeddedServletContainerFactory13.addErrorPages(errorPageArray63);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet68 = tomcatEmbeddedServletContainerFactory13.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet68);
        java.net.InetAddress inetAddress70 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory71.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory71.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings77 = tomcatEmbeddedServletContainerFactory76.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList78 = tomcatEmbeddedServletContainerFactory76.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory71.additionalTomcatConnectors = connectorList78;
        java.lang.String str80 = tomcatEmbeddedServletContainerFactory71.protocol;
        java.lang.String str81 = tomcatEmbeddedServletContainerFactory71.protocol;
        java.io.File file82 = tomcatEmbeddedServletContainerFactory71.baseDirectory;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings83 = tomcatEmbeddedServletContainerFactory71.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings83);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList85 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNotNull(lifecycleListenerArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(file10);
        org.junit.Assert.assertEquals(file10.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file10.toString(), "/tmp/web-app>\n.6224386099435380788.0");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection16);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNull(resourceLoader26);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection32);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList33);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList35);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(connectorList43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(file52);
        org.junit.Assert.assertEquals(file52.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file52.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.8154403351007107373.0");
        org.junit.Assert.assertNotNull(valveArray54);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList58);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection59);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNull(resourceLoader62);
        org.junit.Assert.assertNotNull(errorPageArray63);
        org.junit.Assert.assertNotNull(errorPageSet68);
        org.junit.Assert.assertNull(inetAddress70);
        org.junit.Assert.assertNotNull(mimeMappings77);
        org.junit.Assert.assertNotNull(connectorList78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNull(file82);
        org.junit.Assert.assertNotNull(mimeMappings83);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList85);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList9 = tomcatEmbeddedServletContainerFactory8.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList9;
        org.apache.catalina.Context context11 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context11);
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        java.io.File file16 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.apache.catalina.connector.Connector connector17 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader14);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.apache.catalina.Context context18 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context18);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str17, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray19);
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray23 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory17.addContextLifecycleListeners(lifecycleListenerArray23);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray23);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 1);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection30 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection35 = tomcatEmbeddedServletContainerFactory31.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader36 = tomcatEmbeddedServletContainerFactory31.resourceLoader;
        tomcatEmbeddedServletContainerFactory31.setTldSkip("hi!");
        java.io.File file40 = tomcatEmbeddedServletContainerFactory31.createTempDir("hi!");
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file40);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(lifecycleListenerArray23);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection30);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(valveCollection35);
        org.junit.Assert.assertNull(resourceLoader36);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file40.toString(), "/tmp/hi!.2326479858537639292.0");
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer9 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray10 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer9 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray10);
        java.util.Collection<org.apache.catalina.Valve> valveCollection12 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(100);
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray10);
        org.junit.Assert.assertNotNull(valveCollection12);
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        org.springframework.core.io.ResourceLoader resourceLoader13 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.net.InetAddress inetAddress14 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress14);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        tomcatEmbeddedServletContainerFactory16.setProtocol("UTF-8");
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory16.protocol;
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList26 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList29 = tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory27.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection32 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList40 = tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors = connectorList40;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory33.protocol;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory33.protocol;
        java.net.InetAddress inetAddress44 = null;
        tomcatEmbeddedServletContainerFactory33.setAddress(inetAddress44);
        java.io.File file46 = null;
        tomcatEmbeddedServletContainerFactory33.setBaseDirectory(file46);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray48 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory33.addContextCustomizers(tomcatContextCustomizerArray48);
        tomcatEmbeddedServletContainerFactory27.addContextCustomizers(tomcatContextCustomizerArray48);
        tomcatEmbeddedServletContainerFactory16.addContextCustomizers(tomcatContextCustomizerArray48);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray48);
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet25);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList26);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(connectorList29);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection32);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(connectorList40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray48);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str53, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory2.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors = connectorList15;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory8.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList25 = tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors = connectorList26;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory28.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray30 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory28.addInitializers(servletContextInitializerArray30);
        tomcatEmbeddedServletContainerFactory28.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray34 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory28.addContextLifecycleListeners(lifecycleListenerArray34);
        tomcatEmbeddedServletContainerFactory18.addContextLifecycleListeners(lifecycleListenerArray34);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList37 = tomcatEmbeddedServletContainerFactory18.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory18.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = tomcatEmbeddedServletContainerFactory40.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader42 = tomcatEmbeddedServletContainerFactory40.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory43.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection48 = tomcatEmbeddedServletContainerFactory43.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList49 = tomcatEmbeddedServletContainerFactory43.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory40.tomcatContextCustomizers = tomcatContextCustomizerList49;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList51 = tomcatEmbeddedServletContainerFactory40.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory52.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = tomcatEmbeddedServletContainerFactory57.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList59 = tomcatEmbeddedServletContainerFactory57.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory52.additionalTomcatConnectors = connectorList59;
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory52.protocol;
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory52.protocol;
        java.net.InetAddress inetAddress63 = null;
        tomcatEmbeddedServletContainerFactory52.setAddress(inetAddress63);
        int int65 = tomcatEmbeddedServletContainerFactory52.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings67 = tomcatEmbeddedServletContainerFactory66.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList69 = tomcatEmbeddedServletContainerFactory68.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory66.tomcatConnectorCustomizers = tomcatConnectorCustomizerList69;
        tomcatEmbeddedServletContainerFactory52.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList69);
        tomcatEmbeddedServletContainerFactory40.tomcatConnectorCustomizers = tomcatConnectorCustomizerList69;
        tomcatEmbeddedServletContainerFactory18.tomcatConnectorCustomizers = tomcatConnectorCustomizerList69;
        tomcatEmbeddedServletContainerFactory8.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList69);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet75 = tomcatEmbeddedServletContainerFactory8.getErrorPages();
        tomcatEmbeddedServletContainerFactory2.setErrorPages(errorPageSet75);
        org.springframework.core.io.ResourceLoader resourceLoader77 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader77);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(connectorList25);
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-8" + "'", str29, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray30);
        org.junit.Assert.assertNotNull(lifecycleListenerArray34);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList37);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertNull(resourceLoader42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection48);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList49);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList51);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(connectorList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(mimeMappings67);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList69);
        org.junit.Assert.assertNotNull(errorPageSet75);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection15 = tomcatEmbeddedServletContainerFactory10.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList16;
        boolean boolean18 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.io.File file19 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        org.apache.catalina.Context context22 = null;
        tomcatEmbeddedServletContainerFactory20.postProcessContext(context22);
        tomcatEmbeddedServletContainerFactory20.setTldSkip("org.apache.tomcat.util.scan.MergedWebXml");
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory20.getContextPath();
        java.util.List<org.apache.catalina.Valve> valveList27 = tomcatEmbeddedServletContainerFactory20.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList27;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection15);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(valveList27);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.apache.catalina.Context context10 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList12 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.coyote.http11.Http11NioProtocol");
        org.apache.catalina.startup.Tomcat tomcat15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer16 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(connectorList12);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList10 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray11 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12, tomcatContextCustomizerArray11);
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList12;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList20 = tomcatEmbeddedServletContainerFactory15.contextLifecycleListeners;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = tomcatEmbeddedServletContainerFactory15.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet21);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int28 = tomcatEmbeddedServletContainerFactory27.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setProtocol("hi!");
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory29.protocol;
        tomcatEmbeddedServletContainerFactory29.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory37.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection42 = tomcatEmbeddedServletContainerFactory37.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList43 = tomcatEmbeddedServletContainerFactory37.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory29.tomcatContextCustomizers = tomcatContextCustomizerList43;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList45 = tomcatEmbeddedServletContainerFactory29.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory27.tomcatContextCustomizers = tomcatContextCustomizerList45;
        java.net.InetAddress inetAddress47 = tomcatEmbeddedServletContainerFactory27.getAddress();
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory27.getUriEncoding();
        org.springframework.core.io.ResourceLoader resourceLoader49 = tomcatEmbeddedServletContainerFactory27.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str51 = tomcatEmbeddedServletContainerFactory50.getUriEncoding();
        int int52 = tomcatEmbeddedServletContainerFactory50.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings53 = tomcatEmbeddedServletContainerFactory50.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader54 = null;
        tomcatEmbeddedServletContainerFactory50.resourceLoader = resourceLoader54;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory56.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory56.setTldSkip("UTF-8");
        java.io.File file62 = tomcatEmbeddedServletContainerFactory56.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory50.setBaseDirectory(file62);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = tomcatEmbeddedServletContainerFactory64.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList67 = tomcatEmbeddedServletContainerFactory66.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory64.tomcatConnectorCustomizers = tomcatConnectorCustomizerList67;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList70 = tomcatEmbeddedServletContainerFactory69.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection71 = tomcatEmbeddedServletContainerFactory69.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings73 = tomcatEmbeddedServletContainerFactory72.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader74 = tomcatEmbeddedServletContainerFactory72.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray75 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory72.addErrorPages(errorPageArray75);
        tomcatEmbeddedServletContainerFactory69.addErrorPages(errorPageArray75);
        tomcatEmbeddedServletContainerFactory64.addErrorPages(errorPageArray75);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory79 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory79.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory79.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection84 = tomcatEmbeddedServletContainerFactory79.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory79.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection87 = tomcatEmbeddedServletContainerFactory79.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector88 = null;
        org.apache.catalina.connector.Connector[] connectorArray89 = new org.apache.catalina.connector.Connector[] { connector88 };
        tomcatEmbeddedServletContainerFactory79.addAdditionalTomcatConnectors(connectorArray89);
        tomcatEmbeddedServletContainerFactory64.addAdditionalTomcatConnectors(connectorArray89);
        tomcatEmbeddedServletContainerFactory50.addAdditionalTomcatConnectors(connectorArray89);
        tomcatEmbeddedServletContainerFactory27.addAdditionalTomcatConnectors(connectorArray89);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray89);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList10);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(lifecycleListenerList20);
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection42);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList43);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList45);
        org.junit.Assert.assertNull(inetAddress47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-8" + "'", str48, "UTF-8");
        org.junit.Assert.assertNull(resourceLoader49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "UTF-8" + "'", str51, "UTF-8");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 8080 + "'", int52 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings53);
        org.junit.Assert.assertNotNull(file62);
        org.junit.Assert.assertEquals(file62.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file62.toString(), "/tmp/UTF-8.528422092951297182.0");
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList67);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList70);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection71);
        org.junit.Assert.assertNotNull(mimeMappings73);
        org.junit.Assert.assertNull(resourceLoader74);
        org.junit.Assert.assertNotNull(errorPageArray75);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection84);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection87);
        org.junit.Assert.assertNotNull(connectorArray89);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.io.File file10 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory11.getValves();
        java.net.InetAddress inetAddress16 = tomcatEmbeddedServletContainerFactory11.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean18 = tomcatEmbeddedServletContainerFactory17.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList19 = tomcatEmbeddedServletContainerFactory17.contextValves;
        tomcatEmbeddedServletContainerFactory11.contextValves = valveList19;
        tomcatEmbeddedServletContainerFactory11.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings23);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNull(inetAddress16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(valveList19);
        org.junit.Assert.assertNotNull(mimeMappings23);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader7 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.net.InetAddress inetAddress8 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress8);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setSessionTimeout((int) (short) 100);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList19 = tomcatEmbeddedServletContainerFactory10.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory20.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList27 = tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors = connectorList27;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory20.protocol;
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory20.protocol;
        tomcatEmbeddedServletContainerFactory20.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection33 = tomcatEmbeddedServletContainerFactory20.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList34 = tomcatEmbeddedServletContainerFactory20.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList34;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList34;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory37.setProtocol("hi!");
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory37.protocol;
        tomcatEmbeddedServletContainerFactory37.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory45.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory45.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection50 = tomcatEmbeddedServletContainerFactory45.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList51 = tomcatEmbeddedServletContainerFactory45.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory37.tomcatContextCustomizers = tomcatContextCustomizerList51;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList53 = tomcatEmbeddedServletContainerFactory37.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory55.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory58.getUriEncoding();
        int int60 = tomcatEmbeddedServletContainerFactory58.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = tomcatEmbeddedServletContainerFactory58.getMimeMappings();
        tomcatEmbeddedServletContainerFactory55.setMimeMappings(mimeMappings61);
        tomcatEmbeddedServletContainerFactory37.setMimeMappings(mimeMappings61);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList64 = tomcatEmbeddedServletContainerFactory37.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList64);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList19);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNotNull(connectorList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection33);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList34);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection50);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList51);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList53);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "UTF-8" + "'", str59, "UTF-8");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 8080 + "'", int60 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList64);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.apache.catalina.Context context13 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context13);
        org.springframework.core.io.ResourceLoader resourceLoader15 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        boolean boolean16 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList18 = tomcatEmbeddedServletContainerFactory17.tomcatConnectorCustomizers;
        int int19 = tomcatEmbeddedServletContainerFactory17.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray20 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory17.addContextLifecycleListeners(lifecycleListenerArray20);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray20);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray20);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList2 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.net.InetAddress inetAddress3 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress3);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList2);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors = connectorList16;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory18.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray20 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray20);
        tomcatEmbeddedServletContainerFactory18.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray24 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory18.addContextLifecycleListeners(lifecycleListenerArray24);
        tomcatEmbeddedServletContainerFactory8.addContextLifecycleListeners(lifecycleListenerArray24);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList27 = tomcatEmbeddedServletContainerFactory8.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList27;
        java.util.Collection<org.apache.catalina.Valve> valveCollection29 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean32 = tomcatEmbeddedServletContainerFactory31.isRegisterDefaultServlet();
        org.apache.catalina.Context context33 = null;
        tomcatEmbeddedServletContainerFactory31.postProcessContext(context33);
        java.io.File file36 = tomcatEmbeddedServletContainerFactory31.createTempDir("hi!");
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file36);
        java.io.File file38 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray20);
        org.junit.Assert.assertNotNull(lifecycleListenerArray24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList27);
        org.junit.Assert.assertNotNull(valveCollection29);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(file36);
        org.junit.Assert.assertEquals(file36.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file36.toString(), "/tmp/hi!.5241492888370205442.8080");
        org.junit.Assert.assertNull(file38);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str5 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.Context context6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory10.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList12 = tomcatEmbeddedServletContainerFactory10.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList12;
        tomcatEmbeddedServletContainerFactory0.tldSkip = "";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList23 = tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors = connectorList23;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory16.protocol;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory16.protocol;
        java.net.InetAddress inetAddress27 = null;
        tomcatEmbeddedServletContainerFactory16.setAddress(inetAddress27);
        int int29 = tomcatEmbeddedServletContainerFactory16.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader30 = tomcatEmbeddedServletContainerFactory16.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory31.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection36 = tomcatEmbeddedServletContainerFactory31.getTomcatConnectorCustomizers();
        boolean boolean37 = tomcatEmbeddedServletContainerFactory31.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress38 = null;
        tomcatEmbeddedServletContainerFactory31.setAddress(inetAddress38);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray40 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory31.addContextCustomizers(tomcatContextCustomizerArray40);
        tomcatEmbeddedServletContainerFactory16.addContextCustomizers(tomcatContextCustomizerArray40);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray40);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valveList12);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(connectorList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(resourceLoader30);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray40);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList14 = tomcatEmbeddedServletContainerFactory9.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList14;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str17 = storeMergedWebXmlListener16.getMERGED_WEB_XML();
        java.lang.String str18 = storeMergedWebXmlListener16.MERGED_WEB_XML;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str20 = storeMergedWebXmlListener19.getEmptyWebXml();
        java.lang.String str21 = storeMergedWebXmlListener19.getEmptyWebXml();
        java.lang.String str22 = storeMergedWebXmlListener19.MERGED_WEB_XML;
        java.lang.String str23 = storeMergedWebXmlListener19.getMERGED_WEB_XML();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str25 = storeMergedWebXmlListener24.getMERGED_WEB_XML();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str27 = storeMergedWebXmlListener26.getEmptyWebXml();
        java.lang.String str28 = storeMergedWebXmlListener26.getEmptyWebXml();
        java.lang.String str29 = storeMergedWebXmlListener26.MERGED_WEB_XML;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray30 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener16, storeMergedWebXmlListener19, storeMergedWebXmlListener24, storeMergedWebXmlListener26 };
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray30);
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(lifecycleListenerList14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str17, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str18, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str20, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str21, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str22, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str23, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str25, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str27, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str28, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str29, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertNotNull(lifecycleListenerArray30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(connectorList33);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet14 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(errorPageSet14);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        org.springframework.core.io.ResourceLoader resourceLoader13 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.net.InetAddress inetAddress14 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress14);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        tomcatEmbeddedServletContainerFactory16.setProtocol("UTF-8");
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory16.protocol;
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList26 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList29 = tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory27.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection32 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList40 = tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors = connectorList40;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory33.protocol;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory33.protocol;
        java.net.InetAddress inetAddress44 = null;
        tomcatEmbeddedServletContainerFactory33.setAddress(inetAddress44);
        java.io.File file46 = null;
        tomcatEmbeddedServletContainerFactory33.setBaseDirectory(file46);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray48 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory33.addContextCustomizers(tomcatContextCustomizerArray48);
        tomcatEmbeddedServletContainerFactory27.addContextCustomizers(tomcatContextCustomizerArray48);
        tomcatEmbeddedServletContainerFactory16.addContextCustomizers(tomcatContextCustomizerArray48);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray48);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet25);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList26);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(connectorList29);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection32);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(connectorList40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray48);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.io.File file3 = tomcatEmbeddedServletContainerFactory0.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        java.util.List<org.apache.catalina.connector.Connector> connectorList4 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader7 = tomcatEmbeddedServletContainerFactory5.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory5.tomcatContextCustomizers = tomcatContextCustomizerList14;
        tomcatEmbeddedServletContainerFactory5.uriEncoding = "UTF-8";
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        tomcatEmbeddedServletContainerFactory5.setResourceLoader(resourceLoader18);
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory5.tldSkip;
        tomcatEmbeddedServletContainerFactory5.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader25 = tomcatEmbeddedServletContainerFactory23.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection31 = tomcatEmbeddedServletContainerFactory26.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList32 = tomcatEmbeddedServletContainerFactory26.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory23.tomcatContextCustomizers = tomcatContextCustomizerList32;
        java.util.List<org.apache.catalina.Valve> valveList34 = tomcatEmbeddedServletContainerFactory23.contextValves;
        tomcatEmbeddedServletContainerFactory5.contextValves = valveList34;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList41 = tomcatEmbeddedServletContainerFactory36.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        tomcatEmbeddedServletContainerFactory36.setMimeMappings(mimeMappings45);
        org.apache.catalina.connector.Connector connector47 = null;
        org.apache.catalina.connector.Connector[] connectorArray48 = new org.apache.catalina.connector.Connector[] { connector47 };
        tomcatEmbeddedServletContainerFactory36.addAdditionalTomcatConnectors(connectorArray48);
        tomcatEmbeddedServletContainerFactory5.addAdditionalTomcatConnectors(connectorArray48);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray48);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(file3);
        org.junit.Assert.assertEquals(file3.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file3.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.5273688877976380464.8080");
        org.junit.Assert.assertNotNull(connectorList4);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNull(resourceLoader25);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection31);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList32);
        org.junit.Assert.assertNotNull(valveList34);
        org.junit.Assert.assertNotNull(lifecycleListenerList41);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNotNull(connectorArray48);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection2 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.io.File file6 = tomcatEmbeddedServletContainerFactory0.createTempDir("hi!");
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory8.setResourceLoader(resourceLoader13);
        java.io.File file16 = tomcatEmbeddedServletContainerFactory8.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file16;
        tomcatEmbeddedServletContainerFactory0.tldSkip = "UTF-8";
        org.springframework.core.io.ResourceLoader resourceLoader20 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader20);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(valveCollection2);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str4, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(file6);
        org.junit.Assert.assertEquals(file6.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file6.toString(), "/tmp/hi!.5041475910105401466.8080");
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file16.toString(), "/tmp/UTF-8.2726455000529700121.0");
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        org.apache.catalina.connector.Connector connector11 = null;
        org.apache.catalina.connector.Connector[] connectorArray12 = new org.apache.catalina.connector.Connector[] { connector11 };
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors = connectorList21;
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory14.protocol;
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory14.protocol;
        java.net.InetAddress inetAddress25 = null;
        tomcatEmbeddedServletContainerFactory14.setAddress(inetAddress25);
        int int27 = tomcatEmbeddedServletContainerFactory14.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader28 = tomcatEmbeddedServletContainerFactory14.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection34 = tomcatEmbeddedServletContainerFactory29.getTomcatConnectorCustomizers();
        boolean boolean35 = tomcatEmbeddedServletContainerFactory29.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress36 = null;
        tomcatEmbeddedServletContainerFactory29.setAddress(inetAddress36);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray38 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory29.addContextCustomizers(tomcatContextCustomizerArray38);
        tomcatEmbeddedServletContainerFactory14.addContextCustomizers(tomcatContextCustomizerArray38);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray38);
        org.apache.catalina.Context context42 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context42);
        boolean boolean44 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(connectorArray12);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray38);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray16 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray16);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList19 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.io.File file20 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        int int21 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        int int22 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.protocol = "";
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(lifecycleListenerArray16);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory1.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers;
        java.io.File file5 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        java.io.File file6 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        boolean boolean7 = tomcatEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory1.protocol = "UTF-8";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList17;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory10.protocol;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory10.protocol;
        java.net.InetAddress inetAddress21 = null;
        tomcatEmbeddedServletContainerFactory10.setAddress(inetAddress21);
        tomcatEmbeddedServletContainerFactory10.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray25 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList26 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList26, valveArray25);
        tomcatEmbeddedServletContainerFactory10.contextValves = valveList26;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader31 = tomcatEmbeddedServletContainerFactory29.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory32.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection37 = tomcatEmbeddedServletContainerFactory32.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList38 = tomcatEmbeddedServletContainerFactory32.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory29.tomcatContextCustomizers = tomcatContextCustomizerList38;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers;
        org.apache.catalina.Valve valve41 = null;
        org.apache.catalina.Valve[] valveArray42 = new org.apache.catalina.Valve[] { valve41 };
        tomcatEmbeddedServletContainerFactory29.addContextValves(valveArray42);
        tomcatEmbeddedServletContainerFactory10.addContextValves(valveArray42);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) 10);
        java.net.InetAddress inetAddress47 = tomcatEmbeddedServletContainerFactory46.getAddress();
        tomcatEmbeddedServletContainerFactory46.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList51 = tomcatEmbeddedServletContainerFactory50.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection52 = tomcatEmbeddedServletContainerFactory50.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList53 = tomcatEmbeddedServletContainerFactory50.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection54 = tomcatEmbeddedServletContainerFactory50.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList55 = tomcatEmbeddedServletContainerFactory50.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors = connectorList55;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList55;
        tomcatEmbeddedServletContainerFactory1.additionalTomcatConnectors = connectorList55;
        java.util.List<org.apache.catalina.Valve> valveList59 = tomcatEmbeddedServletContainerFactory1.contextValves;
        org.apache.catalina.startup.Tomcat tomcat60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer61 = tomcatEmbeddedServletContainerFactory1.getTomcatEmbeddedServletContainer(tomcat60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(valveArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNull(resourceLoader31);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection37);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertNotNull(valveArray42);
        org.junit.Assert.assertNull(inetAddress47);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList51);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection52);
        org.junit.Assert.assertNotNull(valveList53);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection54);
        org.junit.Assert.assertNotNull(connectorList55);
        org.junit.Assert.assertNotNull(valveList59);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory1.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory3.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers = tomcatConnectorCustomizerList4;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory1.getContextLifecycleListeners();
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory1.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory1.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray10 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setTldSkip("UTF-8");
        java.io.File file18 = tomcatEmbeddedServletContainerFactory12.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file18);
        int int20 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray10);
        org.junit.Assert.assertNotNull(file18);
        org.junit.Assert.assertEquals(file18.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file18.toString(), "/tmp/UTF-8.2635840639601975512.0");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8080 + "'", int20 == 8080);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str4 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str5 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str6 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        org.apache.catalina.Context context7 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str4, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str5, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str6, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory8.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer10 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer10 };
        tomcatEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray11);
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        java.net.InetAddress inetAddress17 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress17);
        tomcatEmbeddedServletContainerFactory0.protocol = "";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList24 = tomcatEmbeddedServletContainerFactory23.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory21.tomcatConnectorCustomizers = tomcatConnectorCustomizerList24;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection26 = tomcatEmbeddedServletContainerFactory21.getContextLifecycleListeners();
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory21.uriEncoding;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory21.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList36 = tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors = connectorList36;
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory29.protocol;
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory29.protocol;
        tomcatEmbeddedServletContainerFactory29.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection42 = tomcatEmbeddedServletContainerFactory29.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList43 = tomcatEmbeddedServletContainerFactory29.contextValves;
        tomcatEmbeddedServletContainerFactory21.contextValves = valveList43;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = tomcatEmbeddedServletContainerFactory45.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList48 = tomcatEmbeddedServletContainerFactory47.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory45.tomcatConnectorCustomizers = tomcatConnectorCustomizerList48;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet50 = tomcatEmbeddedServletContainerFactory45.getErrorPages();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList51 = tomcatEmbeddedServletContainerFactory45.contextLifecycleListeners;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = tomcatEmbeddedServletContainerFactory45.getMimeMappings();
        tomcatEmbeddedServletContainerFactory21.setMimeMappings(mimeMappings52);
        int int54 = tomcatEmbeddedServletContainerFactory21.getSessionTimeout();
        java.net.InetAddress inetAddress55 = tomcatEmbeddedServletContainerFactory21.getAddress();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings56);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList58 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList24);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UTF-8" + "'", str28, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNotNull(connectorList36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection42);
        org.junit.Assert.assertNotNull(valveList43);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList48);
        org.junit.Assert.assertNotNull(errorPageSet50);
        org.junit.Assert.assertNotNull(lifecycleListenerList51);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(inetAddress55);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList58);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        java.io.File file4 = tomcatEmbeddedServletContainerFactory2.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList5 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList5);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory9.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray11 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory9.addConnectorCustomizers(tomcatConnectorCustomizerArray11);
        java.net.InetAddress inetAddress13 = tomcatEmbeddedServletContainerFactory9.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory14.setProtocol("UTF-8");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory14.protocol;
        tomcatEmbeddedServletContainerFactory14.setTldSkip("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        tomcatEmbeddedServletContainerFactory9.setErrorPages(errorPageSet23);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet23);
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory30.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory35.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory35.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory30.additionalTomcatConnectors = connectorList37;
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory30.protocol;
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory30.protocol;
        java.net.InetAddress inetAddress41 = null;
        tomcatEmbeddedServletContainerFactory30.setAddress(inetAddress41);
        org.springframework.core.io.ResourceLoader resourceLoader43 = tomcatEmbeddedServletContainerFactory30.resourceLoader;
        java.io.File file45 = tomcatEmbeddedServletContainerFactory30.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file45);
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory48.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList55 = tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList56 = tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors = connectorList56;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory58.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray60 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory58.addInitializers(servletContextInitializerArray60);
        tomcatEmbeddedServletContainerFactory58.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray64 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory58.addContextLifecycleListeners(lifecycleListenerArray64);
        tomcatEmbeddedServletContainerFactory48.addContextLifecycleListeners(lifecycleListenerArray64);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList67 = tomcatEmbeddedServletContainerFactory48.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str69 = tomcatEmbeddedServletContainerFactory68.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray70 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory68.addInitializers(servletContextInitializerArray70);
        tomcatEmbeddedServletContainerFactory48.addInitializers(servletContextInitializerArray70);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory73.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings76 = tomcatEmbeddedServletContainerFactory73.getMimeMappings();
        tomcatEmbeddedServletContainerFactory73.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str82 = tomcatEmbeddedServletContainerFactory81.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer83 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray84 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer83 };
        tomcatEmbeddedServletContainerFactory81.addInitializers(servletContextInitializerArray84);
        tomcatEmbeddedServletContainerFactory73.addInitializers(servletContextInitializerArray84);
        tomcatEmbeddedServletContainerFactory48.addInitializers(servletContextInitializerArray84);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray84);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str1, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNull(file4);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray11);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNull(resourceLoader43);
        org.junit.Assert.assertNotNull(file45);
        org.junit.Assert.assertEquals(file45.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file45.toString(), "/tmp/web-app>\n.3702244482118049473.0");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str47, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(connectorList55);
        org.junit.Assert.assertNotNull(connectorList56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "UTF-8" + "'", str59, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray60);
        org.junit.Assert.assertNotNull(lifecycleListenerArray64);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "UTF-8" + "'", str69, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray70);
        org.junit.Assert.assertNotNull(mimeMappings76);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(servletContextInitializerArray84);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection3 = tomcatEmbeddedServletContainerFactory2.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList4 = tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners;
        java.util.List<org.apache.catalina.Valve> valveList5 = tomcatEmbeddedServletContainerFactory2.contextValves;
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors = connectorList15;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory8.protocol;
        org.apache.catalina.Context context18 = null;
        tomcatEmbeddedServletContainerFactory8.postProcessContext(context18);
        java.net.InetAddress inetAddress20 = tomcatEmbeddedServletContainerFactory8.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader21 = null;
        tomcatEmbeddedServletContainerFactory8.setResourceLoader(resourceLoader21);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        tomcatEmbeddedServletContainerFactory8.setMimeMappings(mimeMappings26);
        tomcatEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings26);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str30 = storeMergedWebXmlListener29.getEmptyWebXml();
        java.lang.String str31 = storeMergedWebXmlListener29.getEmptyWebXml();
        java.lang.String str32 = storeMergedWebXmlListener29.MERGED_WEB_XML;
        java.lang.String str33 = storeMergedWebXmlListener29.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str35 = storeMergedWebXmlListener34.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str37 = storeMergedWebXmlListener36.getEmptyWebXml();
        java.lang.String str38 = storeMergedWebXmlListener36.MERGED_WEB_XML;
        java.lang.String str39 = storeMergedWebXmlListener36.MERGED_WEB_XML;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str41 = storeMergedWebXmlListener40.getMERGED_WEB_XML();
        java.lang.String str42 = storeMergedWebXmlListener40.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str44 = storeMergedWebXmlListener43.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str46 = storeMergedWebXmlListener45.getEmptyWebXml();
        java.lang.String str47 = storeMergedWebXmlListener45.MERGED_WEB_XML;
        java.lang.String str48 = storeMergedWebXmlListener45.MERGED_WEB_XML;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str50 = storeMergedWebXmlListener49.getEmptyWebXml();
        java.lang.String str51 = storeMergedWebXmlListener49.getEmptyWebXml();
        java.lang.String str52 = storeMergedWebXmlListener49.MERGED_WEB_XML;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str54 = storeMergedWebXmlListener53.getEmptyWebXml();
        java.lang.String str55 = storeMergedWebXmlListener53.getEmptyWebXml();
        java.lang.String str56 = storeMergedWebXmlListener53.MERGED_WEB_XML;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str58 = storeMergedWebXmlListener57.getMERGED_WEB_XML();
        java.lang.String str59 = storeMergedWebXmlListener57.MERGED_WEB_XML;
        java.lang.String str60 = storeMergedWebXmlListener57.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str62 = storeMergedWebXmlListener61.getEmptyWebXml();
        java.lang.String str63 = storeMergedWebXmlListener61.MERGED_WEB_XML;
        java.lang.String str64 = storeMergedWebXmlListener61.MERGED_WEB_XML;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str67 = storeMergedWebXmlListener66.MERGED_WEB_XML;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str69 = storeMergedWebXmlListener68.getEmptyWebXml();
        java.lang.String str70 = storeMergedWebXmlListener68.getEmptyWebXml();
        java.lang.String str71 = storeMergedWebXmlListener68.MERGED_WEB_XML;
        java.lang.String str72 = storeMergedWebXmlListener68.getEmptyWebXml();
        java.lang.String str73 = storeMergedWebXmlListener68.getMERGED_WEB_XML();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener74 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str75 = storeMergedWebXmlListener74.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str77 = storeMergedWebXmlListener76.getEmptyWebXml();
        java.lang.String str78 = storeMergedWebXmlListener76.getEmptyWebXml();
        java.lang.String str79 = storeMergedWebXmlListener76.MERGED_WEB_XML;
        java.lang.String str80 = storeMergedWebXmlListener76.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener81 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str82 = storeMergedWebXmlListener81.getMERGED_WEB_XML();
        java.lang.String str83 = storeMergedWebXmlListener81.getMERGED_WEB_XML();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray84 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener29, storeMergedWebXmlListener34, storeMergedWebXmlListener36, storeMergedWebXmlListener40, storeMergedWebXmlListener43, storeMergedWebXmlListener45, storeMergedWebXmlListener49, storeMergedWebXmlListener53, storeMergedWebXmlListener57, storeMergedWebXmlListener61, storeMergedWebXmlListener65, storeMergedWebXmlListener66, storeMergedWebXmlListener68, storeMergedWebXmlListener74, storeMergedWebXmlListener76, storeMergedWebXmlListener81 };
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList85 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList85, lifecycleListenerArray84);
        tomcatEmbeddedServletContainerFactory2.contextLifecycleListeners = lifecycleListenerList85;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection88 = tomcatEmbeddedServletContainerFactory2.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory2.setProtocol("org.apache.coyote.http11.Http11NioProtocol");
        java.util.Collection<org.apache.catalina.Valve> valveCollection91 = tomcatEmbeddedServletContainerFactory2.getValves();
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection3);
        org.junit.Assert.assertNotNull(lifecycleListenerList4);
        org.junit.Assert.assertNotNull(valveList5);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(inetAddress20);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str30, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str31, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str32, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str33, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str35, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str37, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str38, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str39, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str41, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str42, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str44, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str46, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str47, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str48, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str50, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str51, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str52, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str54, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str55, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str56, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str58, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str59, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str60, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str62, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str63, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str64, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str67, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str69, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str70, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str71, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str72, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str73, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str75, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str77, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str78, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str79, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str80, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str82, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str83, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertNotNull(lifecycleListenerArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection88);
        org.junit.Assert.assertNotNull(valveCollection91);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.Context context4 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context4);
        java.util.Collection<org.apache.catalina.Valve> valveCollection6 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList10 = tomcatEmbeddedServletContainerFactory9.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory7.tomcatConnectorCustomizers = tomcatConnectorCustomizerList10;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection12 = tomcatEmbeddedServletContainerFactory7.getContextLifecycleListeners();
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory7.uriEncoding;
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection21 = tomcatEmbeddedServletContainerFactory16.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory16.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection24 = tomcatEmbeddedServletContainerFactory16.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector25 = null;
        org.apache.catalina.connector.Connector[] connectorArray26 = new org.apache.catalina.connector.Connector[] { connector25 };
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray26);
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray26);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray26);
        int int30 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory31.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList38 = tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors = connectorList38;
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory31.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = tomcatEmbeddedServletContainerFactory41.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader43 = tomcatEmbeddedServletContainerFactory41.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory44.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection49 = tomcatEmbeddedServletContainerFactory44.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList50 = tomcatEmbeddedServletContainerFactory44.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory41.tomcatContextCustomizers = tomcatContextCustomizerList50;
        tomcatEmbeddedServletContainerFactory31.tomcatContextCustomizers = tomcatContextCustomizerList50;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory53.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory53.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings59 = tomcatEmbeddedServletContainerFactory58.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList60 = tomcatEmbeddedServletContainerFactory58.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors = connectorList60;
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory53.protocol;
        java.lang.String str63 = tomcatEmbeddedServletContainerFactory53.protocol;
        java.net.InetAddress inetAddress64 = null;
        tomcatEmbeddedServletContainerFactory53.setAddress(inetAddress64);
        tomcatEmbeddedServletContainerFactory53.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray68 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList69 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList69, valveArray68);
        tomcatEmbeddedServletContainerFactory53.contextValves = valveList69;
        tomcatEmbeddedServletContainerFactory31.contextValves = valveList69;
        java.lang.String str73 = tomcatEmbeddedServletContainerFactory31.uriEncoding;
        java.io.File file75 = tomcatEmbeddedServletContainerFactory31.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file75);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory77.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory77.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings83 = tomcatEmbeddedServletContainerFactory82.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList84 = tomcatEmbeddedServletContainerFactory82.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory77.additionalTomcatConnectors = connectorList84;
        java.lang.String str86 = tomcatEmbeddedServletContainerFactory77.protocol;
        boolean boolean87 = tomcatEmbeddedServletContainerFactory77.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader88 = tomcatEmbeddedServletContainerFactory77.resourceLoader;
        java.util.List<org.apache.catalina.Valve> valveList89 = tomcatEmbeddedServletContainerFactory77.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory90 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory90.setPort((int) (short) 0);
        boolean boolean93 = tomcatEmbeddedServletContainerFactory90.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory90.setRegisterDefaultServlet(true);
        java.io.File file97 = tomcatEmbeddedServletContainerFactory90.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        tomcatEmbeddedServletContainerFactory77.setBaseDirectory(file97);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file97);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection6);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList10);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection24);
        org.junit.Assert.assertNotNull(connectorArray26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(connectorList38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNull(resourceLoader43);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection49);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList50);
        org.junit.Assert.assertNotNull(mimeMappings59);
        org.junit.Assert.assertNotNull(connectorList60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(valveArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "UTF-8" + "'", str73, "UTF-8");
        org.junit.Assert.assertNotNull(file75);
        org.junit.Assert.assertEquals(file75.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file75.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.5240796605612118647.0");
        org.junit.Assert.assertNotNull(mimeMappings83);
        org.junit.Assert.assertNotNull(connectorList84);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNull(resourceLoader88);
        org.junit.Assert.assertNotNull(valveList89);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(file97);
        org.junit.Assert.assertEquals(file97.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file97.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.3437847588355342987.0");
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList4 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.apache.catalina.Context context5 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        tomcatEmbeddedServletContainerFactory8.setResourceLoader(resourceLoader9);
        tomcatEmbeddedServletContainerFactory8.setContextPath("");
        boolean boolean13 = tomcatEmbeddedServletContainerFactory8.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader14 = tomcatEmbeddedServletContainerFactory8.resourceLoader;
        boolean boolean15 = tomcatEmbeddedServletContainerFactory8.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList19 = tomcatEmbeddedServletContainerFactory18.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers = tomcatConnectorCustomizerList19;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        java.net.InetAddress inetAddress22 = tomcatEmbeddedServletContainerFactory16.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList30 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors = connectorList30;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory23.protocol;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory23.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        tomcatEmbeddedServletContainerFactory23.setMimeMappings(mimeMappings38);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory40.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection44 = tomcatEmbeddedServletContainerFactory40.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray45 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList46 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList46, lifecycleListenerArray45);
        tomcatEmbeddedServletContainerFactory40.contextLifecycleListeners = lifecycleListenerList46;
        tomcatEmbeddedServletContainerFactory23.contextLifecycleListeners = lifecycleListenerList46;
        tomcatEmbeddedServletContainerFactory16.contextLifecycleListeners = lifecycleListenerList46;
        tomcatEmbeddedServletContainerFactory16.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList56 = tomcatEmbeddedServletContainerFactory55.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory53.tomcatConnectorCustomizers = tomcatConnectorCustomizerList56;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection58 = tomcatEmbeddedServletContainerFactory53.getContextLifecycleListeners();
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory53.uriEncoding;
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory53.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory61.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray63 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory61.addInitializers(servletContextInitializerArray63);
        tomcatEmbeddedServletContainerFactory53.addInitializers(servletContextInitializerArray63);
        tomcatEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray63);
        tomcatEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray63);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context5, servletContextInitializerArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(lifecycleListenerList4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList19);
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertNull(inetAddress22);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(connectorList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(valveCollection44);
        org.junit.Assert.assertNotNull(lifecycleListenerArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList56);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "UTF-8" + "'", str59, "UTF-8");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "UTF-8" + "'", str60, "UTF-8");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "UTF-8" + "'", str62, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray63);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory2.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray4 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory2.addConnectorCustomizers(tomcatConnectorCustomizerArray4);
        java.net.InetAddress inetAddress6 = tomcatEmbeddedServletContainerFactory2.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory7.setProtocol("UTF-8");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory7.protocol;
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = tomcatEmbeddedServletContainerFactory7.getErrorPages();
        tomcatEmbeddedServletContainerFactory2.setErrorPages(errorPageSet16);
        tomcatEmbeddedServletContainerFactory2.setPort((int) (byte) 100);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray4);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet16);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList8 = tomcatEmbeddedServletContainerFactory7.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory5.tomcatConnectorCustomizers = tomcatConnectorCustomizerList8;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection10 = tomcatEmbeddedServletContainerFactory5.getContextLifecycleListeners();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory5.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection17 = tomcatEmbeddedServletContainerFactory12.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory12.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector20 = null;
        org.apache.catalina.connector.Connector[] connectorArray21 = new org.apache.catalina.connector.Connector[] { connector20 };
        tomcatEmbeddedServletContainerFactory12.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory5.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray21);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList8);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection17);
        org.junit.Assert.assertNotNull(connectorArray21);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList23 = tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors = connectorList23;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory16.protocol;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory16.protocol;
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection29 = tomcatEmbeddedServletContainerFactory16.getTomcatContextCustomizers();
        int int30 = tomcatEmbeddedServletContainerFactory16.getPort();
        java.io.File file32 = tomcatEmbeddedServletContainerFactory16.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file32;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory34.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors = connectorList41;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory34.protocol;
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory34.protocol;
        java.net.InetAddress inetAddress45 = null;
        tomcatEmbeddedServletContainerFactory34.setAddress(inetAddress45);
        java.util.List<org.apache.catalina.connector.Connector> connectorList47 = tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory48.setTldSkip("UTF-8");
        java.io.File file54 = tomcatEmbeddedServletContainerFactory48.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory34.setDocumentRoot(file54);
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory58.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory58.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = tomcatEmbeddedServletContainerFactory63.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList65 = tomcatEmbeddedServletContainerFactory63.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory58.additionalTomcatConnectors = connectorList65;
        org.apache.catalina.Context context67 = null;
        tomcatEmbeddedServletContainerFactory58.postProcessContext(context67);
        java.net.InetAddress inetAddress69 = tomcatEmbeddedServletContainerFactory58.getAddress();
        tomcatEmbeddedServletContainerFactory58.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory72.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory72.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings78 = tomcatEmbeddedServletContainerFactory77.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList79 = tomcatEmbeddedServletContainerFactory77.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory72.additionalTomcatConnectors = connectorList79;
        org.apache.catalina.Context context81 = null;
        tomcatEmbeddedServletContainerFactory72.postProcessContext(context81);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory85 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str86 = tomcatEmbeddedServletContainerFactory85.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray87 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory85.addConnectorCustomizers(tomcatConnectorCustomizerArray87);
        tomcatEmbeddedServletContainerFactory72.addConnectorCustomizers(tomcatConnectorCustomizerArray87);
        tomcatEmbeddedServletContainerFactory58.addConnectorCustomizers(tomcatConnectorCustomizerArray87);
        tomcatEmbeddedServletContainerFactory34.addConnectorCustomizers(tomcatConnectorCustomizerArray87);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray87);
        tomcatEmbeddedServletContainerFactory0.protocol = "UTF-8";
        java.lang.String str95 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        java.lang.String str96 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.apache.catalina.connector.Connector connector97 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(connectorList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file32.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.6675476470098954827.0");
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(connectorList47);
        org.junit.Assert.assertNotNull(file54);
        org.junit.Assert.assertEquals(file54.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file54.toString(), "/tmp/UTF-8.3190093301442940427.0");
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNotNull(connectorList65);
        org.junit.Assert.assertNull(inetAddress69);
        org.junit.Assert.assertNotNull(mimeMappings78);
        org.junit.Assert.assertNotNull(connectorList79);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray87);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "UTF-8" + "'", str95, "UTF-8");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection2 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList6 = tomcatEmbeddedServletContainerFactory5.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory3.tomcatConnectorCustomizers = tomcatConnectorCustomizerList6;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection8 = tomcatEmbeddedServletContainerFactory3.getContextLifecycleListeners();
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory3.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList18;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray22);
        tomcatEmbeddedServletContainerFactory20.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray26 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory20.addContextLifecycleListeners(lifecycleListenerArray26);
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray26);
        tomcatEmbeddedServletContainerFactory3.addContextLifecycleListeners(lifecycleListenerArray26);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray30 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory3.addContextCustomizers(tomcatContextCustomizerArray30);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray30);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList36 = tomcatEmbeddedServletContainerFactory35.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory33.tomcatConnectorCustomizers = tomcatConnectorCustomizerList36;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection38 = tomcatEmbeddedServletContainerFactory33.getContextLifecycleListeners();
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory33.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList40 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.ErrorPage errorPage41 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray42 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage41 };
        tomcatEmbeddedServletContainerFactory33.addErrorPages(errorPageArray42);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray42);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection45 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.lang.Class<?> wildcardClass46 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(valveCollection2);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList6);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(lifecycleListenerArray26);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray30);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList36);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-8" + "'", str39, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList40);
        org.junit.Assert.assertNotNull(errorPageArray42);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray16 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray16);
        org.apache.catalina.Context context19 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context19);
        java.net.InetAddress inetAddress21 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.net.InetAddress inetAddress22 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress22);
        org.apache.catalina.connector.Connector connector24 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(lifecycleListenerArray16);
        org.junit.Assert.assertNull(inetAddress21);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory8.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer10 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer10 };
        tomcatEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray11);
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection17 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList21 = tomcatEmbeddedServletContainerFactory20.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory18.tomcatConnectorCustomizers = tomcatConnectorCustomizerList21;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList21;
        org.springframework.core.io.ResourceLoader resourceLoader24 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader24;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection26 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.apache.catalina.connector.Connector connector27 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection17);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList21);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection26);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        org.apache.catalina.Context context9 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context9);
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors = connectorList19;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory12.protocol;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory12.protocol;
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file29 = tomcatEmbeddedServletContainerFactory27.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory12.setBaseDirectory(file29);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file29);
        tomcatEmbeddedServletContainerFactory0.tldSkip = "org.apache.coyote.http11.Http11NioProtocol";
        boolean boolean34 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory35.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList38 = tomcatEmbeddedServletContainerFactory37.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory35.tomcatConnectorCustomizers = tomcatConnectorCustomizerList38;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet40 = tomcatEmbeddedServletContainerFactory35.getErrorPages();
        java.net.InetAddress inetAddress41 = tomcatEmbeddedServletContainerFactory35.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory42.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = tomcatEmbeddedServletContainerFactory47.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList49 = tomcatEmbeddedServletContainerFactory47.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory42.additionalTomcatConnectors = connectorList49;
        java.lang.String str51 = tomcatEmbeddedServletContainerFactory42.protocol;
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory42.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory53.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        tomcatEmbeddedServletContainerFactory42.setMimeMappings(mimeMappings57);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory59.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings62 = tomcatEmbeddedServletContainerFactory59.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection63 = tomcatEmbeddedServletContainerFactory59.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray64 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList65 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList65, lifecycleListenerArray64);
        tomcatEmbeddedServletContainerFactory59.contextLifecycleListeners = lifecycleListenerList65;
        tomcatEmbeddedServletContainerFactory42.contextLifecycleListeners = lifecycleListenerList65;
        tomcatEmbeddedServletContainerFactory35.contextLifecycleListeners = lifecycleListenerList65;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList65;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList71 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file29.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.5207672041176457595.100");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList38);
        org.junit.Assert.assertNotNull(errorPageSet40);
        org.junit.Assert.assertNull(inetAddress41);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNotNull(connectorList49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertNotNull(mimeMappings62);
        org.junit.Assert.assertNotNull(valveCollection63);
        org.junit.Assert.assertNotNull(lifecycleListenerArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(lifecycleListenerList71);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        boolean boolean7 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setTldSkip("UTF-8");
        java.io.File file14 = tomcatEmbeddedServletContainerFactory8.createTempDir("UTF-8");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList21 = tomcatEmbeddedServletContainerFactory16.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList22 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory8.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList22);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList22);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(file14);
        org.junit.Assert.assertEquals(file14.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file14.toString(), "/tmp/UTF-8.7065518968422586253.0");
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(lifecycleListenerList21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList22);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader9 = tomcatEmbeddedServletContainerFactory7.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection15 = tomcatEmbeddedServletContainerFactory10.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory7.tomcatContextCustomizers = tomcatContextCustomizerList16;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList16;
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.util.concurrent.TimeUnit timeUnit22 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(100, timeUnit22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNull(resourceLoader9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection15);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int2 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader4;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setTldSkip("UTF-8");
        java.io.File file12 = tomcatEmbeddedServletContainerFactory6.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers = tomcatConnectorCustomizerList17;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList20 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection21 = tomcatEmbeddedServletContainerFactory19.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader24 = tomcatEmbeddedServletContainerFactory22.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray25 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory22.addErrorPages(errorPageArray25);
        tomcatEmbeddedServletContainerFactory19.addErrorPages(errorPageArray25);
        tomcatEmbeddedServletContainerFactory14.addErrorPages(errorPageArray25);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection34 = tomcatEmbeddedServletContainerFactory29.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory29.setSessionTimeout((int) (byte) -1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection37 = tomcatEmbeddedServletContainerFactory29.getTomcatConnectorCustomizers();
        org.apache.catalina.connector.Connector connector38 = null;
        org.apache.catalina.connector.Connector[] connectorArray39 = new org.apache.catalina.connector.Connector[] { connector38 };
        tomcatEmbeddedServletContainerFactory29.addAdditionalTomcatConnectors(connectorArray39);
        tomcatEmbeddedServletContainerFactory14.addAdditionalTomcatConnectors(connectorArray39);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray39);
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8080 + "'", int2 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(file12);
        org.junit.Assert.assertEquals(file12.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file12.toString(), "/tmp/UTF-8.445574388147573761.0");
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList20);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection21);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertNotNull(errorPageArray25);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection34);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection37);
        org.junit.Assert.assertNotNull(connectorArray39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList11 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.apache.catalina.Valve valve12 = null;
        org.apache.catalina.Valve[] valveArray13 = new org.apache.catalina.Valve[] { valve12 };
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray13);
        org.springframework.core.io.ResourceLoader resourceLoader15 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.util.concurrent.TimeUnit timeUnit17 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1, timeUnit17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList11);
        org.junit.Assert.assertNotNull(valveArray13);
        org.junit.Assert.assertNull(resourceLoader15);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.io.File file6 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        java.util.Collection<org.apache.catalina.Valve> valveCollection8 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.util.List<org.apache.catalina.connector.Connector> connectorList9 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.io.File file11 = tomcatEmbeddedServletContainerFactory0.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertNotNull(valveCollection8);
        org.junit.Assert.assertNotNull(connectorList9);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file11.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.350899479298318137.0");
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection21 = tomcatEmbeddedServletContainerFactory17.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList23 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList23, lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory17.contextLifecycleListeners = lifecycleListenerList23;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList23;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection27 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors = connectorList35;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory28.protocol;
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory28.protocol;
        java.net.InetAddress inetAddress39 = null;
        tomcatEmbeddedServletContainerFactory28.setAddress(inetAddress39);
        tomcatEmbeddedServletContainerFactory28.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray43 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList44 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList44, valveArray43);
        tomcatEmbeddedServletContainerFactory28.contextValves = valveList44;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList44;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory48.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection53 = tomcatEmbeddedServletContainerFactory48.getTomcatConnectorCustomizers();
        java.io.File file54 = tomcatEmbeddedServletContainerFactory48.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory55.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = tomcatEmbeddedServletContainerFactory60.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList62 = tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors = connectorList62;
        java.lang.String str64 = tomcatEmbeddedServletContainerFactory55.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory65.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings68 = tomcatEmbeddedServletContainerFactory65.getMimeMappings();
        tomcatEmbeddedServletContainerFactory55.setMimeMappings(mimeMappings68);
        java.lang.String str70 = tomcatEmbeddedServletContainerFactory55.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory71.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory71.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings77 = tomcatEmbeddedServletContainerFactory76.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList78 = tomcatEmbeddedServletContainerFactory76.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory71.additionalTomcatConnectors = connectorList78;
        java.lang.String str80 = tomcatEmbeddedServletContainerFactory71.protocol;
        java.lang.String str81 = tomcatEmbeddedServletContainerFactory71.protocol;
        tomcatEmbeddedServletContainerFactory71.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection84 = tomcatEmbeddedServletContainerFactory71.getTomcatContextCustomizers();
        int int85 = tomcatEmbeddedServletContainerFactory71.getPort();
        java.io.File file87 = tomcatEmbeddedServletContainerFactory71.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory55.baseDirectory = file87;
        tomcatEmbeddedServletContainerFactory48.setBaseDirectory(file87);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file87;
        java.lang.String str91 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("org.apache.tomcat.util.scan.MergedWebXml");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(valveCollection21);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection27);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(valveArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection53);
        org.junit.Assert.assertNull(file54);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNotNull(connectorList62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(mimeMappings77);
        org.junit.Assert.assertNotNull(connectorList78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file87.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.1546017036971383420.0");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "UTF-8" + "'", str91, "UTF-8");
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory8.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        boolean boolean14 = tomcatEmbeddedServletContainerFactory8.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader17 = tomcatEmbeddedServletContainerFactory15.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection23 = tomcatEmbeddedServletContainerFactory18.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList24 = tomcatEmbeddedServletContainerFactory18.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory15.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory8.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList24;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory31.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList38 = tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors = connectorList38;
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory31.protocol;
        java.lang.String str41 = tomcatEmbeddedServletContainerFactory31.protocol;
        java.net.InetAddress inetAddress42 = null;
        tomcatEmbeddedServletContainerFactory31.setAddress(inetAddress42);
        org.springframework.core.io.ResourceLoader resourceLoader44 = tomcatEmbeddedServletContainerFactory31.resourceLoader;
        tomcatEmbeddedServletContainerFactory31.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory31.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory48.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList55 = tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors = connectorList55;
        java.lang.String str57 = tomcatEmbeddedServletContainerFactory48.protocol;
        java.lang.String str58 = tomcatEmbeddedServletContainerFactory48.protocol;
        tomcatEmbeddedServletContainerFactory48.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file65 = tomcatEmbeddedServletContainerFactory63.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory48.setBaseDirectory(file65);
        tomcatEmbeddedServletContainerFactory31.baseDirectory = file65;
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file65;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(resourceLoader17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection23);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList24);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(connectorList38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNull(resourceLoader44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(connectorList55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(file65);
        org.junit.Assert.assertEquals(file65.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file65.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.4703085629429370488.100");
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        boolean boolean13 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers = tomcatConnectorCustomizerList17;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        java.net.InetAddress inetAddress20 = tomcatEmbeddedServletContainerFactory14.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory14.resourceLoader;
        java.io.File file23 = tomcatEmbeddedServletContainerFactory14.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file23;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        org.apache.catalina.Context context27 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context27);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        tomcatEmbeddedServletContainerFactory0.setProtocol("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.apache.catalina.Context context34 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory35.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection40 = tomcatEmbeddedServletContainerFactory35.getTomcatConnectorCustomizers();
        boolean boolean41 = tomcatEmbeddedServletContainerFactory35.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress42 = null;
        tomcatEmbeddedServletContainerFactory35.setAddress(inetAddress42);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer44 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray45 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer44 };
        tomcatEmbeddedServletContainerFactory35.addConnectorCustomizers(tomcatConnectorCustomizerArray45);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection47 = tomcatEmbeddedServletContainerFactory35.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList48 = tomcatEmbeddedServletContainerFactory35.getAdditionalTomcatConnectors();
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory35.getDEFAULT_PROTOCOL();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList50 = tomcatEmbeddedServletContainerFactory35.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str54 = tomcatEmbeddedServletContainerFactory53.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer55 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray56 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer55 };
        tomcatEmbeddedServletContainerFactory53.addInitializers(servletContextInitializerArray56);
        tomcatEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray56);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context34, servletContextInitializerArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNull(inetAddress20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file23.toString(), "/tmp/web-app>\n.1024830616140373536.8080");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str31, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection47);
        org.junit.Assert.assertNotNull(connectorList48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str49, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(servletContextInitializerArray56);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        tomcatEmbeddedServletContainerFactory0.setPort(97);
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(connectorList5);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.apache.catalina.Context context10 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context10);
        int int12 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors = connectorList20;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory13.protocol;
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory13.protocol;
        tomcatEmbeddedServletContainerFactory13.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection26 = tomcatEmbeddedServletContainerFactory13.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList27 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory13.tldSkip = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n";
        boolean boolean30 = tomcatEmbeddedServletContainerFactory13.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory31.setTldSkip("UTF-8");
        java.io.File file37 = tomcatEmbeddedServletContainerFactory31.createTempDir("UTF-8");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory39.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory39.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList44 = tomcatEmbeddedServletContainerFactory39.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList45 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory31.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList45);
        tomcatEmbeddedServletContainerFactory13.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList45);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList45);
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(1);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection26);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file37.toString(), "/tmp/UTF-8.7277566300461833939.0");
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(lifecycleListenerList44);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-8" + "'", str49, "UTF-8");
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setTldSkip("UTF-8");
        java.io.File file20 = tomcatEmbeddedServletContainerFactory14.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file20);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList23 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.core.io.ResourceLoader resourceLoader24 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        tomcatEmbeddedServletContainerFactory0.tldSkip = "UTF-8";
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file20.toString(), "/tmp/UTF-8.2827710055633627174.0");
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertNotNull(lifecycleListenerList23);
        org.junit.Assert.assertNull(resourceLoader24);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray16 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors = connectorList26;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory19.protocol;
        java.net.InetAddress inetAddress30 = null;
        tomcatEmbeddedServletContainerFactory19.setAddress(inetAddress30);
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setTldSkip("UTF-8");
        java.io.File file39 = tomcatEmbeddedServletContainerFactory33.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory19.setDocumentRoot(file39);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file39);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray44);
        tomcatEmbeddedServletContainerFactory42.setUriEncoding("hi!");
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        tomcatEmbeddedServletContainerFactory42.setSessionTimeout((int) (short) 100);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList51 = tomcatEmbeddedServletContainerFactory42.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory52.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = tomcatEmbeddedServletContainerFactory57.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList59 = tomcatEmbeddedServletContainerFactory57.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory52.additionalTomcatConnectors = connectorList59;
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory52.protocol;
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory52.protocol;
        tomcatEmbeddedServletContainerFactory52.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection65 = tomcatEmbeddedServletContainerFactory52.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList66 = tomcatEmbeddedServletContainerFactory52.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory42.tomcatContextCustomizers = tomcatContextCustomizerList66;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList66;
        org.apache.catalina.startup.Tomcat tomcat69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer70 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(lifecycleListenerArray16);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/tmp/UTF-8.4574317734461474075.0");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList51);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(connectorList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection65);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList66);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList12 = tomcatEmbeddedServletContainerFactory7.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        tomcatEmbeddedServletContainerFactory7.setMimeMappings(mimeMappings16);
        org.apache.catalina.connector.Connector connector18 = null;
        org.apache.catalina.connector.Connector[] connectorArray19 = new org.apache.catalina.connector.Connector[] { connector18 };
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray19);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList22 = tomcatEmbeddedServletContainerFactory21.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection23 = tomcatEmbeddedServletContainerFactory21.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList24 = tomcatEmbeddedServletContainerFactory21.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection25 = tomcatEmbeddedServletContainerFactory21.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory7.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection25);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection25);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList30 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList30;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        tomcatEmbeddedServletContainerFactory32.setProtocol("UTF-8");
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory32.protocol;
        tomcatEmbeddedServletContainerFactory32.setTldSkip("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet41 = tomcatEmbeddedServletContainerFactory32.getErrorPages();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList42 = tomcatEmbeddedServletContainerFactory32.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList45 = tomcatEmbeddedServletContainerFactory43.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory43.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection48 = tomcatEmbeddedServletContainerFactory43.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory49.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory49.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = tomcatEmbeddedServletContainerFactory54.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList56 = tomcatEmbeddedServletContainerFactory54.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory49.additionalTomcatConnectors = connectorList56;
        java.lang.String str58 = tomcatEmbeddedServletContainerFactory49.protocol;
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory49.protocol;
        java.net.InetAddress inetAddress60 = null;
        tomcatEmbeddedServletContainerFactory49.setAddress(inetAddress60);
        java.io.File file62 = null;
        tomcatEmbeddedServletContainerFactory49.setBaseDirectory(file62);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray64 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory49.addContextCustomizers(tomcatContextCustomizerArray64);
        tomcatEmbeddedServletContainerFactory43.addContextCustomizers(tomcatContextCustomizerArray64);
        tomcatEmbeddedServletContainerFactory32.addContextCustomizers(tomcatContextCustomizerArray64);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray64);
        java.util.List<org.apache.catalina.connector.Connector> connectorList69 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings70 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerList12);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(connectorArray19);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection23);
        org.junit.Assert.assertNotNull(valveList24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection25);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(connectorList30);
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-8" + "'", str38, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet41);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList42);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNotNull(connectorList45);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection48);
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNotNull(connectorList56);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray64);
        org.junit.Assert.assertNotNull(connectorList69);
        org.junit.Assert.assertNotNull(mimeMappings70);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        tomcatEmbeddedServletContainerFactory2.setContextPath("");
        boolean boolean7 = tomcatEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader8 = tomcatEmbeddedServletContainerFactory2.resourceLoader;
        boolean boolean9 = tomcatEmbeddedServletContainerFactory2.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList13 = tomcatEmbeddedServletContainerFactory12.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatConnectorCustomizers = tomcatConnectorCustomizerList13;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet15 = tomcatEmbeddedServletContainerFactory10.getErrorPages();
        java.net.InetAddress inetAddress16 = tomcatEmbeddedServletContainerFactory10.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory17.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList24 = tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors = connectorList24;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory17.protocol;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory17.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        tomcatEmbeddedServletContainerFactory17.setMimeMappings(mimeMappings32);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection38 = tomcatEmbeddedServletContainerFactory34.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray39 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList40 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList40, lifecycleListenerArray39);
        tomcatEmbeddedServletContainerFactory34.contextLifecycleListeners = lifecycleListenerList40;
        tomcatEmbeddedServletContainerFactory17.contextLifecycleListeners = lifecycleListenerList40;
        tomcatEmbeddedServletContainerFactory10.contextLifecycleListeners = lifecycleListenerList40;
        tomcatEmbeddedServletContainerFactory10.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = tomcatEmbeddedServletContainerFactory47.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList50 = tomcatEmbeddedServletContainerFactory49.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory47.tomcatConnectorCustomizers = tomcatConnectorCustomizerList50;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection52 = tomcatEmbeddedServletContainerFactory47.getContextLifecycleListeners();
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory47.uriEncoding;
        java.lang.String str54 = tomcatEmbeddedServletContainerFactory47.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str56 = tomcatEmbeddedServletContainerFactory55.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray57 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory55.addInitializers(servletContextInitializerArray57);
        tomcatEmbeddedServletContainerFactory47.addInitializers(servletContextInitializerArray57);
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray57);
        tomcatEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray57);
        org.apache.catalina.startup.Tomcat tomcat62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer63 = tomcatEmbeddedServletContainerFactory2.getTomcatEmbeddedServletContainer(tomcat62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(resourceLoader8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList13);
        org.junit.Assert.assertNotNull(errorPageSet15);
        org.junit.Assert.assertNull(inetAddress16);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(connectorList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(valveCollection38);
        org.junit.Assert.assertNotNull(lifecycleListenerArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList50);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-8" + "'", str53, "UTF-8");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-8" + "'", str54, "UTF-8");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "UTF-8" + "'", str56, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray57);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        org.apache.catalina.Context context9 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context9);
        java.net.InetAddress inetAddress11 = tomcatEmbeddedServletContainerFactory0.getAddress();
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors = connectorList21;
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory14.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader26 = tomcatEmbeddedServletContainerFactory24.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection32 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList33 = tomcatEmbeddedServletContainerFactory27.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory24.tomcatContextCustomizers = tomcatContextCustomizerList33;
        tomcatEmbeddedServletContainerFactory14.tomcatContextCustomizers = tomcatContextCustomizerList33;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = tomcatEmbeddedServletContainerFactory41.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList43 = tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList43;
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory36.protocol;
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory36.protocol;
        java.net.InetAddress inetAddress47 = null;
        tomcatEmbeddedServletContainerFactory36.setAddress(inetAddress47);
        tomcatEmbeddedServletContainerFactory36.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray51 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList52 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList52, valveArray51);
        tomcatEmbeddedServletContainerFactory36.contextValves = valveList52;
        tomcatEmbeddedServletContainerFactory14.contextValves = valveList52;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList52;
        java.io.File file58 = tomcatEmbeddedServletContainerFactory0.createTempDir("UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNull(resourceLoader26);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection32);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList33);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertNotNull(connectorList43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(valveArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file58.toString(), "/tmp/UTF-8.8781840419898970596.0");
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList16;
        boolean boolean18 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory21.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection26 = tomcatEmbeddedServletContainerFactory21.getTomcatConnectorCustomizers();
        boolean boolean27 = tomcatEmbeddedServletContainerFactory21.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress28 = null;
        tomcatEmbeddedServletContainerFactory21.setAddress(inetAddress28);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray30 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory21.addContextCustomizers(tomcatContextCustomizerArray30);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList33 = tomcatEmbeddedServletContainerFactory32.tomcatConnectorCustomizers;
        int int34 = tomcatEmbeddedServletContainerFactory32.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray35 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory32.addContextLifecycleListeners(lifecycleListenerArray35);
        tomcatEmbeddedServletContainerFactory21.addContextLifecycleListeners(lifecycleListenerArray35);
        java.util.List<org.apache.catalina.connector.Connector> connectorList38 = tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList38;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory40.getMimeMappings();
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory40.getUriEncoding();
        org.apache.catalina.Valve valve45 = null;
        org.apache.catalina.Valve[] valveArray46 = new org.apache.catalina.Valve[] { valve45 };
        tomcatEmbeddedServletContainerFactory40.addContextValves(valveArray46);
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory40.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        tomcatEmbeddedServletContainerFactory49.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList55 = tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory53.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection58 = tomcatEmbeddedServletContainerFactory53.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory59.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory59.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = tomcatEmbeddedServletContainerFactory64.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList66 = tomcatEmbeddedServletContainerFactory64.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory59.additionalTomcatConnectors = connectorList66;
        java.lang.String str68 = tomcatEmbeddedServletContainerFactory59.protocol;
        java.lang.String str69 = tomcatEmbeddedServletContainerFactory59.protocol;
        java.net.InetAddress inetAddress70 = null;
        tomcatEmbeddedServletContainerFactory59.setAddress(inetAddress70);
        java.io.File file72 = null;
        tomcatEmbeddedServletContainerFactory59.setBaseDirectory(file72);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray74 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory59.addContextCustomizers(tomcatContextCustomizerArray74);
        tomcatEmbeddedServletContainerFactory53.addContextCustomizers(tomcatContextCustomizerArray74);
        tomcatEmbeddedServletContainerFactory49.addContextCustomizers(tomcatContextCustomizerArray74);
        tomcatEmbeddedServletContainerFactory40.addContextCustomizers(tomcatContextCustomizerArray74);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray74);
        org.apache.catalina.Context context80 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray30);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray35);
        org.junit.Assert.assertNotNull(connectorList38);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-8" + "'", str44, "UTF-8");
        org.junit.Assert.assertNotNull(valveArray46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(connectorList55);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection58);
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertNotNull(connectorList66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray74);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        org.apache.catalina.Context context9 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context9);
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors = connectorList19;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory12.protocol;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory12.protocol;
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file29 = tomcatEmbeddedServletContainerFactory27.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory12.setBaseDirectory(file29);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file29);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory34.getUriEncoding();
        int int36 = tomcatEmbeddedServletContainerFactory34.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader41 = null;
        tomcatEmbeddedServletContainerFactory40.setResourceLoader(resourceLoader41);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet43 = tomcatEmbeddedServletContainerFactory40.getErrorPages();
        tomcatEmbeddedServletContainerFactory34.setErrorPages(errorPageSet43);
        java.io.File file45 = tomcatEmbeddedServletContainerFactory34.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList47 = tomcatEmbeddedServletContainerFactory46.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection48 = tomcatEmbeddedServletContainerFactory46.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader51 = tomcatEmbeddedServletContainerFactory49.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray52 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory49.addErrorPages(errorPageArray52);
        tomcatEmbeddedServletContainerFactory46.addErrorPages(errorPageArray52);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory55.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = tomcatEmbeddedServletContainerFactory60.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList62 = tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList63 = tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors = connectorList63;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory65.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory65.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection70 = tomcatEmbeddedServletContainerFactory65.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList71 = tomcatEmbeddedServletContainerFactory65.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory55.tomcatContextCustomizers = tomcatContextCustomizerList71;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str74 = storeMergedWebXmlListener73.getEmptyWebXml();
        java.lang.String str75 = storeMergedWebXmlListener73.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str77 = storeMergedWebXmlListener76.getMERGED_WEB_XML();
        java.lang.String str78 = storeMergedWebXmlListener76.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray79 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener73, storeMergedWebXmlListener76 };
        tomcatEmbeddedServletContainerFactory55.addContextLifecycleListeners(lifecycleListenerArray79);
        tomcatEmbeddedServletContainerFactory46.addContextLifecycleListeners(lifecycleListenerArray79);
        tomcatEmbeddedServletContainerFactory34.addContextLifecycleListeners(lifecycleListenerArray79);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray79);
        boolean boolean84 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.io.File file85 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        int int86 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file29.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.7319333787169940912.100");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-8" + "'", str35, "UTF-8");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8080 + "'", int36 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(errorPageSet43);
        org.junit.Assert.assertNull(file45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList47);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection48);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNull(resourceLoader51);
        org.junit.Assert.assertNotNull(errorPageArray52);
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNotNull(connectorList62);
        org.junit.Assert.assertNotNull(connectorList63);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection70);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str74, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str75, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str77, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str78, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file85.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.7319333787169940912.100");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader7 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.net.InetAddress inetAddress8 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress8);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setSessionTimeout((int) (short) 100);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList19 = tomcatEmbeddedServletContainerFactory10.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory20.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList27 = tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors = connectorList27;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory20.protocol;
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory20.protocol;
        tomcatEmbeddedServletContainerFactory20.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection33 = tomcatEmbeddedServletContainerFactory20.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList34 = tomcatEmbeddedServletContainerFactory20.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList34;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList34;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory37.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList42 = tomcatEmbeddedServletContainerFactory37.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        tomcatEmbeddedServletContainerFactory37.setMimeMappings(mimeMappings46);
        org.apache.catalina.connector.Connector connector48 = null;
        org.apache.catalina.connector.Connector[] connectorArray49 = new org.apache.catalina.connector.Connector[] { connector48 };
        tomcatEmbeddedServletContainerFactory37.addAdditionalTomcatConnectors(connectorArray49);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray49);
        org.apache.catalina.startup.Tomcat tomcat52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer53 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList19);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNotNull(connectorList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection33);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList34);
        org.junit.Assert.assertNotNull(lifecycleListenerList42);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(connectorArray49);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.io.File file2 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.core.io.ResourceLoader resourceLoader4 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader4;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.net.InetAddress inetAddress9 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(connectorList8);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        int int17 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray18 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory15.addContextLifecycleListeners(lifecycleListenerArray18);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray18);
        java.util.List<org.apache.catalina.Valve> valveList21 = tomcatEmbeddedServletContainerFactory0.contextValves;
        boolean boolean22 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.coyote.http11.Http11NioProtocol";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        tomcatEmbeddedServletContainerFactory27.setResourceLoader(resourceLoader28);
        org.springframework.core.io.ResourceLoader resourceLoader30 = null;
        tomcatEmbeddedServletContainerFactory27.setResourceLoader(resourceLoader30);
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory27.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList40 = tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors = connectorList40;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory33.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory43.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        tomcatEmbeddedServletContainerFactory33.setMimeMappings(mimeMappings46);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList49 = tomcatEmbeddedServletContainerFactory48.tomcatConnectorCustomizers;
        int int50 = tomcatEmbeddedServletContainerFactory48.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray51 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory48.addContextLifecycleListeners(lifecycleListenerArray51);
        tomcatEmbeddedServletContainerFactory33.addContextLifecycleListeners(lifecycleListenerArray51);
        tomcatEmbeddedServletContainerFactory33.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader56 = tomcatEmbeddedServletContainerFactory33.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = tomcatEmbeddedServletContainerFactory57.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList60 = tomcatEmbeddedServletContainerFactory59.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory57.tomcatConnectorCustomizers = tomcatConnectorCustomizerList60;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection62 = tomcatEmbeddedServletContainerFactory57.getContextLifecycleListeners();
        java.lang.String str63 = tomcatEmbeddedServletContainerFactory57.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList64 = tomcatEmbeddedServletContainerFactory57.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.ErrorPage errorPage65 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray66 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage65 };
        tomcatEmbeddedServletContainerFactory57.addErrorPages(errorPageArray66);
        tomcatEmbeddedServletContainerFactory33.addErrorPages(errorPageArray66);
        tomcatEmbeddedServletContainerFactory27.addErrorPages(errorPageArray66);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray66);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray18);
        org.junit.Assert.assertNotNull(valveList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(connectorList32);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(connectorList40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray51);
        org.junit.Assert.assertNull(resourceLoader56);
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList60);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-8" + "'", str63, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList64);
        org.junit.Assert.assertNotNull(errorPageArray66);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection2 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList6 = tomcatEmbeddedServletContainerFactory5.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory3.tomcatConnectorCustomizers = tomcatConnectorCustomizerList6;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection8 = tomcatEmbeddedServletContainerFactory3.getContextLifecycleListeners();
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory3.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList18;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray22 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray22);
        tomcatEmbeddedServletContainerFactory20.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray26 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory20.addContextLifecycleListeners(lifecycleListenerArray26);
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray26);
        tomcatEmbeddedServletContainerFactory3.addContextLifecycleListeners(lifecycleListenerArray26);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray30 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory3.addContextCustomizers(tomcatContextCustomizerArray30);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray30);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList36 = tomcatEmbeddedServletContainerFactory35.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory33.tomcatConnectorCustomizers = tomcatConnectorCustomizerList36;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection38 = tomcatEmbeddedServletContainerFactory33.getContextLifecycleListeners();
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory33.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList40 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.ErrorPage errorPage41 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray42 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage41 };
        tomcatEmbeddedServletContainerFactory33.addErrorPages(errorPageArray42);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray42);
        java.util.Collection<org.apache.catalina.Valve> valveCollection45 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.connector.Connector connector46 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(valveCollection2);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList6);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray22);
        org.junit.Assert.assertNotNull(lifecycleListenerArray26);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray30);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList36);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-8" + "'", str39, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList40);
        org.junit.Assert.assertNotNull(errorPageArray42);
        org.junit.Assert.assertNotNull(valveCollection45);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        org.springframework.core.io.ResourceLoader resourceLoader13 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.net.InetAddress inetAddress14 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress14);
        java.io.File file16 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory17.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList24 = tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors = connectorList24;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory17.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        tomcatEmbeddedServletContainerFactory17.setMimeMappings(mimeMappings30);
        boolean boolean32 = tomcatEmbeddedServletContainerFactory17.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory34.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory37.getUriEncoding();
        int int39 = tomcatEmbeddedServletContainerFactory37.getPort();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        tomcatEmbeddedServletContainerFactory34.setMimeMappings(mimeMappings40);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray44 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray44);
        tomcatEmbeddedServletContainerFactory42.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray48 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory42.addContextLifecycleListeners(lifecycleListenerArray48);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory50.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory50.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = tomcatEmbeddedServletContainerFactory55.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList57 = tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory50.additionalTomcatConnectors = connectorList57;
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory50.protocol;
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory50.protocol;
        tomcatEmbeddedServletContainerFactory50.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection63 = tomcatEmbeddedServletContainerFactory50.getTomcatContextCustomizers();
        int int64 = tomcatEmbeddedServletContainerFactory50.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory65.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory65.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings71 = tomcatEmbeddedServletContainerFactory70.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList72 = tomcatEmbeddedServletContainerFactory70.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory65.additionalTomcatConnectors = connectorList72;
        java.lang.String str74 = tomcatEmbeddedServletContainerFactory65.protocol;
        java.lang.String str75 = tomcatEmbeddedServletContainerFactory65.protocol;
        java.net.InetAddress inetAddress76 = null;
        tomcatEmbeddedServletContainerFactory65.setAddress(inetAddress76);
        java.util.List<org.apache.catalina.connector.Connector> connectorList78 = tomcatEmbeddedServletContainerFactory65.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory79 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory79.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory79.setTldSkip("UTF-8");
        java.io.File file85 = tomcatEmbeddedServletContainerFactory79.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory65.setDocumentRoot(file85);
        tomcatEmbeddedServletContainerFactory50.setDocumentRoot(file85);
        tomcatEmbeddedServletContainerFactory42.baseDirectory = file85;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory89 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings90 = tomcatEmbeddedServletContainerFactory89.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory91 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList92 = tomcatEmbeddedServletContainerFactory91.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory89.tomcatConnectorCustomizers = tomcatConnectorCustomizerList92;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet94 = tomcatEmbeddedServletContainerFactory89.getErrorPages();
        tomcatEmbeddedServletContainerFactory42.setErrorPages(errorPageSet94);
        tomcatEmbeddedServletContainerFactory34.setErrorPages(errorPageSet94);
        tomcatEmbeddedServletContainerFactory17.setErrorPages(errorPageSet94);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet94);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(resourceLoader13);
        org.junit.Assert.assertNull(file16);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(connectorList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-8" + "'", str38, "UTF-8");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 8080 + "'", int39 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray44);
        org.junit.Assert.assertNotNull(lifecycleListenerArray48);
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertNotNull(connectorList57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(mimeMappings71);
        org.junit.Assert.assertNotNull(connectorList72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(connectorList78);
        org.junit.Assert.assertNotNull(file85);
        org.junit.Assert.assertEquals(file85.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file85.toString(), "/tmp/UTF-8.6046023690423245520.0");
        org.junit.Assert.assertNotNull(mimeMappings90);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList92);
        org.junit.Assert.assertNotNull(errorPageSet94);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        java.util.List<org.apache.catalina.connector.Connector> connectorList3 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList5 = null;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList5;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList14;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory7.protocol;
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory7.protocol;
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("hi!");
        boolean boolean20 = tomcatEmbeddedServletContainerFactory7.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList24 = tomcatEmbeddedServletContainerFactory23.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory21.tomcatConnectorCustomizers = tomcatConnectorCustomizerList24;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = tomcatEmbeddedServletContainerFactory21.getErrorPages();
        java.net.InetAddress inetAddress27 = tomcatEmbeddedServletContainerFactory21.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader28 = tomcatEmbeddedServletContainerFactory21.resourceLoader;
        java.io.File file30 = tomcatEmbeddedServletContainerFactory21.createTempDir("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        tomcatEmbeddedServletContainerFactory7.baseDirectory = file30;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file30);
        java.util.concurrent.TimeUnit timeUnit34 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) '#', timeUnit34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectorList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList24);
        org.junit.Assert.assertNotNull(errorPageSet26);
        org.junit.Assert.assertNull(inetAddress27);
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertNotNull(file30);
        org.junit.Assert.assertEquals(file30.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file30.toString(), "/tmp/web-app>\n.500332413586693762.8080");
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader14);
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader16);
        java.util.Collection<org.apache.catalina.Valve> valveCollection18 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        java.io.File file23 = tomcatEmbeddedServletContainerFactory20.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file23;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(valveCollection18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file23.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.4626349433111884796.8080");
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory4.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList7 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        java.io.File file8 = tomcatEmbeddedServletContainerFactory6.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList9 = tomcatEmbeddedServletContainerFactory6.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory4.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList9);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList9);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        boolean boolean15 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.apache.catalina.Context context16 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory17.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList24 = tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors = connectorList24;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory17.protocol;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory17.protocol;
        java.net.InetAddress inetAddress28 = null;
        tomcatEmbeddedServletContainerFactory17.setAddress(inetAddress28);
        java.io.File file30 = null;
        tomcatEmbeddedServletContainerFactory17.setBaseDirectory(file30);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection32 = tomcatEmbeddedServletContainerFactory17.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList34 = tomcatEmbeddedServletContainerFactory33.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection35 = tomcatEmbeddedServletContainerFactory33.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader38 = tomcatEmbeddedServletContainerFactory36.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray39 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory36.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory33.addErrorPages(errorPageArray39);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray42 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory33.addInitializers(servletContextInitializerArray42);
        tomcatEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray42);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context16, servletContextInitializerArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str5, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(connectorList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection32);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList34);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection35);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNull(resourceLoader38);
        org.junit.Assert.assertNotNull(errorPageArray39);
        org.junit.Assert.assertNotNull(servletContextInitializerArray42);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray16 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray16);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray16);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList19 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.net.InetAddress inetAddress20 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList24 = tomcatEmbeddedServletContainerFactory23.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory21.tomcatConnectorCustomizers = tomcatConnectorCustomizerList24;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection26 = tomcatEmbeddedServletContainerFactory21.getContextLifecycleListeners();
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory21.uriEncoding;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory21.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList36 = tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors = connectorList36;
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory29.protocol;
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory29.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory40.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = tomcatEmbeddedServletContainerFactory40.getMimeMappings();
        tomcatEmbeddedServletContainerFactory29.setMimeMappings(mimeMappings44);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory46.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings49 = tomcatEmbeddedServletContainerFactory46.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection50 = tomcatEmbeddedServletContainerFactory46.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray51 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList52 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList52, lifecycleListenerArray51);
        tomcatEmbeddedServletContainerFactory46.contextLifecycleListeners = lifecycleListenerList52;
        tomcatEmbeddedServletContainerFactory29.contextLifecycleListeners = lifecycleListenerList52;
        tomcatEmbeddedServletContainerFactory21.contextLifecycleListeners = lifecycleListenerList52;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList52;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings59 = tomcatEmbeddedServletContainerFactory58.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList61 = tomcatEmbeddedServletContainerFactory60.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory58.tomcatConnectorCustomizers = tomcatConnectorCustomizerList61;
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList61);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertNotNull(lifecycleListenerArray16);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList19);
        org.junit.Assert.assertNull(inetAddress20);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList24);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UTF-8" + "'", str28, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertNotNull(connectorList36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNotNull(mimeMappings49);
        org.junit.Assert.assertNotNull(valveCollection50);
        org.junit.Assert.assertNotNull(lifecycleListenerArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(mimeMappings59);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList61);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.io.File file9 = tomcatEmbeddedServletContainerFactory0.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setTldSkip("UTF-8");
        java.io.File file16 = tomcatEmbeddedServletContainerFactory10.createTempDir("UTF-8");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList23 = tomcatEmbeddedServletContainerFactory18.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList24 = tomcatEmbeddedServletContainerFactory18.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory10.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList24);
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = null;
        tomcatEmbeddedServletContainerFactory10.additionalTomcatConnectors = connectorList26;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList28 = tomcatEmbeddedServletContainerFactory10.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList28;
        java.lang.Class<?> wildcardClass30 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(file9);
        org.junit.Assert.assertEquals(file9.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file9.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.3520052157038328224.0");
        org.junit.Assert.assertNotNull(file16);
        org.junit.Assert.assertEquals(file16.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file16.toString(), "/tmp/UTF-8.7116635952963719196.0");
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(lifecycleListenerList23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList24);
        org.junit.Assert.assertNotNull(lifecycleListenerList28);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory10.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader26 = tomcatEmbeddedServletContainerFactory24.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory27.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection32 = tomcatEmbeddedServletContainerFactory27.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList33 = tomcatEmbeddedServletContainerFactory27.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory24.tomcatContextCustomizers = tomcatContextCustomizerList33;
        tomcatEmbeddedServletContainerFactory24.uriEncoding = "UTF-8";
        org.springframework.core.io.ResourceLoader resourceLoader37 = null;
        tomcatEmbeddedServletContainerFactory24.setResourceLoader(resourceLoader37);
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory24.tldSkip;
        tomcatEmbeddedServletContainerFactory24.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader44 = tomcatEmbeddedServletContainerFactory42.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory45.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory45.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection50 = tomcatEmbeddedServletContainerFactory45.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList51 = tomcatEmbeddedServletContainerFactory45.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory42.tomcatContextCustomizers = tomcatContextCustomizerList51;
        java.util.List<org.apache.catalina.Valve> valveList53 = tomcatEmbeddedServletContainerFactory42.contextValves;
        tomcatEmbeddedServletContainerFactory24.contextValves = valveList53;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory55.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList60 = tomcatEmbeddedServletContainerFactory55.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory61.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = tomcatEmbeddedServletContainerFactory61.getMimeMappings();
        tomcatEmbeddedServletContainerFactory55.setMimeMappings(mimeMappings64);
        org.apache.catalina.connector.Connector connector66 = null;
        org.apache.catalina.connector.Connector[] connectorArray67 = new org.apache.catalina.connector.Connector[] { connector66 };
        tomcatEmbeddedServletContainerFactory55.addAdditionalTomcatConnectors(connectorArray67);
        tomcatEmbeddedServletContainerFactory24.addAdditionalTomcatConnectors(connectorArray67);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray67);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 0);
        java.util.List<org.apache.catalina.connector.Connector> connectorList73 = tomcatEmbeddedServletContainerFactory72.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList73;
        org.apache.catalina.connector.Connector connector75 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNull(resourceLoader26);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection32);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNull(resourceLoader44);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection50);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList51);
        org.junit.Assert.assertNotNull(valveList53);
        org.junit.Assert.assertNotNull(lifecycleListenerList60);
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertNotNull(connectorArray67);
        org.junit.Assert.assertNotNull(connectorList73);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory10.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        java.io.File file23 = tomcatEmbeddedServletContainerFactory0.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        tomcatEmbeddedServletContainerFactory0.setPort((int) '4');
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList26 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.core.io.ResourceLoader resourceLoader28 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean30 = tomcatEmbeddedServletContainerFactory29.isRegisterDefaultServlet();
        org.apache.catalina.Context context31 = null;
        tomcatEmbeddedServletContainerFactory29.postProcessContext(context31);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory33.getUriEncoding();
        tomcatEmbeddedServletContainerFactory33.setSessionTimeout((int) (short) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory37.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        java.io.File file41 = tomcatEmbeddedServletContainerFactory39.baseDirectory;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList42 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory37.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList42);
        tomcatEmbeddedServletContainerFactory33.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList42);
        tomcatEmbeddedServletContainerFactory33.setJspServletClassName("org.apache.coyote.http11.Http11NioProtocol");
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList47 = tomcatEmbeddedServletContainerFactory33.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory29.tomcatContextCustomizers = tomcatContextCustomizerList47;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList47;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
        org.junit.Assert.assertNotNull(file23);
        org.junit.Assert.assertEquals(file23.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file23.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.4622040745450242812.0");
        org.junit.Assert.assertNotNull(lifecycleListenerList26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-8" + "'", str34, "UTF-8");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str38, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertNull(file41);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList42);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList47);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory4.additionalTomcatConnectors = connectorList11;
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory4.protocol;
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory4.protocol;
        java.net.InetAddress inetAddress15 = null;
        tomcatEmbeddedServletContainerFactory4.setAddress(inetAddress15);
        java.io.File file17 = null;
        tomcatEmbeddedServletContainerFactory4.setBaseDirectory(file17);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray19 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory4.addContextCustomizers(tomcatContextCustomizerArray19);
        java.util.List<org.apache.catalina.Valve> valveList21 = tomcatEmbeddedServletContainerFactory4.contextValves;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory4.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList30 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors = connectorList30;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory23.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader35 = tomcatEmbeddedServletContainerFactory33.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection41 = tomcatEmbeddedServletContainerFactory36.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList42 = tomcatEmbeddedServletContainerFactory36.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory33.tomcatContextCustomizers = tomcatContextCustomizerList42;
        tomcatEmbeddedServletContainerFactory23.tomcatContextCustomizers = tomcatContextCustomizerList42;
        tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers = tomcatContextCustomizerList42;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList42;
        org.springframework.core.io.ResourceLoader resourceLoader47 = tomcatEmbeddedServletContainerFactory2.resourceLoader;
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory2.tldSkip;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray19);
        org.junit.Assert.assertNotNull(valveList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str22, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertNotNull(connectorList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNull(resourceLoader35);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection41);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList42);
        org.junit.Assert.assertNull(resourceLoader47);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList8 = tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers;
        java.lang.Class<?> wildcardClass9 = tomcatEmbeddedServletContainerFactory2.getClass();
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList16 = tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList16;
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        boolean boolean20 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNull(file14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory1.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList4 = tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers;
        java.io.File file5 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        java.io.File file6 = tomcatEmbeddedServletContainerFactory1.baseDirectory;
        boolean boolean7 = tomcatEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) '4');
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList10 = tomcatEmbeddedServletContainerFactory9.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory1.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList10);
        boolean boolean12 = tomcatEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList4);
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList18 = tomcatEmbeddedServletContainerFactory17.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory15.tomcatConnectorCustomizers = tomcatConnectorCustomizerList18;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection20 = tomcatEmbeddedServletContainerFactory15.getContextLifecycleListeners();
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory15.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory15.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.ErrorPage errorPage23 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray24 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage23 };
        tomcatEmbeddedServletContainerFactory15.addErrorPages(errorPageArray24);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray24);
        java.util.Collection<org.apache.catalina.Valve> valveCollection27 = tomcatEmbeddedServletContainerFactory0.getValves();
        boolean boolean28 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory30.getMimeMappings();
        tomcatEmbeddedServletContainerFactory30.setTldSkip("");
        int int36 = tomcatEmbeddedServletContainerFactory30.getSessionTimeout();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection37 = tomcatEmbeddedServletContainerFactory30.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory30.setPort(100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setPort((int) (short) 0);
        boolean boolean43 = tomcatEmbeddedServletContainerFactory40.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory44.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList51 = tomcatEmbeddedServletContainerFactory49.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory44.additionalTomcatConnectors = connectorList51;
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory44.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = tomcatEmbeddedServletContainerFactory54.getMimeMappings();
        tomcatEmbeddedServletContainerFactory44.setMimeMappings(mimeMappings57);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList60 = tomcatEmbeddedServletContainerFactory59.tomcatConnectorCustomizers;
        int int61 = tomcatEmbeddedServletContainerFactory59.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray62 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory59.addContextLifecycleListeners(lifecycleListenerArray62);
        tomcatEmbeddedServletContainerFactory44.addContextLifecycleListeners(lifecycleListenerArray62);
        tomcatEmbeddedServletContainerFactory40.addContextLifecycleListeners(lifecycleListenerArray62);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory66.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory66.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection71 = tomcatEmbeddedServletContainerFactory66.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory66.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector74 = null;
        org.apache.catalina.connector.Connector[] connectorArray75 = new org.apache.catalina.connector.Connector[] { connector74 };
        tomcatEmbeddedServletContainerFactory66.addAdditionalTomcatConnectors(connectorArray75);
        tomcatEmbeddedServletContainerFactory40.addAdditionalTomcatConnectors(connectorArray75);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file82 = tomcatEmbeddedServletContainerFactory80.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory40.baseDirectory = file82;
        tomcatEmbeddedServletContainerFactory30.baseDirectory = file82;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file82);
        org.apache.catalina.startup.Tomcat tomcat86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer87 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList14);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList18);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertNotNull(errorPageArray24);
        org.junit.Assert.assertNotNull(valveCollection27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection37);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNotNull(connectorList51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray62);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection71);
        org.junit.Assert.assertNotNull(connectorArray75);
        org.junit.Assert.assertNotNull(file82);
        org.junit.Assert.assertEquals(file82.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file82.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.3324728966456126407.100");
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader5);
        tomcatEmbeddedServletContainerFactory2.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList12 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors = connectorList20;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory13.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean24 = tomcatEmbeddedServletContainerFactory23.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList25 = tomcatEmbeddedServletContainerFactory23.contextValves;
        tomcatEmbeddedServletContainerFactory13.contextValves = valveList25;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory13.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList35 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors = connectorList35;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory28.protocol;
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory28.protocol;
        java.net.InetAddress inetAddress39 = null;
        tomcatEmbeddedServletContainerFactory28.setAddress(inetAddress39);
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory28.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory42.setTldSkip("UTF-8");
        java.io.File file48 = tomcatEmbeddedServletContainerFactory42.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory28.setDocumentRoot(file48);
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory52.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings58 = tomcatEmbeddedServletContainerFactory57.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList59 = tomcatEmbeddedServletContainerFactory57.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory52.additionalTomcatConnectors = connectorList59;
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory52.protocol;
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory52.protocol;
        tomcatEmbeddedServletContainerFactory52.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection65 = tomcatEmbeddedServletContainerFactory52.getTomcatContextCustomizers();
        int int66 = tomcatEmbeddedServletContainerFactory52.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory67.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory67.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings73 = tomcatEmbeddedServletContainerFactory72.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList74 = tomcatEmbeddedServletContainerFactory72.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory67.additionalTomcatConnectors = connectorList74;
        java.lang.String str76 = tomcatEmbeddedServletContainerFactory67.protocol;
        java.lang.String str77 = tomcatEmbeddedServletContainerFactory67.protocol;
        java.net.InetAddress inetAddress78 = null;
        tomcatEmbeddedServletContainerFactory67.setAddress(inetAddress78);
        java.util.List<org.apache.catalina.connector.Connector> connectorList80 = tomcatEmbeddedServletContainerFactory67.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory81.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory81.setTldSkip("UTF-8");
        java.io.File file87 = tomcatEmbeddedServletContainerFactory81.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory67.setDocumentRoot(file87);
        tomcatEmbeddedServletContainerFactory52.setDocumentRoot(file87);
        tomcatEmbeddedServletContainerFactory28.baseDirectory = file87;
        tomcatEmbeddedServletContainerFactory13.setDocumentRoot(file87);
        tomcatEmbeddedServletContainerFactory9.baseDirectory = file87;
        tomcatEmbeddedServletContainerFactory2.baseDirectory = file87;
        org.apache.catalina.connector.Connector connector94 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.customizeConnector(connector94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertNotNull(connectorList12);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(valveList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(connectorList35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertNotNull(file48);
        org.junit.Assert.assertEquals(file48.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file48.toString(), "/tmp/UTF-8.3772601100562960605.0");
        org.junit.Assert.assertNotNull(mimeMappings58);
        org.junit.Assert.assertNotNull(connectorList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(mimeMappings73);
        org.junit.Assert.assertNotNull(connectorList74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "hi!" + "'", str77, "hi!");
        org.junit.Assert.assertNotNull(connectorList80);
        org.junit.Assert.assertNotNull(file87);
        org.junit.Assert.assertEquals(file87.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file87.toString(), "/tmp/UTF-8.393015165318205642.0");
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.io.File file7 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        java.net.InetAddress inetAddress8 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress8);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (short) 0);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection3 = tomcatEmbeddedServletContainerFactory2.getContextLifecycleListeners();
        java.net.InetAddress inetAddress4 = tomcatEmbeddedServletContainerFactory2.getAddress();
        org.junit.Assert.assertNotNull(lifecycleListenerCollection3);
        org.junit.Assert.assertNull(inetAddress4);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.Context context4 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        java.util.List<org.apache.catalina.connector.Connector> connectorList3 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.apache.catalina.startup.Tomcat tomcat5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer6 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectorList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray15 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16, errorPageArray15);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) '#');
        java.io.File file21 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        int int22 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader26 = null;
        tomcatEmbeddedServletContainerFactory25.setResourceLoader(resourceLoader26);
        tomcatEmbeddedServletContainerFactory25.setContextPath("");
        boolean boolean30 = tomcatEmbeddedServletContainerFactory25.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader31 = tomcatEmbeddedServletContainerFactory25.resourceLoader;
        boolean boolean32 = tomcatEmbeddedServletContainerFactory25.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList36 = tomcatEmbeddedServletContainerFactory35.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory33.tomcatConnectorCustomizers = tomcatConnectorCustomizerList36;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = tomcatEmbeddedServletContainerFactory33.getErrorPages();
        java.net.InetAddress inetAddress39 = tomcatEmbeddedServletContainerFactory33.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory40.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = tomcatEmbeddedServletContainerFactory45.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList47 = tomcatEmbeddedServletContainerFactory45.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory40.additionalTomcatConnectors = connectorList47;
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory40.protocol;
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory40.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory51.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory51.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = tomcatEmbeddedServletContainerFactory51.getMimeMappings();
        tomcatEmbeddedServletContainerFactory40.setMimeMappings(mimeMappings55);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory57.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = tomcatEmbeddedServletContainerFactory57.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection61 = tomcatEmbeddedServletContainerFactory57.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray62 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList63 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList63, lifecycleListenerArray62);
        tomcatEmbeddedServletContainerFactory57.contextLifecycleListeners = lifecycleListenerList63;
        tomcatEmbeddedServletContainerFactory40.contextLifecycleListeners = lifecycleListenerList63;
        tomcatEmbeddedServletContainerFactory33.contextLifecycleListeners = lifecycleListenerList63;
        tomcatEmbeddedServletContainerFactory33.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings71 = tomcatEmbeddedServletContainerFactory70.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList73 = tomcatEmbeddedServletContainerFactory72.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory70.tomcatConnectorCustomizers = tomcatConnectorCustomizerList73;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection75 = tomcatEmbeddedServletContainerFactory70.getContextLifecycleListeners();
        java.lang.String str76 = tomcatEmbeddedServletContainerFactory70.uriEncoding;
        java.lang.String str77 = tomcatEmbeddedServletContainerFactory70.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str79 = tomcatEmbeddedServletContainerFactory78.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray80 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory78.addInitializers(servletContextInitializerArray80);
        tomcatEmbeddedServletContainerFactory70.addInitializers(servletContextInitializerArray80);
        tomcatEmbeddedServletContainerFactory33.addInitializers(servletContextInitializerArray80);
        tomcatEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray80);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray80);
        java.lang.String str86 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        java.net.InetAddress inetAddress87 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress87);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(errorPageArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(file21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(resourceLoader31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList36);
        org.junit.Assert.assertNotNull(errorPageSet38);
        org.junit.Assert.assertNull(inetAddress39);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertNotNull(connectorList47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNotNull(mimeMappings60);
        org.junit.Assert.assertNotNull(valveCollection61);
        org.junit.Assert.assertNotNull(lifecycleListenerArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(mimeMappings71);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList73);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "UTF-8" + "'", str76, "UTF-8");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "UTF-8" + "'", str77, "UTF-8");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "UTF-8" + "'", str79, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray80);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str86, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) 10);
        java.net.InetAddress inetAddress2 = tomcatEmbeddedServletContainerFactory1.getAddress();
        java.io.File file4 = tomcatEmbeddedServletContainerFactory1.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory1.resourceLoader = resourceLoader5;
        int int7 = tomcatEmbeddedServletContainerFactory1.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet8 = tomcatEmbeddedServletContainerFactory1.getErrorPages();
        tomcatEmbeddedServletContainerFactory1.setPort(0);
        org.apache.catalina.Context context11 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.addDefaultServlet(context11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(inetAddress2);
        org.junit.Assert.assertNotNull(file4);
        org.junit.Assert.assertEquals(file4.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file4.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.4389794865639660246.10");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNotNull(errorPageSet8);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean1 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.apache.catalina.Context context2 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context2);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection9 = tomcatEmbeddedServletContainerFactory4.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory4.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector12 = null;
        org.apache.catalina.connector.Connector[] connectorArray13 = new org.apache.catalina.connector.Connector[] { connector12 };
        tomcatEmbeddedServletContainerFactory4.addAdditionalTomcatConnectors(connectorArray13);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray13);
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "org.apache.tomcat.util.scan.MergedWebXml";
        org.apache.catalina.startup.Tomcat tomcat19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer tomcatEmbeddedServletContainer20 = tomcatEmbeddedServletContainerFactory0.getTomcatEmbeddedServletContainer(tomcat19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Tomcat Server must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection9);
        org.junit.Assert.assertNotNull(connectorArray13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        java.util.ArrayList<org.apache.catalina.Valve> valveList16 = new java.util.ArrayList<org.apache.catalina.Valve>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.Valve>) valveList16, valveArray15);
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList16;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList27 = tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors = connectorList27;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory29.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray31 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory29.addInitializers(servletContextInitializerArray31);
        tomcatEmbeddedServletContainerFactory29.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray35 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory29.addContextLifecycleListeners(lifecycleListenerArray35);
        tomcatEmbeddedServletContainerFactory19.addContextLifecycleListeners(lifecycleListenerArray35);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory38.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList45 = tomcatEmbeddedServletContainerFactory43.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors = connectorList45;
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory38.protocol;
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory38.protocol;
        java.net.InetAddress inetAddress49 = null;
        tomcatEmbeddedServletContainerFactory38.setAddress(inetAddress49);
        java.util.List<org.apache.catalina.connector.Connector> connectorList51 = tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory52.setTldSkip("UTF-8");
        java.io.File file58 = tomcatEmbeddedServletContainerFactory52.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory38.setDocumentRoot(file58);
        tomcatEmbeddedServletContainerFactory19.setDocumentRoot(file58);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory61.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray63 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory61.addInitializers(servletContextInitializerArray63);
        tomcatEmbeddedServletContainerFactory61.setUriEncoding("hi!");
        java.lang.String str67 = tomcatEmbeddedServletContainerFactory61.getUriEncoding();
        tomcatEmbeddedServletContainerFactory61.setSessionTimeout((int) (short) 100);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList70 = tomcatEmbeddedServletContainerFactory61.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory71.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory71.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings77 = tomcatEmbeddedServletContainerFactory76.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList78 = tomcatEmbeddedServletContainerFactory76.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory71.additionalTomcatConnectors = connectorList78;
        java.lang.String str80 = tomcatEmbeddedServletContainerFactory71.protocol;
        java.lang.String str81 = tomcatEmbeddedServletContainerFactory71.protocol;
        tomcatEmbeddedServletContainerFactory71.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection84 = tomcatEmbeddedServletContainerFactory71.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList85 = tomcatEmbeddedServletContainerFactory71.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory61.tomcatContextCustomizers = tomcatContextCustomizerList85;
        tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers = tomcatContextCustomizerList85;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList85;
        java.lang.Class<?> wildcardClass89 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertNotNull(connectorList27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-8" + "'", str30, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray31);
        org.junit.Assert.assertNotNull(lifecycleListenerArray35);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNotNull(connectorList45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(connectorList51);
        org.junit.Assert.assertNotNull(file58);
        org.junit.Assert.assertEquals(file58.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file58.toString(), "/tmp/UTF-8.6912181297286554042.0");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "UTF-8" + "'", str62, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList70);
        org.junit.Assert.assertNotNull(mimeMappings77);
        org.junit.Assert.assertNotNull(connectorList78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection84);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList85);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory9.protocol;
        java.net.InetAddress inetAddress20 = null;
        tomcatEmbeddedServletContainerFactory9.setAddress(inetAddress20);
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setTldSkip("UTF-8");
        java.io.File file29 = tomcatEmbeddedServletContainerFactory23.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory9.setDocumentRoot(file29);
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList40 = tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors = connectorList40;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory33.protocol;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory33.protocol;
        tomcatEmbeddedServletContainerFactory33.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection46 = tomcatEmbeddedServletContainerFactory33.getTomcatContextCustomizers();
        int int47 = tomcatEmbeddedServletContainerFactory33.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory48.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList55 = tomcatEmbeddedServletContainerFactory53.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors = connectorList55;
        java.lang.String str57 = tomcatEmbeddedServletContainerFactory48.protocol;
        java.lang.String str58 = tomcatEmbeddedServletContainerFactory48.protocol;
        java.net.InetAddress inetAddress59 = null;
        tomcatEmbeddedServletContainerFactory48.setAddress(inetAddress59);
        java.util.List<org.apache.catalina.connector.Connector> connectorList61 = tomcatEmbeddedServletContainerFactory48.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory62.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory62.setTldSkip("UTF-8");
        java.io.File file68 = tomcatEmbeddedServletContainerFactory62.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory48.setDocumentRoot(file68);
        tomcatEmbeddedServletContainerFactory33.setDocumentRoot(file68);
        tomcatEmbeddedServletContainerFactory9.baseDirectory = file68;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file68);
        org.springframework.core.io.ResourceLoader resourceLoader73 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-8" + "'", str4, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file29.toString(), "/tmp/UTF-8.4822686935577091035.0");
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(connectorList40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNotNull(connectorList55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertNotNull(connectorList61);
        org.junit.Assert.assertNotNull(file68);
        org.junit.Assert.assertEquals(file68.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file68.toString(), "/tmp/UTF-8.5543431919927281232.0");
        org.junit.Assert.assertNull(resourceLoader73);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory2.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray4 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory2.addConnectorCustomizers(tomcatConnectorCustomizerArray4);
        java.io.File file6 = tomcatEmbeddedServletContainerFactory2.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory9.tldSkip;
        tomcatEmbeddedServletContainerFactory9.tldSkip = "";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList17 = tomcatEmbeddedServletContainerFactory16.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers = tomcatConnectorCustomizerList17;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection19 = tomcatEmbeddedServletContainerFactory14.getContextLifecycleListeners();
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory14.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors = connectorList21;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray23 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory13.addContextCustomizers(tomcatContextCustomizerArray23);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory25.setTldSkip("UTF-8");
        java.io.File file31 = tomcatEmbeddedServletContainerFactory25.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory13.setDocumentRoot(file31);
        tomcatEmbeddedServletContainerFactory9.setBaseDirectory(file31);
        tomcatEmbeddedServletContainerFactory2.setBaseDirectory(file31);
        java.util.concurrent.TimeUnit timeUnit36 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.setSessionTimeout(32, timeUnit36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray4);
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList17);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray23);
        org.junit.Assert.assertNotNull(file31);
        org.junit.Assert.assertEquals(file31.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file31.toString(), "/tmp/UTF-8.5510035427714475131.0");
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.io.File file5 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection20 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader23 = tomcatEmbeddedServletContainerFactory21.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection29 = tomcatEmbeddedServletContainerFactory24.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList30 = tomcatEmbeddedServletContainerFactory24.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory21.tomcatContextCustomizers = tomcatContextCustomizerList30;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory32.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList39 = tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory32.additionalTomcatConnectors = connectorList39;
        java.lang.String str41 = tomcatEmbeddedServletContainerFactory32.protocol;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory32.protocol;
        tomcatEmbeddedServletContainerFactory32.setUriEncoding("hi!");
        boolean boolean45 = tomcatEmbeddedServletContainerFactory32.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory46.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory46.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = tomcatEmbeddedServletContainerFactory51.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList53 = tomcatEmbeddedServletContainerFactory51.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors = connectorList53;
        org.apache.catalina.Context context55 = null;
        tomcatEmbeddedServletContainerFactory46.postProcessContext(context55);
        java.net.InetAddress inetAddress57 = tomcatEmbeddedServletContainerFactory46.getAddress();
        tomcatEmbeddedServletContainerFactory46.protocol = "org.apache.tomcat.util.scan.MergedWebXml";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory60.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory60.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings66 = tomcatEmbeddedServletContainerFactory65.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList67 = tomcatEmbeddedServletContainerFactory65.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors = connectorList67;
        org.apache.catalina.Context context69 = null;
        tomcatEmbeddedServletContainerFactory60.postProcessContext(context69);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str74 = tomcatEmbeddedServletContainerFactory73.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray75 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory73.addConnectorCustomizers(tomcatConnectorCustomizerArray75);
        tomcatEmbeddedServletContainerFactory60.addConnectorCustomizers(tomcatConnectorCustomizerArray75);
        tomcatEmbeddedServletContainerFactory46.addConnectorCustomizers(tomcatConnectorCustomizerArray75);
        tomcatEmbeddedServletContainerFactory32.addConnectorCustomizers(tomcatConnectorCustomizerArray75);
        tomcatEmbeddedServletContainerFactory21.addConnectorCustomizers(tomcatConnectorCustomizerArray75);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray75);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList82 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet83 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.apache.catalina.connector.Connector connector84 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.customizeConnector(connector84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection20);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNull(resourceLoader23);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection29);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList30);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(connectorList39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNotNull(connectorList53);
        org.junit.Assert.assertNull(inetAddress57);
        org.junit.Assert.assertNotNull(mimeMappings66);
        org.junit.Assert.assertNotNull(connectorList67);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray75);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList82);
        org.junit.Assert.assertNotNull(errorPageSet83);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList11 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList11);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection8 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.coyote.http11.Http11NioProtocol";
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList11 = null;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList11;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors = connectorList20;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory13.protocol;
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory13.protocol;
        java.net.InetAddress inetAddress24 = null;
        tomcatEmbeddedServletContainerFactory13.setAddress(inetAddress24);
        tomcatEmbeddedServletContainerFactory13.setJspServletClassName("");
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        tomcatEmbeddedServletContainerFactory13.setResourceLoader(resourceLoader28);
        java.net.InetAddress inetAddress30 = tomcatEmbeddedServletContainerFactory13.getAddress();
        java.util.List<org.apache.catalina.connector.Connector> connectorList31 = tomcatEmbeddedServletContainerFactory13.getAdditionalTomcatConnectors();
        java.util.Collection<org.apache.catalina.Valve> valveCollection32 = tomcatEmbeddedServletContainerFactory13.getValves();
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList33;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection8);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNull(inetAddress30);
        org.junit.Assert.assertNotNull(connectorList31);
        org.junit.Assert.assertNotNull(valveCollection32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str35, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader12 = tomcatEmbeddedServletContainerFactory10.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection18 = tomcatEmbeddedServletContainerFactory13.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList19;
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.Collection<org.apache.catalina.Valve> valveCollection25 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection26 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNull(resourceLoader12);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-8" + "'", str24, "UTF-8");
        org.junit.Assert.assertNotNull(valveCollection25);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection26);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setTldSkip("UTF-8");
        java.io.File file20 = tomcatEmbeddedServletContainerFactory14.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file20);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray25 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextLifecycleListeners must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file20.toString(), "/tmp/UTF-8.1415159278404754139.0");
        org.junit.Assert.assertNotNull(errorPageSet22);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.io.File file5 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory6.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory6.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector14 = null;
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] { connector14 };
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray15);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList18 = null;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList18;
        tomcatEmbeddedServletContainerFactory0.setPort(8080);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader24 = tomcatEmbeddedServletContainerFactory22.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray25 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory22.addErrorPages(errorPageArray25);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray25);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory28.protocol;
        tomcatEmbeddedServletContainerFactory28.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory36.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection41 = tomcatEmbeddedServletContainerFactory36.getTomcatConnectorCustomizers();
        boolean boolean42 = tomcatEmbeddedServletContainerFactory36.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader45 = tomcatEmbeddedServletContainerFactory43.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory46.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory46.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection51 = tomcatEmbeddedServletContainerFactory46.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList52 = tomcatEmbeddedServletContainerFactory46.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory43.tomcatContextCustomizers = tomcatContextCustomizerList52;
        tomcatEmbeddedServletContainerFactory36.tomcatContextCustomizers = tomcatContextCustomizerList52;
        tomcatEmbeddedServletContainerFactory28.tomcatContextCustomizers = tomcatContextCustomizerList52;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList52;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 100);
        org.apache.catalina.Context context59 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(resourceLoader24);
        org.junit.Assert.assertNotNull(errorPageArray25);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNull(resourceLoader45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection51);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList52);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) ' ');
        tomcatEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        tomcatEmbeddedServletContainerFactory6.setResourceLoader(resourceLoader7);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection14 = tomcatEmbeddedServletContainerFactory9.getTomcatConnectorCustomizers();
        boolean boolean15 = tomcatEmbeddedServletContainerFactory9.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress16 = null;
        tomcatEmbeddedServletContainerFactory9.setAddress(inetAddress16);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray18 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory9.addContextCustomizers(tomcatContextCustomizerArray18);
        tomcatEmbeddedServletContainerFactory6.addContextCustomizers(tomcatContextCustomizerArray18);
        tomcatEmbeddedServletContainerFactory1.addContextCustomizers(tomcatContextCustomizerArray18);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray18);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory5.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer7 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer7 };
        tomcatEmbeddedServletContainerFactory5.addInitializers(servletContextInitializerArray8);
        tomcatEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray8);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList15 = tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory12.tomcatConnectorCustomizers = tomcatConnectorCustomizerList15;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection17 = tomcatEmbeddedServletContainerFactory12.getContextLifecycleListeners();
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory12.uriEncoding;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory12.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory20.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList27 = tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors = connectorList27;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory20.protocol;
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory20.protocol;
        tomcatEmbeddedServletContainerFactory20.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection33 = tomcatEmbeddedServletContainerFactory20.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList34 = tomcatEmbeddedServletContainerFactory20.contextValves;
        tomcatEmbeddedServletContainerFactory12.contextValves = valveList34;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList39 = tomcatEmbeddedServletContainerFactory38.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory36.tomcatConnectorCustomizers = tomcatConnectorCustomizerList39;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet41 = tomcatEmbeddedServletContainerFactory36.getErrorPages();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList42 = tomcatEmbeddedServletContainerFactory36.contextLifecycleListeners;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        tomcatEmbeddedServletContainerFactory12.setMimeMappings(mimeMappings43);
        tomcatEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings43);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet46 = tomcatEmbeddedServletContainerFactory2.getErrorPages();
        org.apache.catalina.Context context47 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.addDefaultServlet(context47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList15);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNotNull(connectorList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection33);
        org.junit.Assert.assertNotNull(valveList34);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList39);
        org.junit.Assert.assertNotNull(errorPageSet41);
        org.junit.Assert.assertNotNull(lifecycleListenerList42);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(errorPageSet46);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n", (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setTldSkip("UTF-8");
        java.io.File file20 = tomcatEmbeddedServletContainerFactory14.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file20);
        java.util.Collection<org.apache.catalina.Valve> valveCollection22 = tomcatEmbeddedServletContainerFactory0.getValves();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader27 = tomcatEmbeddedServletContainerFactory25.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection33 = tomcatEmbeddedServletContainerFactory28.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList34 = tomcatEmbeddedServletContainerFactory28.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory25.tomcatContextCustomizers = tomcatContextCustomizerList34;
        java.util.List<org.apache.catalina.Valve> valveList36 = tomcatEmbeddedServletContainerFactory25.contextValves;
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory25.getDEFAULT_PROTOCOL();
        java.util.List<org.apache.catalina.Valve> valveList38 = tomcatEmbeddedServletContainerFactory25.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList38;
        tomcatEmbeddedServletContainerFactory0.tldSkip = "hi!";
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file20.toString(), "/tmp/UTF-8.1677362976721433820.0");
        org.junit.Assert.assertNotNull(valveCollection22);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNull(resourceLoader27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection33);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList34);
        org.junit.Assert.assertNotNull(valveList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str37, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(valveList38);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory5.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection10 = tomcatEmbeddedServletContainerFactory5.getTomcatConnectorCustomizers();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory5.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress12 = null;
        tomcatEmbeddedServletContainerFactory5.setAddress(inetAddress12);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray14 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory5.addContextCustomizers(tomcatContextCustomizerArray14);
        tomcatEmbeddedServletContainerFactory2.addContextCustomizers(tomcatContextCustomizerArray14);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection17 = tomcatEmbeddedServletContainerFactory2.getContextLifecycleListeners();
        org.apache.catalina.Context context18 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory19.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList28 = tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers = tomcatContextCustomizerList28;
        tomcatEmbeddedServletContainerFactory19.uriEncoding = "UTF-8";
        tomcatEmbeddedServletContainerFactory19.setSessionTimeout(100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList35 = tomcatEmbeddedServletContainerFactory34.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection36 = tomcatEmbeddedServletContainerFactory34.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader39 = tomcatEmbeddedServletContainerFactory37.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray40 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory37.addErrorPages(errorPageArray40);
        tomcatEmbeddedServletContainerFactory34.addErrorPages(errorPageArray40);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray43 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory34.addInitializers(servletContextInitializerArray43);
        tomcatEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray43);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.configureContext(context18, servletContextInitializerArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray14);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection17);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList35);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection36);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNull(resourceLoader39);
        org.junit.Assert.assertNotNull(errorPageArray40);
        org.junit.Assert.assertNotNull(servletContextInitializerArray43);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.core.io.ResourceLoader resourceLoader14 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.util.List<org.apache.catalina.Valve> valveList15 = null;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList15;
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.apache.catalina.Context context19 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNull(resourceLoader14);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray15 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16, errorPageArray15);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(errorPageArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList6 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) 10);
        java.net.InetAddress inetAddress2 = tomcatEmbeddedServletContainerFactory1.getAddress();
        tomcatEmbeddedServletContainerFactory1.setPort((int) (byte) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList6 = tomcatEmbeddedServletContainerFactory5.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection7 = tomcatEmbeddedServletContainerFactory5.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList8 = tomcatEmbeddedServletContainerFactory5.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection9 = tomcatEmbeddedServletContainerFactory5.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList10 = tomcatEmbeddedServletContainerFactory5.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory1.additionalTomcatConnectors = connectorList10;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList23 = tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors = connectorList23;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory16.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean27 = tomcatEmbeddedServletContainerFactory26.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList28 = tomcatEmbeddedServletContainerFactory26.contextValves;
        tomcatEmbeddedServletContainerFactory16.contextValves = valveList28;
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory16.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory31.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList38 = tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors = connectorList38;
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory31.protocol;
        java.lang.String str41 = tomcatEmbeddedServletContainerFactory31.protocol;
        java.net.InetAddress inetAddress42 = null;
        tomcatEmbeddedServletContainerFactory31.setAddress(inetAddress42);
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory45.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory45.setTldSkip("UTF-8");
        java.io.File file51 = tomcatEmbeddedServletContainerFactory45.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory31.setDocumentRoot(file51);
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory55.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = tomcatEmbeddedServletContainerFactory60.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList62 = tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory55.additionalTomcatConnectors = connectorList62;
        java.lang.String str64 = tomcatEmbeddedServletContainerFactory55.protocol;
        java.lang.String str65 = tomcatEmbeddedServletContainerFactory55.protocol;
        tomcatEmbeddedServletContainerFactory55.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection68 = tomcatEmbeddedServletContainerFactory55.getTomcatContextCustomizers();
        int int69 = tomcatEmbeddedServletContainerFactory55.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory70.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory70.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings76 = tomcatEmbeddedServletContainerFactory75.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList77 = tomcatEmbeddedServletContainerFactory75.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory70.additionalTomcatConnectors = connectorList77;
        java.lang.String str79 = tomcatEmbeddedServletContainerFactory70.protocol;
        java.lang.String str80 = tomcatEmbeddedServletContainerFactory70.protocol;
        java.net.InetAddress inetAddress81 = null;
        tomcatEmbeddedServletContainerFactory70.setAddress(inetAddress81);
        java.util.List<org.apache.catalina.connector.Connector> connectorList83 = tomcatEmbeddedServletContainerFactory70.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory84 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory84.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory84.setTldSkip("UTF-8");
        java.io.File file90 = tomcatEmbeddedServletContainerFactory84.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory70.setDocumentRoot(file90);
        tomcatEmbeddedServletContainerFactory55.setDocumentRoot(file90);
        tomcatEmbeddedServletContainerFactory31.baseDirectory = file90;
        tomcatEmbeddedServletContainerFactory16.setDocumentRoot(file90);
        tomcatEmbeddedServletContainerFactory12.baseDirectory = file90;
        tomcatEmbeddedServletContainerFactory1.setBaseDirectory(file90);
        int int97 = tomcatEmbeddedServletContainerFactory1.getPort();
        int int98 = tomcatEmbeddedServletContainerFactory1.getPort();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection99 = tomcatEmbeddedServletContainerFactory1.getTomcatContextCustomizers();
        org.junit.Assert.assertNull(inetAddress2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList6);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection7);
        org.junit.Assert.assertNotNull(valveList8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection9);
        org.junit.Assert.assertNotNull(connectorList10);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(connectorList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(valveList28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(connectorList38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file51.toString(), "/tmp/UTF-8.1777709881895479374.0");
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertNotNull(connectorList62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(mimeMappings76);
        org.junit.Assert.assertNotNull(connectorList77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(connectorList83);
        org.junit.Assert.assertNotNull(file90);
        org.junit.Assert.assertEquals(file90.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file90.toString(), "/tmp/UTF-8.1970345105900439844.0");
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection99);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean15 = tomcatEmbeddedServletContainerFactory14.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection16 = tomcatEmbeddedServletContainerFactory14.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        tomcatEmbeddedServletContainerFactory19.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection25 = tomcatEmbeddedServletContainerFactory19.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors = connectorList33;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory26.protocol;
        org.apache.catalina.Context context36 = null;
        tomcatEmbeddedServletContainerFactory26.postProcessContext(context36);
        java.io.File file39 = tomcatEmbeddedServletContainerFactory26.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory19.setBaseDirectory(file39);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file39;
        int int42 = tomcatEmbeddedServletContainerFactory0.getPort();
        tomcatEmbeddedServletContainerFactory0.tldSkip = "UTF-8";
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8080 + "'", int13 == 8080);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(valveCollection16);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection25);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(file39);
        org.junit.Assert.assertEquals(file39.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file39.toString(), "/tmp/UTF-8.8087555523635929788.0");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8080 + "'", int42 == 8080);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        org.apache.catalina.connector.Connector connector11 = null;
        org.apache.catalina.connector.Connector[] connectorArray12 = new org.apache.catalina.connector.Connector[] { connector11 };
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory19.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors = connectorList21;
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory14.protocol;
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory14.protocol;
        java.net.InetAddress inetAddress25 = null;
        tomcatEmbeddedServletContainerFactory14.setAddress(inetAddress25);
        int int27 = tomcatEmbeddedServletContainerFactory14.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader28 = tomcatEmbeddedServletContainerFactory14.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory29.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection34 = tomcatEmbeddedServletContainerFactory29.getTomcatConnectorCustomizers();
        boolean boolean35 = tomcatEmbeddedServletContainerFactory29.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress36 = null;
        tomcatEmbeddedServletContainerFactory29.setAddress(inetAddress36);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray38 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory29.addContextCustomizers(tomcatContextCustomizerArray38);
        tomcatEmbeddedServletContainerFactory14.addContextCustomizers(tomcatContextCustomizerArray38);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray38);
        org.apache.catalina.Context context42 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context42);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList44 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(connectorArray12);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(connectorList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(resourceLoader28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList44);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory14.setTldSkip("UTF-8");
        java.io.File file20 = tomcatEmbeddedServletContainerFactory14.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file20);
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 100);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList24 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader27 = tomcatEmbeddedServletContainerFactory25.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection33 = tomcatEmbeddedServletContainerFactory28.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList34 = tomcatEmbeddedServletContainerFactory28.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory25.tomcatContextCustomizers = tomcatContextCustomizerList34;
        tomcatEmbeddedServletContainerFactory25.uriEncoding = "UTF-8";
        org.springframework.core.io.ResourceLoader resourceLoader38 = null;
        tomcatEmbeddedServletContainerFactory25.setResourceLoader(resourceLoader38);
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory25.tldSkip;
        tomcatEmbeddedServletContainerFactory25.setJspServletClassName("org.apache.tomcat.util.scan.MergedWebXml");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings44 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader45 = tomcatEmbeddedServletContainerFactory43.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory46.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory46.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection51 = tomcatEmbeddedServletContainerFactory46.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList52 = tomcatEmbeddedServletContainerFactory46.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory43.tomcatContextCustomizers = tomcatContextCustomizerList52;
        java.util.List<org.apache.catalina.Valve> valveList54 = tomcatEmbeddedServletContainerFactory43.contextValves;
        tomcatEmbeddedServletContainerFactory25.contextValves = valveList54;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory56.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory56.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList61 = tomcatEmbeddedServletContainerFactory56.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory62.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = tomcatEmbeddedServletContainerFactory62.getMimeMappings();
        tomcatEmbeddedServletContainerFactory56.setMimeMappings(mimeMappings65);
        org.apache.catalina.connector.Connector connector67 = null;
        org.apache.catalina.connector.Connector[] connectorArray68 = new org.apache.catalina.connector.Connector[] { connector67 };
        tomcatEmbeddedServletContainerFactory56.addAdditionalTomcatConnectors(connectorArray68);
        tomcatEmbeddedServletContainerFactory25.addAdditionalTomcatConnectors(connectorArray68);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray68);
        int int72 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(file20);
        org.junit.Assert.assertEquals(file20.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file20.toString(), "/tmp/UTF-8.1552709132345783808.0");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList24);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNull(resourceLoader27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection33);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList34);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(mimeMappings44);
        org.junit.Assert.assertNull(resourceLoader45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection51);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList52);
        org.junit.Assert.assertNotNull(valveList54);
        org.junit.Assert.assertNotNull(lifecycleListenerList61);
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertNotNull(connectorArray68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        boolean boolean15 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        java.io.File file18 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file18);
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection21 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory22.protocol;
        tomcatEmbeddedServletContainerFactory22.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory30.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection35 = tomcatEmbeddedServletContainerFactory30.getTomcatConnectorCustomizers();
        boolean boolean36 = tomcatEmbeddedServletContainerFactory30.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader39 = tomcatEmbeddedServletContainerFactory37.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory40.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection45 = tomcatEmbeddedServletContainerFactory40.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList46 = tomcatEmbeddedServletContainerFactory40.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory37.tomcatContextCustomizers = tomcatContextCustomizerList46;
        tomcatEmbeddedServletContainerFactory30.tomcatContextCustomizers = tomcatContextCustomizerList46;
        tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers = tomcatContextCustomizerList46;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList50 = tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList50;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str20, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNull(resourceLoader39);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection45);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList46);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList50);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        tomcatEmbeddedServletContainerFactory0.setPort(97);
        java.util.Collection<org.apache.catalina.Valve> valveCollection5 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory6.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory11.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory6.additionalTomcatConnectors = connectorList14;
        org.apache.catalina.Context context16 = null;
        tomcatEmbeddedServletContainerFactory6.postProcessContext(context16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList25 = tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors = connectorList25;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory18.protocol;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory18.protocol;
        java.net.InetAddress inetAddress29 = null;
        tomcatEmbeddedServletContainerFactory18.setAddress(inetAddress29);
        java.util.List<org.apache.catalina.connector.Connector> connectorList31 = tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors;
        java.io.File file32 = tomcatEmbeddedServletContainerFactory18.baseDirectory;
        org.apache.catalina.Valve[] valveArray33 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory18.addContextValves(valveArray33);
        tomcatEmbeddedServletContainerFactory6.addContextValves(valveArray33);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray33);
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(valveCollection5);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(connectorList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(connectorList31);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertNotNull(valveArray33);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        boolean boolean8 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader9;
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.apache.catalina.Context context13 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context13);
        org.springframework.core.io.ResourceLoader resourceLoader15 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        boolean boolean16 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList17 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.apache.catalina.Context context18 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(resourceLoader15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList17);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        org.apache.catalina.Context context9 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context9);
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory17.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors = connectorList19;
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory12.protocol;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory12.protocol;
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.io.File file29 = tomcatEmbeddedServletContainerFactory27.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory12.setBaseDirectory(file29);
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file29);
        tomcatEmbeddedServletContainerFactory0.tldSkip = "org.apache.coyote.http11.Http11NioProtocol";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory36.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray38 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory36.addConnectorCustomizers(tomcatConnectorCustomizerArray38);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray38);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory41.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory41.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = tomcatEmbeddedServletContainerFactory46.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList48 = tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList49 = tomcatEmbeddedServletContainerFactory46.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory41.additionalTomcatConnectors = connectorList49;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory51.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory51.addInitializers(servletContextInitializerArray53);
        tomcatEmbeddedServletContainerFactory51.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray57 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory51.addContextLifecycleListeners(lifecycleListenerArray57);
        tomcatEmbeddedServletContainerFactory41.addContextLifecycleListeners(lifecycleListenerArray57);
        org.apache.catalina.Context context60 = null;
        tomcatEmbeddedServletContainerFactory41.postProcessContext(context60);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory62.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = tomcatEmbeddedServletContainerFactory62.getMimeMappings();
        tomcatEmbeddedServletContainerFactory62.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str71 = tomcatEmbeddedServletContainerFactory70.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer72 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray73 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer72 };
        tomcatEmbeddedServletContainerFactory70.addInitializers(servletContextInitializerArray73);
        tomcatEmbeddedServletContainerFactory62.addInitializers(servletContextInitializerArray73);
        tomcatEmbeddedServletContainerFactory41.addInitializers(servletContextInitializerArray73);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray73);
        java.net.InetAddress inetAddress78 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(file29);
        org.junit.Assert.assertEquals(file29.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file29.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.3097559445126888694.100");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray38);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNotNull(connectorList48);
        org.junit.Assert.assertNotNull(connectorList49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "UTF-8" + "'", str52, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertNotNull(lifecycleListenerArray57);
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(servletContextInitializerArray73);
        org.junit.Assert.assertNull(inetAddress78);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray5 = new org.apache.catalina.LifecycleListener[] {};
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList6 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList6, lifecycleListenerArray5);
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList6;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList16;
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory9.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader21 = tomcatEmbeddedServletContainerFactory19.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory22.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList28 = tomcatEmbeddedServletContainerFactory22.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers = tomcatContextCustomizerList28;
        tomcatEmbeddedServletContainerFactory9.tomcatContextCustomizers = tomcatContextCustomizerList28;
        java.io.File file32 = tomcatEmbeddedServletContainerFactory9.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file32);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory34.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors = connectorList41;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory34.protocol;
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory34.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory45.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory45.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = tomcatEmbeddedServletContainerFactory50.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList52 = tomcatEmbeddedServletContainerFactory50.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory45.additionalTomcatConnectors = connectorList52;
        java.lang.String str54 = tomcatEmbeddedServletContainerFactory45.protocol;
        java.lang.String str55 = tomcatEmbeddedServletContainerFactory45.protocol;
        java.net.InetAddress inetAddress56 = null;
        tomcatEmbeddedServletContainerFactory45.setAddress(inetAddress56);
        int int58 = tomcatEmbeddedServletContainerFactory45.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = tomcatEmbeddedServletContainerFactory59.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList62 = tomcatEmbeddedServletContainerFactory61.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory59.tomcatConnectorCustomizers = tomcatConnectorCustomizerList62;
        tomcatEmbeddedServletContainerFactory45.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList62);
        tomcatEmbeddedServletContainerFactory34.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList62);
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList62;
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNotNull(lifecycleListenerArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNull(resourceLoader21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList28);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file32.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.6573071146341870662.0");
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertNotNull(connectorList52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(mimeMappings60);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList62);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader14 = tomcatEmbeddedServletContainerFactory12.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection20 = tomcatEmbeddedServletContainerFactory15.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList21 = tomcatEmbeddedServletContainerFactory15.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory12.tomcatContextCustomizers = tomcatContextCustomizerList21;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList23 = tomcatEmbeddedServletContainerFactory12.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList31 = tomcatEmbeddedServletContainerFactory29.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory24.additionalTomcatConnectors = connectorList31;
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory24.protocol;
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory24.protocol;
        tomcatEmbeddedServletContainerFactory24.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection37 = tomcatEmbeddedServletContainerFactory24.getTomcatContextCustomizers();
        int int38 = tomcatEmbeddedServletContainerFactory24.getPort();
        java.io.File file40 = tomcatEmbeddedServletContainerFactory24.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory12.baseDirectory = file40;
        org.apache.catalina.Valve[] valveArray42 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory12.addContextValves(valveArray42);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray42);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory45.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory45.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = tomcatEmbeddedServletContainerFactory50.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList52 = tomcatEmbeddedServletContainerFactory50.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory45.additionalTomcatConnectors = connectorList52;
        java.lang.String str54 = tomcatEmbeddedServletContainerFactory45.protocol;
        java.lang.String str55 = tomcatEmbeddedServletContainerFactory45.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory56.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory56.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList61 = tomcatEmbeddedServletContainerFactory56.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory62.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = tomcatEmbeddedServletContainerFactory62.getMimeMappings();
        tomcatEmbeddedServletContainerFactory56.setMimeMappings(mimeMappings65);
        tomcatEmbeddedServletContainerFactory45.setMimeMappings(mimeMappings65);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings65);
        int int69 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str73 = tomcatEmbeddedServletContainerFactory72.uriEncoding;
        tomcatEmbeddedServletContainerFactory72.setUriEncoding("");
        java.lang.String str76 = tomcatEmbeddedServletContainerFactory72.protocol;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection77 = tomcatEmbeddedServletContainerFactory72.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection77);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(resourceLoader14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection20);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList23);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNotNull(connectorList31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(file40);
        org.junit.Assert.assertEquals(file40.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file40.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.4140366429749790100.0");
        org.junit.Assert.assertNotNull(valveArray42);
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertNotNull(connectorList52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList61);
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "UTF-8" + "'", str73, "UTF-8");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str76, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection77);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection12 = tomcatEmbeddedServletContainerFactory7.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList13 = tomcatEmbeddedServletContainerFactory7.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList13;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList15 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        java.net.InetAddress inetAddress16 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection12);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList13);
        org.junit.Assert.assertNotNull(lifecycleListenerList15);
        org.junit.Assert.assertNull(inetAddress16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory2.getContextPath();
        java.io.File file6 = tomcatEmbeddedServletContainerFactory2.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection12 = tomcatEmbeddedServletContainerFactory7.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory2.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection12);
        boolean boolean14 = tomcatEmbeddedServletContainerFactory2.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory15.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList20 = tomcatEmbeddedServletContainerFactory15.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory15.setMimeMappings(mimeMappings24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList27 = tomcatEmbeddedServletContainerFactory26.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection28 = tomcatEmbeddedServletContainerFactory26.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings30 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader31 = tomcatEmbeddedServletContainerFactory29.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray32 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory29.addErrorPages(errorPageArray32);
        tomcatEmbeddedServletContainerFactory26.addErrorPages(errorPageArray32);
        tomcatEmbeddedServletContainerFactory15.addErrorPages(errorPageArray32);
        tomcatEmbeddedServletContainerFactory2.addErrorPages(errorPageArray32);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(file6);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(lifecycleListenerList20);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection28);
        org.junit.Assert.assertNotNull(mimeMappings30);
        org.junit.Assert.assertNull(resourceLoader31);
        org.junit.Assert.assertNotNull(errorPageArray32);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory16.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList23 = tomcatEmbeddedServletContainerFactory21.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors = connectorList23;
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory16.protocol;
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory16.protocol;
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection29 = tomcatEmbeddedServletContainerFactory16.getTomcatContextCustomizers();
        int int30 = tomcatEmbeddedServletContainerFactory16.getPort();
        java.io.File file32 = tomcatEmbeddedServletContainerFactory16.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file32;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory34.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList42 = tomcatEmbeddedServletContainerFactory39.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory34.additionalTomcatConnectors = connectorList42;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory44.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection49 = tomcatEmbeddedServletContainerFactory44.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList50 = tomcatEmbeddedServletContainerFactory44.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory34.tomcatContextCustomizers = tomcatContextCustomizerList50;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str53 = storeMergedWebXmlListener52.getEmptyWebXml();
        java.lang.String str54 = storeMergedWebXmlListener52.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str56 = storeMergedWebXmlListener55.getMERGED_WEB_XML();
        java.lang.String str57 = storeMergedWebXmlListener55.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray58 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener52, storeMergedWebXmlListener55 };
        tomcatEmbeddedServletContainerFactory34.addContextLifecycleListeners(lifecycleListenerArray58);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray58);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet61 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(connectorList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(file32);
        org.junit.Assert.assertEquals(file32.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file32.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.7726603460152734283.0");
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertNotNull(connectorList42);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection49);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str53, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str54, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str56, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str57, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray58);
        org.junit.Assert.assertNotNull(errorPageSet61);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList5 = tomcatEmbeddedServletContainerFactory4.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection6 = tomcatEmbeddedServletContainerFactory4.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList7 = tomcatEmbeddedServletContainerFactory4.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory4.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList9 = tomcatEmbeddedServletContainerFactory4.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory4.setRegisterJspServlet(true);
        java.util.List<org.apache.catalina.connector.Connector> connectorList12 = tomcatEmbeddedServletContainerFactory4.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors = connectorList20;
        org.apache.catalina.Context context22 = null;
        tomcatEmbeddedServletContainerFactory13.postProcessContext(context22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory26.tldSkip;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray28 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory26.addConnectorCustomizers(tomcatConnectorCustomizerArray28);
        tomcatEmbeddedServletContainerFactory13.addConnectorCustomizers(tomcatConnectorCustomizerArray28);
        tomcatEmbeddedServletContainerFactory4.addConnectorCustomizers(tomcatConnectorCustomizerArray28);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray28);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList34 = tomcatEmbeddedServletContainerFactory33.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection35 = tomcatEmbeddedServletContainerFactory33.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader38 = tomcatEmbeddedServletContainerFactory36.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray39 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory36.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory33.addErrorPages(errorPageArray39);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory42.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings48 = tomcatEmbeddedServletContainerFactory47.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList49 = tomcatEmbeddedServletContainerFactory47.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory42.additionalTomcatConnectors = connectorList49;
        java.lang.String str51 = tomcatEmbeddedServletContainerFactory42.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = tomcatEmbeddedServletContainerFactory52.getMimeMappings();
        tomcatEmbeddedServletContainerFactory42.setMimeMappings(mimeMappings55);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList58 = tomcatEmbeddedServletContainerFactory57.tomcatConnectorCustomizers;
        int int59 = tomcatEmbeddedServletContainerFactory57.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray60 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory57.addContextLifecycleListeners(lifecycleListenerArray60);
        tomcatEmbeddedServletContainerFactory42.addContextLifecycleListeners(lifecycleListenerArray60);
        java.util.List<org.apache.catalina.Valve> valveList63 = tomcatEmbeddedServletContainerFactory42.contextValves;
        tomcatEmbeddedServletContainerFactory33.contextValves = valveList63;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList63;
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings69 = tomcatEmbeddedServletContainerFactory68.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList71 = tomcatEmbeddedServletContainerFactory70.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory68.tomcatConnectorCustomizers = tomcatConnectorCustomizerList71;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection73 = tomcatEmbeddedServletContainerFactory68.getContextLifecycleListeners();
        java.lang.String str74 = tomcatEmbeddedServletContainerFactory68.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory75.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory75.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection80 = tomcatEmbeddedServletContainerFactory75.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory75.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector83 = null;
        org.apache.catalina.connector.Connector[] connectorArray84 = new org.apache.catalina.connector.Connector[] { connector83 };
        tomcatEmbeddedServletContainerFactory75.addAdditionalTomcatConnectors(connectorArray84);
        tomcatEmbeddedServletContainerFactory68.addAdditionalTomcatConnectors(connectorArray84);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray84);
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 1);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) '4');
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList5);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection6);
        org.junit.Assert.assertNotNull(valveList7);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(connectorList9);
        org.junit.Assert.assertNotNull(connectorList12);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList34);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection35);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNull(resourceLoader38);
        org.junit.Assert.assertNotNull(errorPageArray39);
        org.junit.Assert.assertNotNull(mimeMappings48);
        org.junit.Assert.assertNotNull(connectorList49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray60);
        org.junit.Assert.assertNotNull(valveList63);
        org.junit.Assert.assertNotNull(mimeMappings69);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList71);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "UTF-8" + "'", str74, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection80);
        org.junit.Assert.assertNotNull(connectorArray84);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.tldSkip;
        org.apache.catalina.Context context16 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context16);
        boolean boolean18 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.io.File file19 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(file19);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((-1));
        java.net.InetAddress inetAddress2 = tomcatEmbeddedServletContainerFactory1.getAddress();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory1.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        boolean boolean7 = tomcatEmbeddedServletContainerFactory4.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory4.setRegisterDefaultServlet(true);
        java.io.File file11 = tomcatEmbeddedServletContainerFactory4.createTempDir("org.apache.tomcat.util.scan.MergedWebXml");
        tomcatEmbeddedServletContainerFactory1.baseDirectory = file11;
        org.junit.Assert.assertNull(inetAddress2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(file11);
        org.junit.Assert.assertEquals(file11.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file11.toString(), "/tmp/org.apache.tomcat.util.scan.MergedWebXml.4474083587694044333.0");
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.io.File file5 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList7 = tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers;
        org.junit.Assert.assertNull(file5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList7);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n", 97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection5 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection12 = tomcatEmbeddedServletContainerFactory7.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory7.setSessionTimeout((int) (byte) -1);
        org.apache.catalina.connector.Connector connector15 = null;
        org.apache.catalina.connector.Connector[] connectorArray16 = new org.apache.catalina.connector.Connector[] { connector15 };
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray16);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray16);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList19 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.apache.catalina.Context context25 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList27 = tomcatEmbeddedServletContainerFactory26.tomcatConnectorCustomizers;
        int int28 = tomcatEmbeddedServletContainerFactory26.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory26.uriEncoding = "hi!";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory31.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray33 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray33);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str36 = storeMergedWebXmlListener35.getMERGED_WEB_XML();
        java.lang.String str37 = storeMergedWebXmlListener35.getMERGED_WEB_XML();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str40 = storeMergedWebXmlListener39.getMERGED_WEB_XML();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray41 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener35, storeMergedWebXmlListener38, storeMergedWebXmlListener39 };
        java.util.ArrayList<org.apache.catalina.LifecycleListener> lifecycleListenerList42 = new java.util.ArrayList<org.apache.catalina.LifecycleListener>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<org.apache.catalina.LifecycleListener>) lifecycleListenerList42, lifecycleListenerArray41);
        tomcatEmbeddedServletContainerFactory31.contextLifecycleListeners = lifecycleListenerList42;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray45 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray45);
        tomcatEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray45);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context25, servletContextInitializerArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection12);
        org.junit.Assert.assertNotNull(connectorArray16);
        org.junit.Assert.assertNotNull(lifecycleListenerList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-8" + "'", str32, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str36, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str37, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str40, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertNotNull(lifecycleListenerArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(servletContextInitializerArray45);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        boolean boolean8 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean10 = tomcatEmbeddedServletContainerFactory9.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList11 = tomcatEmbeddedServletContainerFactory9.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray12 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList13 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList13, tomcatConnectorCustomizerArray12);
        tomcatEmbeddedServletContainerFactory9.tomcatConnectorCustomizers = tomcatConnectorCustomizerList13;
        tomcatEmbeddedServletContainerFactory9.setSessionTimeout(1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory18.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList25 = tomcatEmbeddedServletContainerFactory23.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors = connectorList25;
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory18.protocol;
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory18.protocol;
        tomcatEmbeddedServletContainerFactory18.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection31 = tomcatEmbeddedServletContainerFactory18.getTomcatContextCustomizers();
        int int32 = tomcatEmbeddedServletContainerFactory18.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory33.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory38.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList40 = tomcatEmbeddedServletContainerFactory38.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors = connectorList40;
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory33.protocol;
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory33.protocol;
        java.net.InetAddress inetAddress44 = null;
        tomcatEmbeddedServletContainerFactory33.setAddress(inetAddress44);
        java.util.List<org.apache.catalina.connector.Connector> connectorList46 = tomcatEmbeddedServletContainerFactory33.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory47.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory47.setTldSkip("UTF-8");
        java.io.File file53 = tomcatEmbeddedServletContainerFactory47.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory33.setDocumentRoot(file53);
        tomcatEmbeddedServletContainerFactory18.setDocumentRoot(file53);
        tomcatEmbeddedServletContainerFactory9.baseDirectory = file53;
        tomcatEmbeddedServletContainerFactory9.protocol = "UTF-8";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory59.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory59.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = tomcatEmbeddedServletContainerFactory64.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList66 = tomcatEmbeddedServletContainerFactory64.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory59.additionalTomcatConnectors = connectorList66;
        java.lang.String str68 = tomcatEmbeddedServletContainerFactory59.protocol;
        java.lang.String str69 = tomcatEmbeddedServletContainerFactory59.protocol;
        java.net.InetAddress inetAddress70 = null;
        tomcatEmbeddedServletContainerFactory59.setAddress(inetAddress70);
        int int72 = tomcatEmbeddedServletContainerFactory59.getPort();
        org.springframework.core.io.ResourceLoader resourceLoader73 = tomcatEmbeddedServletContainerFactory59.resourceLoader;
        java.lang.String str74 = tomcatEmbeddedServletContainerFactory59.getDEFAULT_PROTOCOL();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray75 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet76 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet76, errorPageArray75);
        tomcatEmbeddedServletContainerFactory59.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet76);
        tomcatEmbeddedServletContainerFactory9.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet76);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings81 = tomcatEmbeddedServletContainerFactory80.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList82 = tomcatEmbeddedServletContainerFactory80.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory80.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList85 = tomcatEmbeddedServletContainerFactory80.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory9.tomcatConnectorCustomizers = tomcatConnectorCustomizerList85;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList85;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection88 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(valveList11);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertNotNull(connectorList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(connectorList40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(connectorList46);
        org.junit.Assert.assertNotNull(file53);
        org.junit.Assert.assertEquals(file53.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file53.toString(), "/tmp/UTF-8.1045324077174291434.0");
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertNotNull(connectorList66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(resourceLoader73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str74, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertNotNull(errorPageArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(mimeMappings81);
        org.junit.Assert.assertNotNull(connectorList82);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList85);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection88);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader2 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList9 = tomcatEmbeddedServletContainerFactory3.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList9;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "UTF-8";
        java.net.InetAddress inetAddress13 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory16.setResourceLoader(resourceLoader17);
        tomcatEmbeddedServletContainerFactory16.setPort(10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory16.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList21;
        tomcatEmbeddedServletContainerFactory0.tldSkip = "org.apache.tomcat.util.scan.MergedWebXml";
        tomcatEmbeddedServletContainerFactory0.protocol = "org.apache.coyote.http11.Http11NioProtocol";
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNull(resourceLoader2);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList9);
        org.junit.Assert.assertNull(inetAddress13);
        org.junit.Assert.assertNotNull(connectorList21);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader5 = tomcatEmbeddedServletContainerFactory3.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory3.addErrorPages(errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory14.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors = connectorList17;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection24 = tomcatEmbeddedServletContainerFactory19.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList25 = tomcatEmbeddedServletContainerFactory19.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory9.tomcatContextCustomizers = tomcatContextCustomizerList25;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str28 = storeMergedWebXmlListener27.getEmptyWebXml();
        java.lang.String str29 = storeMergedWebXmlListener27.getEmptyWebXml();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str31 = storeMergedWebXmlListener30.getMERGED_WEB_XML();
        java.lang.String str32 = storeMergedWebXmlListener30.getEmptyWebXml();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray33 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener27, storeMergedWebXmlListener30 };
        tomcatEmbeddedServletContainerFactory9.addContextLifecycleListeners(lifecycleListenerArray33);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray33);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList39 = tomcatEmbeddedServletContainerFactory38.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory36.tomcatConnectorCustomizers = tomcatConnectorCustomizerList39;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList39;
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 100);
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory45.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory45.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = tomcatEmbeddedServletContainerFactory50.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList52 = tomcatEmbeddedServletContainerFactory50.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList53 = tomcatEmbeddedServletContainerFactory50.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory45.additionalTomcatConnectors = connectorList53;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str56 = tomcatEmbeddedServletContainerFactory55.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray57 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory55.addInitializers(servletContextInitializerArray57);
        tomcatEmbeddedServletContainerFactory55.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray61 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory55.addContextLifecycleListeners(lifecycleListenerArray61);
        tomcatEmbeddedServletContainerFactory45.addContextLifecycleListeners(lifecycleListenerArray61);
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList64 = tomcatEmbeddedServletContainerFactory45.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory45.setRegisterDefaultServlet(false);
        java.util.List<org.apache.catalina.connector.Connector> connectorList67 = tomcatEmbeddedServletContainerFactory45.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList67;
        tomcatEmbeddedServletContainerFactory0.tldSkip = "";
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNull(resourceLoader5);
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection24);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str28, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str29, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str31, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str32, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(lifecycleListenerArray33);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertNotNull(connectorList52);
        org.junit.Assert.assertNotNull(connectorList53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "UTF-8" + "'", str56, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray57);
        org.junit.Assert.assertNotNull(lifecycleListenerArray61);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList64);
        org.junit.Assert.assertNotNull(connectorList67);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str2 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str4 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str5 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str6 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str7 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str8 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str1, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str2, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str4, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str5, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str6, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str7, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str8, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray15 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16, errorPageArray15);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet16);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) '#');
        java.io.File file21 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(10);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(errorPageArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(file21);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList8 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList8;
        org.apache.catalina.Context context10 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context10);
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory0.getDEFAULT_PROTOCOL();
        boolean boolean13 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.apache.catalina.Context context15 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context15);
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(connectorList8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str12, "org.apache.coyote.http11.Http11NioProtocol");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-8" + "'", str14, "UTF-8");
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        java.util.List<org.apache.catalina.connector.Connector> connectorList15 = tomcatEmbeddedServletContainerFactory12.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory7.additionalTomcatConnectors = connectorList15;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory17.addInitializers(servletContextInitializerArray19);
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray23 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory17.addContextLifecycleListeners(lifecycleListenerArray23);
        tomcatEmbeddedServletContainerFactory7.addContextLifecycleListeners(lifecycleListenerArray23);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory26.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList33 = tomcatEmbeddedServletContainerFactory31.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors = connectorList33;
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory26.protocol;
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory26.protocol;
        java.net.InetAddress inetAddress37 = null;
        tomcatEmbeddedServletContainerFactory26.setAddress(inetAddress37);
        java.util.List<org.apache.catalina.connector.Connector> connectorList39 = tomcatEmbeddedServletContainerFactory26.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory40.setTldSkip("UTF-8");
        java.io.File file46 = tomcatEmbeddedServletContainerFactory40.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory26.setDocumentRoot(file46);
        tomcatEmbeddedServletContainerFactory7.setDocumentRoot(file46);
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file46;
        org.springframework.core.io.ResourceLoader resourceLoader50 = null;
        tomcatEmbeddedServletContainerFactory0.resourceLoader = resourceLoader50;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.Context context53 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertNotNull(connectorList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(lifecycleListenerArray23);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(connectorList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(connectorList39);
        org.junit.Assert.assertNotNull(file46);
        org.junit.Assert.assertEquals(file46.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file46.toString(), "/tmp/UTF-8.4899268954486990664.0");
        org.junit.Assert.assertNotNull(mimeMappings52);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.apache.catalina.Context context10 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context10);
        int int12 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory18.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory13.additionalTomcatConnectors = connectorList20;
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory13.protocol;
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory13.protocol;
        tomcatEmbeddedServletContainerFactory13.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection26 = tomcatEmbeddedServletContainerFactory13.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList27 = tomcatEmbeddedServletContainerFactory13.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory13.tldSkip = "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n";
        boolean boolean30 = tomcatEmbeddedServletContainerFactory13.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory31.setTldSkip("UTF-8");
        java.io.File file37 = tomcatEmbeddedServletContainerFactory31.createTempDir("UTF-8");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory39.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory39.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList44 = tomcatEmbeddedServletContainerFactory39.contextLifecycleListeners;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList45 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory31.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList45);
        tomcatEmbeddedServletContainerFactory13.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList45);
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList45);
        org.apache.catalina.Context context49 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList51 = tomcatEmbeddedServletContainerFactory50.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection52 = tomcatEmbeddedServletContainerFactory50.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader55 = tomcatEmbeddedServletContainerFactory53.resourceLoader;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray56 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        tomcatEmbeddedServletContainerFactory53.addErrorPages(errorPageArray56);
        tomcatEmbeddedServletContainerFactory50.addErrorPages(errorPageArray56);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory59.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory59.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = tomcatEmbeddedServletContainerFactory64.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList66 = tomcatEmbeddedServletContainerFactory64.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory59.additionalTomcatConnectors = connectorList66;
        java.lang.String str68 = tomcatEmbeddedServletContainerFactory59.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory69.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings72 = tomcatEmbeddedServletContainerFactory69.getMimeMappings();
        tomcatEmbeddedServletContainerFactory59.setMimeMappings(mimeMappings72);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList75 = tomcatEmbeddedServletContainerFactory74.tomcatConnectorCustomizers;
        int int76 = tomcatEmbeddedServletContainerFactory74.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray77 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory74.addContextLifecycleListeners(lifecycleListenerArray77);
        tomcatEmbeddedServletContainerFactory59.addContextLifecycleListeners(lifecycleListenerArray77);
        java.util.List<org.apache.catalina.Valve> valveList80 = tomcatEmbeddedServletContainerFactory59.contextValves;
        tomcatEmbeddedServletContainerFactory50.contextValves = valveList80;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory84 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str85 = tomcatEmbeddedServletContainerFactory84.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer86 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray87 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer86 };
        tomcatEmbeddedServletContainerFactory84.addInitializers(servletContextInitializerArray87);
        tomcatEmbeddedServletContainerFactory50.addInitializers(servletContextInitializerArray87);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.configureContext(context49, servletContextInitializerArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection26);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(file37);
        org.junit.Assert.assertEquals(file37.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file37.toString(), "/tmp/UTF-8.4702159839959488101.0");
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(lifecycleListenerList44);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList51);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection52);
        org.junit.Assert.assertNotNull(mimeMappings54);
        org.junit.Assert.assertNull(resourceLoader55);
        org.junit.Assert.assertNotNull(errorPageArray56);
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertNotNull(connectorList66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!" + "'", str68, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings72);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray77);
        org.junit.Assert.assertNotNull(valveList80);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(servletContextInitializerArray87);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader9 = tomcatEmbeddedServletContainerFactory7.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory10.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection15 = tomcatEmbeddedServletContainerFactory10.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory7.tomcatContextCustomizers = tomcatContextCustomizerList16;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList16;
        java.io.File file19 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        java.io.File file21 = tomcatEmbeddedServletContainerFactory0.createTempDir("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.core.io.ResourceLoader resourceLoader22 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        java.io.File file28 = tomcatEmbeddedServletContainerFactory23.baseDirectory;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory23.getUriEncoding();
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory23.uriEncoding;
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory23.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList32 = tomcatEmbeddedServletContainerFactory23.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList32;
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = null;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList34;
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNull(resourceLoader9);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection15);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList16);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(file21);
        org.junit.Assert.assertEquals(file21.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file21.toString(), "/tmp/org.apache.coyote.http11.Http11NioProtocol.36017199945919052.0");
        org.junit.Assert.assertNull(resourceLoader22);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-8" + "'", str29, "UTF-8");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-8" + "'", str30, "UTF-8");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-8" + "'", str31, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList32);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        boolean boolean10 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader11 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList14 = null;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList14;
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader17);
        tomcatEmbeddedServletContainerFactory0.tldSkip = "org.apache.coyote.http11.Http11NioProtocol";
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(resourceLoader11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.core.io.ResourceLoader resourceLoader3 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader3);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory5.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection10 = tomcatEmbeddedServletContainerFactory5.getTomcatConnectorCustomizers();
        boolean boolean11 = tomcatEmbeddedServletContainerFactory5.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress12 = null;
        tomcatEmbeddedServletContainerFactory5.setAddress(inetAddress12);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray14 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory5.addContextCustomizers(tomcatContextCustomizerArray14);
        tomcatEmbeddedServletContainerFactory2.addContextCustomizers(tomcatContextCustomizerArray14);
        java.net.InetAddress inetAddress17 = tomcatEmbeddedServletContainerFactory2.getAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet18 = tomcatEmbeddedServletContainerFactory2.getErrorPages();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray14);
        org.junit.Assert.assertNull(inetAddress17);
        org.junit.Assert.assertNotNull(errorPageSet18);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str2 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str4 = storeMergedWebXmlListener0.getMERGED_WEB_XML();
        java.lang.String str5 = storeMergedWebXmlListener0.getEmptyWebXml();
        org.apache.catalina.Context context6 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.onStart(context6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str2, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str4, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str5, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList5 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection11 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.net.InetAddress inetAddress12 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.junit.Assert.assertNotNull(lifecycleListenerList5);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection11);
        org.junit.Assert.assertNull(inetAddress12);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str1 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        java.lang.String str2 = storeMergedWebXmlListener0.getEmptyWebXml();
        java.lang.String str3 = storeMergedWebXmlListener0.MERGED_WEB_XML;
        org.apache.catalina.LifecycleEvent lifecycleEvent4 = null;
        // The following exception was thrown during execution in test generation
        try {
            storeMergedWebXmlListener0.lifecycleEvent(lifecycleEvent4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str1, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str2, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str3, "org.apache.tomcat.util.scan.MergedWebXml");
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.core.io.ResourceLoader resourceLoader4 = tomcatEmbeddedServletContainerFactory2.resourceLoader;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory5.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection10 = tomcatEmbeddedServletContainerFactory5.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList11 = tomcatEmbeddedServletContainerFactory5.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList11;
        tomcatEmbeddedServletContainerFactory2.uriEncoding = "UTF-8";
        int int15 = tomcatEmbeddedServletContainerFactory2.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean17 = tomcatEmbeddedServletContainerFactory16.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection18 = tomcatEmbeddedServletContainerFactory16.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        tomcatEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings19);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings19);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList29 = tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors = connectorList29;
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory22.protocol;
        org.apache.catalina.Context context32 = null;
        tomcatEmbeddedServletContainerFactory22.postProcessContext(context32);
        java.util.List<org.apache.catalina.connector.Connector> connectorList34 = tomcatEmbeddedServletContainerFactory22.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList34;
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList36 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) 'a');
        org.apache.catalina.Context context39 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addJspServlet(context39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(resourceLoader4);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection10);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8080 + "'", int15 == 8080);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(valveCollection18);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(connectorList29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(connectorList34);
        org.junit.Assert.assertNotNull(lifecycleListenerList36);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory4.protocol;
        tomcatEmbeddedServletContainerFactory4.setTldSkip("org.apache.coyote.http11.Http11NioProtocol");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory12.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection17 = tomcatEmbeddedServletContainerFactory12.getTomcatConnectorCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList18 = tomcatEmbeddedServletContainerFactory12.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers = tomcatContextCustomizerList18;
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList20 = tomcatEmbeddedServletContainerFactory4.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers = tomcatContextCustomizerList20;
        java.net.InetAddress inetAddress22 = tomcatEmbeddedServletContainerFactory2.getAddress();
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory2.getUriEncoding();
        tomcatEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        tomcatEmbeddedServletContainerFactory2.setTldSkip("");
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList28 = tomcatEmbeddedServletContainerFactory2.tomcatContextCustomizers;
        org.apache.catalina.Context context29 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.addJspServlet(context29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection17);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList18);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList20);
        org.junit.Assert.assertNull(inetAddress22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList28);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int2 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory3.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList10 = tomcatEmbeddedServletContainerFactory8.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory3.additionalTomcatConnectors = connectorList10;
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory3.protocol;
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory3.protocol;
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection16 = tomcatEmbeddedServletContainerFactory3.getTomcatContextCustomizers();
        java.io.File file17 = tomcatEmbeddedServletContainerFactory3.baseDirectory;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList19 = tomcatEmbeddedServletContainerFactory18.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory3.tomcatConnectorCustomizers = tomcatConnectorCustomizerList19;
        boolean boolean21 = tomcatEmbeddedServletContainerFactory3.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory22.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList29 = tomcatEmbeddedServletContainerFactory27.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory22.additionalTomcatConnectors = connectorList29;
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory22.protocol;
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory22.protocol;
        java.net.InetAddress inetAddress33 = null;
        tomcatEmbeddedServletContainerFactory22.setAddress(inetAddress33);
        java.io.File file35 = null;
        tomcatEmbeddedServletContainerFactory22.setBaseDirectory(file35);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray37 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory22.addContextCustomizers(tomcatContextCustomizerArray37);
        java.util.List<org.apache.catalina.Valve> valveList39 = tomcatEmbeddedServletContainerFactory22.contextValves;
        tomcatEmbeddedServletContainerFactory3.contextValves = valveList39;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList39;
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8080 + "'", int2 == 8080);
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(connectorList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(connectorList29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray37);
        org.junit.Assert.assertNotNull(valveList39);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings1 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList3 = tomcatEmbeddedServletContainerFactory2.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers = tomcatConnectorCustomizerList3;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet5 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList6 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.junit.Assert.assertNotNull(mimeMappings1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList3);
        org.junit.Assert.assertNotNull(errorPageSet5);
        org.junit.Assert.assertNotNull(lifecycleListenerList6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList14 = tomcatEmbeddedServletContainerFactory9.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners = lifecycleListenerList14;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str17 = storeMergedWebXmlListener16.getMERGED_WEB_XML();
        java.lang.String str18 = storeMergedWebXmlListener16.MERGED_WEB_XML;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str20 = storeMergedWebXmlListener19.getEmptyWebXml();
        java.lang.String str21 = storeMergedWebXmlListener19.getEmptyWebXml();
        java.lang.String str22 = storeMergedWebXmlListener19.MERGED_WEB_XML;
        java.lang.String str23 = storeMergedWebXmlListener19.getMERGED_WEB_XML();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str25 = storeMergedWebXmlListener24.getMERGED_WEB_XML();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener storeMergedWebXmlListener26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.StoreMergedWebXmlListener();
        java.lang.String str27 = storeMergedWebXmlListener26.getEmptyWebXml();
        java.lang.String str28 = storeMergedWebXmlListener26.getEmptyWebXml();
        java.lang.String str29 = storeMergedWebXmlListener26.MERGED_WEB_XML;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray30 = new org.apache.catalina.LifecycleListener[] { storeMergedWebXmlListener16, storeMergedWebXmlListener19, storeMergedWebXmlListener24, storeMergedWebXmlListener26 };
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray30);
        boolean boolean32 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(lifecycleListenerList14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str17, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str18, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str20, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str21, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str22, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str23, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str25, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str27, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n" + "'", str28, "<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.apache.tomcat.util.scan.MergedWebXml" + "'", str29, "org.apache.tomcat.util.scan.MergedWebXml");
        org.junit.Assert.assertNotNull(lifecycleListenerArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.apache.catalina.Context context13 = null;
        tomcatEmbeddedServletContainerFactory0.postProcessContext(context13);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet15 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setPort((int) (short) 0);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList19 = null;
        tomcatEmbeddedServletContainerFactory16.contextLifecycleListeners = lifecycleListenerList19;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList24 = tomcatEmbeddedServletContainerFactory23.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory21.tomcatConnectorCustomizers = tomcatConnectorCustomizerList24;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = tomcatEmbeddedServletContainerFactory21.getErrorPages();
        java.net.InetAddress inetAddress27 = tomcatEmbeddedServletContainerFactory21.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory28.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList33 = tomcatEmbeddedServletContainerFactory28.contextLifecycleListeners;
        org.springframework.core.io.ResourceLoader resourceLoader34 = null;
        tomcatEmbeddedServletContainerFactory28.resourceLoader = resourceLoader34;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean37 = tomcatEmbeddedServletContainerFactory36.isRegisterDefaultServlet();
        java.util.List<org.apache.catalina.Valve> valveList38 = tomcatEmbeddedServletContainerFactory36.contextValves;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray39 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer>) tomcatConnectorCustomizerList40, tomcatConnectorCustomizerArray39);
        tomcatEmbeddedServletContainerFactory36.tomcatConnectorCustomizers = tomcatConnectorCustomizerList40;
        tomcatEmbeddedServletContainerFactory36.setSessionTimeout(1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory45.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory45.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = tomcatEmbeddedServletContainerFactory50.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList52 = tomcatEmbeddedServletContainerFactory50.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory45.additionalTomcatConnectors = connectorList52;
        java.lang.String str54 = tomcatEmbeddedServletContainerFactory45.protocol;
        java.lang.String str55 = tomcatEmbeddedServletContainerFactory45.protocol;
        tomcatEmbeddedServletContainerFactory45.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection58 = tomcatEmbeddedServletContainerFactory45.getTomcatContextCustomizers();
        int int59 = tomcatEmbeddedServletContainerFactory45.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory60.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory60.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings66 = tomcatEmbeddedServletContainerFactory65.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList67 = tomcatEmbeddedServletContainerFactory65.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors = connectorList67;
        java.lang.String str69 = tomcatEmbeddedServletContainerFactory60.protocol;
        java.lang.String str70 = tomcatEmbeddedServletContainerFactory60.protocol;
        java.net.InetAddress inetAddress71 = null;
        tomcatEmbeddedServletContainerFactory60.setAddress(inetAddress71);
        java.util.List<org.apache.catalina.connector.Connector> connectorList73 = tomcatEmbeddedServletContainerFactory60.additionalTomcatConnectors;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory74.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory74.setTldSkip("UTF-8");
        java.io.File file80 = tomcatEmbeddedServletContainerFactory74.createTempDir("UTF-8");
        tomcatEmbeddedServletContainerFactory60.setDocumentRoot(file80);
        tomcatEmbeddedServletContainerFactory45.setDocumentRoot(file80);
        tomcatEmbeddedServletContainerFactory36.baseDirectory = file80;
        tomcatEmbeddedServletContainerFactory28.setDocumentRoot(file80);
        tomcatEmbeddedServletContainerFactory21.setBaseDirectory(file80);
        tomcatEmbeddedServletContainerFactory16.baseDirectory = file80;
        tomcatEmbeddedServletContainerFactory0.baseDirectory = file80;
        tomcatEmbeddedServletContainerFactory0.setTldSkip("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(errorPageSet15);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList24);
        org.junit.Assert.assertNotNull(errorPageSet26);
        org.junit.Assert.assertNull(inetAddress27);
        org.junit.Assert.assertNotNull(lifecycleListenerList33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(valveList38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertNotNull(connectorList52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(mimeMappings66);
        org.junit.Assert.assertNotNull(connectorList67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!" + "'", str70, "hi!");
        org.junit.Assert.assertNotNull(connectorList73);
        org.junit.Assert.assertNotNull(file80);
        org.junit.Assert.assertEquals(file80.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file80.toString(), "/tmp/UTF-8.3806679370287864747.0");
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.core.io.ResourceLoader resourceLoader7 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.net.InetAddress inetAddress8 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress8);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray12 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray12);
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setSessionTimeout((int) (short) 100);
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList19 = tomcatEmbeddedServletContainerFactory10.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory20.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList27 = tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors = connectorList27;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory20.protocol;
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory20.protocol;
        tomcatEmbeddedServletContainerFactory20.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection33 = tomcatEmbeddedServletContainerFactory20.getTomcatContextCustomizers();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList34 = tomcatEmbeddedServletContainerFactory20.tomcatContextCustomizers;
        tomcatEmbeddedServletContainerFactory10.tomcatContextCustomizers = tomcatContextCustomizerList34;
        tomcatEmbeddedServletContainerFactory0.tomcatContextCustomizers = tomcatContextCustomizerList34;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory37.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory42.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors = connectorList44;
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory37.protocol;
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory37.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory48.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList53 = tomcatEmbeddedServletContainerFactory48.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = tomcatEmbeddedServletContainerFactory54.getMimeMappings();
        tomcatEmbeddedServletContainerFactory48.setMimeMappings(mimeMappings57);
        tomcatEmbeddedServletContainerFactory37.setMimeMappings(mimeMappings57);
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory37.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList61 = tomcatEmbeddedServletContainerFactory37.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory37.uriEncoding = "";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings65 = tomcatEmbeddedServletContainerFactory64.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList67 = tomcatEmbeddedServletContainerFactory66.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory64.tomcatConnectorCustomizers = tomcatConnectorCustomizerList67;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection69 = tomcatEmbeddedServletContainerFactory64.getContextLifecycleListeners();
        java.lang.String str70 = tomcatEmbeddedServletContainerFactory64.uriEncoding;
        tomcatEmbeddedServletContainerFactory64.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings75 = tomcatEmbeddedServletContainerFactory74.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList77 = tomcatEmbeddedServletContainerFactory76.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory74.tomcatConnectorCustomizers = tomcatConnectorCustomizerList77;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection79 = tomcatEmbeddedServletContainerFactory74.getContextLifecycleListeners();
        java.lang.String str80 = tomcatEmbeddedServletContainerFactory74.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList81 = tomcatEmbeddedServletContainerFactory74.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory73.additionalTomcatConnectors = connectorList81;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray83 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory73.addContextCustomizers(tomcatContextCustomizerArray83);
        tomcatEmbeddedServletContainerFactory64.addContextCustomizers(tomcatContextCustomizerArray83);
        tomcatEmbeddedServletContainerFactory37.addContextCustomizers(tomcatContextCustomizerArray83);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray83);
        java.io.File file88 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        java.lang.String str89 = tomcatEmbeddedServletContainerFactory0.uriEncoding;
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(resourceLoader7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList19);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNotNull(connectorList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection33);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerList34);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList53);
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "UTF-8" + "'", str60, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList61);
        org.junit.Assert.assertNotNull(mimeMappings65);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList67);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "UTF-8" + "'", str70, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings75);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList77);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "UTF-8" + "'", str80, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList81);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray83);
        org.junit.Assert.assertNull(file88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "UTF-8" + "'", str89, "UTF-8");
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory4.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory9.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory4.additionalTomcatConnectors = connectorList11;
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory4.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory4.setMimeMappings(mimeMappings17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList20 = tomcatEmbeddedServletContainerFactory19.tomcatConnectorCustomizers;
        int int21 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory19.addContextLifecycleListeners(lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory4.addContextLifecycleListeners(lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray22);
        org.apache.catalina.Context context26 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addDefaultServlet(context26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory5.tldSkip;
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer7 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray8 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer7 };
        tomcatEmbeddedServletContainerFactory5.addInitializers(servletContextInitializerArray8);
        tomcatEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray8);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList15 = tomcatEmbeddedServletContainerFactory14.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory12.tomcatConnectorCustomizers = tomcatConnectorCustomizerList15;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection17 = tomcatEmbeddedServletContainerFactory12.getContextLifecycleListeners();
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory12.uriEncoding;
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory12.uriEncoding;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory20.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList27 = tomcatEmbeddedServletContainerFactory25.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory20.additionalTomcatConnectors = connectorList27;
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory20.protocol;
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory20.protocol;
        tomcatEmbeddedServletContainerFactory20.setUriEncoding("hi!");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection33 = tomcatEmbeddedServletContainerFactory20.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList34 = tomcatEmbeddedServletContainerFactory20.contextValves;
        tomcatEmbeddedServletContainerFactory12.contextValves = valveList34;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList39 = tomcatEmbeddedServletContainerFactory38.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory36.tomcatConnectorCustomizers = tomcatConnectorCustomizerList39;
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet41 = tomcatEmbeddedServletContainerFactory36.getErrorPages();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList42 = tomcatEmbeddedServletContainerFactory36.contextLifecycleListeners;
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory36.getMimeMappings();
        tomcatEmbeddedServletContainerFactory12.setMimeMappings(mimeMappings43);
        tomcatEmbeddedServletContainerFactory2.setMimeMappings(mimeMappings43);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet46 = tomcatEmbeddedServletContainerFactory2.getErrorPages();
        org.apache.catalina.Context context47 = null;
        tomcatEmbeddedServletContainerFactory2.postProcessContext(context47);
        tomcatEmbeddedServletContainerFactory2.setPort((int) (short) -1);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(servletContextInitializerArray8);
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList15);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNotNull(connectorList27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection33);
        org.junit.Assert.assertNotNull(valveList34);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList39);
        org.junit.Assert.assertNotNull(errorPageSet41);
        org.junit.Assert.assertNotNull(lifecycleListenerList42);
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(errorPageSet46);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.io.File file2 = tomcatEmbeddedServletContainerFactory0.baseDirectory;
        java.util.List<org.apache.catalina.Valve> valveList3 = null;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList3;
        org.springframework.core.io.ResourceLoader resourceLoader5 = tomcatEmbeddedServletContainerFactory0.resourceLoader;
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertNull(resourceLoader5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.apache.coyote.http11.Http11NioProtocol" + "'", str6, "org.apache.coyote.http11.Http11NioProtocol");
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings3 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.net.InetAddress inetAddress6 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        java.lang.Class<?> wildcardClass9 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(mimeMappings3);
        org.junit.Assert.assertNull(inetAddress6);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory0.additionalTomcatConnectors = connectorList7;
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.protocol;
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setPort((int) (short) 0);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList16 = tomcatEmbeddedServletContainerFactory11.contextLifecycleListeners;
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings20);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings20);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.List<org.apache.catalina.LifecycleListener> lifecycleListenerList24 = tomcatEmbeddedServletContainerFactory0.contextLifecycleListeners;
        tomcatEmbeddedServletContainerFactory0.uriEncoding = "";
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList30 = tomcatEmbeddedServletContainerFactory29.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory27.tomcatConnectorCustomizers = tomcatConnectorCustomizerList30;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection32 = tomcatEmbeddedServletContainerFactory27.getContextLifecycleListeners();
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory27.uriEncoding;
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n\thttp://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n</web-app>\n");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList40 = tomcatEmbeddedServletContainerFactory39.tomcatConnectorCustomizers;
        tomcatEmbeddedServletContainerFactory37.tomcatConnectorCustomizers = tomcatConnectorCustomizerList40;
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection42 = tomcatEmbeddedServletContainerFactory37.getContextLifecycleListeners();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory37.uriEncoding;
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory37.additionalTomcatConnectors;
        tomcatEmbeddedServletContainerFactory36.additionalTomcatConnectors = connectorList44;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray46 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory36.addContextCustomizers(tomcatContextCustomizerArray46);
        tomcatEmbeddedServletContainerFactory27.addContextCustomizers(tomcatContextCustomizerArray46);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray46);
        java.io.File file51 = tomcatEmbeddedServletContainerFactory0.createTempDir("UTF-8");
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory0.protocol;
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(lifecycleListenerList16);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNotNull(lifecycleListenerList24);
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList30);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList40);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray46);
        org.junit.Assert.assertNotNull(file51);
        org.junit.Assert.assertEquals(file51.getParent(), "/tmp");
// flaky:         org.junit.Assert.assertEquals(file51.toString(), "/tmp/UTF-8.3030191903882579543.0");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList1 = tomcatEmbeddedServletContainerFactory0.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.List<org.apache.catalina.Valve> valveList3 = tomcatEmbeddedServletContainerFactory0.contextValves;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.io.File file7 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.List<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerList10 = tomcatEmbeddedServletContainerFactory9.tomcatConnectorCustomizers;
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory9.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatConnectorCustomizers(tomcatConnectorCustomizerCollection11);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        boolean boolean14 = tomcatEmbeddedServletContainerFactory13.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory13.getValves();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        tomcatEmbeddedServletContainerFactory13.tldSkip = "UTF-8";
        tomcatEmbeddedServletContainerFactory13.setProtocol("org.apache.coyote.http11.Http11NioProtocol");
        java.util.List<org.apache.catalina.Valve> valveList21 = tomcatEmbeddedServletContainerFactory13.contextValves;
        tomcatEmbeddedServletContainerFactory0.contextValves = valveList21;
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList1);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveList3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerList10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(valveList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }
}
