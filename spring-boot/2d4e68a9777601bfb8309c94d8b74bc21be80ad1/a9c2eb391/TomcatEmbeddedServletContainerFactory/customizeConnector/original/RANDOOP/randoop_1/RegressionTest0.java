import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings7);
        java.lang.Class<?> wildcardClass9 = mimeMappings7.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Mappings must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.lang.Class<?> wildcardClass3 = tomcatContextCustomizerCollection2.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings7);
        java.util.concurrent.TimeUnit timeUnit10 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 0, timeUnit10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("UTF-8", 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("UTF-8", 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        java.io.File file7 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.apache.catalina.Valve[] valveArray8 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Valves must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(file7);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener11 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray12 = new org.apache.catalina.LifecycleListener[] { lifecycleListener11 };
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray12);
        java.lang.Class<?> wildcardClass14 = lifecycleListenerArray12.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertNotNull(lifecycleListenerArray12);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory6.getUriEncoding();
        tomcatEmbeddedServletContainerFactory6.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray12 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory6.addConnectorCustomizers(tomcatConnectorCustomizerArray12);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray12);
        java.lang.Class<?> wildcardClass15 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray12);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory7.getUriEncoding();
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setTldSkip("hi!");
        boolean boolean18 = tomcatEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        int int19 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory15.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray21 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22, errorPageArray21);
        tomcatEmbeddedServletContainerFactory15.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        org.springframework.boot.context.embedded.Ssl ssl26 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl26);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-8" + "'", str4, "UTF-8");
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory7.getUriEncoding();
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setTldSkip("hi!");
        boolean boolean18 = tomcatEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        int int19 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory15.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray21 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22, errorPageArray21);
        tomcatEmbeddedServletContainerFactory15.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        org.springframework.boot.context.embedded.Ssl ssl26 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl26);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        boolean boolean11 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.lang.Class<?> wildcardClass12 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        int int11 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray12 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatConnectorCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.io.File file1 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int4 = tomcatEmbeddedServletContainerFactory3.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray5 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory3.addAdditionalTomcatConnectors(connectorArray5);
        org.apache.catalina.Valve[] valveArray7 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory3.addContextValves(valveArray7);
        org.springframework.boot.context.embedded.Ssl ssl9 = tomcatEmbeddedServletContainerFactory3.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory3.setMimeMappings(mimeMappings16);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings16);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(connectorArray5);
        org.junit.Assert.assertNotNull(valveArray7);
        org.junit.Assert.assertNull(ssl9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings16);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory5.getUriEncoding();
        tomcatEmbeddedServletContainerFactory5.setUriEncoding("hi!");
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory5.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory5.getErrorPages();
        tomcatEmbeddedServletContainerFactory5.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory5.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener16 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray17 = new org.apache.catalina.LifecycleListener[] { lifecycleListener16 };
        tomcatEmbeddedServletContainerFactory5.addContextLifecycleListeners(lifecycleListenerArray17);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray17);
        java.lang.Class<?> wildcardClass20 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNotNull(lifecycleListenerArray17);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory7.getUriEncoding();
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader15);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("UTF-8", (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl7 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection9 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int11 = tomcatEmbeddedServletContainerFactory10.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray12 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory10.addAdditionalTomcatConnectors(connectorArray12);
        org.apache.catalina.Valve[] valveArray14 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory10.addContextValves(valveArray14);
        org.springframework.boot.context.embedded.Ssl ssl16 = tomcatEmbeddedServletContainerFactory10.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setTldSkip("hi!");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory10.setMimeMappings(mimeMappings23);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setTldSkip("hi!");
        boolean boolean28 = tomcatEmbeddedServletContainerFactory25.isRegisterDefaultServlet();
        int int29 = tomcatEmbeddedServletContainerFactory25.getSessionTimeout();
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory25.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray31 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32, errorPageArray31);
        tomcatEmbeddedServletContainerFactory25.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32);
        tomcatEmbeddedServletContainerFactory10.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Mappings must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(connectorArray12);
        org.junit.Assert.assertNotNull(valveArray14);
        org.junit.Assert.assertNull(ssl16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-8" + "'", str30, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(mimeMappings37);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.concurrent.TimeUnit timeUnit7 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1, timeUnit7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings7);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection11 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection11);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory6.getUriEncoding();
        tomcatEmbeddedServletContainerFactory6.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray12 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory6.addConnectorCustomizers(tomcatConnectorCustomizerArray12);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray12);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray12);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl7 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection9 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int11 = tomcatEmbeddedServletContainerFactory10.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray12 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory10.addAdditionalTomcatConnectors(connectorArray12);
        org.apache.catalina.Valve[] valveArray14 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory10.addContextValves(valveArray14);
        org.springframework.boot.context.embedded.Ssl ssl16 = tomcatEmbeddedServletContainerFactory10.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setTldSkip("hi!");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory10.setMimeMappings(mimeMappings23);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setTldSkip("hi!");
        boolean boolean28 = tomcatEmbeddedServletContainerFactory25.isRegisterDefaultServlet();
        int int29 = tomcatEmbeddedServletContainerFactory25.getSessionTimeout();
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory25.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray31 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32, errorPageArray31);
        tomcatEmbeddedServletContainerFactory25.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32);
        tomcatEmbeddedServletContainerFactory10.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray37 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatContextCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(connectorArray12);
        org.junit.Assert.assertNotNull(valveArray14);
        org.junit.Assert.assertNull(ssl16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-8" + "'", str30, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection14 = tomcatEmbeddedServletContainerFactory13.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection14);
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection14);
        org.junit.Assert.assertNotNull(connectorList16);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl7 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection9 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection9);
        org.junit.Assert.assertNotNull(valveCollection10);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("UTF-8", (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("UTF-8", (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        int int7 = tomcatEmbeddedServletContainerFactory0.getPort();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8080 + "'", int7 == 8080);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray6 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray6);
        java.lang.Class<?> wildcardClass8 = servletContextInitializerArray6.getClass();
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray6);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7, errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7);
        java.util.concurrent.TimeUnit timeUnit11 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) ' ', timeUnit11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl7 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory10.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = tomcatEmbeddedServletContainerFactory10.getErrorPages();
        tomcatEmbeddedServletContainerFactory10.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection20 = tomcatEmbeddedServletContainerFactory10.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener21 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] { lifecycleListener21 };
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setTldSkip("hi!");
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory24.getUriEncoding();
        tomcatEmbeddedServletContainerFactory24.setUriEncoding("hi!");
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory24.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet31 = tomcatEmbeddedServletContainerFactory24.getErrorPages();
        tomcatEmbeddedServletContainerFactory24.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet34 = tomcatEmbeddedServletContainerFactory24.getErrorPages();
        int int35 = tomcatEmbeddedServletContainerFactory24.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory36.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage38 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray39 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage38 };
        tomcatEmbeddedServletContainerFactory36.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory24.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory10.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertNotNull(valveCollection20);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(errorPageSet31);
        org.junit.Assert.assertNotNull(errorPageSet34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-8" + "'", str37, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray39);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("UTF-8", (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer8 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray9 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer8 };
        tomcatEmbeddedServletContainerFactory5.addInitializers(servletContextInitializerArray9);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray9);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) '4');
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray14 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray14);
        java.lang.Class<?> wildcardClass16 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray9);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray14);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings7);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setTldSkip("hi!");
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory11.getUriEncoding();
        tomcatEmbeddedServletContainerFactory11.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setTldSkip("hi!");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray23 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory17.addConnectorCustomizers(tomcatConnectorCustomizerArray23);
        tomcatEmbeddedServletContainerFactory11.addConnectorCustomizers(tomcatConnectorCustomizerArray23);
        boolean boolean26 = tomcatEmbeddedServletContainerFactory11.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setTldSkip("hi!");
        boolean boolean30 = tomcatEmbeddedServletContainerFactory27.isRegisterDefaultServlet();
        int int31 = tomcatEmbeddedServletContainerFactory27.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory27.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer34 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray35 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer34 };
        tomcatEmbeddedServletContainerFactory27.addConnectorCustomizers(tomcatConnectorCustomizerArray35);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = tomcatEmbeddedServletContainerFactory27.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection38 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory11.setTomcatContextCustomizers(tomcatContextCustomizerCollection38);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection38);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection41 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatContextCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-8" + "'", str14, "UTF-8");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray35);
        org.junit.Assert.assertNotNull(errorPageSet37);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection38);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.concurrent.TimeUnit timeUnit12 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) '#', timeUnit12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection16 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(valveCollection16);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray6 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray6);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray8 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ErrorPages must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray6);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        java.net.InetAddress inetAddress5 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress5);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int8 = tomcatEmbeddedServletContainerFactory7.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray9 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray9);
        org.apache.catalina.Valve[] valveArray11 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory7.addContextValves(valveArray11);
        org.springframework.boot.context.embedded.Ssl ssl13 = tomcatEmbeddedServletContainerFactory7.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setTldSkip("hi!");
        boolean boolean17 = tomcatEmbeddedServletContainerFactory14.isRegisterDefaultServlet();
        int int18 = tomcatEmbeddedServletContainerFactory14.getSessionTimeout();
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory14.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray20 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21, errorPageArray20);
        tomcatEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21);
        tomcatEmbeddedServletContainerFactory7.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int26 = tomcatEmbeddedServletContainerFactory25.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray27 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory25.addAdditionalTomcatConnectors(connectorArray27);
        org.apache.catalina.Valve[] valveArray29 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory25.addContextValves(valveArray29);
        tomcatEmbeddedServletContainerFactory7.addContextValves(valveArray29);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray29);
        java.lang.Class<?> wildcardClass33 = valveArray29.getClass();
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(connectorArray9);
        org.junit.Assert.assertNotNull(valveArray11);
        org.junit.Assert.assertNull(ssl13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(connectorArray27);
        org.junit.Assert.assertNotNull(valveArray29);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener11 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray12 = new org.apache.catalina.LifecycleListener[] { lifecycleListener11 };
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setTldSkip("hi!");
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory14.getUriEncoding();
        tomcatEmbeddedServletContainerFactory14.setUriEncoding("hi!");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory14.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        tomcatEmbeddedServletContainerFactory14.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        int int25 = tomcatEmbeddedServletContainerFactory14.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory26.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage28 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray29 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage28 };
        tomcatEmbeddedServletContainerFactory26.addErrorPages(errorPageArray29);
        tomcatEmbeddedServletContainerFactory14.addErrorPages(errorPageArray29);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray29);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertNotNull(lifecycleListenerArray12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-8" + "'", str17, "UTF-8");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray29);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Mappings must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(0);
        java.lang.Class<?> wildcardClass2 = tomcatEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection4 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.Class<?> wildcardClass5 = lifecycleListenerCollection4.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setTldSkip("hi!");
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory9.getUriEncoding();
        tomcatEmbeddedServletContainerFactory9.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray15 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory9.addConnectorCustomizers(tomcatConnectorCustomizerArray15);
        org.apache.catalina.connector.Connector[] connectorArray17 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory9.addAdditionalTomcatConnectors(connectorArray17);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray17);
        java.io.File file20 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file20);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-8" + "'", str12, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray15);
        org.junit.Assert.assertNotNull(connectorArray17);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory5.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage7 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray8 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage7 };
        tomcatEmbeddedServletContainerFactory5.addErrorPages(errorPageArray8);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings16);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings16);
        java.util.Collection<org.apache.catalina.Valve> valveCollection19 = tomcatEmbeddedServletContainerFactory0.getValves();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.net.InetAddress inetAddress22 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress22);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray24 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ErrorPages must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(valveCollection19);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection3 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        java.io.File file8 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        java.lang.Class<?> wildcardClass9 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection3);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.concurrent.TimeUnit timeUnit4 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 1, timeUnit4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection2);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory5.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage7 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray8 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage7 };
        tomcatEmbeddedServletContainerFactory5.addErrorPages(errorPageArray8);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray8);
        int int11 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.util.concurrent.TimeUnit timeUnit13 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) 'a', timeUnit13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8080 + "'", int11 == 8080);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory5.getUriEncoding();
        tomcatEmbeddedServletContainerFactory5.setUriEncoding("hi!");
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory5.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory5.getErrorPages();
        tomcatEmbeddedServletContainerFactory5.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory5.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener16 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray17 = new org.apache.catalina.LifecycleListener[] { lifecycleListener16 };
        tomcatEmbeddedServletContainerFactory5.addContextLifecycleListeners(lifecycleListenerArray17);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray17);
        boolean boolean20 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int22 = tomcatEmbeddedServletContainerFactory21.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray23 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory21.addAdditionalTomcatConnectors(connectorArray23);
        org.apache.catalina.Valve[] valveArray25 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory21.addContextValves(valveArray25);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int28 = tomcatEmbeddedServletContainerFactory27.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray29 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory27.addAdditionalTomcatConnectors(connectorArray29);
        tomcatEmbeddedServletContainerFactory21.addAdditionalTomcatConnectors(connectorArray29);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = tomcatEmbeddedServletContainerFactory21.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection33 = tomcatEmbeddedServletContainerFactory21.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection33);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int36 = tomcatEmbeddedServletContainerFactory35.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray37 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList38 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList38, tomcatContextCustomizerArray37);
        tomcatEmbeddedServletContainerFactory35.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList38);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList38);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection42 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNotNull(lifecycleListenerArray17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(connectorArray23);
        org.junit.Assert.assertNotNull(valveArray25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(connectorArray29);
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection42);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory7.getUriEncoding();
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        java.io.File file15 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file15);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int9 = tomcatEmbeddedServletContainerFactory8.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray10 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray10);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection12 = tomcatEmbeddedServletContainerFactory8.getContextLifecycleListeners();
        org.apache.catalina.connector.Connector[] connectorArray13 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray13);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray13);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection16 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatConnectorCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(connectorArray10);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection12);
        org.junit.Assert.assertNotNull(connectorArray13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection16);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection14 = tomcatEmbeddedServletContainerFactory13.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection14);
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl16);
        java.lang.Class<?> wildcardClass18 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection14);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.apache.catalina.Valve> valveCollection12 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.lang.Class<?> wildcardClass13 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(valveCollection12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int10 = tomcatEmbeddedServletContainerFactory9.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray11 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12, tomcatContextCustomizerArray11);
        tomcatEmbeddedServletContainerFactory9.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12);
        java.io.File file15 = null;
        tomcatEmbeddedServletContainerFactory9.setDocumentRoot(file15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection18 = tomcatEmbeddedServletContainerFactory17.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory9.setMimeMappings(mimeMappings19);
        tomcatEmbeddedServletContainerFactory9.setRegisterDefaultServlet(false);
        org.apache.catalina.LifecycleListener lifecycleListener23 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray24 = new org.apache.catalina.LifecycleListener[] { lifecycleListener23 };
        tomcatEmbeddedServletContainerFactory9.addContextLifecycleListeners(lifecycleListenerArray24);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray24);
        java.util.concurrent.TimeUnit timeUnit28 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) 'a', timeUnit28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection18);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(lifecycleListenerArray24);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray5 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray5);
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        java.lang.Class<?> wildcardClass9 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray5);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer7 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray8 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer7 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray8);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection10 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.concurrent.TimeUnit timeUnit12 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(10, timeUnit12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection10);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7, errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl13);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray15 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray15);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.Class<?> wildcardClass18 = errorPageSet17.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray15);
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.net.InetAddress inetAddress6 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.core.io.ResourceLoader resourceLoader7 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader7);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNull(inetAddress6);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7, errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl13);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray15 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray15);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray19 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatContextCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray15);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        boolean boolean11 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setTldSkip("hi!");
        boolean boolean15 = tomcatEmbeddedServletContainerFactory12.isRegisterDefaultServlet();
        int int16 = tomcatEmbeddedServletContainerFactory12.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory12.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer19 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray20 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer19 };
        tomcatEmbeddedServletContainerFactory12.addConnectorCustomizers(tomcatConnectorCustomizerArray20);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection22 = tomcatEmbeddedServletContainerFactory12.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection22);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray20);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection22);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatContextCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file5 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file5);
        boolean boolean7 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray9 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Initializers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file5 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file5);
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setTldSkip("hi!");
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory9.getUriEncoding();
        tomcatEmbeddedServletContainerFactory9.setUriEncoding("hi!");
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory9.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = tomcatEmbeddedServletContainerFactory9.getErrorPages();
        tomcatEmbeddedServletContainerFactory9.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = tomcatEmbeddedServletContainerFactory9.getErrorPages();
        tomcatEmbeddedServletContainerFactory9.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection23 = tomcatEmbeddedServletContainerFactory22.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory9.setTomcatContextCustomizers(tomcatContextCustomizerCollection23);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection23);
        java.util.concurrent.TimeUnit timeUnit27 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 100, timeUnit27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-8" + "'", str12, "UTF-8");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(errorPageSet16);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection23);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7, errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.concurrent.TimeUnit timeUnit12 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0, timeUnit12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList4 = tomcatEmbeddedServletContainerFactory2.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory2.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer10 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer10 };
        tomcatEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.lang.Class<?> wildcardClass17 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(connectorList4);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean2 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.apache.catalina.Valve[] valveArray3 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Valves must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean5 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int14 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory13.addAdditionalTomcatConnectors(connectorArray15);
        org.apache.catalina.Valve[] valveArray17 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory13.addContextValves(valveArray17);
        org.springframework.boot.context.embedded.Ssl ssl19 = tomcatEmbeddedServletContainerFactory13.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl20 = tomcatEmbeddedServletContainerFactory13.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = tomcatEmbeddedServletContainerFactory13.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int24 = tomcatEmbeddedServletContainerFactory23.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray25 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory23.addAdditionalTomcatConnectors(connectorArray25);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection27 = tomcatEmbeddedServletContainerFactory23.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int29 = tomcatEmbeddedServletContainerFactory28.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int31 = tomcatEmbeddedServletContainerFactory30.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray32 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory30.addAdditionalTomcatConnectors(connectorArray32);
        org.apache.catalina.Valve[] valveArray34 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory30.addContextValves(valveArray34);
        tomcatEmbeddedServletContainerFactory28.addContextValves(valveArray34);
        tomcatEmbeddedServletContainerFactory23.addContextValves(valveArray34);
        tomcatEmbeddedServletContainerFactory13.addContextValves(valveArray34);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray34);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(valveArray17);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(connectorArray25);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(connectorArray32);
        org.junit.Assert.assertNotNull(valveArray34);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("UTF-8", (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        boolean boolean11 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.Ssl ssl12 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl13);
        java.util.concurrent.TimeUnit timeUnit16 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10, timeUnit16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(ssl12);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        int int6 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.io.File file8 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection9 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.util.concurrent.TimeUnit timeUnit11 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1, timeUnit11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8080 + "'", int6 == 8080);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection9);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection3 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection3);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet5 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ErrorPages must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection2);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer8 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray9 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer8 };
        tomcatEmbeddedServletContainerFactory5.addInitializers(servletContextInitializerArray9);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray9);
        java.lang.Class<?> wildcardClass12 = servletContextInitializerArray9.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray9);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener11 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray12 = new org.apache.catalina.LifecycleListener[] { lifecycleListener11 };
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray12);
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        boolean boolean19 = tomcatEmbeddedServletContainerFactory16.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setTldSkip("hi!");
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory21.getUriEncoding();
        tomcatEmbeddedServletContainerFactory21.setUriEncoding("hi!");
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory21.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet28 = tomcatEmbeddedServletContainerFactory21.getErrorPages();
        tomcatEmbeddedServletContainerFactory21.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection31 = tomcatEmbeddedServletContainerFactory21.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener32 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray33 = new org.apache.catalina.LifecycleListener[] { lifecycleListener32 };
        tomcatEmbeddedServletContainerFactory21.addContextLifecycleListeners(lifecycleListenerArray33);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setTldSkip("hi!");
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory35.getUriEncoding();
        tomcatEmbeddedServletContainerFactory35.setUriEncoding("hi!");
        java.lang.String str41 = tomcatEmbeddedServletContainerFactory35.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet42 = tomcatEmbeddedServletContainerFactory35.getErrorPages();
        tomcatEmbeddedServletContainerFactory35.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet45 = tomcatEmbeddedServletContainerFactory35.getErrorPages();
        int int46 = tomcatEmbeddedServletContainerFactory35.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory47.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage49 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray50 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage49 };
        tomcatEmbeddedServletContainerFactory47.addErrorPages(errorPageArray50);
        tomcatEmbeddedServletContainerFactory35.addErrorPages(errorPageArray50);
        tomcatEmbeddedServletContainerFactory21.addErrorPages(errorPageArray50);
        tomcatEmbeddedServletContainerFactory16.addErrorPages(errorPageArray50);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray50);
        java.util.concurrent.TimeUnit timeUnit57 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1, timeUnit57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertNotNull(lifecycleListenerArray12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-8" + "'", str24, "UTF-8");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(errorPageSet28);
        org.junit.Assert.assertNotNull(valveCollection31);
        org.junit.Assert.assertNotNull(lifecycleListenerArray33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-8" + "'", str38, "UTF-8");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(errorPageSet42);
        org.junit.Assert.assertNotNull(errorPageSet45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-8" + "'", str48, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray50);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) ' ');
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setTldSkip("hi!");
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory9.getUriEncoding();
        boolean boolean13 = tomcatEmbeddedServletContainerFactory9.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection15 = tomcatEmbeddedServletContainerFactory14.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory9.setMimeMappings(mimeMappings16);
        tomcatEmbeddedServletContainerFactory9.setUriEncoding("UTF-8");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection20 = tomcatEmbeddedServletContainerFactory9.getContextLifecycleListeners();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray21 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory9.addContextLifecycleListeners(lifecycleListenerArray21);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray21);
        java.io.File file24 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file24);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-8" + "'", str12, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection15);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection20);
        org.junit.Assert.assertNotNull(lifecycleListenerArray21);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        java.net.InetAddress inetAddress4 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("hi!");
        boolean boolean9 = tomcatEmbeddedServletContainerFactory6.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory16.getUriEncoding();
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray22 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory16.addConnectorCustomizers(tomcatConnectorCustomizerArray22);
        tomcatEmbeddedServletContainerFactory10.addConnectorCustomizers(tomcatConnectorCustomizerArray22);
        tomcatEmbeddedServletContainerFactory6.addConnectorCustomizers(tomcatConnectorCustomizerArray22);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray22);
        java.io.File file27 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection28 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray22);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection28);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        java.util.Collection<org.apache.catalina.Valve> valveCollection4 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.util.Collection<org.apache.catalina.Valve> valveCollection5 = tomcatEmbeddedServletContainerFactory0.getValves();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveCollection4);
        org.junit.Assert.assertNotNull(valveCollection5);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        java.net.InetAddress inetAddress12 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress12);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer6 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray7 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer6 };
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray7);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 10);
        java.util.concurrent.TimeUnit timeUnit13 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10, timeUnit13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        java.util.Collection<org.apache.catalina.Valve> valveCollection5 = tomcatEmbeddedServletContainerFactory0.getValves();
        tomcatEmbeddedServletContainerFactory0.setPort((int) ' ');
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setTldSkip("hi!");
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory11.getUriEncoding();
        tomcatEmbeddedServletContainerFactory11.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        tomcatEmbeddedServletContainerFactory8.setMimeMappings(mimeMappings17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection20 = tomcatEmbeddedServletContainerFactory19.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory8.setTomcatContextCustomizers(tomcatContextCustomizerCollection20);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection22 = tomcatEmbeddedServletContainerFactory8.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int24 = tomcatEmbeddedServletContainerFactory23.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray25 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory23.addAdditionalTomcatConnectors(connectorArray25);
        org.apache.catalina.Valve[] valveArray27 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory23.addContextValves(valveArray27);
        org.springframework.boot.context.embedded.Ssl ssl29 = tomcatEmbeddedServletContainerFactory23.getSsl();
        java.io.File file30 = tomcatEmbeddedServletContainerFactory23.getDocumentRoot();
        java.io.File file31 = null;
        tomcatEmbeddedServletContainerFactory23.setDocumentRoot(file31);
        boolean boolean33 = tomcatEmbeddedServletContainerFactory23.isRegisterJspServlet();
        java.io.File file34 = null;
        tomcatEmbeddedServletContainerFactory23.setDocumentRoot(file34);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int37 = tomcatEmbeddedServletContainerFactory36.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray38 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory36.addAdditionalTomcatConnectors(connectorArray38);
        org.apache.catalina.Valve[] valveArray40 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory36.addContextValves(valveArray40);
        tomcatEmbeddedServletContainerFactory23.addContextValves(valveArray40);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory43.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage45 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray46 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage45 };
        tomcatEmbeddedServletContainerFactory43.addErrorPages(errorPageArray46);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int49 = tomcatEmbeddedServletContainerFactory48.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray50 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory48.addAdditionalTomcatConnectors(connectorArray50);
        org.apache.catalina.Valve[] valveArray52 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory48.addContextValves(valveArray52);
        org.springframework.boot.context.embedded.Ssl ssl54 = tomcatEmbeddedServletContainerFactory48.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setTldSkip("hi!");
        java.lang.String str58 = tomcatEmbeddedServletContainerFactory55.getUriEncoding();
        tomcatEmbeddedServletContainerFactory55.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = tomcatEmbeddedServletContainerFactory55.getMimeMappings();
        tomcatEmbeddedServletContainerFactory48.setMimeMappings(mimeMappings61);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory63.setTldSkip("hi!");
        boolean boolean66 = tomcatEmbeddedServletContainerFactory63.isRegisterDefaultServlet();
        int int67 = tomcatEmbeddedServletContainerFactory63.getSessionTimeout();
        java.lang.String str68 = tomcatEmbeddedServletContainerFactory63.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray69 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet70 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet70, errorPageArray69);
        tomcatEmbeddedServletContainerFactory63.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet70);
        tomcatEmbeddedServletContainerFactory48.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet70);
        tomcatEmbeddedServletContainerFactory43.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet70);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory75.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer78 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray79 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer78 };
        tomcatEmbeddedServletContainerFactory75.addInitializers(servletContextInitializerArray79);
        tomcatEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray79);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int83 = tomcatEmbeddedServletContainerFactory82.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList84 = tomcatEmbeddedServletContainerFactory82.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory82.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory87 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory87.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer90 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray91 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer90 };
        tomcatEmbeddedServletContainerFactory87.addInitializers(servletContextInitializerArray91);
        tomcatEmbeddedServletContainerFactory82.addInitializers(servletContextInitializerArray91);
        tomcatEmbeddedServletContainerFactory43.addInitializers(servletContextInitializerArray91);
        tomcatEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray91);
        tomcatEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray91);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray91);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection2);
        org.junit.Assert.assertNotNull(valveCollection5);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-8" + "'", str14, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection20);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(connectorArray25);
        org.junit.Assert.assertNotNull(valveArray27);
        org.junit.Assert.assertNull(ssl29);
        org.junit.Assert.assertNull(file30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(connectorArray38);
        org.junit.Assert.assertNotNull(valveArray40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-8" + "'", str44, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(connectorArray50);
        org.junit.Assert.assertNotNull(valveArray52);
        org.junit.Assert.assertNull(ssl54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "UTF-8" + "'", str58, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings61);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "UTF-8" + "'", str68, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray79);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(connectorList84);
        org.junit.Assert.assertNotNull(servletContextInitializerArray91);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.apache.catalina.connector.Connector[] connectorArray7 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Connectors must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        org.springframework.boot.context.embedded.Ssl ssl15 = tomcatEmbeddedServletContainerFactory0.getSsl();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection16 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.concurrent.TimeUnit timeUnit19 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(1, timeUnit19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection16);
        org.junit.Assert.assertNotNull(errorPageSet17);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener11 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray12 = new org.apache.catalina.LifecycleListener[] { lifecycleListener11 };
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setTldSkip("hi!");
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory14.getUriEncoding();
        tomcatEmbeddedServletContainerFactory14.setUriEncoding("hi!");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory14.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        tomcatEmbeddedServletContainerFactory14.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        int int25 = tomcatEmbeddedServletContainerFactory14.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory26.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage28 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray29 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage28 };
        tomcatEmbeddedServletContainerFactory26.addErrorPages(errorPageArray29);
        tomcatEmbeddedServletContainerFactory14.addErrorPages(errorPageArray29);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray29);
        java.io.File file33 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file33);
        org.springframework.boot.context.embedded.Ssl ssl35 = tomcatEmbeddedServletContainerFactory0.getSsl();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass36 = ssl35.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertNotNull(lifecycleListenerArray12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-8" + "'", str17, "UTF-8");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray29);
        org.junit.Assert.assertNull(ssl35);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("UTF-8", (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection14 = tomcatEmbeddedServletContainerFactory13.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection14);
        org.springframework.boot.context.embedded.Ssl ssl16 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection14);
        org.junit.Assert.assertNull(ssl16);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        int int11 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList12 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.util.concurrent.TimeUnit timeUnit15 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((-1), timeUnit15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(connectorList12);
        org.junit.Assert.assertNotNull(connectorList13);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray1 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList2, tomcatContextCustomizerArray1);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList2);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.Class<?> wildcardClass6 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        org.apache.catalina.Valve[] valveArray3 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray3);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection5 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertNotNull(valveArray3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray2 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray2);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory4.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage6 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray7 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage6 };
        tomcatEmbeddedServletContainerFactory4.addErrorPages(errorPageArray7);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int10 = tomcatEmbeddedServletContainerFactory9.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray11 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory9.addAdditionalTomcatConnectors(connectorArray11);
        org.apache.catalina.Valve[] valveArray13 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory9.addContextValves(valveArray13);
        org.springframework.boot.context.embedded.Ssl ssl15 = tomcatEmbeddedServletContainerFactory9.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory16.getUriEncoding();
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        tomcatEmbeddedServletContainerFactory9.setMimeMappings(mimeMappings22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setTldSkip("hi!");
        boolean boolean27 = tomcatEmbeddedServletContainerFactory24.isRegisterDefaultServlet();
        int int28 = tomcatEmbeddedServletContainerFactory24.getSessionTimeout();
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory24.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray30 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet31 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet31, errorPageArray30);
        tomcatEmbeddedServletContainerFactory24.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet31);
        tomcatEmbeddedServletContainerFactory9.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet31);
        tomcatEmbeddedServletContainerFactory4.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet31);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer39 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray40 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer39 };
        tomcatEmbeddedServletContainerFactory36.addInitializers(servletContextInitializerArray40);
        tomcatEmbeddedServletContainerFactory4.addInitializers(servletContextInitializerArray40);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray40);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int45 = tomcatEmbeddedServletContainerFactory44.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray46 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory44.addAdditionalTomcatConnectors(connectorArray46);
        org.apache.catalina.Valve[] valveArray48 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory44.addContextValves(valveArray48);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int51 = tomcatEmbeddedServletContainerFactory50.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray52 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory50.addAdditionalTomcatConnectors(connectorArray52);
        tomcatEmbeddedServletContainerFactory44.addAdditionalTomcatConnectors(connectorArray52);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray52);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(connectorArray11);
        org.junit.Assert.assertNotNull(valveArray13);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-8" + "'", str29, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(connectorArray46);
        org.junit.Assert.assertNotNull(valveArray48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(connectorArray52);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings7);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection11 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.Class<?> wildcardClass12 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer6 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray7 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer6 };
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray7);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 10);
        java.lang.Class<?> wildcardClass12 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory5.getUriEncoding();
        tomcatEmbeddedServletContainerFactory5.setUriEncoding("hi!");
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory5.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory5.getErrorPages();
        tomcatEmbeddedServletContainerFactory5.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory5.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener16 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray17 = new org.apache.catalina.LifecycleListener[] { lifecycleListener16 };
        tomcatEmbeddedServletContainerFactory5.addContextLifecycleListeners(lifecycleListenerArray17);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray17);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNotNull(lifecycleListenerArray17);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file5 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file5);
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setTldSkip("hi!");
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory9.getUriEncoding();
        tomcatEmbeddedServletContainerFactory9.setUriEncoding("hi!");
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory9.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = tomcatEmbeddedServletContainerFactory9.getErrorPages();
        tomcatEmbeddedServletContainerFactory9.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = tomcatEmbeddedServletContainerFactory9.getErrorPages();
        tomcatEmbeddedServletContainerFactory9.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection23 = tomcatEmbeddedServletContainerFactory22.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory9.setTomcatContextCustomizers(tomcatContextCustomizerCollection23);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection23);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray26 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatConnectorCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-8" + "'", str12, "UTF-8");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(errorPageSet16);
        org.junit.Assert.assertNotNull(errorPageSet19);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection23);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory5.getUriEncoding();
        tomcatEmbeddedServletContainerFactory5.setUriEncoding("hi!");
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory5.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory5.getErrorPages();
        tomcatEmbeddedServletContainerFactory5.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory5.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener16 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray17 = new org.apache.catalina.LifecycleListener[] { lifecycleListener16 };
        tomcatEmbeddedServletContainerFactory5.addContextLifecycleListeners(lifecycleListenerArray17);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray17);
        boolean boolean20 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.util.List<org.apache.catalina.connector.Connector> connectorList21 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.core.io.ResourceLoader resourceLoader22 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader22);
        java.util.concurrent.TimeUnit timeUnit25 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 1, timeUnit25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNotNull(lifecycleListenerArray17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(connectorList21);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory5.getUriEncoding();
        tomcatEmbeddedServletContainerFactory5.setUriEncoding("hi!");
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory5.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory5.getErrorPages();
        tomcatEmbeddedServletContainerFactory5.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory5.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener16 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray17 = new org.apache.catalina.LifecycleListener[] { lifecycleListener16 };
        tomcatEmbeddedServletContainerFactory5.addContextLifecycleListeners(lifecycleListenerArray17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setTldSkip("hi!");
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory19.getUriEncoding();
        tomcatEmbeddedServletContainerFactory19.setUriEncoding("hi!");
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory19.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = tomcatEmbeddedServletContainerFactory19.getErrorPages();
        tomcatEmbeddedServletContainerFactory19.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = tomcatEmbeddedServletContainerFactory19.getErrorPages();
        int int30 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory31.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage33 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray34 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage33 };
        tomcatEmbeddedServletContainerFactory31.addErrorPages(errorPageArray34);
        tomcatEmbeddedServletContainerFactory19.addErrorPages(errorPageArray34);
        tomcatEmbeddedServletContainerFactory5.addErrorPages(errorPageArray34);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray34);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.Ssl ssl40 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNotNull(lifecycleListenerArray17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(errorPageSet26);
        org.junit.Assert.assertNotNull(errorPageSet29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-8" + "'", str32, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray34);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNull(ssl40);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection3 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        java.io.File file8 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory9.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage11 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray12 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage11 };
        tomcatEmbeddedServletContainerFactory9.addErrorPages(errorPageArray12);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray12);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        java.io.File file17 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file17);
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray19 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextLifecycleListeners must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection3);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray12);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        org.springframework.boot.context.embedded.Ssl ssl15 = tomcatEmbeddedServletContainerFactory0.getSsl();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection16 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.concurrent.TimeUnit timeUnit19 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(8080, timeUnit19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection16);
        org.junit.Assert.assertNotNull(errorPageSet17);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage2 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray3 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage2 };
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray3);
        java.lang.Class<?> wildcardClass5 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray3);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList4 = tomcatEmbeddedServletContainerFactory2.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory2.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer10 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer10 };
        tomcatEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(connectorList4);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        boolean boolean7 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setTldSkip("hi!");
        boolean boolean11 = tomcatEmbeddedServletContainerFactory8.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setTldSkip("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory13.getUriEncoding();
        tomcatEmbeddedServletContainerFactory13.setUriEncoding("hi!");
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory13.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = tomcatEmbeddedServletContainerFactory13.getErrorPages();
        tomcatEmbeddedServletContainerFactory13.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection23 = tomcatEmbeddedServletContainerFactory13.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener24 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray25 = new org.apache.catalina.LifecycleListener[] { lifecycleListener24 };
        tomcatEmbeddedServletContainerFactory13.addContextLifecycleListeners(lifecycleListenerArray25);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setTldSkip("hi!");
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory27.getUriEncoding();
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("hi!");
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory27.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet34 = tomcatEmbeddedServletContainerFactory27.getErrorPages();
        tomcatEmbeddedServletContainerFactory27.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = tomcatEmbeddedServletContainerFactory27.getErrorPages();
        int int38 = tomcatEmbeddedServletContainerFactory27.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory39.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage41 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray42 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage41 };
        tomcatEmbeddedServletContainerFactory39.addErrorPages(errorPageArray42);
        tomcatEmbeddedServletContainerFactory27.addErrorPages(errorPageArray42);
        tomcatEmbeddedServletContainerFactory13.addErrorPages(errorPageArray42);
        tomcatEmbeddedServletContainerFactory8.addErrorPages(errorPageArray42);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray42);
        org.springframework.core.io.ResourceLoader resourceLoader48 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader48);
        java.lang.Class<?> wildcardClass50 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(errorPageSet20);
        org.junit.Assert.assertNotNull(valveCollection23);
        org.junit.Assert.assertNotNull(lifecycleListenerArray25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-8" + "'", str30, "UTF-8");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(errorPageSet34);
        org.junit.Assert.assertNotNull(errorPageSet37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UTF-8" + "'", str40, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray42);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory5.getUriEncoding();
        tomcatEmbeddedServletContainerFactory5.setUriEncoding("hi!");
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory5.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory5.getErrorPages();
        tomcatEmbeddedServletContainerFactory5.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory5.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener16 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray17 = new org.apache.catalina.LifecycleListener[] { lifecycleListener16 };
        tomcatEmbeddedServletContainerFactory5.addContextLifecycleListeners(lifecycleListenerArray17);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray17);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.io.File file22 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setTldSkip("hi!");
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory26.getUriEncoding();
        tomcatEmbeddedServletContainerFactory26.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory26.getMimeMappings();
        tomcatEmbeddedServletContainerFactory23.setMimeMappings(mimeMappings32);
        boolean boolean34 = tomcatEmbeddedServletContainerFactory23.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setTldSkip("hi!");
        boolean boolean38 = tomcatEmbeddedServletContainerFactory35.isRegisterDefaultServlet();
        int int39 = tomcatEmbeddedServletContainerFactory35.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory35.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer42 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray43 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer42 };
        tomcatEmbeddedServletContainerFactory35.addConnectorCustomizers(tomcatConnectorCustomizerArray43);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection45 = tomcatEmbeddedServletContainerFactory35.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory23.setTomcatContextCustomizers(tomcatContextCustomizerCollection45);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int48 = tomcatEmbeddedServletContainerFactory47.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray49 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory47.addAdditionalTomcatConnectors(connectorArray49);
        tomcatEmbeddedServletContainerFactory47.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer53 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray54 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer53 };
        tomcatEmbeddedServletContainerFactory47.addContextCustomizers(tomcatContextCustomizerArray54);
        tomcatEmbeddedServletContainerFactory23.addContextCustomizers(tomcatContextCustomizerArray54);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray54);
        java.lang.Class<?> wildcardClass58 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNotNull(lifecycleListenerArray17);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-8" + "'", str29, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray43);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(connectorArray49);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray54);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection2 = tomcatEmbeddedServletContainerFactory1.getTomcatContextCustomizers();
        java.lang.Class<?> wildcardClass3 = tomcatContextCustomizerCollection2.getClass();
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection11 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection11);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.apache.catalina.connector.Connector[] connectorArray5 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Connectors must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        java.util.concurrent.TimeUnit timeUnit4 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 10, timeUnit4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.Collection<org.apache.catalina.Valve> valveCollection13 = tomcatEmbeddedServletContainerFactory0.getValves();
        int int14 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setTldSkip("hi!");
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory18.getUriEncoding();
        tomcatEmbeddedServletContainerFactory18.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        tomcatEmbeddedServletContainerFactory15.setMimeMappings(mimeMappings24);
        boolean boolean26 = tomcatEmbeddedServletContainerFactory15.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setTldSkip("hi!");
        boolean boolean30 = tomcatEmbeddedServletContainerFactory27.isRegisterDefaultServlet();
        int int31 = tomcatEmbeddedServletContainerFactory27.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory27.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer34 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray35 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer34 };
        tomcatEmbeddedServletContainerFactory27.addConnectorCustomizers(tomcatConnectorCustomizerArray35);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection37 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory15.setTomcatContextCustomizers(tomcatContextCustomizerCollection37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory39.setTldSkip("hi!");
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory39.getUriEncoding();
        tomcatEmbeddedServletContainerFactory39.setUriEncoding("hi!");
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory39.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet46 = tomcatEmbeddedServletContainerFactory39.getErrorPages();
        tomcatEmbeddedServletContainerFactory39.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet49 = tomcatEmbeddedServletContainerFactory39.getErrorPages();
        int int50 = tomcatEmbeddedServletContainerFactory39.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory51.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage53 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray54 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage53 };
        tomcatEmbeddedServletContainerFactory51.addErrorPages(errorPageArray54);
        tomcatEmbeddedServletContainerFactory39.addErrorPages(errorPageArray54);
        tomcatEmbeddedServletContainerFactory15.addErrorPages(errorPageArray54);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray54);
        java.util.concurrent.TimeUnit timeUnit60 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 10, timeUnit60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertNotNull(valveCollection13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8080 + "'", int14 == 8080);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray35);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-8" + "'", str42, "UTF-8");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(errorPageSet46);
        org.junit.Assert.assertNotNull(errorPageSet49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "UTF-8" + "'", str52, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray54);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("UTF-8", (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer6 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray7 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer6 };
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray7);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int10 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int12 = tomcatEmbeddedServletContainerFactory11.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray13 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList14, tomcatContextCustomizerArray13);
        tomcatEmbeddedServletContainerFactory11.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList14);
        tomcatEmbeddedServletContainerFactory11.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setTldSkip("hi!");
        boolean boolean22 = tomcatEmbeddedServletContainerFactory19.isRegisterDefaultServlet();
        int int23 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory19.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer26 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray27 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer26 };
        tomcatEmbeddedServletContainerFactory19.addConnectorCustomizers(tomcatConnectorCustomizerArray27);
        org.apache.catalina.connector.Connector connector29 = null;
        org.apache.catalina.connector.Connector[] connectorArray30 = new org.apache.catalina.connector.Connector[] { connector29 };
        tomcatEmbeddedServletContainerFactory19.addAdditionalTomcatConnectors(connectorArray30);
        tomcatEmbeddedServletContainerFactory11.addAdditionalTomcatConnectors(connectorArray30);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray30);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection34 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8080 + "'", int10 == 8080);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray27);
        org.junit.Assert.assertNotNull(connectorArray30);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection34);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.io.File file3 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file3);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertNotNull(mimeMappings2);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.Class<?> wildcardClass14 = tomcatConnectorCustomizerCollection13.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file5 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file5);
        boolean boolean7 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.io.File file8 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory7.getUriEncoding();
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection16 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection16);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection3 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.util.concurrent.TimeUnit timeUnit5 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1, timeUnit5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection3);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory3.getContextPath();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory3.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory6.getUriEncoding();
        tomcatEmbeddedServletContainerFactory6.setUriEncoding("hi!");
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory6.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = tomcatEmbeddedServletContainerFactory6.getErrorPages();
        tomcatEmbeddedServletContainerFactory6.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = tomcatEmbeddedServletContainerFactory6.getErrorPages();
        tomcatEmbeddedServletContainerFactory3.setErrorPages(errorPageSet16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int19 = tomcatEmbeddedServletContainerFactory18.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory18.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory18.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer26 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer26 };
        tomcatEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray27);
        tomcatEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray27);
        tomcatEmbeddedServletContainerFactory3.addInitializers(servletContextInitializerArray27);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray27);
        org.springframework.boot.context.embedded.Ssl ssl32 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(errorPageSet13);
        org.junit.Assert.assertNotNull(errorPageSet16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNull(ssl32);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        boolean boolean10 = tomcatEmbeddedServletContainerFactory7.isRegisterDefaultServlet();
        int int11 = tomcatEmbeddedServletContainerFactory7.getSessionTimeout();
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory7.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray13 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet14 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet14, errorPageArray13);
        tomcatEmbeddedServletContainerFactory7.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet14);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet14);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int19 = tomcatEmbeddedServletContainerFactory18.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray20 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory18.addAdditionalTomcatConnectors(connectorArray20);
        org.apache.catalina.Valve[] valveArray22 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory18.addContextValves(valveArray22);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray22);
        org.springframework.boot.context.embedded.Ssl ssl25 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-8" + "'", str12, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(connectorArray20);
        org.junit.Assert.assertNotNull(valveArray22);
        org.junit.Assert.assertNull(ssl25);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory11.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection12);
        java.io.File file14 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file14);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.Class<?> wildcardClass8 = errorPageSet7.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection7 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection8 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray9 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatConnectorCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection7);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection8);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings7);
        java.net.InetAddress inetAddress9 = tomcatEmbeddedServletContainerFactory0.getAddress();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNull(inetAddress9);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer7 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray8 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer7 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray8);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings11 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int13 = tomcatEmbeddedServletContainerFactory12.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray14 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory12.addAdditionalTomcatConnectors(connectorArray14);
        org.apache.catalina.Valve[] valveArray16 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory12.addContextValves(valveArray16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setTldSkip("hi!");
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory21.getUriEncoding();
        tomcatEmbeddedServletContainerFactory21.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory18.setMimeMappings(mimeMappings27);
        tomcatEmbeddedServletContainerFactory18.setRegisterJspServlet(true);
        java.io.File file31 = tomcatEmbeddedServletContainerFactory18.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setTldSkip("hi!");
        boolean boolean35 = tomcatEmbeddedServletContainerFactory32.isRegisterDefaultServlet();
        int int36 = tomcatEmbeddedServletContainerFactory32.getSessionTimeout();
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory32.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray38 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet39 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet39, errorPageArray38);
        tomcatEmbeddedServletContainerFactory32.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet39);
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory32.getContextPath();
        tomcatEmbeddedServletContainerFactory32.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int46 = tomcatEmbeddedServletContainerFactory45.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int48 = tomcatEmbeddedServletContainerFactory47.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray49 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory47.addAdditionalTomcatConnectors(connectorArray49);
        org.apache.catalina.Valve[] valveArray51 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory47.addContextValves(valveArray51);
        tomcatEmbeddedServletContainerFactory45.addContextValves(valveArray51);
        tomcatEmbeddedServletContainerFactory32.addContextValves(valveArray51);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int56 = tomcatEmbeddedServletContainerFactory55.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray57 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory55.addAdditionalTomcatConnectors(connectorArray57);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection59 = tomcatEmbeddedServletContainerFactory55.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int61 = tomcatEmbeddedServletContainerFactory60.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int63 = tomcatEmbeddedServletContainerFactory62.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray64 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory62.addAdditionalTomcatConnectors(connectorArray64);
        org.apache.catalina.Valve[] valveArray66 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory62.addContextValves(valveArray66);
        tomcatEmbeddedServletContainerFactory60.addContextValves(valveArray66);
        tomcatEmbeddedServletContainerFactory55.addContextValves(valveArray66);
        tomcatEmbeddedServletContainerFactory32.addContextValves(valveArray66);
        tomcatEmbeddedServletContainerFactory18.addContextValves(valveArray66);
        tomcatEmbeddedServletContainerFactory12.addContextValves(valveArray66);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection74 = tomcatEmbeddedServletContainerFactory73.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings75 = tomcatEmbeddedServletContainerFactory73.getMimeMappings();
        tomcatEmbeddedServletContainerFactory73.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl78 = null;
        tomcatEmbeddedServletContainerFactory73.setSsl(ssl78);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection80 = tomcatEmbeddedServletContainerFactory73.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory81.setTldSkip("hi!");
        boolean boolean84 = tomcatEmbeddedServletContainerFactory81.isRegisterDefaultServlet();
        int int85 = tomcatEmbeddedServletContainerFactory81.getSessionTimeout();
        java.lang.String str86 = tomcatEmbeddedServletContainerFactory81.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray87 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet88 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet88, errorPageArray87);
        tomcatEmbeddedServletContainerFactory81.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet88);
        java.lang.String str91 = tomcatEmbeddedServletContainerFactory81.getContextPath();
        tomcatEmbeddedServletContainerFactory81.setTldSkip("");
        tomcatEmbeddedServletContainerFactory81.setSessionTimeout(100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings96 = tomcatEmbeddedServletContainerFactory81.getMimeMappings();
        tomcatEmbeddedServletContainerFactory73.setMimeMappings(mimeMappings96);
        tomcatEmbeddedServletContainerFactory12.setMimeMappings(mimeMappings96);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings96);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(mimeMappings11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(connectorArray14);
        org.junit.Assert.assertNotNull(valveArray16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-8" + "'", str24, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNull(file31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-8" + "'", str37, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(connectorArray49);
        org.junit.Assert.assertNotNull(valveArray51);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(connectorArray57);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(connectorArray64);
        org.junit.Assert.assertNotNull(valveArray66);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection74);
        org.junit.Assert.assertNotNull(mimeMappings75);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection80);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "UTF-8" + "'", str86, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertNotNull(mimeMappings96);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.io.File file13 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory16.getUriEncoding();
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory16.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        tomcatEmbeddedServletContainerFactory16.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        int int27 = tomcatEmbeddedServletContainerFactory16.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory28.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage30 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray31 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage30 };
        tomcatEmbeddedServletContainerFactory28.addErrorPages(errorPageArray31);
        tomcatEmbeddedServletContainerFactory16.addErrorPages(errorPageArray31);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray31);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection35 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray36 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatConnectorCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(errorPageSet26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-8" + "'", str29, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray31);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection35);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory5.getUriEncoding();
        tomcatEmbeddedServletContainerFactory5.setUriEncoding("hi!");
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory5.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory5.getErrorPages();
        tomcatEmbeddedServletContainerFactory5.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory5.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener16 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray17 = new org.apache.catalina.LifecycleListener[] { lifecycleListener16 };
        tomcatEmbeddedServletContainerFactory5.addContextLifecycleListeners(lifecycleListenerArray17);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray17);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.io.File file22 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        java.lang.Class<?> wildcardClass23 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNotNull(lifecycleListenerArray17);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory7.getUriEncoding();
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setTldSkip("hi!");
        boolean boolean18 = tomcatEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        int int19 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory15.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray21 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22, errorPageArray21);
        tomcatEmbeddedServletContainerFactory15.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        org.springframework.boot.context.embedded.Ssl ssl26 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl26);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection4 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.net.InetAddress inetAddress5 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection7 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection4);
        org.junit.Assert.assertNull(inetAddress5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection7);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        java.net.InetAddress inetAddress15 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress15);
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setTldSkip("hi!");
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory18.getUriEncoding();
        tomcatEmbeddedServletContainerFactory18.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setTldSkip("hi!");
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory24.getUriEncoding();
        tomcatEmbeddedServletContainerFactory24.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray30 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory24.addConnectorCustomizers(tomcatConnectorCustomizerArray30);
        tomcatEmbeddedServletContainerFactory18.addConnectorCustomizers(tomcatConnectorCustomizerArray30);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray30);
        java.util.concurrent.TimeUnit timeUnit35 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) ' ', timeUnit35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray30);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        int int11 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file12 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file12);
        tomcatEmbeddedServletContainerFactory0.setPort((-1));
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory16.getUriEncoding();
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.io.File file23 = tomcatEmbeddedServletContainerFactory16.getDocumentRoot();
        org.springframework.boot.context.embedded.Ssl ssl24 = tomcatEmbeddedServletContainerFactory16.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setTldSkip("hi!");
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory28.getUriEncoding();
        tomcatEmbeddedServletContainerFactory28.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        tomcatEmbeddedServletContainerFactory25.setMimeMappings(mimeMappings34);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection37 = tomcatEmbeddedServletContainerFactory36.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory25.setTomcatContextCustomizers(tomcatContextCustomizerCollection37);
        java.io.File file39 = null;
        tomcatEmbeddedServletContainerFactory25.setDocumentRoot(file39);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory41.setTldSkip("hi!");
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory41.getUriEncoding();
        tomcatEmbeddedServletContainerFactory41.setUriEncoding("hi!");
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory41.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = tomcatEmbeddedServletContainerFactory41.getErrorPages();
        tomcatEmbeddedServletContainerFactory41.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection51 = tomcatEmbeddedServletContainerFactory41.getValves();
        java.net.InetAddress inetAddress52 = null;
        tomcatEmbeddedServletContainerFactory41.setAddress(inetAddress52);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection54 = tomcatEmbeddedServletContainerFactory41.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection56 = tomcatEmbeddedServletContainerFactory55.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = tomcatEmbeddedServletContainerFactory55.getMimeMappings();
        tomcatEmbeddedServletContainerFactory55.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl60 = null;
        tomcatEmbeddedServletContainerFactory55.setSsl(ssl60);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int63 = tomcatEmbeddedServletContainerFactory62.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray64 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList65 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList65, tomcatContextCustomizerArray64);
        tomcatEmbeddedServletContainerFactory62.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList65);
        tomcatEmbeddedServletContainerFactory62.setProtocol("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray70 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory62.addContextLifecycleListeners(lifecycleListenerArray70);
        tomcatEmbeddedServletContainerFactory55.addContextLifecycleListeners(lifecycleListenerArray70);
        tomcatEmbeddedServletContainerFactory41.addContextLifecycleListeners(lifecycleListenerArray70);
        tomcatEmbeddedServletContainerFactory25.addContextLifecycleListeners(lifecycleListenerArray70);
        tomcatEmbeddedServletContainerFactory25.setSessionTimeout((int) (short) 1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int78 = tomcatEmbeddedServletContainerFactory77.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray79 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList80 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList80, tomcatContextCustomizerArray79);
        tomcatEmbeddedServletContainerFactory77.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList80);
        java.util.Collection<org.apache.catalina.Valve> valveCollection83 = tomcatEmbeddedServletContainerFactory77.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory84 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory84.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory87 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory87.setTldSkip("hi!");
        java.lang.String str90 = tomcatEmbeddedServletContainerFactory87.getUriEncoding();
        tomcatEmbeddedServletContainerFactory87.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings93 = tomcatEmbeddedServletContainerFactory87.getMimeMappings();
        tomcatEmbeddedServletContainerFactory84.setMimeMappings(mimeMappings93);
        tomcatEmbeddedServletContainerFactory77.setMimeMappings(mimeMappings93);
        tomcatEmbeddedServletContainerFactory25.setMimeMappings(mimeMappings93);
        tomcatEmbeddedServletContainerFactory16.setMimeMappings(mimeMappings93);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings93);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings99 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-8" + "'", str31, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-8" + "'", str44, "UTF-8");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(errorPageSet48);
        org.junit.Assert.assertNotNull(valveCollection51);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection54);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection56);
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(lifecycleListenerArray70);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(valveCollection83);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "UTF-8" + "'", str90, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings93);
        org.junit.Assert.assertNotNull(mimeMappings99);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage2 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray3 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage2 };
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray3);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int6 = tomcatEmbeddedServletContainerFactory5.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray7 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory5.addAdditionalTomcatConnectors(connectorArray7);
        org.apache.catalina.Valve[] valveArray9 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory5.addContextValves(valveArray9);
        org.springframework.boot.context.embedded.Ssl ssl11 = tomcatEmbeddedServletContainerFactory5.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setTldSkip("hi!");
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory12.getUriEncoding();
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        tomcatEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setTldSkip("hi!");
        boolean boolean23 = tomcatEmbeddedServletContainerFactory20.isRegisterDefaultServlet();
        int int24 = tomcatEmbeddedServletContainerFactory20.getSessionTimeout();
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray26 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27, errorPageArray26);
        tomcatEmbeddedServletContainerFactory20.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        tomcatEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer35 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer35 };
        tomcatEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray36);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray36);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int40 = tomcatEmbeddedServletContainerFactory39.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory39.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory39.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer47 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray48 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer47 };
        tomcatEmbeddedServletContainerFactory44.addInitializers(servletContextInitializerArray48);
        tomcatEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray48);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray48);
        org.springframework.core.io.ResourceLoader resourceLoader52 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader52);
        boolean boolean54 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings55 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection56 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(connectorArray7);
        org.junit.Assert.assertNotNull(valveArray9);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertNotNull(servletContextInitializerArray48);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(mimeMappings55);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection56);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        int int4 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.net.InetAddress inetAddress5 = tomcatEmbeddedServletContainerFactory0.getAddress();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass6 = inetAddress5.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8080 + "'", int4 == 8080);
        org.junit.Assert.assertNull(inetAddress5);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory5.getUriEncoding();
        tomcatEmbeddedServletContainerFactory5.setUriEncoding("hi!");
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory5.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory5.getErrorPages();
        tomcatEmbeddedServletContainerFactory5.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory5.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener16 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray17 = new org.apache.catalina.LifecycleListener[] { lifecycleListener16 };
        tomcatEmbeddedServletContainerFactory5.addContextLifecycleListeners(lifecycleListenerArray17);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray17);
        boolean boolean20 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.io.File file21 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file21);
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.net.InetAddress inetAddress24 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNotNull(lifecycleListenerArray17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNull(inetAddress24);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory5.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage7 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray8 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage7 };
        tomcatEmbeddedServletContainerFactory5.addErrorPages(errorPageArray8);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings16);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings16);
        java.util.Collection<org.apache.catalina.Valve> valveCollection19 = tomcatEmbeddedServletContainerFactory0.getValves();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int23 = tomcatEmbeddedServletContainerFactory22.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray24 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory22.addAdditionalTomcatConnectors(connectorArray24);
        tomcatEmbeddedServletContainerFactory22.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer28 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray29 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer28 };
        tomcatEmbeddedServletContainerFactory22.addContextCustomizers(tomcatContextCustomizerArray29);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray29);
        java.io.File file32 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file32);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(valveCollection19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(connectorArray24);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray29);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory7.getUriEncoding();
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setTldSkip("hi!");
        boolean boolean18 = tomcatEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        int int19 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory15.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray21 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22, errorPageArray21);
        tomcatEmbeddedServletContainerFactory15.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.concurrent.TimeUnit timeUnit29 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 100, timeUnit29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(mimeMappings27);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.Ssl ssl7 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl7);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(8080);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection11 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatContextCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection11);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection3 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray4 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray4);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection3);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray4);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        int int11 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean12 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ErrorPages must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection3 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.util.Collection<org.apache.catalina.Valve> valveCollection5 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.junit.Assert.assertNotNull(lifecycleListenerCollection3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
        org.junit.Assert.assertNotNull(valveCollection5);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory4.setTldSkip("hi!");
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory4.getUriEncoding();
        tomcatEmbeddedServletContainerFactory4.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray16 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory10.addConnectorCustomizers(tomcatConnectorCustomizerArray16);
        tomcatEmbeddedServletContainerFactory4.addConnectorCustomizers(tomcatConnectorCustomizerArray16);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray16);
        tomcatEmbeddedServletContainerFactory0.setPort((-1));
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setTldSkip("hi!");
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory22.getUriEncoding();
        boolean boolean26 = tomcatEmbeddedServletContainerFactory22.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray27 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory22.addContextCustomizers(tomcatContextCustomizerArray27);
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer29 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray30 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer29 };
        tomcatEmbeddedServletContainerFactory22.addInitializers(servletContextInitializerArray30);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray30);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection33 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean35 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray16);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray30);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-8" + "'", str34, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory7.getUriEncoding();
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setPort((int) ' ');
        java.util.concurrent.TimeUnit timeUnit19 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 10, timeUnit19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(mimeMappings15);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int10 = tomcatEmbeddedServletContainerFactory9.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray11 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12, tomcatContextCustomizerArray11);
        tomcatEmbeddedServletContainerFactory9.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12);
        java.io.File file15 = null;
        tomcatEmbeddedServletContainerFactory9.setDocumentRoot(file15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection18 = tomcatEmbeddedServletContainerFactory17.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory9.setMimeMappings(mimeMappings19);
        tomcatEmbeddedServletContainerFactory9.setRegisterDefaultServlet(false);
        org.apache.catalina.LifecycleListener lifecycleListener23 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray24 = new org.apache.catalina.LifecycleListener[] { lifecycleListener23 };
        tomcatEmbeddedServletContainerFactory9.addContextLifecycleListeners(lifecycleListenerArray24);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setTldSkip("hi!");
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory27.getUriEncoding();
        boolean boolean31 = tomcatEmbeddedServletContainerFactory27.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection33 = tomcatEmbeddedServletContainerFactory32.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        tomcatEmbeddedServletContainerFactory27.setMimeMappings(mimeMappings34);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings34);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection37 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.util.List<org.apache.catalina.connector.Connector> connectorList38 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection18);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(lifecycleListenerArray24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-8" + "'", str30, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection33);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection37);
        org.junit.Assert.assertNotNull(connectorList38);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.Collection<org.apache.catalina.Valve> valveCollection13 = tomcatEmbeddedServletContainerFactory0.getValves();
        int int14 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.apache.catalina.connector.Connector[] connectorArray15 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Connectors must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertNotNull(valveCollection13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8080 + "'", int14 == 8080);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray6 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray6);
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.apache.catalina.Valve> valveCollection11 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory12.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage14 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray15 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage14 };
        tomcatEmbeddedServletContainerFactory12.addErrorPages(errorPageArray15);
        boolean boolean17 = tomcatEmbeddedServletContainerFactory12.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setTldSkip("hi!");
        boolean boolean21 = tomcatEmbeddedServletContainerFactory18.isRegisterDefaultServlet();
        int int22 = tomcatEmbeddedServletContainerFactory18.getSessionTimeout();
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory18.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray24 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet25, errorPageArray24);
        tomcatEmbeddedServletContainerFactory18.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet25);
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory18.getContextPath();
        tomcatEmbeddedServletContainerFactory18.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int32 = tomcatEmbeddedServletContainerFactory31.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int34 = tomcatEmbeddedServletContainerFactory33.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray35 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory33.addAdditionalTomcatConnectors(connectorArray35);
        org.apache.catalina.Valve[] valveArray37 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory33.addContextValves(valveArray37);
        tomcatEmbeddedServletContainerFactory31.addContextValves(valveArray37);
        tomcatEmbeddedServletContainerFactory18.addContextValves(valveArray37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int42 = tomcatEmbeddedServletContainerFactory41.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray43 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory41.addAdditionalTomcatConnectors(connectorArray43);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection45 = tomcatEmbeddedServletContainerFactory41.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int47 = tomcatEmbeddedServletContainerFactory46.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int49 = tomcatEmbeddedServletContainerFactory48.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray50 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory48.addAdditionalTomcatConnectors(connectorArray50);
        org.apache.catalina.Valve[] valveArray52 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory48.addContextValves(valveArray52);
        tomcatEmbeddedServletContainerFactory46.addContextValves(valveArray52);
        tomcatEmbeddedServletContainerFactory41.addContextValves(valveArray52);
        tomcatEmbeddedServletContainerFactory18.addContextValves(valveArray52);
        tomcatEmbeddedServletContainerFactory12.addContextValves(valveArray52);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection58 = tomcatEmbeddedServletContainerFactory12.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection58);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray6);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(valveCollection11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(connectorArray35);
        org.junit.Assert.assertNotNull(valveArray37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(connectorArray43);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(connectorArray50);
        org.junit.Assert.assertNotNull(valveArray52);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection58);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) '4');
        java.util.concurrent.TimeUnit timeUnit7 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0, timeUnit7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray6 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int9 = tomcatEmbeddedServletContainerFactory8.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray10 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList11 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList11, tomcatContextCustomizerArray10);
        tomcatEmbeddedServletContainerFactory8.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList11);
        tomcatEmbeddedServletContainerFactory8.setJspServletClassName("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int17 = tomcatEmbeddedServletContainerFactory16.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray18 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray18);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection20 = tomcatEmbeddedServletContainerFactory16.getContextLifecycleListeners();
        org.apache.catalina.connector.Connector[] connectorArray21 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray21);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection25 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.io.File file26 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection27 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.Class<?> wildcardClass28 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(connectorArray18);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection20);
        org.junit.Assert.assertNotNull(connectorArray21);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        boolean boolean11 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection12 = tomcatEmbeddedServletContainerFactory0.getValves();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        java.util.concurrent.TimeUnit timeUnit16 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) 'a', timeUnit16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(valveCollection12);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort((int) '4');
        org.springframework.boot.context.embedded.Ssl ssl10 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int12 = tomcatEmbeddedServletContainerFactory11.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray13 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory11.addAdditionalTomcatConnectors(connectorArray13);
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory11.addContextValves(valveArray15);
        org.springframework.boot.context.embedded.Ssl ssl17 = tomcatEmbeddedServletContainerFactory11.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl18 = tomcatEmbeddedServletContainerFactory11.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = tomcatEmbeddedServletContainerFactory11.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int22 = tomcatEmbeddedServletContainerFactory21.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray23 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory21.addAdditionalTomcatConnectors(connectorArray23);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection25 = tomcatEmbeddedServletContainerFactory21.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int27 = tomcatEmbeddedServletContainerFactory26.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int29 = tomcatEmbeddedServletContainerFactory28.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray30 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory28.addAdditionalTomcatConnectors(connectorArray30);
        org.apache.catalina.Valve[] valveArray32 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory28.addContextValves(valveArray32);
        tomcatEmbeddedServletContainerFactory26.addContextValves(valveArray32);
        tomcatEmbeddedServletContainerFactory21.addContextValves(valveArray32);
        tomcatEmbeddedServletContainerFactory11.addContextValves(valveArray32);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray32);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatConnectorCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(connectorArray13);
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertNull(ssl18);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(errorPageSet20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(connectorArray23);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(connectorArray30);
        org.junit.Assert.assertNotNull(valveArray32);
        org.junit.Assert.assertNotNull(errorPageSet38);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection4 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.net.InetAddress inetAddress5 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.Ssl ssl7 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl7);
        java.util.concurrent.TimeUnit timeUnit10 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(10, timeUnit10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection4);
        org.junit.Assert.assertNull(inetAddress5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings7);
        java.net.InetAddress inetAddress9 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int12 = tomcatEmbeddedServletContainerFactory11.getSessionTimeout();
        java.io.File file13 = tomcatEmbeddedServletContainerFactory11.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setTldSkip("hi!");
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory14.getUriEncoding();
        tomcatEmbeddedServletContainerFactory14.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray20 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory14.addConnectorCustomizers(tomcatConnectorCustomizerArray20);
        tomcatEmbeddedServletContainerFactory11.addConnectorCustomizers(tomcatConnectorCustomizerArray20);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray20);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-8" + "'", str17, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray20);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl5);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int8 = tomcatEmbeddedServletContainerFactory7.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray9 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList10 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList10, tomcatContextCustomizerArray9);
        tomcatEmbeddedServletContainerFactory7.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList10);
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray15 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory7.addContextLifecycleListeners(lifecycleListenerArray15);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray15);
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        java.util.concurrent.TimeUnit timeUnit21 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 100, timeUnit21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(lifecycleListenerArray15);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.io.File file5 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file5);
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.lang.Class<?> wildcardClass8 = connectorList7.getClass();
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) '4');
        tomcatEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        boolean boolean11 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setTldSkip("hi!");
        boolean boolean15 = tomcatEmbeddedServletContainerFactory12.isRegisterDefaultServlet();
        int int16 = tomcatEmbeddedServletContainerFactory12.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory12.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer19 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray20 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer19 };
        tomcatEmbeddedServletContainerFactory12.addConnectorCustomizers(tomcatConnectorCustomizerArray20);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection22 = tomcatEmbeddedServletContainerFactory12.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection22);
        java.lang.Class<?> wildcardClass24 = tomcatContextCustomizerCollection22.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray20);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection22);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray6 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int9 = tomcatEmbeddedServletContainerFactory8.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray10 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList11 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList11, tomcatContextCustomizerArray10);
        tomcatEmbeddedServletContainerFactory8.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList11);
        tomcatEmbeddedServletContainerFactory8.setJspServletClassName("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int17 = tomcatEmbeddedServletContainerFactory16.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray18 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray18);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection20 = tomcatEmbeddedServletContainerFactory16.getContextLifecycleListeners();
        org.apache.catalina.connector.Connector[] connectorArray21 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray21);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection25 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.io.File file26 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.Ssl ssl27 = tomcatEmbeddedServletContainerFactory0.getSsl();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass28 = ssl27.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(connectorArray18);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection20);
        org.junit.Assert.assertNotNull(connectorArray21);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(ssl27);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.List<org.apache.catalina.connector.Connector> connectorList3 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.util.concurrent.TimeUnit timeUnit5 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 0, timeUnit5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(connectorList3);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        int int11 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        int int14 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.apache.catalina.connector.Connector[] connectorArray15 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Connectors must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory7.setMimeMappings(mimeMappings16);
        tomcatEmbeddedServletContainerFactory7.setRegisterJspServlet(true);
        java.io.File file20 = tomcatEmbeddedServletContainerFactory7.getDocumentRoot();
        tomcatEmbeddedServletContainerFactory7.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setTldSkip("hi!");
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory23.getUriEncoding();
        tomcatEmbeddedServletContainerFactory23.setUriEncoding("hi!");
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory23.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet30 = tomcatEmbeddedServletContainerFactory23.getErrorPages();
        tomcatEmbeddedServletContainerFactory23.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet33 = tomcatEmbeddedServletContainerFactory23.getErrorPages();
        int int34 = tomcatEmbeddedServletContainerFactory23.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory35.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage37 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray38 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage37 };
        tomcatEmbeddedServletContainerFactory35.addErrorPages(errorPageArray38);
        tomcatEmbeddedServletContainerFactory23.addErrorPages(errorPageArray38);
        tomcatEmbeddedServletContainerFactory7.addErrorPages(errorPageArray38);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray38);
        org.springframework.boot.context.embedded.Ssl ssl43 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl43);
        java.io.File file45 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file45);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-8" + "'", str26, "UTF-8");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(errorPageSet30);
        org.junit.Assert.assertNotNull(errorPageSet33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-8" + "'", str36, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray38);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory10.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = tomcatEmbeddedServletContainerFactory10.getErrorPages();
        tomcatEmbeddedServletContainerFactory10.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection20 = tomcatEmbeddedServletContainerFactory10.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener21 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] { lifecycleListener21 };
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setTldSkip("hi!");
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory24.getUriEncoding();
        tomcatEmbeddedServletContainerFactory24.setUriEncoding("hi!");
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory24.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet31 = tomcatEmbeddedServletContainerFactory24.getErrorPages();
        tomcatEmbeddedServletContainerFactory24.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet34 = tomcatEmbeddedServletContainerFactory24.getErrorPages();
        int int35 = tomcatEmbeddedServletContainerFactory24.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory36.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage38 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray39 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage38 };
        tomcatEmbeddedServletContainerFactory36.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory24.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory10.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory5.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray39);
        org.springframework.boot.context.embedded.Ssl ssl45 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl45);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertNotNull(valveCollection20);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(errorPageSet31);
        org.junit.Assert.assertNotNull(errorPageSet34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-8" + "'", str37, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray39);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet3 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertNotNull(errorPageSet3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", 10);
        boolean boolean3 = tomcatEmbeddedServletContainerFactory2.isRegisterJspServlet();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray4 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.addErrorPages(errorPageArray4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ErrorPages must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) '#');
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory11.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings12);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(mimeMappings12);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl7 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection9 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory10.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = tomcatEmbeddedServletContainerFactory10.getErrorPages();
        tomcatEmbeddedServletContainerFactory10.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection20 = tomcatEmbeddedServletContainerFactory10.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener21 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] { lifecycleListener21 };
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setTldSkip("hi!");
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory24.getUriEncoding();
        tomcatEmbeddedServletContainerFactory24.setUriEncoding("hi!");
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory24.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet31 = tomcatEmbeddedServletContainerFactory24.getErrorPages();
        tomcatEmbeddedServletContainerFactory24.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet34 = tomcatEmbeddedServletContainerFactory24.getErrorPages();
        int int35 = tomcatEmbeddedServletContainerFactory24.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory36.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage38 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray39 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage38 };
        tomcatEmbeddedServletContainerFactory36.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory24.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory10.addErrorPages(errorPageArray39);
        java.io.File file43 = null;
        tomcatEmbeddedServletContainerFactory10.setBaseDirectory(file43);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int46 = tomcatEmbeddedServletContainerFactory45.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray47 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory45.addAdditionalTomcatConnectors(connectorArray47);
        org.apache.catalina.Valve[] valveArray49 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory45.addContextValves(valveArray49);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int52 = tomcatEmbeddedServletContainerFactory51.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray53 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory51.addAdditionalTomcatConnectors(connectorArray53);
        tomcatEmbeddedServletContainerFactory45.addAdditionalTomcatConnectors(connectorArray53);
        tomcatEmbeddedServletContainerFactory10.addAdditionalTomcatConnectors(connectorArray53);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray53);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int59 = tomcatEmbeddedServletContainerFactory58.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray60 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory58.addAdditionalTomcatConnectors(connectorArray60);
        tomcatEmbeddedServletContainerFactory58.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer64 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray65 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer64 };
        tomcatEmbeddedServletContainerFactory58.addContextCustomizers(tomcatContextCustomizerArray65);
        java.lang.String str67 = tomcatEmbeddedServletContainerFactory58.getUriEncoding();
        tomcatEmbeddedServletContainerFactory58.setPort((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory58.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings72 = tomcatEmbeddedServletContainerFactory58.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings72);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertNotNull(valveCollection20);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(errorPageSet31);
        org.junit.Assert.assertNotNull(errorPageSet34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-8" + "'", str37, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray39);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(connectorArray47);
        org.junit.Assert.assertNotNull(valveArray49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(connectorArray53);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(connectorArray60);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "UTF-8" + "'", str67, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings72);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        java.io.File file6 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection9 = tomcatEmbeddedServletContainerFactory8.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.net.InetAddress inetAddress13 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress13);
        java.util.concurrent.TimeUnit timeUnit16 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 100, timeUnit16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection9);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(mimeMappings12);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        int int11 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file12 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file12);
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl15);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ErrorPages must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(connectorList14);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 1);
        tomcatEmbeddedServletContainerFactory1.setUriEncoding("hi!");
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl7 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory10.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = tomcatEmbeddedServletContainerFactory10.getErrorPages();
        tomcatEmbeddedServletContainerFactory10.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection20 = tomcatEmbeddedServletContainerFactory10.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener21 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] { lifecycleListener21 };
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setTldSkip("hi!");
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory24.getUriEncoding();
        tomcatEmbeddedServletContainerFactory24.setUriEncoding("hi!");
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory24.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet31 = tomcatEmbeddedServletContainerFactory24.getErrorPages();
        tomcatEmbeddedServletContainerFactory24.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet34 = tomcatEmbeddedServletContainerFactory24.getErrorPages();
        int int35 = tomcatEmbeddedServletContainerFactory24.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory36.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage38 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray39 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage38 };
        tomcatEmbeddedServletContainerFactory36.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory24.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory10.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setPort(8080);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection49 = tomcatEmbeddedServletContainerFactory48.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory48.getMimeMappings();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection51 = tomcatEmbeddedServletContainerFactory48.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory48.setUriEncoding("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int55 = tomcatEmbeddedServletContainerFactory54.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray56 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory54.addAdditionalTomcatConnectors(connectorArray56);
        org.apache.catalina.Valve[] valveArray58 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory54.addContextValves(valveArray58);
        org.springframework.boot.context.embedded.Ssl ssl60 = tomcatEmbeddedServletContainerFactory54.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl61 = tomcatEmbeddedServletContainerFactory54.getSsl();
        tomcatEmbeddedServletContainerFactory54.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory64.setTldSkip("hi!");
        java.lang.String str67 = tomcatEmbeddedServletContainerFactory64.getUriEncoding();
        tomcatEmbeddedServletContainerFactory64.setUriEncoding("hi!");
        java.lang.String str70 = tomcatEmbeddedServletContainerFactory64.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet71 = tomcatEmbeddedServletContainerFactory64.getErrorPages();
        tomcatEmbeddedServletContainerFactory64.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection74 = tomcatEmbeddedServletContainerFactory64.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener75 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray76 = new org.apache.catalina.LifecycleListener[] { lifecycleListener75 };
        tomcatEmbeddedServletContainerFactory64.addContextLifecycleListeners(lifecycleListenerArray76);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory78.setTldSkip("hi!");
        java.lang.String str81 = tomcatEmbeddedServletContainerFactory78.getUriEncoding();
        tomcatEmbeddedServletContainerFactory78.setUriEncoding("hi!");
        java.lang.String str84 = tomcatEmbeddedServletContainerFactory78.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet85 = tomcatEmbeddedServletContainerFactory78.getErrorPages();
        tomcatEmbeddedServletContainerFactory78.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet88 = tomcatEmbeddedServletContainerFactory78.getErrorPages();
        int int89 = tomcatEmbeddedServletContainerFactory78.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory90 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str91 = tomcatEmbeddedServletContainerFactory90.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage92 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray93 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage92 };
        tomcatEmbeddedServletContainerFactory90.addErrorPages(errorPageArray93);
        tomcatEmbeddedServletContainerFactory78.addErrorPages(errorPageArray93);
        tomcatEmbeddedServletContainerFactory64.addErrorPages(errorPageArray93);
        tomcatEmbeddedServletContainerFactory54.addErrorPages(errorPageArray93);
        tomcatEmbeddedServletContainerFactory48.addErrorPages(errorPageArray93);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray93);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertNotNull(valveCollection20);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(errorPageSet31);
        org.junit.Assert.assertNotNull(errorPageSet34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-8" + "'", str37, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray39);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection49);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(connectorArray56);
        org.junit.Assert.assertNotNull(valveArray58);
        org.junit.Assert.assertNull(ssl60);
        org.junit.Assert.assertNull(ssl61);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "UTF-8" + "'", str67, "UTF-8");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(errorPageSet71);
        org.junit.Assert.assertNotNull(valveCollection74);
        org.junit.Assert.assertNotNull(lifecycleListenerArray76);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "UTF-8" + "'", str81, "UTF-8");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(errorPageSet85);
        org.junit.Assert.assertNotNull(errorPageSet88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "UTF-8" + "'", str91, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray93);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet14 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(errorPageSet14);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7, errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int14 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int16 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray17 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory15.addAdditionalTomcatConnectors(connectorArray17);
        org.apache.catalina.Valve[] valveArray19 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray19);
        tomcatEmbeddedServletContainerFactory13.addContextValves(valveArray19);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray19);
        java.util.Collection<org.apache.catalina.Valve> valveCollection23 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress24 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(connectorArray17);
        org.junit.Assert.assertNotNull(valveArray19);
        org.junit.Assert.assertNotNull(valveCollection23);
        org.junit.Assert.assertNull(inetAddress24);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        boolean boolean11 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.net.InetAddress inetAddress12 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNotNull(errorPageSet13);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.lang.Class<?> wildcardClass11 = connectorArray8.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings7);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection11 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray12 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray12);
        java.util.Collection<org.apache.catalina.Valve> valveCollection14 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection11);
        org.junit.Assert.assertNotNull(lifecycleListenerArray12);
        org.junit.Assert.assertNotNull(valveCollection14);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory6.getUriEncoding();
        tomcatEmbeddedServletContainerFactory6.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray12 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory6.addConnectorCustomizers(tomcatConnectorCustomizerArray12);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray12);
        boolean boolean15 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        int int16 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Initializers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8080 + "'", int16 == 8080);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl7 = tomcatEmbeddedServletContainerFactory0.getSsl();
        java.net.InetAddress inetAddress8 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress8);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        boolean boolean14 = tomcatEmbeddedServletContainerFactory10.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection16 = tomcatEmbeddedServletContainerFactory15.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory15.getMimeMappings();
        tomcatEmbeddedServletContainerFactory10.setMimeMappings(mimeMappings17);
        java.net.InetAddress inetAddress19 = null;
        tomcatEmbeddedServletContainerFactory10.setAddress(inetAddress19);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int22 = tomcatEmbeddedServletContainerFactory21.getSessionTimeout();
        java.io.File file23 = tomcatEmbeddedServletContainerFactory21.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setTldSkip("hi!");
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory24.getUriEncoding();
        tomcatEmbeddedServletContainerFactory24.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray30 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory24.addConnectorCustomizers(tomcatConnectorCustomizerArray30);
        tomcatEmbeddedServletContainerFactory21.addConnectorCustomizers(tomcatConnectorCustomizerArray30);
        tomcatEmbeddedServletContainerFactory10.addConnectorCustomizers(tomcatConnectorCustomizerArray30);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray30);
        java.lang.Class<?> wildcardClass35 = tomcatConnectorCustomizerArray30.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection16);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray30);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer7 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray8 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer7 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray8);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection10 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.apache.catalina.Valve[] valveArray11 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Valves must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray8);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection10);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection4 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int6 = tomcatEmbeddedServletContainerFactory5.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int8 = tomcatEmbeddedServletContainerFactory7.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray9 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray9);
        org.apache.catalina.Valve[] valveArray11 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory7.addContextValves(valveArray11);
        tomcatEmbeddedServletContainerFactory5.addContextValves(valveArray11);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray11);
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.Ssl ssl16 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setPort((int) '4');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(connectorArray9);
        org.junit.Assert.assertNotNull(valveArray11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertNull(ssl16);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        java.lang.Class<?> wildcardClass6 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        java.net.InetAddress inetAddress7 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.apache.catalina.connector.Connector[] connectorArray8 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Connectors must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(inetAddress7);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int10 = tomcatEmbeddedServletContainerFactory9.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray11 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12, tomcatContextCustomizerArray11);
        tomcatEmbeddedServletContainerFactory9.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12);
        java.io.File file15 = null;
        tomcatEmbeddedServletContainerFactory9.setDocumentRoot(file15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection18 = tomcatEmbeddedServletContainerFactory17.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory9.setMimeMappings(mimeMappings19);
        tomcatEmbeddedServletContainerFactory9.setRegisterDefaultServlet(false);
        org.apache.catalina.LifecycleListener lifecycleListener23 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray24 = new org.apache.catalina.LifecycleListener[] { lifecycleListener23 };
        tomcatEmbeddedServletContainerFactory9.addContextLifecycleListeners(lifecycleListenerArray24);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray24);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection18);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(lifecycleListenerArray24);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage2 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray3 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage2 };
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray3);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int6 = tomcatEmbeddedServletContainerFactory5.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray7 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory5.addAdditionalTomcatConnectors(connectorArray7);
        org.apache.catalina.Valve[] valveArray9 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory5.addContextValves(valveArray9);
        org.springframework.boot.context.embedded.Ssl ssl11 = tomcatEmbeddedServletContainerFactory5.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setTldSkip("hi!");
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory12.getUriEncoding();
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        tomcatEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setTldSkip("hi!");
        boolean boolean23 = tomcatEmbeddedServletContainerFactory20.isRegisterDefaultServlet();
        int int24 = tomcatEmbeddedServletContainerFactory20.getSessionTimeout();
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray26 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27, errorPageArray26);
        tomcatEmbeddedServletContainerFactory20.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        tomcatEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer35 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer35 };
        tomcatEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray36);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray36);
        org.springframework.boot.context.embedded.Ssl ssl39 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl39);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(connectorArray7);
        org.junit.Assert.assertNotNull(valveArray9);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection4 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.net.InetAddress inetAddress5 = tomcatEmbeddedServletContainerFactory0.getAddress();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.io.File file8 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection4);
        org.junit.Assert.assertNull(inetAddress5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(errorPageSet7);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings7);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection9 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.io.File file10 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        int int11 = tomcatEmbeddedServletContainerFactory0.getPort();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8080 + "'", int11 == 8080);
        org.junit.Assert.assertNotNull(connectorList14);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings7);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection9 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.io.File file10 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        int int11 = tomcatEmbeddedServletContainerFactory0.getPort();
        int int12 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.io.File file13 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file13);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8080 + "'", int11 == 8080);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8080 + "'", int12 == 8080);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl7 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection9 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int11 = tomcatEmbeddedServletContainerFactory10.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray12 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory10.addAdditionalTomcatConnectors(connectorArray12);
        org.apache.catalina.Valve[] valveArray14 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory10.addContextValves(valveArray14);
        org.springframework.boot.context.embedded.Ssl ssl16 = tomcatEmbeddedServletContainerFactory10.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setTldSkip("hi!");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory10.setMimeMappings(mimeMappings23);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setTldSkip("hi!");
        boolean boolean28 = tomcatEmbeddedServletContainerFactory25.isRegisterDefaultServlet();
        int int29 = tomcatEmbeddedServletContainerFactory25.getSessionTimeout();
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory25.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray31 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32, errorPageArray31);
        tomcatEmbeddedServletContainerFactory25.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32);
        tomcatEmbeddedServletContainerFactory10.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(connectorArray12);
        org.junit.Assert.assertNotNull(valveArray14);
        org.junit.Assert.assertNull(ssl16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-8" + "'", str30, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-8" + "'", str38, "UTF-8");
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file5 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file5);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection7 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection7);
        org.junit.Assert.assertNotNull(mimeMappings8);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings7);
        java.net.InetAddress inetAddress9 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener11 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray12 = new org.apache.catalina.LifecycleListener[] { lifecycleListener11 };
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setTldSkip("hi!");
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory14.getUriEncoding();
        tomcatEmbeddedServletContainerFactory14.setUriEncoding("hi!");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory14.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        tomcatEmbeddedServletContainerFactory14.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        int int25 = tomcatEmbeddedServletContainerFactory14.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory26.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage28 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray29 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage28 };
        tomcatEmbeddedServletContainerFactory26.addErrorPages(errorPageArray29);
        tomcatEmbeddedServletContainerFactory14.addErrorPages(errorPageArray29);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray29);
        java.io.File file33 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file33);
        org.springframework.boot.context.embedded.Ssl ssl35 = tomcatEmbeddedServletContainerFactory0.getSsl();
        int int36 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertNotNull(lifecycleListenerArray12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-8" + "'", str17, "UTF-8");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray29);
        org.junit.Assert.assertNull(ssl35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl7 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory10.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = tomcatEmbeddedServletContainerFactory10.getErrorPages();
        tomcatEmbeddedServletContainerFactory10.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection20 = tomcatEmbeddedServletContainerFactory10.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener21 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] { lifecycleListener21 };
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setTldSkip("hi!");
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory24.getUriEncoding();
        tomcatEmbeddedServletContainerFactory24.setUriEncoding("hi!");
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory24.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet31 = tomcatEmbeddedServletContainerFactory24.getErrorPages();
        tomcatEmbeddedServletContainerFactory24.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet34 = tomcatEmbeddedServletContainerFactory24.getErrorPages();
        int int35 = tomcatEmbeddedServletContainerFactory24.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory36.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage38 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray39 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage38 };
        tomcatEmbeddedServletContainerFactory36.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory24.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory10.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray39);
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setPort(8080);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection48 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.List<org.apache.catalina.connector.Connector> connectorList49 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertNotNull(valveCollection20);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(errorPageSet31);
        org.junit.Assert.assertNotNull(errorPageSet34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-8" + "'", str37, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray39);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection48);
        org.junit.Assert.assertNotNull(connectorList49);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("UTF-8", 8080);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory6.getUriEncoding();
        tomcatEmbeddedServletContainerFactory6.setUriEncoding("hi!");
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory6.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = tomcatEmbeddedServletContainerFactory6.getErrorPages();
        tomcatEmbeddedServletContainerFactory6.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection16 = tomcatEmbeddedServletContainerFactory6.getValves();
        java.net.InetAddress inetAddress17 = null;
        tomcatEmbeddedServletContainerFactory6.setAddress(inetAddress17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setTldSkip("hi!");
        boolean boolean22 = tomcatEmbeddedServletContainerFactory19.isRegisterDefaultServlet();
        int int23 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory19.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray25 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet26, errorPageArray25);
        tomcatEmbeddedServletContainerFactory19.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet26);
        tomcatEmbeddedServletContainerFactory6.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet26);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet26);
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.core.io.ResourceLoader resourceLoader35 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader35);
        java.util.concurrent.TimeUnit timeUnit38 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) '4', timeUnit38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(errorPageSet13);
        org.junit.Assert.assertNotNull(valveCollection16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-8" + "'", str24, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) ' ');
        tomcatEmbeddedServletContainerFactory2.setTldSkip("");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        org.apache.catalina.connector.Connector[] connectorArray6 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.addAdditionalTomcatConnectors(connectorArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Connectors must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings5);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int5 = tomcatEmbeddedServletContainerFactory4.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray6 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList7 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList7, tomcatContextCustomizerArray6);
        tomcatEmbeddedServletContainerFactory4.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList7);
        java.io.File file10 = null;
        tomcatEmbeddedServletContainerFactory4.setDocumentRoot(file10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory12.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        tomcatEmbeddedServletContainerFactory4.setMimeMappings(mimeMappings14);
        tomcatEmbeddedServletContainerFactory4.setRegisterDefaultServlet(false);
        org.apache.catalina.LifecycleListener lifecycleListener18 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray19 = new org.apache.catalina.LifecycleListener[] { lifecycleListener18 };
        tomcatEmbeddedServletContainerFactory4.addContextLifecycleListeners(lifecycleListenerArray19);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray19);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(lifecycleListenerArray19);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(0);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection2 = tomcatEmbeddedServletContainerFactory1.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory1.setSessionTimeout((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory1.setRegisterDefaultServlet(true);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection2);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7, errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int11 = tomcatEmbeddedServletContainerFactory10.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray12 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory10.addAdditionalTomcatConnectors(connectorArray12);
        org.apache.catalina.Valve[] valveArray14 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory10.addContextValves(valveArray14);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int17 = tomcatEmbeddedServletContainerFactory16.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray18 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray18);
        tomcatEmbeddedServletContainerFactory10.addAdditionalTomcatConnectors(connectorArray18);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = tomcatEmbeddedServletContainerFactory10.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection22 = tomcatEmbeddedServletContainerFactory10.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection24 = tomcatEmbeddedServletContainerFactory23.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory10.setTomcatContextCustomizers(tomcatContextCustomizerCollection24);
        org.springframework.boot.context.embedded.Ssl ssl26 = null;
        tomcatEmbeddedServletContainerFactory10.setSsl(ssl26);
        java.net.InetAddress inetAddress28 = null;
        tomcatEmbeddedServletContainerFactory10.setAddress(inetAddress28);
        tomcatEmbeddedServletContainerFactory10.setTldSkip("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setTldSkip("hi!");
        boolean boolean35 = tomcatEmbeddedServletContainerFactory32.isRegisterJspServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        tomcatEmbeddedServletContainerFactory10.setMimeMappings(mimeMappings36);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings36);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(connectorArray12);
        org.junit.Assert.assertNotNull(valveArray14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(connectorArray18);
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection22);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection24);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(mimeMappings36);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int14 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory13.addAdditionalTomcatConnectors(connectorArray15);
        org.apache.catalina.Valve[] valveArray17 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory13.addContextValves(valveArray17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int20 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray21 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory19.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory13.addAdditionalTomcatConnectors(connectorArray21);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = tomcatEmbeddedServletContainerFactory13.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet24);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.util.concurrent.TimeUnit timeUnit32 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1, timeUnit32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(valveArray17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(connectorArray21);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertNotNull(mimeMappings26);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory7.getUriEncoding();
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer7 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray8 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer7 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray8);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        int int13 = tomcatEmbeddedServletContainerFactory0.getPort();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8080 + "'", int13 == 8080);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection14 = tomcatEmbeddedServletContainerFactory13.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection14);
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl16);
        boolean boolean18 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.concurrent.TimeUnit timeUnit21 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(8080, timeUnit21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings7);
        java.net.InetAddress inetAddress9 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        java.io.File file11 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file11);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setTldSkip("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory13.getUriEncoding();
        boolean boolean17 = tomcatEmbeddedServletContainerFactory13.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setTldSkip("hi!");
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory18.getUriEncoding();
        tomcatEmbeddedServletContainerFactory18.setUriEncoding("hi!");
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory18.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = tomcatEmbeddedServletContainerFactory18.getErrorPages();
        tomcatEmbeddedServletContainerFactory18.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection28 = tomcatEmbeddedServletContainerFactory18.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener29 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray30 = new org.apache.catalina.LifecycleListener[] { lifecycleListener29 };
        tomcatEmbeddedServletContainerFactory18.addContextLifecycleListeners(lifecycleListenerArray30);
        tomcatEmbeddedServletContainerFactory13.addContextLifecycleListeners(lifecycleListenerArray30);
        boolean boolean33 = tomcatEmbeddedServletContainerFactory13.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int35 = tomcatEmbeddedServletContainerFactory34.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray36 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory34.addAdditionalTomcatConnectors(connectorArray36);
        org.apache.catalina.Valve[] valveArray38 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory34.addContextValves(valveArray38);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int41 = tomcatEmbeddedServletContainerFactory40.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray42 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory40.addAdditionalTomcatConnectors(connectorArray42);
        tomcatEmbeddedServletContainerFactory34.addAdditionalTomcatConnectors(connectorArray42);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet45 = tomcatEmbeddedServletContainerFactory34.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection46 = tomcatEmbeddedServletContainerFactory34.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory13.setTomcatContextCustomizers(tomcatContextCustomizerCollection46);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection46);
        java.net.InetAddress inetAddress49 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(errorPageSet25);
        org.junit.Assert.assertNotNull(valveCollection28);
        org.junit.Assert.assertNotNull(lifecycleListenerArray30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(connectorArray36);
        org.junit.Assert.assertNotNull(valveArray38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(connectorArray42);
        org.junit.Assert.assertNotNull(errorPageSet45);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection46);
        org.junit.Assert.assertNull(inetAddress49);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        org.springframework.boot.context.embedded.Ssl ssl15 = tomcatEmbeddedServletContainerFactory0.getSsl();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection16 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.Class<?> wildcardClass18 = errorPageSet17.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection16);
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        boolean boolean13 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int15 = tomcatEmbeddedServletContainerFactory14.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray16 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory14.addAdditionalTomcatConnectors(connectorArray16);
        org.apache.catalina.Valve[] valveArray18 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory14.addContextValves(valveArray18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int21 = tomcatEmbeddedServletContainerFactory20.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray22 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory20.addAdditionalTomcatConnectors(connectorArray22);
        tomcatEmbeddedServletContainerFactory14.addAdditionalTomcatConnectors(connectorArray22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setTldSkip("hi!");
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory25.getUriEncoding();
        tomcatEmbeddedServletContainerFactory25.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setTldSkip("hi!");
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory31.getUriEncoding();
        tomcatEmbeddedServletContainerFactory31.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray37 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory31.addConnectorCustomizers(tomcatConnectorCustomizerArray37);
        tomcatEmbeddedServletContainerFactory25.addConnectorCustomizers(tomcatConnectorCustomizerArray37);
        boolean boolean40 = tomcatEmbeddedServletContainerFactory25.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory41.setTldSkip("hi!");
        boolean boolean44 = tomcatEmbeddedServletContainerFactory41.isRegisterDefaultServlet();
        int int45 = tomcatEmbeddedServletContainerFactory41.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory41.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer48 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray49 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer48 };
        tomcatEmbeddedServletContainerFactory41.addConnectorCustomizers(tomcatConnectorCustomizerArray49);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet51 = tomcatEmbeddedServletContainerFactory41.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection52 = tomcatEmbeddedServletContainerFactory41.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory25.setTomcatContextCustomizers(tomcatContextCustomizerCollection52);
        tomcatEmbeddedServletContainerFactory14.setTomcatContextCustomizers(tomcatContextCustomizerCollection52);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory55.setTldSkip("hi!");
        java.io.File file60 = null;
        tomcatEmbeddedServletContainerFactory55.setDocumentRoot(file60);
        java.util.Collection<org.apache.catalina.Valve> valveCollection62 = tomcatEmbeddedServletContainerFactory55.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory63.setTldSkip("hi!");
        java.lang.String str66 = tomcatEmbeddedServletContainerFactory63.getUriEncoding();
        tomcatEmbeddedServletContainerFactory63.setUriEncoding("hi!");
        java.lang.String str69 = tomcatEmbeddedServletContainerFactory63.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet70 = tomcatEmbeddedServletContainerFactory63.getErrorPages();
        tomcatEmbeddedServletContainerFactory63.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection73 = tomcatEmbeddedServletContainerFactory63.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener74 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray75 = new org.apache.catalina.LifecycleListener[] { lifecycleListener74 };
        tomcatEmbeddedServletContainerFactory63.addContextLifecycleListeners(lifecycleListenerArray75);
        tomcatEmbeddedServletContainerFactory55.addContextLifecycleListeners(lifecycleListenerArray75);
        tomcatEmbeddedServletContainerFactory14.addContextLifecycleListeners(lifecycleListenerArray75);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray75);
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        java.net.InetAddress inetAddress82 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress82);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(connectorArray16);
        org.junit.Assert.assertNotNull(valveArray18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(connectorArray22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UTF-8" + "'", str28, "UTF-8");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-8" + "'", str34, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray49);
        org.junit.Assert.assertNotNull(errorPageSet51);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection52);
        org.junit.Assert.assertNotNull(valveCollection62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "UTF-8" + "'", str66, "UTF-8");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(errorPageSet70);
        org.junit.Assert.assertNotNull(valveCollection73);
        org.junit.Assert.assertNotNull(lifecycleListenerArray75);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection15 = tomcatEmbeddedServletContainerFactory14.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        tomcatEmbeddedServletContainerFactory14.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl19 = null;
        tomcatEmbeddedServletContainerFactory14.setSsl(ssl19);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int22 = tomcatEmbeddedServletContainerFactory21.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray23 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList24 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList24, tomcatContextCustomizerArray23);
        tomcatEmbeddedServletContainerFactory21.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList24);
        tomcatEmbeddedServletContainerFactory21.setProtocol("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray29 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory21.addContextLifecycleListeners(lifecycleListenerArray29);
        tomcatEmbeddedServletContainerFactory14.addContextLifecycleListeners(lifecycleListenerArray29);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray29);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection15);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(lifecycleListenerArray29);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage2 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray3 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage2 };
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray3);
        boolean boolean5 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("hi!");
        boolean boolean9 = tomcatEmbeddedServletContainerFactory6.isRegisterDefaultServlet();
        int int10 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory6.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray12 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet13, errorPageArray12);
        tomcatEmbeddedServletContainerFactory6.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet13);
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory6.getContextPath();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int20 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int22 = tomcatEmbeddedServletContainerFactory21.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray23 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory21.addAdditionalTomcatConnectors(connectorArray23);
        org.apache.catalina.Valve[] valveArray25 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory21.addContextValves(valveArray25);
        tomcatEmbeddedServletContainerFactory19.addContextValves(valveArray25);
        tomcatEmbeddedServletContainerFactory6.addContextValves(valveArray25);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int30 = tomcatEmbeddedServletContainerFactory29.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray31 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory29.addAdditionalTomcatConnectors(connectorArray31);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection33 = tomcatEmbeddedServletContainerFactory29.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int35 = tomcatEmbeddedServletContainerFactory34.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int37 = tomcatEmbeddedServletContainerFactory36.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray38 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory36.addAdditionalTomcatConnectors(connectorArray38);
        org.apache.catalina.Valve[] valveArray40 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory36.addContextValves(valveArray40);
        tomcatEmbeddedServletContainerFactory34.addContextValves(valveArray40);
        tomcatEmbeddedServletContainerFactory29.addContextValves(valveArray40);
        tomcatEmbeddedServletContainerFactory6.addContextValves(valveArray40);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray40);
        java.io.File file46 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int48 = tomcatEmbeddedServletContainerFactory47.getSessionTimeout();
        java.io.File file49 = tomcatEmbeddedServletContainerFactory47.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory50.setTldSkip("hi!");
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory50.getUriEncoding();
        tomcatEmbeddedServletContainerFactory50.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray56 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory50.addConnectorCustomizers(tomcatConnectorCustomizerArray56);
        tomcatEmbeddedServletContainerFactory47.addConnectorCustomizers(tomcatConnectorCustomizerArray56);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray56);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(connectorArray23);
        org.junit.Assert.assertNotNull(valveArray25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(connectorArray31);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(connectorArray38);
        org.junit.Assert.assertNotNull(valveArray40);
        org.junit.Assert.assertNull(file46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(file49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-8" + "'", str53, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray56);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory3.getContextPath();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory3.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory6.getUriEncoding();
        tomcatEmbeddedServletContainerFactory6.setUriEncoding("hi!");
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory6.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = tomcatEmbeddedServletContainerFactory6.getErrorPages();
        tomcatEmbeddedServletContainerFactory6.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = tomcatEmbeddedServletContainerFactory6.getErrorPages();
        tomcatEmbeddedServletContainerFactory3.setErrorPages(errorPageSet16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int19 = tomcatEmbeddedServletContainerFactory18.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory18.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory18.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer26 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer26 };
        tomcatEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray27);
        tomcatEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray27);
        tomcatEmbeddedServletContainerFactory3.addInitializers(servletContextInitializerArray27);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray27);
        java.util.Collection<org.apache.catalina.Valve> valveCollection32 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(errorPageSet13);
        org.junit.Assert.assertNotNull(errorPageSet16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNotNull(valveCollection32);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer7 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray8 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer7 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection11 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatContextCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray8);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        int int9 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean2 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int4 = tomcatEmbeddedServletContainerFactory3.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray5 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList6 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList6, tomcatContextCustomizerArray5);
        tomcatEmbeddedServletContainerFactory3.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList6);
        java.util.Collection<org.apache.catalina.Valve> valveCollection9 = tomcatEmbeddedServletContainerFactory3.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setTldSkip("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory13.getUriEncoding();
        tomcatEmbeddedServletContainerFactory13.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        tomcatEmbeddedServletContainerFactory10.setMimeMappings(mimeMappings19);
        tomcatEmbeddedServletContainerFactory3.setMimeMappings(mimeMappings19);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int23 = tomcatEmbeddedServletContainerFactory22.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList24 = tomcatEmbeddedServletContainerFactory22.getAdditionalTomcatConnectors();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = tomcatEmbeddedServletContainerFactory22.getErrorPages();
        tomcatEmbeddedServletContainerFactory3.setErrorPages(errorPageSet25);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet25);
        int int28 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray29 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Connectors must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(valveCollection9);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(connectorList24);
        org.junit.Assert.assertNotNull(errorPageSet25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        java.io.File file6 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file6);
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1);
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(connectorList11);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int14 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory13.addAdditionalTomcatConnectors(connectorArray15);
        org.apache.catalina.Valve[] valveArray17 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory13.addContextValves(valveArray17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int20 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray21 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory19.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory13.addAdditionalTomcatConnectors(connectorArray21);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setTldSkip("hi!");
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory24.getUriEncoding();
        tomcatEmbeddedServletContainerFactory24.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setTldSkip("hi!");
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory30.getUriEncoding();
        tomcatEmbeddedServletContainerFactory30.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray36 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory30.addConnectorCustomizers(tomcatConnectorCustomizerArray36);
        tomcatEmbeddedServletContainerFactory24.addConnectorCustomizers(tomcatConnectorCustomizerArray36);
        boolean boolean39 = tomcatEmbeddedServletContainerFactory24.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setTldSkip("hi!");
        boolean boolean43 = tomcatEmbeddedServletContainerFactory40.isRegisterDefaultServlet();
        int int44 = tomcatEmbeddedServletContainerFactory40.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory40.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer47 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray48 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer47 };
        tomcatEmbeddedServletContainerFactory40.addConnectorCustomizers(tomcatConnectorCustomizerArray48);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet50 = tomcatEmbeddedServletContainerFactory40.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection51 = tomcatEmbeddedServletContainerFactory40.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory24.setTomcatContextCustomizers(tomcatContextCustomizerCollection51);
        tomcatEmbeddedServletContainerFactory13.setTomcatContextCustomizers(tomcatContextCustomizerCollection51);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory54.setTldSkip("hi!");
        java.io.File file59 = null;
        tomcatEmbeddedServletContainerFactory54.setDocumentRoot(file59);
        java.util.Collection<org.apache.catalina.Valve> valveCollection61 = tomcatEmbeddedServletContainerFactory54.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory62.setTldSkip("hi!");
        java.lang.String str65 = tomcatEmbeddedServletContainerFactory62.getUriEncoding();
        tomcatEmbeddedServletContainerFactory62.setUriEncoding("hi!");
        java.lang.String str68 = tomcatEmbeddedServletContainerFactory62.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet69 = tomcatEmbeddedServletContainerFactory62.getErrorPages();
        tomcatEmbeddedServletContainerFactory62.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection72 = tomcatEmbeddedServletContainerFactory62.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener73 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray74 = new org.apache.catalina.LifecycleListener[] { lifecycleListener73 };
        tomcatEmbeddedServletContainerFactory62.addContextLifecycleListeners(lifecycleListenerArray74);
        tomcatEmbeddedServletContainerFactory54.addContextLifecycleListeners(lifecycleListenerArray74);
        tomcatEmbeddedServletContainerFactory13.addContextLifecycleListeners(lifecycleListenerArray74);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray74);
        java.util.concurrent.TimeUnit timeUnit80 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1, timeUnit80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(valveArray17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(connectorArray21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray48);
        org.junit.Assert.assertNotNull(errorPageSet50);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection51);
        org.junit.Assert.assertNotNull(valveCollection61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "UTF-8" + "'", str65, "UTF-8");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(errorPageSet69);
        org.junit.Assert.assertNotNull(valveCollection72);
        org.junit.Assert.assertNotNull(lifecycleListenerArray74);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.io.File file6 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file6);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings7);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection11 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray12 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray12);
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.concurrent.TimeUnit timeUnit16 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(8080, timeUnit16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection11);
        org.junit.Assert.assertNotNull(lifecycleListenerArray12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection7 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl8);
        java.net.InetAddress inetAddress10 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress10);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        java.net.InetAddress inetAddress14 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress14);
        org.springframework.core.io.ResourceLoader resourceLoader16 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader16);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection7);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setPort((int) 'a');
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.Class<?> wildcardClass9 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(10);
        tomcatEmbeddedServletContainerFactory1.setRegisterJspServlet(false);
        boolean boolean4 = tomcatEmbeddedServletContainerFactory1.isRegisterDefaultServlet();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet3 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertNotNull(errorPageSet3);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean2 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        boolean boolean6 = tomcatEmbeddedServletContainerFactory3.isRegisterDefaultServlet();
        int int7 = tomcatEmbeddedServletContainerFactory3.getSessionTimeout();
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray9 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet10, errorPageArray9);
        tomcatEmbeddedServletContainerFactory3.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet10);
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory3.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection15 = tomcatEmbeddedServletContainerFactory14.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection17 = tomcatEmbeddedServletContainerFactory14.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory14.setSessionTimeout((int) (short) 0);
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer20 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer20 };
        tomcatEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray21);
        tomcatEmbeddedServletContainerFactory3.addInitializers(servletContextInitializerArray21);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray21);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.net.InetAddress inetAddress27 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.util.concurrent.TimeUnit timeUnit29 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10, timeUnit29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection15);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNull(inetAddress27);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.Ssl ssl12 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.concurrent.TimeUnit timeUnit16 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 0, timeUnit16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(ssl12);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer2 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray3 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer2 };
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray3);
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int9 = tomcatEmbeddedServletContainerFactory8.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList10 = tomcatEmbeddedServletContainerFactory8.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory8.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer16 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer16 };
        tomcatEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray17);
        tomcatEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray17);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray17);
        java.lang.Class<?> wildcardClass21 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(connectorList10);
        org.junit.Assert.assertNotNull(servletContextInitializerArray17);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory6.getUriEncoding();
        tomcatEmbeddedServletContainerFactory6.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray12 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory6.addConnectorCustomizers(tomcatConnectorCustomizerArray12);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray12);
        boolean boolean15 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int17 = tomcatEmbeddedServletContainerFactory16.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList18 = tomcatEmbeddedServletContainerFactory16.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory16.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer24 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray25 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer24 };
        tomcatEmbeddedServletContainerFactory21.addInitializers(servletContextInitializerArray25);
        tomcatEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray25);
        tomcatEmbeddedServletContainerFactory16.setSessionTimeout((int) '4');
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray30 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory16.addContextCustomizers(tomcatContextCustomizerArray30);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray30);
        org.springframework.boot.context.embedded.Ssl ssl33 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl33);
        java.lang.Class<?> wildcardClass35 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(connectorList18);
        org.junit.Assert.assertNotNull(servletContextInitializerArray25);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray30);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection3 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 0);
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.apache.catalina.Valve[] valveArray7 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Valves must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        java.net.InetAddress inetAddress12 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress12);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int14 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory13.addAdditionalTomcatConnectors(connectorArray15);
        org.apache.catalina.Valve[] valveArray17 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory13.addContextValves(valveArray17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int20 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray21 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory19.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory13.addAdditionalTomcatConnectors(connectorArray21);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = tomcatEmbeddedServletContainerFactory13.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int27 = tomcatEmbeddedServletContainerFactory26.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray28 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory26.addAdditionalTomcatConnectors(connectorArray28);
        org.apache.catalina.Valve[] valveArray30 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory26.addContextValves(valveArray30);
        org.springframework.boot.context.embedded.Ssl ssl32 = tomcatEmbeddedServletContainerFactory26.getSsl();
        java.io.File file33 = tomcatEmbeddedServletContainerFactory26.getDocumentRoot();
        java.io.File file34 = null;
        tomcatEmbeddedServletContainerFactory26.setDocumentRoot(file34);
        boolean boolean36 = tomcatEmbeddedServletContainerFactory26.isRegisterJspServlet();
        java.io.File file37 = null;
        tomcatEmbeddedServletContainerFactory26.setDocumentRoot(file37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int40 = tomcatEmbeddedServletContainerFactory39.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray41 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory39.addAdditionalTomcatConnectors(connectorArray41);
        org.apache.catalina.Valve[] valveArray43 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory39.addContextValves(valveArray43);
        tomcatEmbeddedServletContainerFactory26.addContextValves(valveArray43);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory46.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage48 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray49 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage48 };
        tomcatEmbeddedServletContainerFactory46.addErrorPages(errorPageArray49);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int52 = tomcatEmbeddedServletContainerFactory51.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray53 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory51.addAdditionalTomcatConnectors(connectorArray53);
        org.apache.catalina.Valve[] valveArray55 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory51.addContextValves(valveArray55);
        org.springframework.boot.context.embedded.Ssl ssl57 = tomcatEmbeddedServletContainerFactory51.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory58.setTldSkip("hi!");
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory58.getUriEncoding();
        tomcatEmbeddedServletContainerFactory58.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = tomcatEmbeddedServletContainerFactory58.getMimeMappings();
        tomcatEmbeddedServletContainerFactory51.setMimeMappings(mimeMappings64);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory66.setTldSkip("hi!");
        boolean boolean69 = tomcatEmbeddedServletContainerFactory66.isRegisterDefaultServlet();
        int int70 = tomcatEmbeddedServletContainerFactory66.getSessionTimeout();
        java.lang.String str71 = tomcatEmbeddedServletContainerFactory66.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray72 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet73 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet73, errorPageArray72);
        tomcatEmbeddedServletContainerFactory66.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet73);
        tomcatEmbeddedServletContainerFactory51.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet73);
        tomcatEmbeddedServletContainerFactory46.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet73);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory78.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer81 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray82 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer81 };
        tomcatEmbeddedServletContainerFactory78.addInitializers(servletContextInitializerArray82);
        tomcatEmbeddedServletContainerFactory46.addInitializers(servletContextInitializerArray82);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory85 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int86 = tomcatEmbeddedServletContainerFactory85.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList87 = tomcatEmbeddedServletContainerFactory85.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory85.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory90 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory90.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer93 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray94 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer93 };
        tomcatEmbeddedServletContainerFactory90.addInitializers(servletContextInitializerArray94);
        tomcatEmbeddedServletContainerFactory85.addInitializers(servletContextInitializerArray94);
        tomcatEmbeddedServletContainerFactory46.addInitializers(servletContextInitializerArray94);
        tomcatEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray94);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray94);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(valveArray17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(connectorArray21);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(connectorArray28);
        org.junit.Assert.assertNotNull(valveArray30);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(connectorArray41);
        org.junit.Assert.assertNotNull(valveArray43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-8" + "'", str47, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(connectorArray53);
        org.junit.Assert.assertNotNull(valveArray55);
        org.junit.Assert.assertNull(ssl57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "UTF-8" + "'", str61, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "UTF-8" + "'", str71, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray82);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(connectorList87);
        org.junit.Assert.assertNotNull(servletContextInitializerArray94);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer7 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray8 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer7 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.Ssl ssl14 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl14);
        java.io.File file16 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray8);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNull(file16);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList4 = tomcatEmbeddedServletContainerFactory2.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory2.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer10 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer10 };
        tomcatEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        boolean boolean17 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.util.concurrent.TimeUnit timeUnit19 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) '#', timeUnit19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(connectorList4);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory6.getUriEncoding();
        tomcatEmbeddedServletContainerFactory6.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray12 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory6.addConnectorCustomizers(tomcatConnectorCustomizerArray12);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray12);
        boolean boolean15 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        boolean boolean19 = tomcatEmbeddedServletContainerFactory16.isRegisterDefaultServlet();
        int int20 = tomcatEmbeddedServletContainerFactory16.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory16.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer23 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray24 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer23 };
        tomcatEmbeddedServletContainerFactory16.addConnectorCustomizers(tomcatConnectorCustomizerArray24);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection27 = tomcatEmbeddedServletContainerFactory16.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection27);
        java.lang.Class<?> wildcardClass29 = tomcatContextCustomizerCollection27.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray24);
        org.junit.Assert.assertNotNull(errorPageSet26);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection27);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection7 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.Ssl ssl8 = tomcatEmbeddedServletContainerFactory0.getSsl();
        java.util.concurrent.TimeUnit timeUnit10 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) 'a', timeUnit10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection7);
        org.junit.Assert.assertNull(ssl8);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7, errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl13);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray15 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray15);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader18 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int21 = tomcatEmbeddedServletContainerFactory20.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray22 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory20.addAdditionalTomcatConnectors(connectorArray22);
        java.net.InetAddress inetAddress24 = null;
        tomcatEmbeddedServletContainerFactory20.setAddress(inetAddress24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setTldSkip("hi!");
        boolean boolean29 = tomcatEmbeddedServletContainerFactory26.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setTldSkip("hi!");
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory30.getUriEncoding();
        tomcatEmbeddedServletContainerFactory30.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setTldSkip("hi!");
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory36.getUriEncoding();
        tomcatEmbeddedServletContainerFactory36.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray42 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory36.addConnectorCustomizers(tomcatConnectorCustomizerArray42);
        tomcatEmbeddedServletContainerFactory30.addConnectorCustomizers(tomcatConnectorCustomizerArray42);
        tomcatEmbeddedServletContainerFactory26.addConnectorCustomizers(tomcatConnectorCustomizerArray42);
        tomcatEmbeddedServletContainerFactory20.addConnectorCustomizers(tomcatConnectorCustomizerArray42);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray42);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setTldSkip("hi!");
        boolean boolean51 = tomcatEmbeddedServletContainerFactory48.isRegisterDefaultServlet();
        int int52 = tomcatEmbeddedServletContainerFactory48.getSessionTimeout();
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory48.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray54 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet55 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet55, errorPageArray54);
        tomcatEmbeddedServletContainerFactory48.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet55);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet55);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray15);
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(connectorArray22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-8" + "'", str39, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray42);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-8" + "'", str53, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatContextCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(errorPageSet10);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        java.io.File file6 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory8.setTldSkip("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setTldSkip("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory13.getUriEncoding();
        tomcatEmbeddedServletContainerFactory13.setUriEncoding("hi!");
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory13.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = tomcatEmbeddedServletContainerFactory13.getErrorPages();
        tomcatEmbeddedServletContainerFactory13.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection23 = tomcatEmbeddedServletContainerFactory13.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener24 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray25 = new org.apache.catalina.LifecycleListener[] { lifecycleListener24 };
        tomcatEmbeddedServletContainerFactory13.addContextLifecycleListeners(lifecycleListenerArray25);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setTldSkip("hi!");
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory27.getUriEncoding();
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("hi!");
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory27.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet34 = tomcatEmbeddedServletContainerFactory27.getErrorPages();
        tomcatEmbeddedServletContainerFactory27.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = tomcatEmbeddedServletContainerFactory27.getErrorPages();
        int int38 = tomcatEmbeddedServletContainerFactory27.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory39.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage41 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray42 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage41 };
        tomcatEmbeddedServletContainerFactory39.addErrorPages(errorPageArray42);
        tomcatEmbeddedServletContainerFactory27.addErrorPages(errorPageArray42);
        tomcatEmbeddedServletContainerFactory13.addErrorPages(errorPageArray42);
        tomcatEmbeddedServletContainerFactory8.addErrorPages(errorPageArray42);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray42);
        java.lang.Class<?> wildcardClass48 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(errorPageSet20);
        org.junit.Assert.assertNotNull(valveCollection23);
        org.junit.Assert.assertNotNull(lifecycleListenerArray25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-8" + "'", str30, "UTF-8");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(errorPageSet34);
        org.junit.Assert.assertNotNull(errorPageSet37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UTF-8" + "'", str40, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray42);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", 1);
        tomcatEmbeddedServletContainerFactory2.setProtocol("UTF-8");
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory2.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory7.getUriEncoding();
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setTldSkip("hi!");
        boolean boolean18 = tomcatEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        int int19 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory15.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray21 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22, errorPageArray21);
        tomcatEmbeddedServletContainerFactory15.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int29 = tomcatEmbeddedServletContainerFactory28.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setTldSkip("hi!");
        org.apache.catalina.Valve[] valveArray33 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory30.addContextValves(valveArray33);
        tomcatEmbeddedServletContainerFactory28.addContextValves(valveArray33);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray33);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection37 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(valveArray33);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection37);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.lang.Class<?> wildcardClass7 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        boolean boolean11 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.net.InetAddress inetAddress12 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        int int14 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.util.concurrent.TimeUnit timeUnit16 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1, timeUnit16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(inetAddress12);
        org.junit.Assert.assertNotNull(errorPageSet13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8080 + "'", int14 == 8080);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("UTF-8", 97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings5 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        org.apache.catalina.Valve[] valveArray10 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory6.addContextValves(valveArray10);
        org.springframework.boot.context.embedded.Ssl ssl12 = tomcatEmbeddedServletContainerFactory6.getSsl();
        tomcatEmbeddedServletContainerFactory6.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int16 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray17 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList18 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList18, tomcatContextCustomizerArray17);
        tomcatEmbeddedServletContainerFactory15.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList18);
        java.io.File file21 = null;
        tomcatEmbeddedServletContainerFactory15.setDocumentRoot(file21);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection24 = tomcatEmbeddedServletContainerFactory23.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings25 = tomcatEmbeddedServletContainerFactory23.getMimeMappings();
        tomcatEmbeddedServletContainerFactory15.setMimeMappings(mimeMappings25);
        tomcatEmbeddedServletContainerFactory15.setRegisterDefaultServlet(false);
        org.apache.catalina.LifecycleListener lifecycleListener29 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray30 = new org.apache.catalina.LifecycleListener[] { lifecycleListener29 };
        tomcatEmbeddedServletContainerFactory15.addContextLifecycleListeners(lifecycleListenerArray30);
        tomcatEmbeddedServletContainerFactory6.addContextLifecycleListeners(lifecycleListenerArray30);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setTldSkip("hi!");
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory33.getUriEncoding();
        tomcatEmbeddedServletContainerFactory33.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory33.getMimeMappings();
        boolean boolean40 = tomcatEmbeddedServletContainerFactory33.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory41.setTldSkip("hi!");
        boolean boolean44 = tomcatEmbeddedServletContainerFactory41.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = tomcatEmbeddedServletContainerFactory41.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory46.setTldSkip("hi!");
        java.lang.String str49 = tomcatEmbeddedServletContainerFactory46.getUriEncoding();
        tomcatEmbeddedServletContainerFactory46.setUriEncoding("hi!");
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory46.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet53 = tomcatEmbeddedServletContainerFactory46.getErrorPages();
        tomcatEmbeddedServletContainerFactory46.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection56 = tomcatEmbeddedServletContainerFactory46.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener57 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray58 = new org.apache.catalina.LifecycleListener[] { lifecycleListener57 };
        tomcatEmbeddedServletContainerFactory46.addContextLifecycleListeners(lifecycleListenerArray58);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory60.setTldSkip("hi!");
        java.lang.String str63 = tomcatEmbeddedServletContainerFactory60.getUriEncoding();
        tomcatEmbeddedServletContainerFactory60.setUriEncoding("hi!");
        java.lang.String str66 = tomcatEmbeddedServletContainerFactory60.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet67 = tomcatEmbeddedServletContainerFactory60.getErrorPages();
        tomcatEmbeddedServletContainerFactory60.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet70 = tomcatEmbeddedServletContainerFactory60.getErrorPages();
        int int71 = tomcatEmbeddedServletContainerFactory60.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str73 = tomcatEmbeddedServletContainerFactory72.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage74 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray75 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage74 };
        tomcatEmbeddedServletContainerFactory72.addErrorPages(errorPageArray75);
        tomcatEmbeddedServletContainerFactory60.addErrorPages(errorPageArray75);
        tomcatEmbeddedServletContainerFactory46.addErrorPages(errorPageArray75);
        tomcatEmbeddedServletContainerFactory41.addErrorPages(errorPageArray75);
        tomcatEmbeddedServletContainerFactory33.addErrorPages(errorPageArray75);
        tomcatEmbeddedServletContainerFactory6.addErrorPages(errorPageArray75);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray75);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatContextCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(mimeMappings5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(valveArray10);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection24);
        org.junit.Assert.assertNotNull(mimeMappings25);
        org.junit.Assert.assertNotNull(lifecycleListenerArray30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-8" + "'", str36, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-8" + "'", str49, "UTF-8");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(errorPageSet53);
        org.junit.Assert.assertNotNull(valveCollection56);
        org.junit.Assert.assertNotNull(lifecycleListenerArray58);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-8" + "'", str63, "UTF-8");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(errorPageSet67);
        org.junit.Assert.assertNotNull(errorPageSet70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "UTF-8" + "'", str73, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray75);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection3 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        java.io.File file8 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory9.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage11 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray12 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage11 };
        tomcatEmbeddedServletContainerFactory9.addErrorPages(errorPageArray12);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray12);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        java.lang.Class<?> wildcardClass17 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection3);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray12);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(0);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection2 = tomcatEmbeddedServletContainerFactory1.getContextLifecycleListeners();
        int int3 = tomcatEmbeddedServletContainerFactory1.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory1.setUriEncoding("hi!");
        java.util.Collection<org.apache.catalina.Valve> valveCollection6 = tomcatEmbeddedServletContainerFactory1.getValves();
        java.util.concurrent.TimeUnit timeUnit8 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.setSessionTimeout(1, timeUnit8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(lifecycleListenerCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(valveCollection6);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setPort((int) '#');
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int10 = tomcatEmbeddedServletContainerFactory9.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.getAdditionalTomcatConnectors();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory9.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet12);
        java.lang.Class<?> wildcardClass14 = errorPageSet12.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        int int4 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        tomcatEmbeddedServletContainerFactory5.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        tomcatEmbeddedServletContainerFactory5.setSsl(ssl10);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection12 = tomcatEmbeddedServletContainerFactory5.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int14 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory13.addAdditionalTomcatConnectors(connectorArray15);
        org.apache.catalina.Valve[] valveArray17 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory13.addContextValves(valveArray17);
        org.springframework.boot.context.embedded.Ssl ssl19 = tomcatEmbeddedServletContainerFactory13.getSsl();
        tomcatEmbeddedServletContainerFactory13.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int23 = tomcatEmbeddedServletContainerFactory22.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray24 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList25 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList25, tomcatContextCustomizerArray24);
        tomcatEmbeddedServletContainerFactory22.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList25);
        java.io.File file28 = null;
        tomcatEmbeddedServletContainerFactory22.setDocumentRoot(file28);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection31 = tomcatEmbeddedServletContainerFactory30.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory30.getMimeMappings();
        tomcatEmbeddedServletContainerFactory22.setMimeMappings(mimeMappings32);
        tomcatEmbeddedServletContainerFactory22.setRegisterDefaultServlet(false);
        org.apache.catalina.LifecycleListener lifecycleListener36 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray37 = new org.apache.catalina.LifecycleListener[] { lifecycleListener36 };
        tomcatEmbeddedServletContainerFactory22.addContextLifecycleListeners(lifecycleListenerArray37);
        tomcatEmbeddedServletContainerFactory13.addContextLifecycleListeners(lifecycleListenerArray37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setTldSkip("hi!");
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory40.getUriEncoding();
        boolean boolean44 = tomcatEmbeddedServletContainerFactory40.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection46 = tomcatEmbeddedServletContainerFactory45.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings47 = tomcatEmbeddedServletContainerFactory45.getMimeMappings();
        tomcatEmbeddedServletContainerFactory40.setMimeMappings(mimeMappings47);
        tomcatEmbeddedServletContainerFactory13.setMimeMappings(mimeMappings47);
        tomcatEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings47);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory51.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer54 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer54 };
        tomcatEmbeddedServletContainerFactory51.addInitializers(servletContextInitializerArray55);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray57 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory51.addInitializers(servletContextInitializerArray57);
        tomcatEmbeddedServletContainerFactory5.addInitializers(servletContextInitializerArray57);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((-1));
        int int62 = tomcatEmbeddedServletContainerFactory61.getPort();
        org.springframework.boot.context.embedded.Ssl ssl63 = null;
        tomcatEmbeddedServletContainerFactory61.setSsl(ssl63);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int66 = tomcatEmbeddedServletContainerFactory65.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray67 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory65.addAdditionalTomcatConnectors(connectorArray67);
        tomcatEmbeddedServletContainerFactory61.addAdditionalTomcatConnectors(connectorArray67);
        tomcatEmbeddedServletContainerFactory5.addAdditionalTomcatConnectors(connectorArray67);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray67);
        int int72 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8080 + "'", int4 == 8080);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(valveArray17);
        org.junit.Assert.assertNull(ssl19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection31);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNotNull(lifecycleListenerArray37);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection46);
        org.junit.Assert.assertNotNull(mimeMappings47);
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
        org.junit.Assert.assertNotNull(servletContextInitializerArray57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(connectorArray67);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 8080 + "'", int72 == 8080);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        int int4 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.net.InetAddress inetAddress5 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray7 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatContextCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8080 + "'", int4 == 8080);
        org.junit.Assert.assertNull(inetAddress5);
        org.junit.Assert.assertNull(ssl6);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl5);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection7 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int9 = tomcatEmbeddedServletContainerFactory8.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray10 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray10);
        org.apache.catalina.Valve[] valveArray12 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory8.addContextValves(valveArray12);
        org.springframework.boot.context.embedded.Ssl ssl14 = tomcatEmbeddedServletContainerFactory8.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl15 = tomcatEmbeddedServletContainerFactory8.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection17 = tomcatEmbeddedServletContainerFactory8.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int19 = tomcatEmbeddedServletContainerFactory18.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray20 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory18.addAdditionalTomcatConnectors(connectorArray20);
        org.apache.catalina.Valve[] valveArray22 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory18.addContextValves(valveArray22);
        org.springframework.boot.context.embedded.Ssl ssl24 = tomcatEmbeddedServletContainerFactory18.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setTldSkip("hi!");
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory25.getUriEncoding();
        tomcatEmbeddedServletContainerFactory25.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings31 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        tomcatEmbeddedServletContainerFactory18.setMimeMappings(mimeMappings31);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setTldSkip("hi!");
        boolean boolean36 = tomcatEmbeddedServletContainerFactory33.isRegisterDefaultServlet();
        int int37 = tomcatEmbeddedServletContainerFactory33.getSessionTimeout();
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory33.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray39 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet40 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet40, errorPageArray39);
        tomcatEmbeddedServletContainerFactory33.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet40);
        tomcatEmbeddedServletContainerFactory18.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet40);
        tomcatEmbeddedServletContainerFactory8.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet40);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet46 = tomcatEmbeddedServletContainerFactory8.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int48 = tomcatEmbeddedServletContainerFactory47.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList49 = tomcatEmbeddedServletContainerFactory47.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory47.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int53 = tomcatEmbeddedServletContainerFactory52.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray54 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory52.addAdditionalTomcatConnectors(connectorArray54);
        org.apache.catalina.Valve[] valveArray56 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory52.addContextValves(valveArray56);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int59 = tomcatEmbeddedServletContainerFactory58.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray60 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory58.addAdditionalTomcatConnectors(connectorArray60);
        tomcatEmbeddedServletContainerFactory52.addAdditionalTomcatConnectors(connectorArray60);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet63 = tomcatEmbeddedServletContainerFactory52.getErrorPages();
        org.springframework.boot.context.embedded.Ssl ssl64 = tomcatEmbeddedServletContainerFactory52.getSsl();
        tomcatEmbeddedServletContainerFactory52.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int68 = tomcatEmbeddedServletContainerFactory67.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray69 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory67.addAdditionalTomcatConnectors(connectorArray69);
        java.net.InetAddress inetAddress71 = null;
        tomcatEmbeddedServletContainerFactory67.setAddress(inetAddress71);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory73.setTldSkip("hi!");
        boolean boolean76 = tomcatEmbeddedServletContainerFactory73.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory77.setTldSkip("hi!");
        java.lang.String str80 = tomcatEmbeddedServletContainerFactory77.getUriEncoding();
        tomcatEmbeddedServletContainerFactory77.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory83.setTldSkip("hi!");
        java.lang.String str86 = tomcatEmbeddedServletContainerFactory83.getUriEncoding();
        tomcatEmbeddedServletContainerFactory83.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray89 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory83.addConnectorCustomizers(tomcatConnectorCustomizerArray89);
        tomcatEmbeddedServletContainerFactory77.addConnectorCustomizers(tomcatConnectorCustomizerArray89);
        tomcatEmbeddedServletContainerFactory73.addConnectorCustomizers(tomcatConnectorCustomizerArray89);
        tomcatEmbeddedServletContainerFactory67.addConnectorCustomizers(tomcatConnectorCustomizerArray89);
        tomcatEmbeddedServletContainerFactory52.addConnectorCustomizers(tomcatConnectorCustomizerArray89);
        tomcatEmbeddedServletContainerFactory47.addConnectorCustomizers(tomcatConnectorCustomizerArray89);
        tomcatEmbeddedServletContainerFactory8.addConnectorCustomizers(tomcatConnectorCustomizerArray89);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray89);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(connectorArray10);
        org.junit.Assert.assertNotNull(valveArray12);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertNull(ssl15);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(connectorArray20);
        org.junit.Assert.assertNotNull(valveArray22);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UTF-8" + "'", str28, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-8" + "'", str38, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNotNull(errorPageSet46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(connectorList49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(connectorArray54);
        org.junit.Assert.assertNotNull(valveArray56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(connectorArray60);
        org.junit.Assert.assertNotNull(errorPageSet63);
        org.junit.Assert.assertNull(ssl64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(connectorArray69);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "UTF-8" + "'", str80, "UTF-8");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "UTF-8" + "'", str86, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray89);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7, errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int14 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int16 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray17 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory15.addAdditionalTomcatConnectors(connectorArray17);
        org.apache.catalina.Valve[] valveArray19 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray19);
        tomcatEmbeddedServletContainerFactory13.addContextValves(valveArray19);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray19);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int24 = tomcatEmbeddedServletContainerFactory23.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray25 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory23.addAdditionalTomcatConnectors(connectorArray25);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection27 = tomcatEmbeddedServletContainerFactory23.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int29 = tomcatEmbeddedServletContainerFactory28.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int31 = tomcatEmbeddedServletContainerFactory30.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray32 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory30.addAdditionalTomcatConnectors(connectorArray32);
        org.apache.catalina.Valve[] valveArray34 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory30.addContextValves(valveArray34);
        tomcatEmbeddedServletContainerFactory28.addContextValves(valveArray34);
        tomcatEmbeddedServletContainerFactory23.addContextValves(valveArray34);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray34);
        java.io.File file39 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file39);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int42 = tomcatEmbeddedServletContainerFactory41.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray43 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory41.addAdditionalTomcatConnectors(connectorArray43);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection45 = tomcatEmbeddedServletContainerFactory41.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int47 = tomcatEmbeddedServletContainerFactory46.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int49 = tomcatEmbeddedServletContainerFactory48.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray50 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory48.addAdditionalTomcatConnectors(connectorArray50);
        org.apache.catalina.Valve[] valveArray52 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory48.addContextValves(valveArray52);
        tomcatEmbeddedServletContainerFactory46.addContextValves(valveArray52);
        tomcatEmbeddedServletContainerFactory41.addContextValves(valveArray52);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray52);
        boolean boolean57 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int59 = tomcatEmbeddedServletContainerFactory58.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray60 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory58.addAdditionalTomcatConnectors(connectorArray60);
        org.apache.catalina.Valve[] valveArray62 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory58.addContextValves(valveArray62);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int65 = tomcatEmbeddedServletContainerFactory64.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray66 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory64.addAdditionalTomcatConnectors(connectorArray66);
        tomcatEmbeddedServletContainerFactory58.addAdditionalTomcatConnectors(connectorArray66);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet69 = tomcatEmbeddedServletContainerFactory58.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection70 = tomcatEmbeddedServletContainerFactory58.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection72 = tomcatEmbeddedServletContainerFactory71.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory58.setTomcatContextCustomizers(tomcatContextCustomizerCollection72);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection72);
        boolean boolean75 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(connectorArray17);
        org.junit.Assert.assertNotNull(valveArray19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(connectorArray25);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(connectorArray32);
        org.junit.Assert.assertNotNull(valveArray34);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(connectorArray43);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(connectorArray50);
        org.junit.Assert.assertNotNull(valveArray52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(connectorArray60);
        org.junit.Assert.assertNotNull(valveArray62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(connectorArray66);
        org.junit.Assert.assertNotNull(errorPageSet69);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection70);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.io.File file13 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file13);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.core.io.ResourceLoader resourceLoader19 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader19);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection21 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatContextCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection14 = tomcatEmbeddedServletContainerFactory13.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection14);
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl16);
        boolean boolean18 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setTldSkip("hi!");
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory19.getUriEncoding();
        boolean boolean23 = tomcatEmbeddedServletContainerFactory19.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection25 = tomcatEmbeddedServletContainerFactory24.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        tomcatEmbeddedServletContainerFactory19.setMimeMappings(mimeMappings26);
        java.net.InetAddress inetAddress28 = null;
        tomcatEmbeddedServletContainerFactory19.setAddress(inetAddress28);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int31 = tomcatEmbeddedServletContainerFactory30.getSessionTimeout();
        java.io.File file32 = tomcatEmbeddedServletContainerFactory30.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setTldSkip("hi!");
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory33.getUriEncoding();
        tomcatEmbeddedServletContainerFactory33.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray39 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory33.addConnectorCustomizers(tomcatConnectorCustomizerArray39);
        tomcatEmbeddedServletContainerFactory30.addConnectorCustomizers(tomcatConnectorCustomizerArray39);
        tomcatEmbeddedServletContainerFactory19.addConnectorCustomizers(tomcatConnectorCustomizerArray39);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray39);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection25);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-8" + "'", str36, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray39);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer6 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray7 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer6 };
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray7);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int15 = tomcatEmbeddedServletContainerFactory14.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray16 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory14.addAdditionalTomcatConnectors(connectorArray16);
        org.apache.catalina.Valve[] valveArray18 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory14.addContextValves(valveArray18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int21 = tomcatEmbeddedServletContainerFactory20.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray22 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory20.addAdditionalTomcatConnectors(connectorArray22);
        tomcatEmbeddedServletContainerFactory14.addAdditionalTomcatConnectors(connectorArray22);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        org.springframework.boot.context.embedded.Ssl ssl26 = tomcatEmbeddedServletContainerFactory14.getSsl();
        java.io.File file27 = null;
        tomcatEmbeddedServletContainerFactory14.setDocumentRoot(file27);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setTldSkip("hi!");
        boolean boolean32 = tomcatEmbeddedServletContainerFactory29.isRegisterDefaultServlet();
        int int33 = tomcatEmbeddedServletContainerFactory29.getSessionTimeout();
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory29.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray35 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet36 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet36, errorPageArray35);
        tomcatEmbeddedServletContainerFactory29.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet36);
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory29.getContextPath();
        tomcatEmbeddedServletContainerFactory29.setTldSkip("");
        org.springframework.boot.context.embedded.Ssl ssl42 = null;
        tomcatEmbeddedServletContainerFactory29.setSsl(ssl42);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray44 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory29.addContextCustomizers(tomcatContextCustomizerArray44);
        tomcatEmbeddedServletContainerFactory14.addContextCustomizers(tomcatContextCustomizerArray44);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray44);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(connectorArray16);
        org.junit.Assert.assertNotNull(valveArray18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(connectorArray22);
        org.junit.Assert.assertNotNull(errorPageSet25);
        org.junit.Assert.assertNull(ssl26);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-8" + "'", str34, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray44);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int10 = tomcatEmbeddedServletContainerFactory9.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray11 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12, tomcatContextCustomizerArray11);
        tomcatEmbeddedServletContainerFactory9.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12);
        java.io.File file15 = null;
        tomcatEmbeddedServletContainerFactory9.setDocumentRoot(file15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection18 = tomcatEmbeddedServletContainerFactory17.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory9.setMimeMappings(mimeMappings19);
        tomcatEmbeddedServletContainerFactory9.setRegisterDefaultServlet(false);
        org.apache.catalina.LifecycleListener lifecycleListener23 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray24 = new org.apache.catalina.LifecycleListener[] { lifecycleListener23 };
        tomcatEmbeddedServletContainerFactory9.addContextLifecycleListeners(lifecycleListenerArray24);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setTldSkip("hi!");
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory27.getUriEncoding();
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        boolean boolean34 = tomcatEmbeddedServletContainerFactory27.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setTldSkip("hi!");
        boolean boolean38 = tomcatEmbeddedServletContainerFactory35.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory35.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setTldSkip("hi!");
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory40.getUriEncoding();
        tomcatEmbeddedServletContainerFactory40.setUriEncoding("hi!");
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory40.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet47 = tomcatEmbeddedServletContainerFactory40.getErrorPages();
        tomcatEmbeddedServletContainerFactory40.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection50 = tomcatEmbeddedServletContainerFactory40.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener51 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray52 = new org.apache.catalina.LifecycleListener[] { lifecycleListener51 };
        tomcatEmbeddedServletContainerFactory40.addContextLifecycleListeners(lifecycleListenerArray52);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setTldSkip("hi!");
        java.lang.String str57 = tomcatEmbeddedServletContainerFactory54.getUriEncoding();
        tomcatEmbeddedServletContainerFactory54.setUriEncoding("hi!");
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory54.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet61 = tomcatEmbeddedServletContainerFactory54.getErrorPages();
        tomcatEmbeddedServletContainerFactory54.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet64 = tomcatEmbeddedServletContainerFactory54.getErrorPages();
        int int65 = tomcatEmbeddedServletContainerFactory54.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str67 = tomcatEmbeddedServletContainerFactory66.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage68 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray69 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage68 };
        tomcatEmbeddedServletContainerFactory66.addErrorPages(errorPageArray69);
        tomcatEmbeddedServletContainerFactory54.addErrorPages(errorPageArray69);
        tomcatEmbeddedServletContainerFactory40.addErrorPages(errorPageArray69);
        tomcatEmbeddedServletContainerFactory35.addErrorPages(errorPageArray69);
        tomcatEmbeddedServletContainerFactory27.addErrorPages(errorPageArray69);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray69);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection77 = tomcatEmbeddedServletContainerFactory76.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings78 = tomcatEmbeddedServletContainerFactory76.getMimeMappings();
        tomcatEmbeddedServletContainerFactory76.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl81 = null;
        tomcatEmbeddedServletContainerFactory76.setSsl(ssl81);
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray83 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory76.addContextLifecycleListeners(lifecycleListenerArray83);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray83);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection86 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection18);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(lifecycleListenerArray24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-8" + "'", str30, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(errorPageSet47);
        org.junit.Assert.assertNotNull(valveCollection50);
        org.junit.Assert.assertNotNull(lifecycleListenerArray52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "UTF-8" + "'", str57, "UTF-8");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(errorPageSet61);
        org.junit.Assert.assertNotNull(errorPageSet64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "UTF-8" + "'", str67, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray69);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection77);
        org.junit.Assert.assertNotNull(mimeMappings78);
        org.junit.Assert.assertNotNull(lifecycleListenerArray83);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection86);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.concurrent.TimeUnit timeUnit7 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(97, timeUnit7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.lang.Class<?> wildcardClass5 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.io.File file5 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file5);
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray8 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextLifecycleListeners must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectorList7);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer2 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray3 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer2 };
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray3);
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.io.File file8 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(file8);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet4 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.concurrent.TimeUnit timeUnit6 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(97, timeUnit6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageSet4);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl5);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection7 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int9 = tomcatEmbeddedServletContainerFactory8.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray10 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray10);
        org.apache.catalina.Valve[] valveArray12 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory8.addContextValves(valveArray12);
        org.springframework.boot.context.embedded.Ssl ssl14 = tomcatEmbeddedServletContainerFactory8.getSsl();
        tomcatEmbeddedServletContainerFactory8.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int18 = tomcatEmbeddedServletContainerFactory17.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray19 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList20 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList20, tomcatContextCustomizerArray19);
        tomcatEmbeddedServletContainerFactory17.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList20);
        java.io.File file23 = null;
        tomcatEmbeddedServletContainerFactory17.setDocumentRoot(file23);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection26 = tomcatEmbeddedServletContainerFactory25.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory25.getMimeMappings();
        tomcatEmbeddedServletContainerFactory17.setMimeMappings(mimeMappings27);
        tomcatEmbeddedServletContainerFactory17.setRegisterDefaultServlet(false);
        org.apache.catalina.LifecycleListener lifecycleListener31 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray32 = new org.apache.catalina.LifecycleListener[] { lifecycleListener31 };
        tomcatEmbeddedServletContainerFactory17.addContextLifecycleListeners(lifecycleListenerArray32);
        tomcatEmbeddedServletContainerFactory8.addContextLifecycleListeners(lifecycleListenerArray32);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setTldSkip("hi!");
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory35.getUriEncoding();
        boolean boolean39 = tomcatEmbeddedServletContainerFactory35.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection41 = tomcatEmbeddedServletContainerFactory40.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings42 = tomcatEmbeddedServletContainerFactory40.getMimeMappings();
        tomcatEmbeddedServletContainerFactory35.setMimeMappings(mimeMappings42);
        tomcatEmbeddedServletContainerFactory8.setMimeMappings(mimeMappings42);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings42);
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(connectorArray10);
        org.junit.Assert.assertNotNull(valveArray12);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection26);
        org.junit.Assert.assertNotNull(mimeMappings27);
        org.junit.Assert.assertNotNull(lifecycleListenerArray32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-8" + "'", str38, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection41);
        org.junit.Assert.assertNotNull(mimeMappings42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("UTF-8", 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.io.File file13 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory16.getUriEncoding();
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory16.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        tomcatEmbeddedServletContainerFactory16.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        int int27 = tomcatEmbeddedServletContainerFactory16.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory28.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage30 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray31 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage30 };
        tomcatEmbeddedServletContainerFactory28.addErrorPages(errorPageArray31);
        tomcatEmbeddedServletContainerFactory16.addErrorPages(errorPageArray31);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray31);
        java.util.concurrent.TimeUnit timeUnit36 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 0, timeUnit36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(errorPageSet26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-8" + "'", str29, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray31);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory5.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage7 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray8 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage7 };
        tomcatEmbeddedServletContainerFactory5.addErrorPages(errorPageArray8);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        tomcatEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings16);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings16);
        java.util.Collection<org.apache.catalina.Valve> valveCollection19 = tomcatEmbeddedServletContainerFactory0.getValves();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.net.InetAddress inetAddress22 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(valveCollection19);
        org.junit.Assert.assertNull(inetAddress22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer3 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray4 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer3 };
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray4);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray6 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray6);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection8 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.concurrent.TimeUnit timeUnit10 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 10, timeUnit10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletContextInitializerArray4);
        org.junit.Assert.assertNotNull(servletContextInitializerArray6);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection8);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings7);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean10 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7, errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.apache.catalina.Valve[] valveArray18 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Valves must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(mimeMappings15);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection3 = tomcatEmbeddedServletContainerFactory2.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        tomcatEmbeddedServletContainerFactory2.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl7 = null;
        tomcatEmbeddedServletContainerFactory2.setSsl(ssl7);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int10 = tomcatEmbeddedServletContainerFactory9.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray11 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12, tomcatContextCustomizerArray11);
        tomcatEmbeddedServletContainerFactory9.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray17 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory9.addContextLifecycleListeners(lifecycleListenerArray17);
        tomcatEmbeddedServletContainerFactory2.addContextLifecycleListeners(lifecycleListenerArray17);
        tomcatEmbeddedServletContainerFactory1.addContextLifecycleListeners(lifecycleListenerArray17);
        java.io.File file21 = null;
        tomcatEmbeddedServletContainerFactory1.setDocumentRoot(file21);
        java.io.File file23 = null;
        tomcatEmbeddedServletContainerFactory1.setDocumentRoot(file23);
        tomcatEmbeddedServletContainerFactory1.setJspServletClassName("UTF-8");
        boolean boolean27 = tomcatEmbeddedServletContainerFactory1.isRegisterJspServlet();
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(lifecycleListenerArray17);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        java.net.InetAddress inetAddress12 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress12);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection14 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection14);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        int int11 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file12 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file12);
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        boolean boolean17 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean18 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int10 = tomcatEmbeddedServletContainerFactory9.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray11 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12, tomcatContextCustomizerArray11);
        tomcatEmbeddedServletContainerFactory9.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12);
        java.io.File file15 = null;
        tomcatEmbeddedServletContainerFactory9.setDocumentRoot(file15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection18 = tomcatEmbeddedServletContainerFactory17.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory9.setMimeMappings(mimeMappings19);
        tomcatEmbeddedServletContainerFactory9.setRegisterDefaultServlet(false);
        org.apache.catalina.LifecycleListener lifecycleListener23 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray24 = new org.apache.catalina.LifecycleListener[] { lifecycleListener23 };
        tomcatEmbeddedServletContainerFactory9.addContextLifecycleListeners(lifecycleListenerArray24);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setTldSkip("hi!");
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory27.getUriEncoding();
        boolean boolean31 = tomcatEmbeddedServletContainerFactory27.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection33 = tomcatEmbeddedServletContainerFactory32.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        tomcatEmbeddedServletContainerFactory27.setMimeMappings(mimeMappings34);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings34);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection37 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.core.io.ResourceLoader resourceLoader38 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader38);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection18);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(lifecycleListenerArray24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-8" + "'", str30, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection33);
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection37);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        int int6 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.apache.catalina.Valve[] valveArray8 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray8);
        boolean boolean10 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray11 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatContextCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8080 + "'", int6 == 8080);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(valveArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray6 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int9 = tomcatEmbeddedServletContainerFactory8.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray10 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList11 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList11, tomcatContextCustomizerArray10);
        tomcatEmbeddedServletContainerFactory8.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList11);
        tomcatEmbeddedServletContainerFactory8.setJspServletClassName("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int17 = tomcatEmbeddedServletContainerFactory16.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray18 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray18);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection20 = tomcatEmbeddedServletContainerFactory16.getContextLifecycleListeners();
        org.apache.catalina.connector.Connector[] connectorArray21 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray21);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection25 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.io.File file26 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.Ssl ssl27 = tomcatEmbeddedServletContainerFactory0.getSsl();
        java.io.File file28 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        boolean boolean29 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(connectorArray18);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection20);
        org.junit.Assert.assertNotNull(connectorArray21);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(ssl27);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int11 = tomcatEmbeddedServletContainerFactory10.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList12 = tomcatEmbeddedServletContainerFactory10.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory10.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory15.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage17 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray18 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage17 };
        tomcatEmbeddedServletContainerFactory15.addErrorPages(errorPageArray18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setTldSkip("hi!");
        java.lang.String str23 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        tomcatEmbeddedServletContainerFactory20.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory20.getMimeMappings();
        tomcatEmbeddedServletContainerFactory15.setMimeMappings(mimeMappings26);
        tomcatEmbeddedServletContainerFactory10.setMimeMappings(mimeMappings26);
        java.util.Collection<org.apache.catalina.Valve> valveCollection29 = tomcatEmbeddedServletContainerFactory10.getValves();
        tomcatEmbeddedServletContainerFactory10.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setTldSkip("hi!");
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory32.getUriEncoding();
        tomcatEmbeddedServletContainerFactory32.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray38 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory32.addConnectorCustomizers(tomcatConnectorCustomizerArray38);
        org.apache.catalina.connector.Connector[] connectorArray40 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory32.addAdditionalTomcatConnectors(connectorArray40);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet42 = tomcatEmbeddedServletContainerFactory32.getErrorPages();
        tomcatEmbeddedServletContainerFactory10.setErrorPages(errorPageSet42);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet42);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(connectorList12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-8" + "'", str23, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNotNull(valveCollection29);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-8" + "'", str35, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray38);
        org.junit.Assert.assertNotNull(connectorArray40);
        org.junit.Assert.assertNotNull(errorPageSet42);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection14 = tomcatEmbeddedServletContainerFactory13.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection14);
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl16);
        java.net.InetAddress inetAddress18 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress18);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection14);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.Ssl ssl12 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.io.File file15 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file15);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNull(ssl12);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl8);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray12 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextLifecycleListeners must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection14 = tomcatEmbeddedServletContainerFactory13.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection14);
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl16);
        boolean boolean18 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setTldSkip("hi!");
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory19.getUriEncoding();
        boolean boolean23 = tomcatEmbeddedServletContainerFactory19.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection25 = tomcatEmbeddedServletContainerFactory24.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        tomcatEmbeddedServletContainerFactory19.setMimeMappings(mimeMappings26);
        java.net.InetAddress inetAddress28 = null;
        tomcatEmbeddedServletContainerFactory19.setAddress(inetAddress28);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int31 = tomcatEmbeddedServletContainerFactory30.getSessionTimeout();
        java.io.File file32 = tomcatEmbeddedServletContainerFactory30.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setTldSkip("hi!");
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory33.getUriEncoding();
        tomcatEmbeddedServletContainerFactory33.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray39 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory33.addConnectorCustomizers(tomcatConnectorCustomizerArray39);
        tomcatEmbeddedServletContainerFactory30.addConnectorCustomizers(tomcatConnectorCustomizerArray39);
        tomcatEmbeddedServletContainerFactory19.addConnectorCustomizers(tomcatConnectorCustomizerArray39);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray39);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection25);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(file32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-8" + "'", str36, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray39);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setTldSkip("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory13.getUriEncoding();
        boolean boolean17 = tomcatEmbeddedServletContainerFactory13.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection19 = tomcatEmbeddedServletContainerFactory18.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        tomcatEmbeddedServletContainerFactory13.setMimeMappings(mimeMappings20);
        tomcatEmbeddedServletContainerFactory13.setUriEncoding("UTF-8");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection24 = tomcatEmbeddedServletContainerFactory13.getContextLifecycleListeners();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray25 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory13.addContextLifecycleListeners(lifecycleListenerArray25);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray25);
        boolean boolean28 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        boolean boolean29 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection19);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection24);
        org.junit.Assert.assertNotNull(lifecycleListenerArray25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        boolean boolean7 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.Ssl ssl8 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl8);
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        int int12 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer7 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray8 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer7 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray8);
        org.apache.catalina.connector.Connector connector10 = null;
        org.apache.catalina.connector.Connector[] connectorArray11 = new org.apache.catalina.connector.Connector[] { connector10 };
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray11);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Initializers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray8);
        org.junit.Assert.assertNotNull(connectorArray11);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer6 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray7 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer6 };
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray7);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int15 = tomcatEmbeddedServletContainerFactory14.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray16 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory14.addAdditionalTomcatConnectors(connectorArray16);
        org.apache.catalina.Valve[] valveArray18 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory14.addContextValves(valveArray18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int21 = tomcatEmbeddedServletContainerFactory20.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray22 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory20.addAdditionalTomcatConnectors(connectorArray22);
        tomcatEmbeddedServletContainerFactory14.addAdditionalTomcatConnectors(connectorArray22);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        org.springframework.boot.context.embedded.Ssl ssl26 = tomcatEmbeddedServletContainerFactory14.getSsl();
        java.io.File file27 = null;
        tomcatEmbeddedServletContainerFactory14.setDocumentRoot(file27);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setTldSkip("hi!");
        boolean boolean32 = tomcatEmbeddedServletContainerFactory29.isRegisterDefaultServlet();
        int int33 = tomcatEmbeddedServletContainerFactory29.getSessionTimeout();
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory29.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray35 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet36 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet36, errorPageArray35);
        tomcatEmbeddedServletContainerFactory29.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet36);
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory29.getContextPath();
        tomcatEmbeddedServletContainerFactory29.setTldSkip("");
        org.springframework.boot.context.embedded.Ssl ssl42 = null;
        tomcatEmbeddedServletContainerFactory29.setSsl(ssl42);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray44 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory29.addContextCustomizers(tomcatContextCustomizerArray44);
        tomcatEmbeddedServletContainerFactory14.addContextCustomizers(tomcatContextCustomizerArray44);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray44);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory51.setTldSkip("hi!");
        java.lang.String str54 = tomcatEmbeddedServletContainerFactory51.getUriEncoding();
        tomcatEmbeddedServletContainerFactory51.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = tomcatEmbeddedServletContainerFactory51.getMimeMappings();
        tomcatEmbeddedServletContainerFactory48.setMimeMappings(mimeMappings57);
        tomcatEmbeddedServletContainerFactory48.setRegisterJspServlet(true);
        java.io.File file61 = tomcatEmbeddedServletContainerFactory48.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory62.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory65.setTldSkip("hi!");
        java.lang.String str68 = tomcatEmbeddedServletContainerFactory65.getUriEncoding();
        tomcatEmbeddedServletContainerFactory65.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings71 = tomcatEmbeddedServletContainerFactory65.getMimeMappings();
        tomcatEmbeddedServletContainerFactory62.setMimeMappings(mimeMappings71);
        tomcatEmbeddedServletContainerFactory62.setRegisterJspServlet(true);
        java.io.File file75 = tomcatEmbeddedServletContainerFactory62.getDocumentRoot();
        tomcatEmbeddedServletContainerFactory62.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory78.setTldSkip("hi!");
        java.lang.String str81 = tomcatEmbeddedServletContainerFactory78.getUriEncoding();
        tomcatEmbeddedServletContainerFactory78.setUriEncoding("hi!");
        java.lang.String str84 = tomcatEmbeddedServletContainerFactory78.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet85 = tomcatEmbeddedServletContainerFactory78.getErrorPages();
        tomcatEmbeddedServletContainerFactory78.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet88 = tomcatEmbeddedServletContainerFactory78.getErrorPages();
        int int89 = tomcatEmbeddedServletContainerFactory78.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory90 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str91 = tomcatEmbeddedServletContainerFactory90.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage92 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray93 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage92 };
        tomcatEmbeddedServletContainerFactory90.addErrorPages(errorPageArray93);
        tomcatEmbeddedServletContainerFactory78.addErrorPages(errorPageArray93);
        tomcatEmbeddedServletContainerFactory62.addErrorPages(errorPageArray93);
        tomcatEmbeddedServletContainerFactory48.addErrorPages(errorPageArray93);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray93);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(connectorArray16);
        org.junit.Assert.assertNotNull(valveArray18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(connectorArray22);
        org.junit.Assert.assertNotNull(errorPageSet25);
        org.junit.Assert.assertNull(ssl26);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-8" + "'", str34, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray44);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-8" + "'", str54, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertNull(file61);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "UTF-8" + "'", str68, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings71);
        org.junit.Assert.assertNull(file75);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "UTF-8" + "'", str81, "UTF-8");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(errorPageSet85);
        org.junit.Assert.assertNotNull(errorPageSet88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "UTF-8" + "'", str91, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray93);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean2 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        boolean boolean6 = tomcatEmbeddedServletContainerFactory3.isRegisterDefaultServlet();
        int int7 = tomcatEmbeddedServletContainerFactory3.getSessionTimeout();
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray9 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet10, errorPageArray9);
        tomcatEmbeddedServletContainerFactory3.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet10);
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory3.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection15 = tomcatEmbeddedServletContainerFactory14.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection17 = tomcatEmbeddedServletContainerFactory14.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory14.setSessionTimeout((int) (short) 0);
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer20 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer20 };
        tomcatEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray21);
        tomcatEmbeddedServletContainerFactory3.addInitializers(servletContextInitializerArray21);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray21);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.util.List<org.apache.catalina.connector.Connector> connectorList27 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection15);
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(connectorList27);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory6.getUriEncoding();
        tomcatEmbeddedServletContainerFactory6.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray12 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory6.addConnectorCustomizers(tomcatConnectorCustomizerArray12);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray12);
        boolean boolean15 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.net.InetAddress inetAddress17 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress17);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(connectorList16);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file2 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        org.apache.catalina.Valve[] valveArray10 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory6.addContextValves(valveArray10);
        tomcatEmbeddedServletContainerFactory3.addContextValves(valveArray10);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int16 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray17 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory15.addContextLifecycleListeners(lifecycleListenerArray17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory19.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage21 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray22 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage21 };
        tomcatEmbeddedServletContainerFactory19.addErrorPages(errorPageArray22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int25 = tomcatEmbeddedServletContainerFactory24.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray26 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory24.addAdditionalTomcatConnectors(connectorArray26);
        org.apache.catalina.Valve[] valveArray28 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory24.addContextValves(valveArray28);
        org.springframework.boot.context.embedded.Ssl ssl30 = tomcatEmbeddedServletContainerFactory24.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setTldSkip("hi!");
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory31.getUriEncoding();
        tomcatEmbeddedServletContainerFactory31.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory31.getMimeMappings();
        tomcatEmbeddedServletContainerFactory24.setMimeMappings(mimeMappings37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory39.setTldSkip("hi!");
        boolean boolean42 = tomcatEmbeddedServletContainerFactory39.isRegisterDefaultServlet();
        int int43 = tomcatEmbeddedServletContainerFactory39.getSessionTimeout();
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory39.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray45 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet46 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet46, errorPageArray45);
        tomcatEmbeddedServletContainerFactory39.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet46);
        tomcatEmbeddedServletContainerFactory24.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet46);
        tomcatEmbeddedServletContainerFactory19.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet46);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory51.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer54 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray55 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer54 };
        tomcatEmbeddedServletContainerFactory51.addInitializers(servletContextInitializerArray55);
        tomcatEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray55);
        tomcatEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray55);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int60 = tomcatEmbeddedServletContainerFactory59.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray61 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory59.addAdditionalTomcatConnectors(connectorArray61);
        org.apache.catalina.Valve[] valveArray63 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory59.addContextValves(valveArray63);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int66 = tomcatEmbeddedServletContainerFactory65.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray67 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory65.addAdditionalTomcatConnectors(connectorArray67);
        tomcatEmbeddedServletContainerFactory59.addAdditionalTomcatConnectors(connectorArray67);
        tomcatEmbeddedServletContainerFactory15.addAdditionalTomcatConnectors(connectorArray67);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray67);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet72 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        boolean boolean73 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(valveArray10);
        org.junit.Assert.assertNotNull(connectorList14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(connectorArray26);
        org.junit.Assert.assertNotNull(valveArray28);
        org.junit.Assert.assertNull(ssl30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-8" + "'", str34, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-8" + "'", str44, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray55);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(connectorArray61);
        org.junit.Assert.assertNotNull(valveArray63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(connectorArray67);
        org.junit.Assert.assertNotNull(errorPageSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray6 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray6);
        org.springframework.boot.context.embedded.Ssl ssl8 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray9 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatConnectorCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray6);
        org.junit.Assert.assertNull(ssl8);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        int int6 = tomcatEmbeddedServletContainerFactory0.getPort();
        int int7 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.io.File file8 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        boolean boolean10 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.io.File file11 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file11);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8080 + "'", int6 == 8080);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8080 + "'", int7 == 8080);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection4 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.net.InetAddress inetAddress5 = tomcatEmbeddedServletContainerFactory0.getAddress();
        boolean boolean6 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.io.File file7 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file7);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection4);
        org.junit.Assert.assertNull(inetAddress5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage2 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray3 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage2 };
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray3);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int6 = tomcatEmbeddedServletContainerFactory5.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray7 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory5.addAdditionalTomcatConnectors(connectorArray7);
        org.apache.catalina.Valve[] valveArray9 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory5.addContextValves(valveArray9);
        org.springframework.boot.context.embedded.Ssl ssl11 = tomcatEmbeddedServletContainerFactory5.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setTldSkip("hi!");
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory12.getUriEncoding();
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        tomcatEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setTldSkip("hi!");
        boolean boolean23 = tomcatEmbeddedServletContainerFactory20.isRegisterDefaultServlet();
        int int24 = tomcatEmbeddedServletContainerFactory20.getSessionTimeout();
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray26 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27, errorPageArray26);
        tomcatEmbeddedServletContainerFactory20.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        tomcatEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer35 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer35 };
        tomcatEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray36);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray36);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection39 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setPort((int) '#');
        java.util.List<org.apache.catalina.connector.Connector> connectorList42 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(connectorArray7);
        org.junit.Assert.assertNotNull(valveArray9);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection39);
        org.junit.Assert.assertNotNull(connectorList42);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory3.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory3.getErrorPages();
        tomcatEmbeddedServletContainerFactory3.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = tomcatEmbeddedServletContainerFactory3.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int16 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory15.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory15.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer23 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer23 };
        tomcatEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray24);
        tomcatEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray24);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory28.getContextPath();
        java.util.List<org.apache.catalina.connector.Connector> connectorList30 = tomcatEmbeddedServletContainerFactory28.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setTldSkip("hi!");
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory31.getUriEncoding();
        tomcatEmbeddedServletContainerFactory31.setUriEncoding("hi!");
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory31.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = tomcatEmbeddedServletContainerFactory31.getErrorPages();
        tomcatEmbeddedServletContainerFactory31.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet41 = tomcatEmbeddedServletContainerFactory31.getErrorPages();
        tomcatEmbeddedServletContainerFactory28.setErrorPages(errorPageSet41);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet41);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setTldSkip("hi!");
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory44.getUriEncoding();
        tomcatEmbeddedServletContainerFactory44.setUriEncoding("hi!");
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory44.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet51 = tomcatEmbeddedServletContainerFactory44.getErrorPages();
        tomcatEmbeddedServletContainerFactory44.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection54 = tomcatEmbeddedServletContainerFactory44.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener55 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray56 = new org.apache.catalina.LifecycleListener[] { lifecycleListener55 };
        tomcatEmbeddedServletContainerFactory44.addContextLifecycleListeners(lifecycleListenerArray56);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory58.setTldSkip("hi!");
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory58.getUriEncoding();
        tomcatEmbeddedServletContainerFactory58.setUriEncoding("hi!");
        java.lang.String str64 = tomcatEmbeddedServletContainerFactory58.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet65 = tomcatEmbeddedServletContainerFactory58.getErrorPages();
        tomcatEmbeddedServletContainerFactory58.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet68 = tomcatEmbeddedServletContainerFactory58.getErrorPages();
        int int69 = tomcatEmbeddedServletContainerFactory58.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str71 = tomcatEmbeddedServletContainerFactory70.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage72 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray73 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage72 };
        tomcatEmbeddedServletContainerFactory70.addErrorPages(errorPageArray73);
        tomcatEmbeddedServletContainerFactory58.addErrorPages(errorPageArray73);
        tomcatEmbeddedServletContainerFactory44.addErrorPages(errorPageArray73);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray73);
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 100);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(errorPageSet13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(connectorList30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-8" + "'", str34, "UTF-8");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(errorPageSet38);
        org.junit.Assert.assertNotNull(errorPageSet41);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-8" + "'", str47, "UTF-8");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(errorPageSet51);
        org.junit.Assert.assertNotNull(valveCollection54);
        org.junit.Assert.assertNotNull(lifecycleListenerArray56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "UTF-8" + "'", str61, "UTF-8");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(errorPageSet65);
        org.junit.Assert.assertNotNull(errorPageSet68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "UTF-8" + "'", str71, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray73);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray6 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int9 = tomcatEmbeddedServletContainerFactory8.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray10 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList11 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList11, tomcatContextCustomizerArray10);
        tomcatEmbeddedServletContainerFactory8.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList11);
        tomcatEmbeddedServletContainerFactory8.setJspServletClassName("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int17 = tomcatEmbeddedServletContainerFactory16.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray18 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray18);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection20 = tomcatEmbeddedServletContainerFactory16.getContextLifecycleListeners();
        org.apache.catalina.connector.Connector[] connectorArray21 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray21);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection25 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.setPort(8080);
        java.lang.Class<?> wildcardClass28 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(connectorArray18);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection20);
        org.junit.Assert.assertNotNull(connectorArray21);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection25);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer7 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray8 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer7 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray8);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray6 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray6);
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        boolean boolean12 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.util.concurrent.TimeUnit timeUnit14 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10, timeUnit14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(servletContextInitializerArray6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((-1));
        int int2 = tomcatEmbeddedServletContainerFactory1.getPort();
        org.springframework.boot.context.embedded.Ssl ssl3 = null;
        tomcatEmbeddedServletContainerFactory1.setSsl(ssl3);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int6 = tomcatEmbeddedServletContainerFactory5.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray7 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory5.addAdditionalTomcatConnectors(connectorArray7);
        tomcatEmbeddedServletContainerFactory1.addAdditionalTomcatConnectors(connectorArray7);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory1.getContextPath();
        java.io.File file11 = null;
        tomcatEmbeddedServletContainerFactory1.setDocumentRoot(file11);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(connectorArray7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer7 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray8 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer7 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.Ssl ssl14 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl14);
        java.lang.Class<?> wildcardClass16 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray8);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        int int11 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file12 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file12);
        java.lang.Class<?> wildcardClass14 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer7 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray8 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer7 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray8);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        java.util.concurrent.TimeUnit timeUnit14 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0, timeUnit14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7, errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(100);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl16);
        java.net.InetAddress inetAddress18 = tomcatEmbeddedServletContainerFactory0.getAddress();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = inetAddress18.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertNull(inetAddress18);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort((int) '4');
        java.lang.Class<?> wildcardClass10 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int14 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory13.addAdditionalTomcatConnectors(connectorArray15);
        org.apache.catalina.Valve[] valveArray17 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory13.addContextValves(valveArray17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int20 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray21 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory19.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory13.addAdditionalTomcatConnectors(connectorArray21);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = tomcatEmbeddedServletContainerFactory13.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int27 = tomcatEmbeddedServletContainerFactory26.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray28 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory26.addAdditionalTomcatConnectors(connectorArray28);
        org.apache.catalina.Valve[] valveArray30 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory26.addContextValves(valveArray30);
        org.springframework.boot.context.embedded.Ssl ssl32 = tomcatEmbeddedServletContainerFactory26.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl33 = tomcatEmbeddedServletContainerFactory26.getSsl();
        tomcatEmbeddedServletContainerFactory26.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setTldSkip("hi!");
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory36.getUriEncoding();
        tomcatEmbeddedServletContainerFactory36.setUriEncoding("hi!");
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory36.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet43 = tomcatEmbeddedServletContainerFactory36.getErrorPages();
        tomcatEmbeddedServletContainerFactory36.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection46 = tomcatEmbeddedServletContainerFactory36.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener47 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray48 = new org.apache.catalina.LifecycleListener[] { lifecycleListener47 };
        tomcatEmbeddedServletContainerFactory36.addContextLifecycleListeners(lifecycleListenerArray48);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory50.setTldSkip("hi!");
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory50.getUriEncoding();
        tomcatEmbeddedServletContainerFactory50.setUriEncoding("hi!");
        java.lang.String str56 = tomcatEmbeddedServletContainerFactory50.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet57 = tomcatEmbeddedServletContainerFactory50.getErrorPages();
        tomcatEmbeddedServletContainerFactory50.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet60 = tomcatEmbeddedServletContainerFactory50.getErrorPages();
        int int61 = tomcatEmbeddedServletContainerFactory50.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str63 = tomcatEmbeddedServletContainerFactory62.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage64 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray65 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage64 };
        tomcatEmbeddedServletContainerFactory62.addErrorPages(errorPageArray65);
        tomcatEmbeddedServletContainerFactory50.addErrorPages(errorPageArray65);
        tomcatEmbeddedServletContainerFactory36.addErrorPages(errorPageArray65);
        tomcatEmbeddedServletContainerFactory26.addErrorPages(errorPageArray65);
        boolean boolean70 = tomcatEmbeddedServletContainerFactory26.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection71 = tomcatEmbeddedServletContainerFactory26.getValves();
        java.lang.String str72 = tomcatEmbeddedServletContainerFactory26.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory73.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory73.setTldSkip("hi!");
        java.io.File file78 = null;
        tomcatEmbeddedServletContainerFactory73.setDocumentRoot(file78);
        java.util.Collection<org.apache.catalina.Valve> valveCollection80 = tomcatEmbeddedServletContainerFactory73.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory81.setTldSkip("hi!");
        java.lang.String str84 = tomcatEmbeddedServletContainerFactory81.getUriEncoding();
        tomcatEmbeddedServletContainerFactory81.setUriEncoding("hi!");
        java.lang.String str87 = tomcatEmbeddedServletContainerFactory81.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet88 = tomcatEmbeddedServletContainerFactory81.getErrorPages();
        tomcatEmbeddedServletContainerFactory81.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection91 = tomcatEmbeddedServletContainerFactory81.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener92 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray93 = new org.apache.catalina.LifecycleListener[] { lifecycleListener92 };
        tomcatEmbeddedServletContainerFactory81.addContextLifecycleListeners(lifecycleListenerArray93);
        tomcatEmbeddedServletContainerFactory73.addContextLifecycleListeners(lifecycleListenerArray93);
        tomcatEmbeddedServletContainerFactory26.addContextLifecycleListeners(lifecycleListenerArray93);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray93);
        java.lang.Class<?> wildcardClass98 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(valveArray17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(connectorArray21);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(connectorArray28);
        org.junit.Assert.assertNotNull(valveArray30);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNull(ssl33);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-8" + "'", str39, "UTF-8");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(errorPageSet43);
        org.junit.Assert.assertNotNull(valveCollection46);
        org.junit.Assert.assertNotNull(lifecycleListenerArray48);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-8" + "'", str53, "UTF-8");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(errorPageSet57);
        org.junit.Assert.assertNotNull(errorPageSet60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-8" + "'", str63, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(valveCollection71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "UTF-8" + "'", str72, "UTF-8");
        org.junit.Assert.assertNotNull(valveCollection80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "UTF-8" + "'", str84, "UTF-8");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(errorPageSet88);
        org.junit.Assert.assertNotNull(valveCollection91);
        org.junit.Assert.assertNotNull(lifecycleListenerArray93);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection4 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.apache.catalina.connector.Connector[] connectorArray5 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray5);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int8 = tomcatEmbeddedServletContainerFactory7.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection9 = tomcatEmbeddedServletContainerFactory7.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection9);
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.lang.Class<?> wildcardClass12 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection4);
        org.junit.Assert.assertNotNull(connectorArray5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection9);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection2 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) -1);
        java.io.File file5 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file5);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection2);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) -1);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet2 = tomcatEmbeddedServletContainerFactory1.getErrorPages();
        org.springframework.boot.context.embedded.Ssl ssl3 = tomcatEmbeddedServletContainerFactory1.getSsl();
        org.junit.Assert.assertNotNull(errorPageSet2);
        org.junit.Assert.assertNull(ssl3);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory6.getUriEncoding();
        tomcatEmbeddedServletContainerFactory6.setUriEncoding("hi!");
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory6.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = tomcatEmbeddedServletContainerFactory6.getErrorPages();
        tomcatEmbeddedServletContainerFactory6.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection16 = tomcatEmbeddedServletContainerFactory6.getValves();
        java.net.InetAddress inetAddress17 = null;
        tomcatEmbeddedServletContainerFactory6.setAddress(inetAddress17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setTldSkip("hi!");
        boolean boolean22 = tomcatEmbeddedServletContainerFactory19.isRegisterDefaultServlet();
        int int23 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory19.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray25 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet26, errorPageArray25);
        tomcatEmbeddedServletContainerFactory19.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet26);
        tomcatEmbeddedServletContainerFactory6.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet26);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet26);
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(errorPageSet13);
        org.junit.Assert.assertNotNull(valveCollection16);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-8" + "'", str24, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage2 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray3 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage2 };
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray3);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int6 = tomcatEmbeddedServletContainerFactory5.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray7 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory5.addAdditionalTomcatConnectors(connectorArray7);
        org.apache.catalina.Valve[] valveArray9 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory5.addContextValves(valveArray9);
        org.springframework.boot.context.embedded.Ssl ssl11 = tomcatEmbeddedServletContainerFactory5.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setTldSkip("hi!");
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory12.getUriEncoding();
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        tomcatEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setTldSkip("hi!");
        boolean boolean23 = tomcatEmbeddedServletContainerFactory20.isRegisterDefaultServlet();
        int int24 = tomcatEmbeddedServletContainerFactory20.getSessionTimeout();
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray26 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27, errorPageArray26);
        tomcatEmbeddedServletContainerFactory20.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        tomcatEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer35 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer35 };
        tomcatEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray36);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray36);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int40 = tomcatEmbeddedServletContainerFactory39.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory39.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory39.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer47 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray48 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer47 };
        tomcatEmbeddedServletContainerFactory44.addInitializers(servletContextInitializerArray48);
        tomcatEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray48);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray48);
        org.springframework.core.io.ResourceLoader resourceLoader52 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader52);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings54 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(connectorArray7);
        org.junit.Assert.assertNotNull(valveArray9);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertNotNull(servletContextInitializerArray48);
        org.junit.Assert.assertNotNull(mimeMappings54);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        java.io.File file6 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file6);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.net.InetAddress inetAddress9 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.util.concurrent.TimeUnit timeUnit11 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 1, timeUnit11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertNull(inetAddress9);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray6 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int9 = tomcatEmbeddedServletContainerFactory8.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray10 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList11 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList11, tomcatContextCustomizerArray10);
        tomcatEmbeddedServletContainerFactory8.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList11);
        tomcatEmbeddedServletContainerFactory8.setJspServletClassName("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int17 = tomcatEmbeddedServletContainerFactory16.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray18 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray18);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection20 = tomcatEmbeddedServletContainerFactory16.getContextLifecycleListeners();
        org.apache.catalina.connector.Connector[] connectorArray21 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray21);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection25 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.io.File file26 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection27 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet28 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.Class<?> wildcardClass29 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(connectorArray18);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection20);
        org.junit.Assert.assertNotNull(connectorArray21);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection27);
        org.junit.Assert.assertNotNull(errorPageSet28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray4 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory2.addAdditionalTomcatConnectors(connectorArray4);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory2.getContextLifecycleListeners();
        org.apache.catalina.connector.Connector[] connectorArray7 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory2.addAdditionalTomcatConnectors(connectorArray7);
        tomcatEmbeddedServletContainerFactory1.addAdditionalTomcatConnectors(connectorArray7);
        java.io.File file10 = tomcatEmbeddedServletContainerFactory1.getDocumentRoot();
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        tomcatEmbeddedServletContainerFactory1.setSsl(ssl11);
        tomcatEmbeddedServletContainerFactory1.setPort((int) (short) -1);
        java.net.InetAddress inetAddress15 = tomcatEmbeddedServletContainerFactory1.getAddress();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass16 = inetAddress15.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(connectorArray4);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertNotNull(connectorArray7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNull(inetAddress15);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.util.Collection<org.apache.catalina.Valve> valveCollection12 = tomcatEmbeddedServletContainerFactory0.getValves();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) ' ');
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection12);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer7 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray8 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer7 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray8);
        org.springframework.boot.context.embedded.Ssl ssl10 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl10);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray12 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TomcatConnectorCustomizers must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray8);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings16 = tomcatEmbeddedServletContainerFactory10.getMimeMappings();
        java.io.File file17 = tomcatEmbeddedServletContainerFactory10.getDocumentRoot();
        org.springframework.boot.context.embedded.Ssl ssl18 = tomcatEmbeddedServletContainerFactory10.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setTldSkip("hi!");
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory22.getUriEncoding();
        tomcatEmbeddedServletContainerFactory22.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings28 = tomcatEmbeddedServletContainerFactory22.getMimeMappings();
        tomcatEmbeddedServletContainerFactory19.setMimeMappings(mimeMappings28);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection31 = tomcatEmbeddedServletContainerFactory30.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory19.setTomcatContextCustomizers(tomcatContextCustomizerCollection31);
        java.io.File file33 = null;
        tomcatEmbeddedServletContainerFactory19.setDocumentRoot(file33);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setTldSkip("hi!");
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory35.getUriEncoding();
        tomcatEmbeddedServletContainerFactory35.setUriEncoding("hi!");
        java.lang.String str41 = tomcatEmbeddedServletContainerFactory35.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet42 = tomcatEmbeddedServletContainerFactory35.getErrorPages();
        tomcatEmbeddedServletContainerFactory35.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection45 = tomcatEmbeddedServletContainerFactory35.getValves();
        java.net.InetAddress inetAddress46 = null;
        tomcatEmbeddedServletContainerFactory35.setAddress(inetAddress46);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection48 = tomcatEmbeddedServletContainerFactory35.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection50 = tomcatEmbeddedServletContainerFactory49.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        tomcatEmbeddedServletContainerFactory49.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl54 = null;
        tomcatEmbeddedServletContainerFactory49.setSsl(ssl54);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int57 = tomcatEmbeddedServletContainerFactory56.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray58 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList59 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList59, tomcatContextCustomizerArray58);
        tomcatEmbeddedServletContainerFactory56.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList59);
        tomcatEmbeddedServletContainerFactory56.setProtocol("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray64 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory56.addContextLifecycleListeners(lifecycleListenerArray64);
        tomcatEmbeddedServletContainerFactory49.addContextLifecycleListeners(lifecycleListenerArray64);
        tomcatEmbeddedServletContainerFactory35.addContextLifecycleListeners(lifecycleListenerArray64);
        tomcatEmbeddedServletContainerFactory19.addContextLifecycleListeners(lifecycleListenerArray64);
        tomcatEmbeddedServletContainerFactory19.setSessionTimeout((int) (short) 1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int72 = tomcatEmbeddedServletContainerFactory71.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray73 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList74 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList74, tomcatContextCustomizerArray73);
        tomcatEmbeddedServletContainerFactory71.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList74);
        java.util.Collection<org.apache.catalina.Valve> valveCollection77 = tomcatEmbeddedServletContainerFactory71.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory78.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory81.setTldSkip("hi!");
        java.lang.String str84 = tomcatEmbeddedServletContainerFactory81.getUriEncoding();
        tomcatEmbeddedServletContainerFactory81.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings87 = tomcatEmbeddedServletContainerFactory81.getMimeMappings();
        tomcatEmbeddedServletContainerFactory78.setMimeMappings(mimeMappings87);
        tomcatEmbeddedServletContainerFactory71.setMimeMappings(mimeMappings87);
        tomcatEmbeddedServletContainerFactory19.setMimeMappings(mimeMappings87);
        tomcatEmbeddedServletContainerFactory10.setMimeMappings(mimeMappings87);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings87);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings16);
        org.junit.Assert.assertNull(file17);
        org.junit.Assert.assertNull(ssl18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings28);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-8" + "'", str38, "UTF-8");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(errorPageSet42);
        org.junit.Assert.assertNotNull(valveCollection45);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection48);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection50);
        org.junit.Assert.assertNotNull(mimeMappings51);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(lifecycleListenerArray64);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(valveCollection77);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "UTF-8" + "'", str84, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings87);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory5.getUriEncoding();
        tomcatEmbeddedServletContainerFactory5.setUriEncoding("hi!");
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory5.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory5.getErrorPages();
        tomcatEmbeddedServletContainerFactory5.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory5.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener16 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray17 = new org.apache.catalina.LifecycleListener[] { lifecycleListener16 };
        tomcatEmbeddedServletContainerFactory5.addContextLifecycleListeners(lifecycleListenerArray17);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int21 = tomcatEmbeddedServletContainerFactory20.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory20.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory20.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer28 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray29 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer28 };
        tomcatEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray29);
        tomcatEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray29);
        tomcatEmbeddedServletContainerFactory20.setSessionTimeout((int) '4');
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray34 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory20.addContextCustomizers(tomcatContextCustomizerArray34);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray34);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        tomcatEmbeddedServletContainerFactory0.setPort((int) '4');
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNotNull(lifecycleListenerArray17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertNotNull(servletContextInitializerArray29);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray34);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.core.io.ResourceLoader resourceLoader6 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader6);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        boolean boolean14 = tomcatEmbeddedServletContainerFactory10.isRegisterJspServlet();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int18 = tomcatEmbeddedServletContainerFactory17.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray19 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory17.addAdditionalTomcatConnectors(connectorArray19);
        org.apache.catalina.Valve[] valveArray21 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory17.addContextValves(valveArray21);
        org.springframework.boot.context.embedded.Ssl ssl23 = tomcatEmbeddedServletContainerFactory17.getSsl();
        tomcatEmbeddedServletContainerFactory17.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int27 = tomcatEmbeddedServletContainerFactory26.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray28 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList29 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList29, tomcatContextCustomizerArray28);
        tomcatEmbeddedServletContainerFactory26.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList29);
        java.io.File file32 = null;
        tomcatEmbeddedServletContainerFactory26.setDocumentRoot(file32);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection35 = tomcatEmbeddedServletContainerFactory34.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings36 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        tomcatEmbeddedServletContainerFactory26.setMimeMappings(mimeMappings36);
        tomcatEmbeddedServletContainerFactory26.setRegisterDefaultServlet(false);
        org.apache.catalina.LifecycleListener lifecycleListener40 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray41 = new org.apache.catalina.LifecycleListener[] { lifecycleListener40 };
        tomcatEmbeddedServletContainerFactory26.addContextLifecycleListeners(lifecycleListenerArray41);
        tomcatEmbeddedServletContainerFactory17.addContextLifecycleListeners(lifecycleListenerArray41);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setTldSkip("hi!");
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory44.getUriEncoding();
        boolean boolean48 = tomcatEmbeddedServletContainerFactory44.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection50 = tomcatEmbeddedServletContainerFactory49.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings51 = tomcatEmbeddedServletContainerFactory49.getMimeMappings();
        tomcatEmbeddedServletContainerFactory44.setMimeMappings(mimeMappings51);
        tomcatEmbeddedServletContainerFactory17.setMimeMappings(mimeMappings51);
        tomcatEmbeddedServletContainerFactory10.setMimeMappings(mimeMappings51);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings51);
        org.springframework.core.io.ResourceLoader resourceLoader56 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader56);
        java.io.File file58 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file58);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(connectorArray19);
        org.junit.Assert.assertNotNull(valveArray21);
        org.junit.Assert.assertNull(ssl23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection35);
        org.junit.Assert.assertNotNull(mimeMappings36);
        org.junit.Assert.assertNotNull(lifecycleListenerArray41);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-8" + "'", str47, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection50);
        org.junit.Assert.assertNotNull(mimeMappings51);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7, errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int14 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int16 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray17 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory15.addAdditionalTomcatConnectors(connectorArray17);
        org.apache.catalina.Valve[] valveArray19 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray19);
        tomcatEmbeddedServletContainerFactory13.addContextValves(valveArray19);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray19);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(connectorArray17);
        org.junit.Assert.assertNotNull(valveArray19);
        org.junit.Assert.assertNotNull(errorPageSet25);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file5 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file5);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection7 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.concurrent.TimeUnit timeUnit10 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0, timeUnit10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection7);
        org.junit.Assert.assertNotNull(mimeMappings8);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.util.Collection<org.apache.catalina.Valve> valveCollection13 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.io.File file14 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(valveCollection13);
        org.junit.Assert.assertNull(file14);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer6 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray7 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer6 };
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray7);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList12 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList12);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.io.File file5 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file5);
        java.util.Collection<org.apache.catalina.Valve> valveCollection7 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection8 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        int int9 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(valveCollection7);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 0);
        java.lang.String str2 = tomcatEmbeddedServletContainerFactory1.getUriEncoding();
        tomcatEmbeddedServletContainerFactory1.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.Ssl ssl5 = tomcatEmbeddedServletContainerFactory1.getSsl();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-8" + "'", str2, "UTF-8");
        org.junit.Assert.assertNull(ssl5);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int9 = tomcatEmbeddedServletContainerFactory8.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray10 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray10);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection12 = tomcatEmbeddedServletContainerFactory8.getContextLifecycleListeners();
        org.apache.catalina.connector.Connector[] connectorArray13 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray13);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray13);
        tomcatEmbeddedServletContainerFactory0.setPort(10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setTldSkip("hi!");
        boolean boolean21 = tomcatEmbeddedServletContainerFactory18.isRegisterDefaultServlet();
        int int22 = tomcatEmbeddedServletContainerFactory18.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory18.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer25 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray26 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer25 };
        tomcatEmbeddedServletContainerFactory18.addConnectorCustomizers(tomcatConnectorCustomizerArray26);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray26);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings29 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(connectorArray10);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection12);
        org.junit.Assert.assertNotNull(connectorArray13);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray26);
        org.junit.Assert.assertNotNull(mimeMappings29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.Collection<org.apache.catalina.Valve> valveCollection13 = tomcatEmbeddedServletContainerFactory0.getValves();
        int int14 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setTldSkip("hi!");
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory18.getUriEncoding();
        tomcatEmbeddedServletContainerFactory18.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        tomcatEmbeddedServletContainerFactory15.setMimeMappings(mimeMappings24);
        boolean boolean26 = tomcatEmbeddedServletContainerFactory15.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setTldSkip("hi!");
        boolean boolean30 = tomcatEmbeddedServletContainerFactory27.isRegisterDefaultServlet();
        int int31 = tomcatEmbeddedServletContainerFactory27.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory27.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer34 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray35 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer34 };
        tomcatEmbeddedServletContainerFactory27.addConnectorCustomizers(tomcatConnectorCustomizerArray35);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection37 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory15.setTomcatContextCustomizers(tomcatContextCustomizerCollection37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory39.setTldSkip("hi!");
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory39.getUriEncoding();
        tomcatEmbeddedServletContainerFactory39.setUriEncoding("hi!");
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory39.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet46 = tomcatEmbeddedServletContainerFactory39.getErrorPages();
        tomcatEmbeddedServletContainerFactory39.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet49 = tomcatEmbeddedServletContainerFactory39.getErrorPages();
        int int50 = tomcatEmbeddedServletContainerFactory39.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory51.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage53 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray54 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage53 };
        tomcatEmbeddedServletContainerFactory51.addErrorPages(errorPageArray54);
        tomcatEmbeddedServletContainerFactory39.addErrorPages(errorPageArray54);
        tomcatEmbeddedServletContainerFactory15.addErrorPages(errorPageArray54);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray54);
        java.util.List<org.apache.catalina.connector.Connector> connectorList59 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        int int60 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings61 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertNotNull(valveCollection13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8080 + "'", int14 == 8080);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray35);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-8" + "'", str42, "UTF-8");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(errorPageSet46);
        org.junit.Assert.assertNotNull(errorPageSet49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "UTF-8" + "'", str52, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray54);
        org.junit.Assert.assertNotNull(connectorList59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(mimeMappings61);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet3 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.Ssl ssl5 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl5);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertNotNull(errorPageSet3);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection4);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener11 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray12 = new org.apache.catalina.LifecycleListener[] { lifecycleListener11 };
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray12);
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertNotNull(lifecycleListenerArray12);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer8 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray9 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer8 };
        tomcatEmbeddedServletContainerFactory5.addInitializers(servletContextInitializerArray9);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray9);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) '4');
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray14 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray14);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray9);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray14);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int10 = tomcatEmbeddedServletContainerFactory9.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray11 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12, tomcatContextCustomizerArray11);
        tomcatEmbeddedServletContainerFactory9.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12);
        java.io.File file15 = null;
        tomcatEmbeddedServletContainerFactory9.setDocumentRoot(file15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection18 = tomcatEmbeddedServletContainerFactory17.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory9.setMimeMappings(mimeMappings19);
        tomcatEmbeddedServletContainerFactory9.setRegisterDefaultServlet(false);
        org.apache.catalina.LifecycleListener lifecycleListener23 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray24 = new org.apache.catalina.LifecycleListener[] { lifecycleListener23 };
        tomcatEmbeddedServletContainerFactory9.addContextLifecycleListeners(lifecycleListenerArray24);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setTldSkip("hi!");
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory27.getUriEncoding();
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        boolean boolean34 = tomcatEmbeddedServletContainerFactory27.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setTldSkip("hi!");
        boolean boolean38 = tomcatEmbeddedServletContainerFactory35.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory35.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setTldSkip("hi!");
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory40.getUriEncoding();
        tomcatEmbeddedServletContainerFactory40.setUriEncoding("hi!");
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory40.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet47 = tomcatEmbeddedServletContainerFactory40.getErrorPages();
        tomcatEmbeddedServletContainerFactory40.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection50 = tomcatEmbeddedServletContainerFactory40.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener51 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray52 = new org.apache.catalina.LifecycleListener[] { lifecycleListener51 };
        tomcatEmbeddedServletContainerFactory40.addContextLifecycleListeners(lifecycleListenerArray52);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setTldSkip("hi!");
        java.lang.String str57 = tomcatEmbeddedServletContainerFactory54.getUriEncoding();
        tomcatEmbeddedServletContainerFactory54.setUriEncoding("hi!");
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory54.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet61 = tomcatEmbeddedServletContainerFactory54.getErrorPages();
        tomcatEmbeddedServletContainerFactory54.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet64 = tomcatEmbeddedServletContainerFactory54.getErrorPages();
        int int65 = tomcatEmbeddedServletContainerFactory54.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str67 = tomcatEmbeddedServletContainerFactory66.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage68 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray69 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage68 };
        tomcatEmbeddedServletContainerFactory66.addErrorPages(errorPageArray69);
        tomcatEmbeddedServletContainerFactory54.addErrorPages(errorPageArray69);
        tomcatEmbeddedServletContainerFactory40.addErrorPages(errorPageArray69);
        tomcatEmbeddedServletContainerFactory35.addErrorPages(errorPageArray69);
        tomcatEmbeddedServletContainerFactory27.addErrorPages(errorPageArray69);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray69);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection77 = tomcatEmbeddedServletContainerFactory76.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings78 = tomcatEmbeddedServletContainerFactory76.getMimeMappings();
        tomcatEmbeddedServletContainerFactory76.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl81 = null;
        tomcatEmbeddedServletContainerFactory76.setSsl(ssl81);
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray83 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory76.addContextLifecycleListeners(lifecycleListenerArray83);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray83);
        java.util.concurrent.TimeUnit timeUnit87 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1, timeUnit87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection18);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(lifecycleListenerArray24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-8" + "'", str30, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(errorPageSet47);
        org.junit.Assert.assertNotNull(valveCollection50);
        org.junit.Assert.assertNotNull(lifecycleListenerArray52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "UTF-8" + "'", str57, "UTF-8");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(errorPageSet61);
        org.junit.Assert.assertNotNull(errorPageSet64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "UTF-8" + "'", str67, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray69);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection77);
        org.junit.Assert.assertNotNull(mimeMappings78);
        org.junit.Assert.assertNotNull(lifecycleListenerArray83);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory5.getUriEncoding();
        tomcatEmbeddedServletContainerFactory5.setUriEncoding("hi!");
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory5.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory5.getErrorPages();
        tomcatEmbeddedServletContainerFactory5.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory5.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener16 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray17 = new org.apache.catalina.LifecycleListener[] { lifecycleListener16 };
        tomcatEmbeddedServletContainerFactory5.addContextLifecycleListeners(lifecycleListenerArray17);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray17);
        java.io.File file20 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file20);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNotNull(lifecycleListenerArray17);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) 1);
        java.lang.Class<?> wildcardClass2 = tomcatEmbeddedServletContainerFactory1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection7 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection8 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        java.util.concurrent.TimeUnit timeUnit12 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) '4', timeUnit12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection7);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection8);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        org.apache.catalina.Valve[] valveArray3 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray3);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        int int7 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.junit.Assert.assertNotNull(valveArray3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8080 + "'", int7 == 8080);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.Class<?> wildcardClass11 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage2 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray3 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage2 };
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray3);
        boolean boolean5 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("hi!");
        boolean boolean9 = tomcatEmbeddedServletContainerFactory6.isRegisterDefaultServlet();
        int int10 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory6.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray12 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet13, errorPageArray12);
        tomcatEmbeddedServletContainerFactory6.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet13);
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory6.getContextPath();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int20 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int22 = tomcatEmbeddedServletContainerFactory21.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray23 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory21.addAdditionalTomcatConnectors(connectorArray23);
        org.apache.catalina.Valve[] valveArray25 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory21.addContextValves(valveArray25);
        tomcatEmbeddedServletContainerFactory19.addContextValves(valveArray25);
        tomcatEmbeddedServletContainerFactory6.addContextValves(valveArray25);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int30 = tomcatEmbeddedServletContainerFactory29.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray31 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory29.addAdditionalTomcatConnectors(connectorArray31);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection33 = tomcatEmbeddedServletContainerFactory29.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int35 = tomcatEmbeddedServletContainerFactory34.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int37 = tomcatEmbeddedServletContainerFactory36.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray38 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory36.addAdditionalTomcatConnectors(connectorArray38);
        org.apache.catalina.Valve[] valveArray40 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory36.addContextValves(valveArray40);
        tomcatEmbeddedServletContainerFactory34.addContextValves(valveArray40);
        tomcatEmbeddedServletContainerFactory29.addContextValves(valveArray40);
        tomcatEmbeddedServletContainerFactory6.addContextValves(valveArray40);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray40);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection46 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.concurrent.TimeUnit timeUnit48 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((-1), timeUnit48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(connectorArray23);
        org.junit.Assert.assertNotNull(valveArray25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(connectorArray31);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(connectorArray38);
        org.junit.Assert.assertNotNull(valveArray40);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection46);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray6 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int9 = tomcatEmbeddedServletContainerFactory8.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray10 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList11 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList11, tomcatContextCustomizerArray10);
        tomcatEmbeddedServletContainerFactory8.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList11);
        tomcatEmbeddedServletContainerFactory8.setJspServletClassName("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int17 = tomcatEmbeddedServletContainerFactory16.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray18 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray18);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection20 = tomcatEmbeddedServletContainerFactory16.getContextLifecycleListeners();
        org.apache.catalina.connector.Connector[] connectorArray21 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray21);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection25 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(connectorArray18);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection20);
        org.junit.Assert.assertNotNull(connectorArray21);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory11.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection12);
        java.io.File file14 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file14);
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection3 = tomcatEmbeddedServletContainerFactory2.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory2.getMimeMappings();
        tomcatEmbeddedServletContainerFactory2.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl7 = null;
        tomcatEmbeddedServletContainerFactory2.setSsl(ssl7);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int10 = tomcatEmbeddedServletContainerFactory9.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray11 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12, tomcatContextCustomizerArray11);
        tomcatEmbeddedServletContainerFactory9.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12);
        tomcatEmbeddedServletContainerFactory9.setProtocol("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray17 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory9.addContextLifecycleListeners(lifecycleListenerArray17);
        tomcatEmbeddedServletContainerFactory2.addContextLifecycleListeners(lifecycleListenerArray17);
        tomcatEmbeddedServletContainerFactory1.addContextLifecycleListeners(lifecycleListenerArray17);
        java.io.File file21 = null;
        tomcatEmbeddedServletContainerFactory1.setDocumentRoot(file21);
        java.io.File file23 = null;
        tomcatEmbeddedServletContainerFactory1.setDocumentRoot(file23);
        java.util.concurrent.TimeUnit timeUnit26 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.setSessionTimeout((int) 'a', timeUnit26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection3);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(lifecycleListenerArray17);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("UTF-8", (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage2 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray3 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage2 };
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray3);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int6 = tomcatEmbeddedServletContainerFactory5.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray7 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory5.addAdditionalTomcatConnectors(connectorArray7);
        org.apache.catalina.Valve[] valveArray9 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory5.addContextValves(valveArray9);
        org.springframework.boot.context.embedded.Ssl ssl11 = tomcatEmbeddedServletContainerFactory5.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setTldSkip("hi!");
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory12.getUriEncoding();
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        tomcatEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setTldSkip("hi!");
        boolean boolean23 = tomcatEmbeddedServletContainerFactory20.isRegisterDefaultServlet();
        int int24 = tomcatEmbeddedServletContainerFactory20.getSessionTimeout();
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray26 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27, errorPageArray26);
        tomcatEmbeddedServletContainerFactory20.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        tomcatEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        java.io.File file32 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file32);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setTldSkip("hi!");
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory37.getUriEncoding();
        tomcatEmbeddedServletContainerFactory37.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings43 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        tomcatEmbeddedServletContainerFactory34.setMimeMappings(mimeMappings43);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection46 = tomcatEmbeddedServletContainerFactory45.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory34.setTomcatContextCustomizers(tomcatContextCustomizerCollection46);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection46);
        java.io.File file49 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        java.util.concurrent.TimeUnit timeUnit51 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1, timeUnit51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(connectorArray7);
        org.junit.Assert.assertNotNull(valveArray9);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UTF-8" + "'", str40, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings43);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection46);
        org.junit.Assert.assertNull(file49);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int9 = tomcatEmbeddedServletContainerFactory8.getSessionTimeout();
        java.io.File file10 = tomcatEmbeddedServletContainerFactory8.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int15 = tomcatEmbeddedServletContainerFactory14.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray16 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory14.addAdditionalTomcatConnectors(connectorArray16);
        org.apache.catalina.Valve[] valveArray18 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory14.addContextValves(valveArray18);
        tomcatEmbeddedServletContainerFactory11.addContextValves(valveArray18);
        tomcatEmbeddedServletContainerFactory8.addContextValves(valveArray18);
        java.util.List<org.apache.catalina.connector.Connector> connectorList22 = tomcatEmbeddedServletContainerFactory8.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int24 = tomcatEmbeddedServletContainerFactory23.getSessionTimeout();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray25 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory23.addContextLifecycleListeners(lifecycleListenerArray25);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory27.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage29 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray30 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage29 };
        tomcatEmbeddedServletContainerFactory27.addErrorPages(errorPageArray30);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int33 = tomcatEmbeddedServletContainerFactory32.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray34 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory32.addAdditionalTomcatConnectors(connectorArray34);
        org.apache.catalina.Valve[] valveArray36 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory32.addContextValves(valveArray36);
        org.springframework.boot.context.embedded.Ssl ssl38 = tomcatEmbeddedServletContainerFactory32.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory39.setTldSkip("hi!");
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory39.getUriEncoding();
        tomcatEmbeddedServletContainerFactory39.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = tomcatEmbeddedServletContainerFactory39.getMimeMappings();
        tomcatEmbeddedServletContainerFactory32.setMimeMappings(mimeMappings45);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory47.setTldSkip("hi!");
        boolean boolean50 = tomcatEmbeddedServletContainerFactory47.isRegisterDefaultServlet();
        int int51 = tomcatEmbeddedServletContainerFactory47.getSessionTimeout();
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory47.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray53 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet54 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet54, errorPageArray53);
        tomcatEmbeddedServletContainerFactory47.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet54);
        tomcatEmbeddedServletContainerFactory32.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet54);
        tomcatEmbeddedServletContainerFactory27.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet54);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory59.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer62 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray63 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer62 };
        tomcatEmbeddedServletContainerFactory59.addInitializers(servletContextInitializerArray63);
        tomcatEmbeddedServletContainerFactory27.addInitializers(servletContextInitializerArray63);
        tomcatEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray63);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int68 = tomcatEmbeddedServletContainerFactory67.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray69 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory67.addAdditionalTomcatConnectors(connectorArray69);
        org.apache.catalina.Valve[] valveArray71 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory67.addContextValves(valveArray71);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int74 = tomcatEmbeddedServletContainerFactory73.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray75 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory73.addAdditionalTomcatConnectors(connectorArray75);
        tomcatEmbeddedServletContainerFactory67.addAdditionalTomcatConnectors(connectorArray75);
        tomcatEmbeddedServletContainerFactory23.addAdditionalTomcatConnectors(connectorArray75);
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray75);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray75);
        org.springframework.core.io.ResourceLoader resourceLoader81 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader81);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(connectorArray16);
        org.junit.Assert.assertNotNull(valveArray18);
        org.junit.Assert.assertNotNull(connectorList22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerArray25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UTF-8" + "'", str28, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(connectorArray34);
        org.junit.Assert.assertNotNull(valveArray36);
        org.junit.Assert.assertNull(ssl38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-8" + "'", str42, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "UTF-8" + "'", str52, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(connectorArray69);
        org.junit.Assert.assertNotNull(valveArray71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(connectorArray75);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings4 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet5 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int8 = tomcatEmbeddedServletContainerFactory7.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray9 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray9);
        org.apache.catalina.Valve[] valveArray11 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory7.addContextValves(valveArray11);
        org.springframework.boot.context.embedded.Ssl ssl13 = tomcatEmbeddedServletContainerFactory7.getSsl();
        tomcatEmbeddedServletContainerFactory7.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int17 = tomcatEmbeddedServletContainerFactory16.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray18 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList19 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList19, tomcatContextCustomizerArray18);
        tomcatEmbeddedServletContainerFactory16.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList19);
        java.io.File file22 = null;
        tomcatEmbeddedServletContainerFactory16.setDocumentRoot(file22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection25 = tomcatEmbeddedServletContainerFactory24.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings26 = tomcatEmbeddedServletContainerFactory24.getMimeMappings();
        tomcatEmbeddedServletContainerFactory16.setMimeMappings(mimeMappings26);
        tomcatEmbeddedServletContainerFactory16.setRegisterDefaultServlet(false);
        org.apache.catalina.LifecycleListener lifecycleListener30 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray31 = new org.apache.catalina.LifecycleListener[] { lifecycleListener30 };
        tomcatEmbeddedServletContainerFactory16.addContextLifecycleListeners(lifecycleListenerArray31);
        tomcatEmbeddedServletContainerFactory7.addContextLifecycleListeners(lifecycleListenerArray31);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setTldSkip("hi!");
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory34.getUriEncoding();
        tomcatEmbeddedServletContainerFactory34.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings40 = tomcatEmbeddedServletContainerFactory34.getMimeMappings();
        boolean boolean41 = tomcatEmbeddedServletContainerFactory34.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setTldSkip("hi!");
        boolean boolean45 = tomcatEmbeddedServletContainerFactory42.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings46 = tomcatEmbeddedServletContainerFactory42.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory47.setTldSkip("hi!");
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory47.getUriEncoding();
        tomcatEmbeddedServletContainerFactory47.setUriEncoding("hi!");
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory47.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet54 = tomcatEmbeddedServletContainerFactory47.getErrorPages();
        tomcatEmbeddedServletContainerFactory47.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection57 = tomcatEmbeddedServletContainerFactory47.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener58 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray59 = new org.apache.catalina.LifecycleListener[] { lifecycleListener58 };
        tomcatEmbeddedServletContainerFactory47.addContextLifecycleListeners(lifecycleListenerArray59);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory61.setTldSkip("hi!");
        java.lang.String str64 = tomcatEmbeddedServletContainerFactory61.getUriEncoding();
        tomcatEmbeddedServletContainerFactory61.setUriEncoding("hi!");
        java.lang.String str67 = tomcatEmbeddedServletContainerFactory61.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet68 = tomcatEmbeddedServletContainerFactory61.getErrorPages();
        tomcatEmbeddedServletContainerFactory61.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet71 = tomcatEmbeddedServletContainerFactory61.getErrorPages();
        int int72 = tomcatEmbeddedServletContainerFactory61.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str74 = tomcatEmbeddedServletContainerFactory73.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage75 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray76 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage75 };
        tomcatEmbeddedServletContainerFactory73.addErrorPages(errorPageArray76);
        tomcatEmbeddedServletContainerFactory61.addErrorPages(errorPageArray76);
        tomcatEmbeddedServletContainerFactory47.addErrorPages(errorPageArray76);
        tomcatEmbeddedServletContainerFactory42.addErrorPages(errorPageArray76);
        tomcatEmbeddedServletContainerFactory34.addErrorPages(errorPageArray76);
        tomcatEmbeddedServletContainerFactory7.addErrorPages(errorPageArray76);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray76);
        java.io.File file84 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(mimeMappings4);
        org.junit.Assert.assertNotNull(errorPageSet5);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(connectorArray9);
        org.junit.Assert.assertNotNull(valveArray11);
        org.junit.Assert.assertNull(ssl13);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection25);
        org.junit.Assert.assertNotNull(mimeMappings26);
        org.junit.Assert.assertNotNull(lifecycleListenerArray31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-8" + "'", str37, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(mimeMappings46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-8" + "'", str50, "UTF-8");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(errorPageSet54);
        org.junit.Assert.assertNotNull(valveCollection57);
        org.junit.Assert.assertNotNull(lifecycleListenerArray59);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "UTF-8" + "'", str64, "UTF-8");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(errorPageSet68);
        org.junit.Assert.assertNotNull(errorPageSet71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "UTF-8" + "'", str74, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray76);
        org.junit.Assert.assertNull(file84);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer7 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray8 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer7 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray8);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.core.io.ResourceLoader resourceLoader15 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader15);
        java.io.File file17 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file17);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory7.getUriEncoding();
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setTldSkip("hi!");
        boolean boolean18 = tomcatEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        int int19 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory15.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray21 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22, errorPageArray21);
        tomcatEmbeddedServletContainerFactory15.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.io.File file28 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file28);
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.io.File file32 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file32);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(errorPageSet27);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file2 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        org.apache.catalina.Valve[] valveArray10 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory6.addContextValves(valveArray10);
        tomcatEmbeddedServletContainerFactory3.addContextValves(valveArray10);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setUriEncoding("UTF-8");
        tomcatEmbeddedServletContainerFactory14.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int21 = tomcatEmbeddedServletContainerFactory20.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray22 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory20.addAdditionalTomcatConnectors(connectorArray22);
        org.apache.catalina.Valve[] valveArray24 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory20.addContextValves(valveArray24);
        org.springframework.boot.context.embedded.Ssl ssl26 = tomcatEmbeddedServletContainerFactory20.getSsl();
        tomcatEmbeddedServletContainerFactory20.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int30 = tomcatEmbeddedServletContainerFactory29.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray31 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList32 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList32, tomcatContextCustomizerArray31);
        tomcatEmbeddedServletContainerFactory29.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList32);
        java.io.File file35 = null;
        tomcatEmbeddedServletContainerFactory29.setDocumentRoot(file35);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection38 = tomcatEmbeddedServletContainerFactory37.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        tomcatEmbeddedServletContainerFactory29.setMimeMappings(mimeMappings39);
        tomcatEmbeddedServletContainerFactory29.setRegisterDefaultServlet(false);
        org.apache.catalina.LifecycleListener lifecycleListener43 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray44 = new org.apache.catalina.LifecycleListener[] { lifecycleListener43 };
        tomcatEmbeddedServletContainerFactory29.addContextLifecycleListeners(lifecycleListenerArray44);
        tomcatEmbeddedServletContainerFactory20.addContextLifecycleListeners(lifecycleListenerArray44);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory47.setTldSkip("hi!");
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory47.getUriEncoding();
        tomcatEmbeddedServletContainerFactory47.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings53 = tomcatEmbeddedServletContainerFactory47.getMimeMappings();
        boolean boolean54 = tomcatEmbeddedServletContainerFactory47.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setTldSkip("hi!");
        boolean boolean58 = tomcatEmbeddedServletContainerFactory55.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings59 = tomcatEmbeddedServletContainerFactory55.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory60 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory60.setTldSkip("hi!");
        java.lang.String str63 = tomcatEmbeddedServletContainerFactory60.getUriEncoding();
        tomcatEmbeddedServletContainerFactory60.setUriEncoding("hi!");
        java.lang.String str66 = tomcatEmbeddedServletContainerFactory60.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet67 = tomcatEmbeddedServletContainerFactory60.getErrorPages();
        tomcatEmbeddedServletContainerFactory60.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection70 = tomcatEmbeddedServletContainerFactory60.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener71 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray72 = new org.apache.catalina.LifecycleListener[] { lifecycleListener71 };
        tomcatEmbeddedServletContainerFactory60.addContextLifecycleListeners(lifecycleListenerArray72);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory74.setTldSkip("hi!");
        java.lang.String str77 = tomcatEmbeddedServletContainerFactory74.getUriEncoding();
        tomcatEmbeddedServletContainerFactory74.setUriEncoding("hi!");
        java.lang.String str80 = tomcatEmbeddedServletContainerFactory74.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet81 = tomcatEmbeddedServletContainerFactory74.getErrorPages();
        tomcatEmbeddedServletContainerFactory74.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet84 = tomcatEmbeddedServletContainerFactory74.getErrorPages();
        int int85 = tomcatEmbeddedServletContainerFactory74.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory86 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str87 = tomcatEmbeddedServletContainerFactory86.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage88 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray89 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage88 };
        tomcatEmbeddedServletContainerFactory86.addErrorPages(errorPageArray89);
        tomcatEmbeddedServletContainerFactory74.addErrorPages(errorPageArray89);
        tomcatEmbeddedServletContainerFactory60.addErrorPages(errorPageArray89);
        tomcatEmbeddedServletContainerFactory55.addErrorPages(errorPageArray89);
        tomcatEmbeddedServletContainerFactory47.addErrorPages(errorPageArray89);
        tomcatEmbeddedServletContainerFactory20.addErrorPages(errorPageArray89);
        tomcatEmbeddedServletContainerFactory14.addErrorPages(errorPageArray89);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray89);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(file2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(valveArray10);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(connectorArray22);
        org.junit.Assert.assertNotNull(valveArray24);
        org.junit.Assert.assertNull(ssl26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection38);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertNotNull(lifecycleListenerArray44);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-8" + "'", str50, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(mimeMappings59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-8" + "'", str63, "UTF-8");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(errorPageSet67);
        org.junit.Assert.assertNotNull(valveCollection70);
        org.junit.Assert.assertNotNull(lifecycleListenerArray72);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "UTF-8" + "'", str77, "UTF-8");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(errorPageSet81);
        org.junit.Assert.assertNotNull(errorPageSet84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "UTF-8" + "'", str87, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray89);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer7 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray8 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer7 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection11 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray8);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection11);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int10 = tomcatEmbeddedServletContainerFactory9.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray11 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList12 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12, tomcatContextCustomizerArray11);
        tomcatEmbeddedServletContainerFactory9.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList12);
        java.io.File file15 = null;
        tomcatEmbeddedServletContainerFactory9.setDocumentRoot(file15);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection18 = tomcatEmbeddedServletContainerFactory17.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory9.setMimeMappings(mimeMappings19);
        tomcatEmbeddedServletContainerFactory9.setRegisterDefaultServlet(false);
        org.apache.catalina.LifecycleListener lifecycleListener23 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray24 = new org.apache.catalina.LifecycleListener[] { lifecycleListener23 };
        tomcatEmbeddedServletContainerFactory9.addContextLifecycleListeners(lifecycleListenerArray24);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setTldSkip("hi!");
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory27.getUriEncoding();
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings33 = tomcatEmbeddedServletContainerFactory27.getMimeMappings();
        boolean boolean34 = tomcatEmbeddedServletContainerFactory27.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setTldSkip("hi!");
        boolean boolean38 = tomcatEmbeddedServletContainerFactory35.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings39 = tomcatEmbeddedServletContainerFactory35.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setTldSkip("hi!");
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory40.getUriEncoding();
        tomcatEmbeddedServletContainerFactory40.setUriEncoding("hi!");
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory40.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet47 = tomcatEmbeddedServletContainerFactory40.getErrorPages();
        tomcatEmbeddedServletContainerFactory40.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection50 = tomcatEmbeddedServletContainerFactory40.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener51 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray52 = new org.apache.catalina.LifecycleListener[] { lifecycleListener51 };
        tomcatEmbeddedServletContainerFactory40.addContextLifecycleListeners(lifecycleListenerArray52);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setTldSkip("hi!");
        java.lang.String str57 = tomcatEmbeddedServletContainerFactory54.getUriEncoding();
        tomcatEmbeddedServletContainerFactory54.setUriEncoding("hi!");
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory54.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet61 = tomcatEmbeddedServletContainerFactory54.getErrorPages();
        tomcatEmbeddedServletContainerFactory54.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet64 = tomcatEmbeddedServletContainerFactory54.getErrorPages();
        int int65 = tomcatEmbeddedServletContainerFactory54.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str67 = tomcatEmbeddedServletContainerFactory66.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage68 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray69 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage68 };
        tomcatEmbeddedServletContainerFactory66.addErrorPages(errorPageArray69);
        tomcatEmbeddedServletContainerFactory54.addErrorPages(errorPageArray69);
        tomcatEmbeddedServletContainerFactory40.addErrorPages(errorPageArray69);
        tomcatEmbeddedServletContainerFactory35.addErrorPages(errorPageArray69);
        tomcatEmbeddedServletContainerFactory27.addErrorPages(errorPageArray69);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray69);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection77 = tomcatEmbeddedServletContainerFactory76.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings78 = tomcatEmbeddedServletContainerFactory76.getMimeMappings();
        tomcatEmbeddedServletContainerFactory76.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl81 = null;
        tomcatEmbeddedServletContainerFactory76.setSsl(ssl81);
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray83 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory76.addContextLifecycleListeners(lifecycleListenerArray83);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray83);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection18);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertNotNull(lifecycleListenerArray24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-8" + "'", str30, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(mimeMappings39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(errorPageSet47);
        org.junit.Assert.assertNotNull(valveCollection50);
        org.junit.Assert.assertNotNull(lifecycleListenerArray52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "UTF-8" + "'", str57, "UTF-8");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(errorPageSet61);
        org.junit.Assert.assertNotNull(errorPageSet64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "UTF-8" + "'", str67, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray69);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection77);
        org.junit.Assert.assertNotNull(mimeMappings78);
        org.junit.Assert.assertNotNull(lifecycleListenerArray83);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.io.File file8 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.Ssl ssl9 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertNull(ssl9);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.core.io.ResourceLoader resourceLoader5 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader5);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection7 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection7);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.apache.catalina.Valve> valveCollection12 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.lang.Class<?> wildcardClass13 = valveCollection12.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(valveCollection12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) (byte) 100);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.Collection<org.apache.catalina.Valve> valveCollection13 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection14 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertNotNull(valveCollection13);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection14);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.lang.Class<?> wildcardClass3 = mimeMappings2.getClass();
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (-1));
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int4 = tomcatEmbeddedServletContainerFactory3.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray5 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList6 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList6, tomcatContextCustomizerArray5);
        tomcatEmbeddedServletContainerFactory3.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList6);
        java.io.File file9 = null;
        tomcatEmbeddedServletContainerFactory3.setDocumentRoot(file9);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory3.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int13 = tomcatEmbeddedServletContainerFactory12.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray14 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory12.addAdditionalTomcatConnectors(connectorArray14);
        org.apache.catalina.Valve[] valveArray16 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory12.addContextValves(valveArray16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int19 = tomcatEmbeddedServletContainerFactory18.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray20 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory18.addAdditionalTomcatConnectors(connectorArray20);
        tomcatEmbeddedServletContainerFactory12.addAdditionalTomcatConnectors(connectorArray20);
        tomcatEmbeddedServletContainerFactory3.addAdditionalTomcatConnectors(connectorArray20);
        tomcatEmbeddedServletContainerFactory2.addAdditionalTomcatConnectors(connectorArray20);
        tomcatEmbeddedServletContainerFactory2.setProtocol("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader27 = null;
        tomcatEmbeddedServletContainerFactory2.setResourceLoader(resourceLoader27);
        tomcatEmbeddedServletContainerFactory2.setRegisterJspServlet(true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(connectorArray14);
        org.junit.Assert.assertNotNull(valveArray16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(connectorArray20);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader13);
        java.net.InetAddress inetAddress15 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress15);
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection18 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(lifecycleListenerCollection18);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray8 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray8);
        java.io.File file10 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setTldSkip("hi!");
        boolean boolean15 = tomcatEmbeddedServletContainerFactory12.isRegisterDefaultServlet();
        int int16 = tomcatEmbeddedServletContainerFactory12.getSessionTimeout();
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory12.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray18 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet19 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet19, errorPageArray18);
        tomcatEmbeddedServletContainerFactory12.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet19);
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory12.getContextPath();
        tomcatEmbeddedServletContainerFactory12.setTldSkip("");
        org.springframework.boot.context.embedded.Ssl ssl25 = null;
        tomcatEmbeddedServletContainerFactory12.setSsl(ssl25);
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray27 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory12.addContextCustomizers(tomcatContextCustomizerArray27);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = tomcatEmbeddedServletContainerFactory12.getErrorPages();
        org.springframework.core.io.ResourceLoader resourceLoader30 = null;
        tomcatEmbeddedServletContainerFactory12.setResourceLoader(resourceLoader30);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int33 = tomcatEmbeddedServletContainerFactory32.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray34 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory32.addAdditionalTomcatConnectors(connectorArray34);
        java.net.InetAddress inetAddress36 = null;
        tomcatEmbeddedServletContainerFactory32.setAddress(inetAddress36);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setTldSkip("hi!");
        boolean boolean41 = tomcatEmbeddedServletContainerFactory38.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setTldSkip("hi!");
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        tomcatEmbeddedServletContainerFactory42.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setTldSkip("hi!");
        java.lang.String str51 = tomcatEmbeddedServletContainerFactory48.getUriEncoding();
        tomcatEmbeddedServletContainerFactory48.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray54 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory48.addConnectorCustomizers(tomcatConnectorCustomizerArray54);
        tomcatEmbeddedServletContainerFactory42.addConnectorCustomizers(tomcatConnectorCustomizerArray54);
        tomcatEmbeddedServletContainerFactory38.addConnectorCustomizers(tomcatConnectorCustomizerArray54);
        tomcatEmbeddedServletContainerFactory32.addConnectorCustomizers(tomcatConnectorCustomizerArray54);
        tomcatEmbeddedServletContainerFactory12.addConnectorCustomizers(tomcatConnectorCustomizerArray54);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray54);
        org.springframework.boot.context.embedded.Ssl ssl61 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl61);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(lifecycleListenerArray8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-8" + "'", str17, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray27);
        org.junit.Assert.assertNotNull(errorPageSet29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(connectorArray34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-8" + "'", str45, "UTF-8");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "UTF-8" + "'", str51, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray54);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl7 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection9 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int11 = tomcatEmbeddedServletContainerFactory10.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray12 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory10.addAdditionalTomcatConnectors(connectorArray12);
        org.apache.catalina.Valve[] valveArray14 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory10.addContextValves(valveArray14);
        org.springframework.boot.context.embedded.Ssl ssl16 = tomcatEmbeddedServletContainerFactory10.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setTldSkip("hi!");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory10.setMimeMappings(mimeMappings23);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setTldSkip("hi!");
        boolean boolean28 = tomcatEmbeddedServletContainerFactory25.isRegisterDefaultServlet();
        int int29 = tomcatEmbeddedServletContainerFactory25.getSessionTimeout();
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory25.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray31 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32, errorPageArray31);
        tomcatEmbeddedServletContainerFactory25.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32);
        tomcatEmbeddedServletContainerFactory10.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet32);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings37 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(connectorArray12);
        org.junit.Assert.assertNotNull(valveArray14);
        org.junit.Assert.assertNull(ssl16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-8" + "'", str30, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(mimeMappings37);
        org.junit.Assert.assertNotNull(errorPageSet38);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int14 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory13.addAdditionalTomcatConnectors(connectorArray15);
        org.apache.catalina.Valve[] valveArray17 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory13.addContextValves(valveArray17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int20 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray21 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory19.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory13.addAdditionalTomcatConnectors(connectorArray21);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setTldSkip("hi!");
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory24.getUriEncoding();
        tomcatEmbeddedServletContainerFactory24.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setTldSkip("hi!");
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory30.getUriEncoding();
        tomcatEmbeddedServletContainerFactory30.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray36 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory30.addConnectorCustomizers(tomcatConnectorCustomizerArray36);
        tomcatEmbeddedServletContainerFactory24.addConnectorCustomizers(tomcatConnectorCustomizerArray36);
        boolean boolean39 = tomcatEmbeddedServletContainerFactory24.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory40.setTldSkip("hi!");
        boolean boolean43 = tomcatEmbeddedServletContainerFactory40.isRegisterDefaultServlet();
        int int44 = tomcatEmbeddedServletContainerFactory40.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory40.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer47 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray48 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer47 };
        tomcatEmbeddedServletContainerFactory40.addConnectorCustomizers(tomcatConnectorCustomizerArray48);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet50 = tomcatEmbeddedServletContainerFactory40.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection51 = tomcatEmbeddedServletContainerFactory40.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory24.setTomcatContextCustomizers(tomcatContextCustomizerCollection51);
        tomcatEmbeddedServletContainerFactory13.setTomcatContextCustomizers(tomcatContextCustomizerCollection51);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory54.setTldSkip("hi!");
        java.io.File file59 = null;
        tomcatEmbeddedServletContainerFactory54.setDocumentRoot(file59);
        java.util.Collection<org.apache.catalina.Valve> valveCollection61 = tomcatEmbeddedServletContainerFactory54.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory62.setTldSkip("hi!");
        java.lang.String str65 = tomcatEmbeddedServletContainerFactory62.getUriEncoding();
        tomcatEmbeddedServletContainerFactory62.setUriEncoding("hi!");
        java.lang.String str68 = tomcatEmbeddedServletContainerFactory62.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet69 = tomcatEmbeddedServletContainerFactory62.getErrorPages();
        tomcatEmbeddedServletContainerFactory62.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection72 = tomcatEmbeddedServletContainerFactory62.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener73 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray74 = new org.apache.catalina.LifecycleListener[] { lifecycleListener73 };
        tomcatEmbeddedServletContainerFactory62.addContextLifecycleListeners(lifecycleListenerArray74);
        tomcatEmbeddedServletContainerFactory54.addContextLifecycleListeners(lifecycleListenerArray74);
        tomcatEmbeddedServletContainerFactory13.addContextLifecycleListeners(lifecycleListenerArray74);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray74);
        java.lang.Class<?> wildcardClass79 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(valveArray17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(connectorArray21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray48);
        org.junit.Assert.assertNotNull(errorPageSet50);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection51);
        org.junit.Assert.assertNotNull(valveCollection61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "UTF-8" + "'", str65, "UTF-8");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(errorPageSet69);
        org.junit.Assert.assertNotNull(valveCollection72);
        org.junit.Assert.assertNotNull(lifecycleListenerArray74);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet3 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(errorPageSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-8" + "'", str4, "UTF-8");
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        int int11 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList12 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.util.List<org.apache.catalina.connector.Connector> connectorList13 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection14 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(connectorList12);
        org.junit.Assert.assertNotNull(connectorList13);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection14);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings7);
        java.net.InetAddress inetAddress9 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        java.io.File file11 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file11);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setTldSkip("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory13.getUriEncoding();
        boolean boolean17 = tomcatEmbeddedServletContainerFactory13.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setTldSkip("hi!");
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory18.getUriEncoding();
        tomcatEmbeddedServletContainerFactory18.setUriEncoding("hi!");
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory18.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = tomcatEmbeddedServletContainerFactory18.getErrorPages();
        tomcatEmbeddedServletContainerFactory18.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection28 = tomcatEmbeddedServletContainerFactory18.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener29 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray30 = new org.apache.catalina.LifecycleListener[] { lifecycleListener29 };
        tomcatEmbeddedServletContainerFactory18.addContextLifecycleListeners(lifecycleListenerArray30);
        tomcatEmbeddedServletContainerFactory13.addContextLifecycleListeners(lifecycleListenerArray30);
        boolean boolean33 = tomcatEmbeddedServletContainerFactory13.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int35 = tomcatEmbeddedServletContainerFactory34.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray36 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory34.addAdditionalTomcatConnectors(connectorArray36);
        org.apache.catalina.Valve[] valveArray38 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory34.addContextValves(valveArray38);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int41 = tomcatEmbeddedServletContainerFactory40.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray42 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory40.addAdditionalTomcatConnectors(connectorArray42);
        tomcatEmbeddedServletContainerFactory34.addAdditionalTomcatConnectors(connectorArray42);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet45 = tomcatEmbeddedServletContainerFactory34.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection46 = tomcatEmbeddedServletContainerFactory34.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory13.setTomcatContextCustomizers(tomcatContextCustomizerCollection46);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection46);
        boolean boolean49 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(errorPageSet25);
        org.junit.Assert.assertNotNull(valveCollection28);
        org.junit.Assert.assertNotNull(lifecycleListenerArray30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(connectorArray36);
        org.junit.Assert.assertNotNull(valveArray38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(connectorArray42);
        org.junit.Assert.assertNotNull(errorPageSet45);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        int int11 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.apache.catalina.connector.Connector[] connectorArray14 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Connectors must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.lang.Class<?> wildcardClass8 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-8" + "'", str7, "UTF-8");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray6 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int9 = tomcatEmbeddedServletContainerFactory8.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray10 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList11 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList11, tomcatContextCustomizerArray10);
        tomcatEmbeddedServletContainerFactory8.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList11);
        tomcatEmbeddedServletContainerFactory8.setJspServletClassName("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int17 = tomcatEmbeddedServletContainerFactory16.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray18 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray18);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection20 = tomcatEmbeddedServletContainerFactory16.getContextLifecycleListeners();
        org.apache.catalina.connector.Connector[] connectorArray21 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray21);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection25 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.io.File file26 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection27 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.Class<?> wildcardClass28 = lifecycleListenerCollection27.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(connectorArray18);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection20);
        org.junit.Assert.assertNotNull(connectorArray21);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7, errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7);
        java.net.InetAddress inetAddress10 = tomcatEmbeddedServletContainerFactory0.getAddress();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(100);
        java.io.File file13 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        java.io.File file14 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file14);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertNull(file13);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer6 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray7 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer6 };
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray7);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 10);
        java.util.List<org.apache.catalina.connector.Connector> connectorList12 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory13.setTldSkip("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory18.setTldSkip("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setTldSkip("hi!");
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory23.getUriEncoding();
        tomcatEmbeddedServletContainerFactory23.setUriEncoding("hi!");
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory23.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet30 = tomcatEmbeddedServletContainerFactory23.getErrorPages();
        tomcatEmbeddedServletContainerFactory23.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection33 = tomcatEmbeddedServletContainerFactory23.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener34 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray35 = new org.apache.catalina.LifecycleListener[] { lifecycleListener34 };
        tomcatEmbeddedServletContainerFactory23.addContextLifecycleListeners(lifecycleListenerArray35);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setTldSkip("hi!");
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory37.getUriEncoding();
        tomcatEmbeddedServletContainerFactory37.setUriEncoding("hi!");
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory37.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet44 = tomcatEmbeddedServletContainerFactory37.getErrorPages();
        tomcatEmbeddedServletContainerFactory37.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet47 = tomcatEmbeddedServletContainerFactory37.getErrorPages();
        int int48 = tomcatEmbeddedServletContainerFactory37.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory49.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage51 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray52 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage51 };
        tomcatEmbeddedServletContainerFactory49.addErrorPages(errorPageArray52);
        tomcatEmbeddedServletContainerFactory37.addErrorPages(errorPageArray52);
        tomcatEmbeddedServletContainerFactory23.addErrorPages(errorPageArray52);
        tomcatEmbeddedServletContainerFactory18.addErrorPages(errorPageArray52);
        tomcatEmbeddedServletContainerFactory13.addErrorPages(errorPageArray52);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray52);
        int int59 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.Class<?> wildcardClass60 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(connectorList12);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-8" + "'", str26, "UTF-8");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(errorPageSet30);
        org.junit.Assert.assertNotNull(valveCollection33);
        org.junit.Assert.assertNotNull(lifecycleListenerArray35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UTF-8" + "'", str40, "UTF-8");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(errorPageSet44);
        org.junit.Assert.assertNotNull(errorPageSet47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-8" + "'", str50, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.Collection<org.apache.catalina.Valve> valveCollection13 = tomcatEmbeddedServletContainerFactory0.getValves();
        int int14 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setTldSkip("hi!");
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory18.getUriEncoding();
        tomcatEmbeddedServletContainerFactory18.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        tomcatEmbeddedServletContainerFactory15.setMimeMappings(mimeMappings24);
        boolean boolean26 = tomcatEmbeddedServletContainerFactory15.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setTldSkip("hi!");
        boolean boolean30 = tomcatEmbeddedServletContainerFactory27.isRegisterDefaultServlet();
        int int31 = tomcatEmbeddedServletContainerFactory27.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory27.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer34 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray35 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer34 };
        tomcatEmbeddedServletContainerFactory27.addConnectorCustomizers(tomcatConnectorCustomizerArray35);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection37 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory15.setTomcatContextCustomizers(tomcatContextCustomizerCollection37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory39.setTldSkip("hi!");
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory39.getUriEncoding();
        tomcatEmbeddedServletContainerFactory39.setUriEncoding("hi!");
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory39.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet46 = tomcatEmbeddedServletContainerFactory39.getErrorPages();
        tomcatEmbeddedServletContainerFactory39.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet49 = tomcatEmbeddedServletContainerFactory39.getErrorPages();
        int int50 = tomcatEmbeddedServletContainerFactory39.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory51.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage53 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray54 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage53 };
        tomcatEmbeddedServletContainerFactory51.addErrorPages(errorPageArray54);
        tomcatEmbeddedServletContainerFactory39.addErrorPages(errorPageArray54);
        tomcatEmbeddedServletContainerFactory15.addErrorPages(errorPageArray54);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray54);
        java.util.List<org.apache.catalina.connector.Connector> connectorList59 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection60 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.util.Collection<org.apache.catalina.Valve> valveCollection61 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertNotNull(valveCollection13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8080 + "'", int14 == 8080);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray35);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-8" + "'", str42, "UTF-8");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(errorPageSet46);
        org.junit.Assert.assertNotNull(errorPageSet49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "UTF-8" + "'", str52, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray54);
        org.junit.Assert.assertNotNull(connectorList59);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection60);
        org.junit.Assert.assertNotNull(valveCollection61);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory7.getUriEncoding();
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setTldSkip("hi!");
        boolean boolean18 = tomcatEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        int int19 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory15.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray21 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22, errorPageArray21);
        tomcatEmbeddedServletContainerFactory15.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings27 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.apache.catalina.connector.Connector[] connectorArray28 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Connectors must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(mimeMappings27);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener11 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray12 = new org.apache.catalina.LifecycleListener[] { lifecycleListener11 };
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setTldSkip("hi!");
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory14.getUriEncoding();
        tomcatEmbeddedServletContainerFactory14.setUriEncoding("hi!");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory14.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        tomcatEmbeddedServletContainerFactory14.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        int int25 = tomcatEmbeddedServletContainerFactory14.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory26.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage28 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray29 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage28 };
        tomcatEmbeddedServletContainerFactory26.addErrorPages(errorPageArray29);
        tomcatEmbeddedServletContainerFactory14.addErrorPages(errorPageArray29);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray29);
        java.io.File file33 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file33);
        java.io.File file35 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertNotNull(lifecycleListenerArray12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-8" + "'", str17, "UTF-8");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-8" + "'", str27, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray29);
        org.junit.Assert.assertNull(file35);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int5 = tomcatEmbeddedServletContainerFactory4.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray6 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory4.addAdditionalTomcatConnectors(connectorArray6);
        org.apache.catalina.Valve[] valveArray8 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory4.addContextValves(valveArray8);
        org.springframework.boot.context.embedded.Ssl ssl10 = tomcatEmbeddedServletContainerFactory4.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl11 = tomcatEmbeddedServletContainerFactory4.getSsl();
        tomcatEmbeddedServletContainerFactory4.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setTldSkip("hi!");
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory14.getUriEncoding();
        tomcatEmbeddedServletContainerFactory14.setUriEncoding("hi!");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory14.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = tomcatEmbeddedServletContainerFactory14.getErrorPages();
        tomcatEmbeddedServletContainerFactory14.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection24 = tomcatEmbeddedServletContainerFactory14.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener25 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray26 = new org.apache.catalina.LifecycleListener[] { lifecycleListener25 };
        tomcatEmbeddedServletContainerFactory14.addContextLifecycleListeners(lifecycleListenerArray26);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setTldSkip("hi!");
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory28.getUriEncoding();
        tomcatEmbeddedServletContainerFactory28.setUriEncoding("hi!");
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory28.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet35 = tomcatEmbeddedServletContainerFactory28.getErrorPages();
        tomcatEmbeddedServletContainerFactory28.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet38 = tomcatEmbeddedServletContainerFactory28.getErrorPages();
        int int39 = tomcatEmbeddedServletContainerFactory28.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str41 = tomcatEmbeddedServletContainerFactory40.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage42 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray43 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage42 };
        tomcatEmbeddedServletContainerFactory40.addErrorPages(errorPageArray43);
        tomcatEmbeddedServletContainerFactory28.addErrorPages(errorPageArray43);
        tomcatEmbeddedServletContainerFactory14.addErrorPages(errorPageArray43);
        tomcatEmbeddedServletContainerFactory4.addErrorPages(errorPageArray43);
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray48 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory4.addContextLifecycleListeners(lifecycleListenerArray48);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray48);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(connectorArray6);
        org.junit.Assert.assertNotNull(valveArray8);
        org.junit.Assert.assertNull(ssl10);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-8" + "'", str17, "UTF-8");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertNotNull(valveCollection24);
        org.junit.Assert.assertNotNull(lifecycleListenerArray26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-8" + "'", str31, "UTF-8");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(errorPageSet35);
        org.junit.Assert.assertNotNull(errorPageSet38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-8" + "'", str41, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray43);
        org.junit.Assert.assertNotNull(lifecycleListenerArray48);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        java.net.InetAddress inetAddress4 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("hi!");
        boolean boolean9 = tomcatEmbeddedServletContainerFactory6.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory16.getUriEncoding();
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray22 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory16.addConnectorCustomizers(tomcatConnectorCustomizerArray22);
        tomcatEmbeddedServletContainerFactory10.addConnectorCustomizers(tomcatConnectorCustomizerArray22);
        tomcatEmbeddedServletContainerFactory6.addConnectorCustomizers(tomcatConnectorCustomizerArray22);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray22);
        boolean boolean27 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        int int11 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        java.net.InetAddress inetAddress14 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setTldSkip("hi!");
        boolean boolean18 = tomcatEmbeddedServletContainerFactory15.isRegisterJspServlet();
        java.io.File file19 = tomcatEmbeddedServletContainerFactory15.getDocumentRoot();
        tomcatEmbeddedServletContainerFactory15.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer25 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray26 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer25 };
        tomcatEmbeddedServletContainerFactory22.addInitializers(servletContextInitializerArray26);
        tomcatEmbeddedServletContainerFactory22.setContextPath("");
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory22.getContextPath();
        tomcatEmbeddedServletContainerFactory22.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory33.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory33.setTldSkip("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setTldSkip("hi!");
        java.lang.String str41 = tomcatEmbeddedServletContainerFactory38.getUriEncoding();
        tomcatEmbeddedServletContainerFactory38.setUriEncoding("hi!");
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory38.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet45 = tomcatEmbeddedServletContainerFactory38.getErrorPages();
        tomcatEmbeddedServletContainerFactory38.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection48 = tomcatEmbeddedServletContainerFactory38.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener49 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray50 = new org.apache.catalina.LifecycleListener[] { lifecycleListener49 };
        tomcatEmbeddedServletContainerFactory38.addContextLifecycleListeners(lifecycleListenerArray50);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setTldSkip("hi!");
        java.lang.String str55 = tomcatEmbeddedServletContainerFactory52.getUriEncoding();
        tomcatEmbeddedServletContainerFactory52.setUriEncoding("hi!");
        java.lang.String str58 = tomcatEmbeddedServletContainerFactory52.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet59 = tomcatEmbeddedServletContainerFactory52.getErrorPages();
        tomcatEmbeddedServletContainerFactory52.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet62 = tomcatEmbeddedServletContainerFactory52.getErrorPages();
        int int63 = tomcatEmbeddedServletContainerFactory52.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str65 = tomcatEmbeddedServletContainerFactory64.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage66 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray67 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage66 };
        tomcatEmbeddedServletContainerFactory64.addErrorPages(errorPageArray67);
        tomcatEmbeddedServletContainerFactory52.addErrorPages(errorPageArray67);
        tomcatEmbeddedServletContainerFactory38.addErrorPages(errorPageArray67);
        tomcatEmbeddedServletContainerFactory33.addErrorPages(errorPageArray67);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory72.setTldSkip("hi!");
        java.lang.String str75 = tomcatEmbeddedServletContainerFactory72.getUriEncoding();
        tomcatEmbeddedServletContainerFactory72.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray78 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory72.addConnectorCustomizers(tomcatConnectorCustomizerArray78);
        tomcatEmbeddedServletContainerFactory33.addConnectorCustomizers(tomcatConnectorCustomizerArray78);
        tomcatEmbeddedServletContainerFactory22.addConnectorCustomizers(tomcatConnectorCustomizerArray78);
        tomcatEmbeddedServletContainerFactory15.addConnectorCustomizers(tomcatConnectorCustomizerArray78);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray78);
        java.lang.Class<?> wildcardClass84 = tomcatConnectorCustomizerArray78.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(inetAddress14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(file19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-8" + "'", str41, "UTF-8");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(errorPageSet45);
        org.junit.Assert.assertNotNull(valveCollection48);
        org.junit.Assert.assertNotNull(lifecycleListenerArray50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "UTF-8" + "'", str55, "UTF-8");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(errorPageSet59);
        org.junit.Assert.assertNotNull(errorPageSet62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "UTF-8" + "'", str65, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray67);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "UTF-8" + "'", str75, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray78);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.io.File file13 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory16.getUriEncoding();
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory16.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        tomcatEmbeddedServletContainerFactory16.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        int int27 = tomcatEmbeddedServletContainerFactory16.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory28.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage30 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray31 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage30 };
        tomcatEmbeddedServletContainerFactory28.addErrorPages(errorPageArray31);
        tomcatEmbeddedServletContainerFactory16.addErrorPages(errorPageArray31);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray31);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection35 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.Ssl ssl36 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl36);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(errorPageSet26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-8" + "'", str29, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray31);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection35);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory11.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection12);
        java.io.File file14 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file14);
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory11.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection12);
        java.io.File file14 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file14);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory16.getUriEncoding();
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory16.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        tomcatEmbeddedServletContainerFactory16.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection26 = tomcatEmbeddedServletContainerFactory16.getValves();
        java.net.InetAddress inetAddress27 = null;
        tomcatEmbeddedServletContainerFactory16.setAddress(inetAddress27);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection29 = tomcatEmbeddedServletContainerFactory16.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection31 = tomcatEmbeddedServletContainerFactory30.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory30.getMimeMappings();
        tomcatEmbeddedServletContainerFactory30.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl35 = null;
        tomcatEmbeddedServletContainerFactory30.setSsl(ssl35);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int38 = tomcatEmbeddedServletContainerFactory37.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray39 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList40 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList40, tomcatContextCustomizerArray39);
        tomcatEmbeddedServletContainerFactory37.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList40);
        tomcatEmbeddedServletContainerFactory37.setProtocol("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray45 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory37.addContextLifecycleListeners(lifecycleListenerArray45);
        tomcatEmbeddedServletContainerFactory30.addContextLifecycleListeners(lifecycleListenerArray45);
        tomcatEmbeddedServletContainerFactory16.addContextLifecycleListeners(lifecycleListenerArray45);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray45);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        int int52 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int54 = tomcatEmbeddedServletContainerFactory53.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray55 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory53.addAdditionalTomcatConnectors(connectorArray55);
        tomcatEmbeddedServletContainerFactory53.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer59 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray60 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer59 };
        tomcatEmbeddedServletContainerFactory53.addContextCustomizers(tomcatContextCustomizerArray60);
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory53.getUriEncoding();
        int int63 = tomcatEmbeddedServletContainerFactory53.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory64 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int65 = tomcatEmbeddedServletContainerFactory64.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray66 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList67 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList67, tomcatContextCustomizerArray66);
        tomcatEmbeddedServletContainerFactory64.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList67);
        tomcatEmbeddedServletContainerFactory64.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory72.setTldSkip("hi!");
        boolean boolean75 = tomcatEmbeddedServletContainerFactory72.isRegisterDefaultServlet();
        int int76 = tomcatEmbeddedServletContainerFactory72.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory72.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer79 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray80 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer79 };
        tomcatEmbeddedServletContainerFactory72.addConnectorCustomizers(tomcatConnectorCustomizerArray80);
        org.apache.catalina.connector.Connector connector82 = null;
        org.apache.catalina.connector.Connector[] connectorArray83 = new org.apache.catalina.connector.Connector[] { connector82 };
        tomcatEmbeddedServletContainerFactory72.addAdditionalTomcatConnectors(connectorArray83);
        tomcatEmbeddedServletContainerFactory64.addAdditionalTomcatConnectors(connectorArray83);
        tomcatEmbeddedServletContainerFactory53.addAdditionalTomcatConnectors(connectorArray83);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray83);
        java.util.Collection<org.apache.catalina.Valve> valveCollection88 = tomcatEmbeddedServletContainerFactory0.getValves();
        int int89 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        boolean boolean90 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(valveCollection26);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection29);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection31);
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(lifecycleListenerArray45);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(connectorArray55);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "UTF-8" + "'", str62, "UTF-8");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 8080 + "'", int63 == 8080);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray80);
        org.junit.Assert.assertNotNull(connectorArray83);
        org.junit.Assert.assertNotNull(valveCollection88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection7 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection7);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer7 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray8 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer7 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        java.net.InetAddress inetAddress13 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setTldSkip("hi!");
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory15.getUriEncoding();
        tomcatEmbeddedServletContainerFactory15.setUriEncoding("hi!");
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory15.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = tomcatEmbeddedServletContainerFactory15.getErrorPages();
        tomcatEmbeddedServletContainerFactory15.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = tomcatEmbeddedServletContainerFactory15.getErrorPages();
        int int26 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory15.setJspServletClassName("");
        java.net.InetAddress inetAddress29 = tomcatEmbeddedServletContainerFactory15.getAddress();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setTldSkip("hi!");
        boolean boolean33 = tomcatEmbeddedServletContainerFactory30.isRegisterJspServlet();
        java.io.File file34 = tomcatEmbeddedServletContainerFactory30.getDocumentRoot();
        tomcatEmbeddedServletContainerFactory30.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer40 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray41 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer40 };
        tomcatEmbeddedServletContainerFactory37.addInitializers(servletContextInitializerArray41);
        tomcatEmbeddedServletContainerFactory37.setContextPath("");
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory37.getContextPath();
        tomcatEmbeddedServletContainerFactory37.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory48 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory48.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory48.setTldSkip("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory53.setTldSkip("hi!");
        java.lang.String str56 = tomcatEmbeddedServletContainerFactory53.getUriEncoding();
        tomcatEmbeddedServletContainerFactory53.setUriEncoding("hi!");
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory53.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet60 = tomcatEmbeddedServletContainerFactory53.getErrorPages();
        tomcatEmbeddedServletContainerFactory53.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection63 = tomcatEmbeddedServletContainerFactory53.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener64 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray65 = new org.apache.catalina.LifecycleListener[] { lifecycleListener64 };
        tomcatEmbeddedServletContainerFactory53.addContextLifecycleListeners(lifecycleListenerArray65);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory67.setTldSkip("hi!");
        java.lang.String str70 = tomcatEmbeddedServletContainerFactory67.getUriEncoding();
        tomcatEmbeddedServletContainerFactory67.setUriEncoding("hi!");
        java.lang.String str73 = tomcatEmbeddedServletContainerFactory67.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet74 = tomcatEmbeddedServletContainerFactory67.getErrorPages();
        tomcatEmbeddedServletContainerFactory67.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet77 = tomcatEmbeddedServletContainerFactory67.getErrorPages();
        int int78 = tomcatEmbeddedServletContainerFactory67.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory79 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str80 = tomcatEmbeddedServletContainerFactory79.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage81 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray82 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage81 };
        tomcatEmbeddedServletContainerFactory79.addErrorPages(errorPageArray82);
        tomcatEmbeddedServletContainerFactory67.addErrorPages(errorPageArray82);
        tomcatEmbeddedServletContainerFactory53.addErrorPages(errorPageArray82);
        tomcatEmbeddedServletContainerFactory48.addErrorPages(errorPageArray82);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory87 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory87.setTldSkip("hi!");
        java.lang.String str90 = tomcatEmbeddedServletContainerFactory87.getUriEncoding();
        tomcatEmbeddedServletContainerFactory87.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray93 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory87.addConnectorCustomizers(tomcatConnectorCustomizerArray93);
        tomcatEmbeddedServletContainerFactory48.addConnectorCustomizers(tomcatConnectorCustomizerArray93);
        tomcatEmbeddedServletContainerFactory37.addConnectorCustomizers(tomcatConnectorCustomizerArray93);
        tomcatEmbeddedServletContainerFactory30.addConnectorCustomizers(tomcatConnectorCustomizerArray93);
        tomcatEmbeddedServletContainerFactory15.addConnectorCustomizers(tomcatConnectorCustomizerArray93);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray93);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray8);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(errorPageSet22);
        org.junit.Assert.assertNotNull(errorPageSet25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(inetAddress29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(file34);
        org.junit.Assert.assertNotNull(servletContextInitializerArray41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "UTF-8" + "'", str56, "UTF-8");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(errorPageSet60);
        org.junit.Assert.assertNotNull(valveCollection63);
        org.junit.Assert.assertNotNull(lifecycleListenerArray65);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "UTF-8" + "'", str70, "UTF-8");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(errorPageSet74);
        org.junit.Assert.assertNotNull(errorPageSet77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "UTF-8" + "'", str80, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray82);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "UTF-8" + "'", str90, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray93);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int6 = tomcatEmbeddedServletContainerFactory5.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory5.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory5.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer13 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray14 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer13 };
        tomcatEmbeddedServletContainerFactory10.addInitializers(servletContextInitializerArray14);
        tomcatEmbeddedServletContainerFactory5.addInitializers(servletContextInitializerArray14);
        tomcatEmbeddedServletContainerFactory3.addInitializers(servletContextInitializerArray14);
        tomcatEmbeddedServletContainerFactory3.setTldSkip("");
        org.springframework.core.io.ResourceLoader resourceLoader20 = null;
        tomcatEmbeddedServletContainerFactory3.setResourceLoader(resourceLoader20);
        int int22 = tomcatEmbeddedServletContainerFactory3.getSessionTimeout();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = tomcatEmbeddedServletContainerFactory3.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet23);
        java.lang.Class<?> wildcardClass25 = errorPageSet23.getClass();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-8" + "'", str4, "UTF-8");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertNotNull(servletContextInitializerArray14);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory7.getUriEncoding();
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.io.File file16 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file16);
        java.io.File file18 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file18);
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.io.File file5 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file5);
        java.util.Collection<org.apache.catalina.Valve> valveCollection7 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory8.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage10 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray11 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage10 };
        tomcatEmbeddedServletContainerFactory8.addErrorPages(errorPageArray11);
        boolean boolean13 = tomcatEmbeddedServletContainerFactory8.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setTldSkip("hi!");
        boolean boolean17 = tomcatEmbeddedServletContainerFactory14.isRegisterDefaultServlet();
        int int18 = tomcatEmbeddedServletContainerFactory14.getSessionTimeout();
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory14.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray20 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21, errorPageArray20);
        tomcatEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21);
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory14.getContextPath();
        tomcatEmbeddedServletContainerFactory14.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int28 = tomcatEmbeddedServletContainerFactory27.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int30 = tomcatEmbeddedServletContainerFactory29.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray31 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory29.addAdditionalTomcatConnectors(connectorArray31);
        org.apache.catalina.Valve[] valveArray33 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory29.addContextValves(valveArray33);
        tomcatEmbeddedServletContainerFactory27.addContextValves(valveArray33);
        tomcatEmbeddedServletContainerFactory14.addContextValves(valveArray33);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int38 = tomcatEmbeddedServletContainerFactory37.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray39 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory37.addAdditionalTomcatConnectors(connectorArray39);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection41 = tomcatEmbeddedServletContainerFactory37.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int43 = tomcatEmbeddedServletContainerFactory42.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int45 = tomcatEmbeddedServletContainerFactory44.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray46 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory44.addAdditionalTomcatConnectors(connectorArray46);
        org.apache.catalina.Valve[] valveArray48 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory44.addContextValves(valveArray48);
        tomcatEmbeddedServletContainerFactory42.addContextValves(valveArray48);
        tomcatEmbeddedServletContainerFactory37.addContextValves(valveArray48);
        tomcatEmbeddedServletContainerFactory14.addContextValves(valveArray48);
        tomcatEmbeddedServletContainerFactory8.addContextValves(valveArray48);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection54 = tomcatEmbeddedServletContainerFactory8.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection54);
        java.net.InetAddress inetAddress56 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.junit.Assert.assertNotNull(valveCollection7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(connectorArray31);
        org.junit.Assert.assertNotNull(valveArray33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(connectorArray39);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(connectorArray46);
        org.junit.Assert.assertNotNull(valveArray48);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection54);
        org.junit.Assert.assertNull(inetAddress56);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7, errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.Ssl ssl13 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setTldSkip("hi!");
        boolean boolean18 = tomcatEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        int int19 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory15.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray21 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22, errorPageArray21);
        tomcatEmbeddedServletContainerFactory15.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory15.getContextPath();
        tomcatEmbeddedServletContainerFactory15.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int29 = tomcatEmbeddedServletContainerFactory28.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int31 = tomcatEmbeddedServletContainerFactory30.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray32 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory30.addAdditionalTomcatConnectors(connectorArray32);
        org.apache.catalina.Valve[] valveArray34 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory30.addContextValves(valveArray34);
        tomcatEmbeddedServletContainerFactory28.addContextValves(valveArray34);
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray34);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int39 = tomcatEmbeddedServletContainerFactory38.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray40 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory38.addAdditionalTomcatConnectors(connectorArray40);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection42 = tomcatEmbeddedServletContainerFactory38.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int44 = tomcatEmbeddedServletContainerFactory43.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int46 = tomcatEmbeddedServletContainerFactory45.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray47 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory45.addAdditionalTomcatConnectors(connectorArray47);
        org.apache.catalina.Valve[] valveArray49 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory45.addContextValves(valveArray49);
        tomcatEmbeddedServletContainerFactory43.addContextValves(valveArray49);
        tomcatEmbeddedServletContainerFactory38.addContextValves(valveArray49);
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray49);
        java.io.File file54 = null;
        tomcatEmbeddedServletContainerFactory15.setDocumentRoot(file54);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int57 = tomcatEmbeddedServletContainerFactory56.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray58 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory56.addAdditionalTomcatConnectors(connectorArray58);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection60 = tomcatEmbeddedServletContainerFactory56.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int62 = tomcatEmbeddedServletContainerFactory61.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int64 = tomcatEmbeddedServletContainerFactory63.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray65 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory63.addAdditionalTomcatConnectors(connectorArray65);
        org.apache.catalina.Valve[] valveArray67 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory63.addContextValves(valveArray67);
        tomcatEmbeddedServletContainerFactory61.addContextValves(valveArray67);
        tomcatEmbeddedServletContainerFactory56.addContextValves(valveArray67);
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray67);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray67);
        org.springframework.boot.context.embedded.Ssl ssl73 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl73);
        java.util.concurrent.TimeUnit timeUnit76 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 100, timeUnit76);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(connectorArray32);
        org.junit.Assert.assertNotNull(valveArray34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(connectorArray40);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(connectorArray47);
        org.junit.Assert.assertNotNull(valveArray49);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(connectorArray58);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(connectorArray65);
        org.junit.Assert.assertNotNull(valveArray67);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener11 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray12 = new org.apache.catalina.LifecycleListener[] { lifecycleListener11 };
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray12);
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        boolean boolean19 = tomcatEmbeddedServletContainerFactory16.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings20 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setTldSkip("hi!");
        java.lang.String str24 = tomcatEmbeddedServletContainerFactory21.getUriEncoding();
        tomcatEmbeddedServletContainerFactory21.setUriEncoding("hi!");
        java.lang.String str27 = tomcatEmbeddedServletContainerFactory21.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet28 = tomcatEmbeddedServletContainerFactory21.getErrorPages();
        tomcatEmbeddedServletContainerFactory21.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection31 = tomcatEmbeddedServletContainerFactory21.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener32 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray33 = new org.apache.catalina.LifecycleListener[] { lifecycleListener32 };
        tomcatEmbeddedServletContainerFactory21.addContextLifecycleListeners(lifecycleListenerArray33);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory35.setTldSkip("hi!");
        java.lang.String str38 = tomcatEmbeddedServletContainerFactory35.getUriEncoding();
        tomcatEmbeddedServletContainerFactory35.setUriEncoding("hi!");
        java.lang.String str41 = tomcatEmbeddedServletContainerFactory35.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet42 = tomcatEmbeddedServletContainerFactory35.getErrorPages();
        tomcatEmbeddedServletContainerFactory35.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet45 = tomcatEmbeddedServletContainerFactory35.getErrorPages();
        int int46 = tomcatEmbeddedServletContainerFactory35.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory47.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage49 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray50 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage49 };
        tomcatEmbeddedServletContainerFactory47.addErrorPages(errorPageArray50);
        tomcatEmbeddedServletContainerFactory35.addErrorPages(errorPageArray50);
        tomcatEmbeddedServletContainerFactory21.addErrorPages(errorPageArray50);
        tomcatEmbeddedServletContainerFactory16.addErrorPages(errorPageArray50);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray50);
        org.springframework.boot.context.embedded.Ssl ssl56 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl56);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertNotNull(lifecycleListenerArray12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(mimeMappings20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-8" + "'", str24, "UTF-8");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(errorPageSet28);
        org.junit.Assert.assertNotNull(valveCollection31);
        org.junit.Assert.assertNotNull(lifecycleListenerArray33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-8" + "'", str38, "UTF-8");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(errorPageSet42);
        org.junit.Assert.assertNotNull(errorPageSet45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-8" + "'", str48, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray50);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory4 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int5 = tomcatEmbeddedServletContainerFactory4.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray6 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList7 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList7, tomcatContextCustomizerArray6);
        tomcatEmbeddedServletContainerFactory4.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList7);
        java.io.File file10 = null;
        tomcatEmbeddedServletContainerFactory4.setDocumentRoot(file10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection13 = tomcatEmbeddedServletContainerFactory12.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        tomcatEmbeddedServletContainerFactory4.setMimeMappings(mimeMappings14);
        tomcatEmbeddedServletContainerFactory4.setRegisterDefaultServlet(false);
        org.apache.catalina.LifecycleListener lifecycleListener18 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray19 = new org.apache.catalina.LifecycleListener[] { lifecycleListener18 };
        tomcatEmbeddedServletContainerFactory4.addContextLifecycleListeners(lifecycleListenerArray19);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray19);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setTldSkip("hi!");
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory22.getUriEncoding();
        tomcatEmbeddedServletContainerFactory22.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setTldSkip("hi!");
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory28.getUriEncoding();
        tomcatEmbeddedServletContainerFactory28.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray34 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory28.addConnectorCustomizers(tomcatConnectorCustomizerArray34);
        tomcatEmbeddedServletContainerFactory22.addConnectorCustomizers(tomcatConnectorCustomizerArray34);
        boolean boolean37 = tomcatEmbeddedServletContainerFactory22.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setTldSkip("hi!");
        boolean boolean41 = tomcatEmbeddedServletContainerFactory38.isRegisterDefaultServlet();
        int int42 = tomcatEmbeddedServletContainerFactory38.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory38.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer45 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray46 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer45 };
        tomcatEmbeddedServletContainerFactory38.addConnectorCustomizers(tomcatConnectorCustomizerArray46);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = tomcatEmbeddedServletContainerFactory38.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection49 = tomcatEmbeddedServletContainerFactory38.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory22.setTomcatContextCustomizers(tomcatContextCustomizerCollection49);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection49);
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection13);
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(lifecycleListenerArray19);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-8" + "'", str31, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray46);
        org.junit.Assert.assertNotNull(errorPageSet48);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection49);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        java.io.File file6 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file6);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection8 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.net.InetAddress inetAddress9 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        int int11 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ErrorPages must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8080 + "'", int11 == 8080);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory5.getUriEncoding();
        tomcatEmbeddedServletContainerFactory5.setUriEncoding("hi!");
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory5.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory5.getErrorPages();
        tomcatEmbeddedServletContainerFactory5.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory5.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener16 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray17 = new org.apache.catalina.LifecycleListener[] { lifecycleListener16 };
        tomcatEmbeddedServletContainerFactory5.addContextLifecycleListeners(lifecycleListenerArray17);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray17);
        boolean boolean20 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int22 = tomcatEmbeddedServletContainerFactory21.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray23 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory21.addAdditionalTomcatConnectors(connectorArray23);
        org.apache.catalina.Valve[] valveArray25 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory21.addContextValves(valveArray25);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int28 = tomcatEmbeddedServletContainerFactory27.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray29 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory27.addAdditionalTomcatConnectors(connectorArray29);
        tomcatEmbeddedServletContainerFactory21.addAdditionalTomcatConnectors(connectorArray29);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = tomcatEmbeddedServletContainerFactory21.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection33 = tomcatEmbeddedServletContainerFactory21.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection33);
        org.springframework.core.io.ResourceLoader resourceLoader35 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader35);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 100);
        java.util.concurrent.TimeUnit timeUnit40 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(10, timeUnit40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNotNull(lifecycleListenerArray17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(connectorArray23);
        org.junit.Assert.assertNotNull(valveArray25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(connectorArray29);
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection33);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory11.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection12);
        java.io.File file14 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file14);
        java.net.InetAddress inetAddress16 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress16);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection18 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        java.util.concurrent.TimeUnit timeUnit22 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0, timeUnit22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection18);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        org.springframework.boot.context.embedded.Ssl ssl3 = tomcatEmbeddedServletContainerFactory0.getSsl();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection4 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        org.apache.catalina.Valve[] valveArray10 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory6.addContextValves(valveArray10);
        org.springframework.boot.context.embedded.Ssl ssl12 = tomcatEmbeddedServletContainerFactory6.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setTldSkip("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory13.getUriEncoding();
        tomcatEmbeddedServletContainerFactory13.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory13.getMimeMappings();
        tomcatEmbeddedServletContainerFactory6.setMimeMappings(mimeMappings19);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory21.setTldSkip("hi!");
        boolean boolean24 = tomcatEmbeddedServletContainerFactory21.isRegisterDefaultServlet();
        int int25 = tomcatEmbeddedServletContainerFactory21.getSessionTimeout();
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory21.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray27 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet28 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet28, errorPageArray27);
        tomcatEmbeddedServletContainerFactory21.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet28);
        tomcatEmbeddedServletContainerFactory6.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet28);
        tomcatEmbeddedServletContainerFactory6.setContextPath("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((-1));
        int int36 = tomcatEmbeddedServletContainerFactory35.getPort();
        org.springframework.boot.context.embedded.Ssl ssl37 = null;
        tomcatEmbeddedServletContainerFactory35.setSsl(ssl37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int40 = tomcatEmbeddedServletContainerFactory39.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray41 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory39.addAdditionalTomcatConnectors(connectorArray41);
        tomcatEmbeddedServletContainerFactory35.addAdditionalTomcatConnectors(connectorArray41);
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray41);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str46 = tomcatEmbeddedServletContainerFactory45.getUriEncoding();
        tomcatEmbeddedServletContainerFactory45.setSessionTimeout((int) (short) 1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection49 = tomcatEmbeddedServletContainerFactory45.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory50.setTldSkip("hi!");
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory50.getUriEncoding();
        boolean boolean54 = tomcatEmbeddedServletContainerFactory50.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setTldSkip("hi!");
        java.lang.String str58 = tomcatEmbeddedServletContainerFactory55.getUriEncoding();
        tomcatEmbeddedServletContainerFactory55.setUriEncoding("hi!");
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory55.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet62 = tomcatEmbeddedServletContainerFactory55.getErrorPages();
        tomcatEmbeddedServletContainerFactory55.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection65 = tomcatEmbeddedServletContainerFactory55.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener66 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray67 = new org.apache.catalina.LifecycleListener[] { lifecycleListener66 };
        tomcatEmbeddedServletContainerFactory55.addContextLifecycleListeners(lifecycleListenerArray67);
        tomcatEmbeddedServletContainerFactory50.addContextLifecycleListeners(lifecycleListenerArray67);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int71 = tomcatEmbeddedServletContainerFactory70.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList72 = tomcatEmbeddedServletContainerFactory70.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory70.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory75.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer78 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray79 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer78 };
        tomcatEmbeddedServletContainerFactory75.addInitializers(servletContextInitializerArray79);
        tomcatEmbeddedServletContainerFactory70.addInitializers(servletContextInitializerArray79);
        tomcatEmbeddedServletContainerFactory70.setSessionTimeout((int) '4');
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray84 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory70.addContextCustomizers(tomcatContextCustomizerArray84);
        tomcatEmbeddedServletContainerFactory50.addContextCustomizers(tomcatContextCustomizerArray84);
        tomcatEmbeddedServletContainerFactory45.addContextCustomizers(tomcatContextCustomizerArray84);
        tomcatEmbeddedServletContainerFactory6.addContextCustomizers(tomcatContextCustomizerArray84);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray84);
        org.junit.Assert.assertNull(ssl3);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(valveArray10);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-8" + "'", str26, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(connectorArray41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "UTF-8" + "'", str46, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-8" + "'", str53, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "UTF-8" + "'", str58, "UTF-8");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(errorPageSet62);
        org.junit.Assert.assertNotNull(valveCollection65);
        org.junit.Assert.assertNotNull(lifecycleListenerArray67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(connectorList72);
        org.junit.Assert.assertNotNull(servletContextInitializerArray79);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray84);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection9 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setTldSkip("hi!");
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory11.getUriEncoding();
        boolean boolean15 = tomcatEmbeddedServletContainerFactory11.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection17 = tomcatEmbeddedServletContainerFactory16.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings18);
        tomcatEmbeddedServletContainerFactory11.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setTldSkip("hi!");
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory22.getUriEncoding();
        tomcatEmbeddedServletContainerFactory22.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setTldSkip("hi!");
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory28.getUriEncoding();
        tomcatEmbeddedServletContainerFactory28.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray34 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory28.addConnectorCustomizers(tomcatConnectorCustomizerArray34);
        tomcatEmbeddedServletContainerFactory22.addConnectorCustomizers(tomcatConnectorCustomizerArray34);
        boolean boolean37 = tomcatEmbeddedServletContainerFactory22.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setTldSkip("hi!");
        boolean boolean41 = tomcatEmbeddedServletContainerFactory38.isRegisterDefaultServlet();
        int int42 = tomcatEmbeddedServletContainerFactory38.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory38.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer45 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray46 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer45 };
        tomcatEmbeddedServletContainerFactory38.addConnectorCustomizers(tomcatConnectorCustomizerArray46);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = tomcatEmbeddedServletContainerFactory38.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection49 = tomcatEmbeddedServletContainerFactory38.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory22.setTomcatContextCustomizers(tomcatContextCustomizerCollection49);
        tomcatEmbeddedServletContainerFactory11.setTomcatContextCustomizers(tomcatContextCustomizerCollection49);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int53 = tomcatEmbeddedServletContainerFactory52.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray54 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory52.addAdditionalTomcatConnectors(connectorArray54);
        tomcatEmbeddedServletContainerFactory52.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer58 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray59 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer58 };
        tomcatEmbeddedServletContainerFactory52.addContextCustomizers(tomcatContextCustomizerArray59);
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory52.getUriEncoding();
        int int62 = tomcatEmbeddedServletContainerFactory52.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory63 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int64 = tomcatEmbeddedServletContainerFactory63.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray65 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList66 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList66, tomcatContextCustomizerArray65);
        tomcatEmbeddedServletContainerFactory63.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList66);
        tomcatEmbeddedServletContainerFactory63.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory71.setTldSkip("hi!");
        boolean boolean74 = tomcatEmbeddedServletContainerFactory71.isRegisterDefaultServlet();
        int int75 = tomcatEmbeddedServletContainerFactory71.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory71.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer78 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray79 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer78 };
        tomcatEmbeddedServletContainerFactory71.addConnectorCustomizers(tomcatConnectorCustomizerArray79);
        org.apache.catalina.connector.Connector connector81 = null;
        org.apache.catalina.connector.Connector[] connectorArray82 = new org.apache.catalina.connector.Connector[] { connector81 };
        tomcatEmbeddedServletContainerFactory71.addAdditionalTomcatConnectors(connectorArray82);
        tomcatEmbeddedServletContainerFactory63.addAdditionalTomcatConnectors(connectorArray82);
        tomcatEmbeddedServletContainerFactory52.addAdditionalTomcatConnectors(connectorArray82);
        tomcatEmbeddedServletContainerFactory11.addAdditionalTomcatConnectors(connectorArray82);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray82);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-8" + "'", str14, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection17);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-8" + "'", str31, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray46);
        org.junit.Assert.assertNotNull(errorPageSet48);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(connectorArray54);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "UTF-8" + "'", str61, "UTF-8");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 8080 + "'", int62 == 8080);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray79);
        org.junit.Assert.assertNotNull(connectorArray82);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory7.getUriEncoding();
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings15 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setPort((int) ' ');
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int21 = tomcatEmbeddedServletContainerFactory20.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray22 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory20.addAdditionalTomcatConnectors(connectorArray22);
        org.apache.catalina.Valve[] valveArray24 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory20.addContextValves(valveArray24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int27 = tomcatEmbeddedServletContainerFactory26.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray28 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory26.addAdditionalTomcatConnectors(connectorArray28);
        tomcatEmbeddedServletContainerFactory20.addAdditionalTomcatConnectors(connectorArray28);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet31 = tomcatEmbeddedServletContainerFactory20.getErrorPages();
        org.springframework.boot.context.embedded.Ssl ssl32 = tomcatEmbeddedServletContainerFactory20.getSsl();
        java.io.File file33 = null;
        tomcatEmbeddedServletContainerFactory20.setDocumentRoot(file33);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection35 = tomcatEmbeddedServletContainerFactory20.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection35);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(mimeMappings15);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(connectorArray22);
        org.junit.Assert.assertNotNull(valveArray24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(connectorArray28);
        org.junit.Assert.assertNotNull(errorPageSet31);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection35);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer6 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray7 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer6 };
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray7);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 10);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings14 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) 0);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings17 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings14);
        org.junit.Assert.assertNotNull(mimeMappings17);
        org.junit.Assert.assertNotNull(connectorList20);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        int int13 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.Ssl ssl14 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(ssl14);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        java.util.Collection<org.apache.catalina.Valve> valveCollection6 = tomcatEmbeddedServletContainerFactory0.getValves();
        boolean boolean7 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(valveCollection6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(errorPageSet12);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList4 = tomcatEmbeddedServletContainerFactory2.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory2.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer10 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer10 };
        tomcatEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.core.io.ResourceLoader resourceLoader17 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader17);
        java.io.File file19 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(connectorList4);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertNull(file19);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", 1);
        java.util.Collection<org.apache.catalina.Valve> valveCollection3 = tomcatEmbeddedServletContainerFactory2.getValves();
        org.junit.Assert.assertNotNull(valveCollection3);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection4 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.net.InetAddress inetAddress5 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setPort((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection4);
        org.junit.Assert.assertNull(inetAddress5);
        org.junit.Assert.assertNull(ssl6);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        java.io.File file6 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection9 = tomcatEmbeddedServletContainerFactory8.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings10);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings12 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.Valve> valveCollection13 = tomcatEmbeddedServletContainerFactory0.getValves();
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        int int16 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection9);
        org.junit.Assert.assertNotNull(mimeMappings10);
        org.junit.Assert.assertNotNull(mimeMappings12);
        org.junit.Assert.assertNotNull(valveCollection13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.lang.Class<?> wildcardClass4 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection14 = tomcatEmbeddedServletContainerFactory13.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection14);
        org.springframework.boot.context.embedded.Ssl ssl16 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl16);
        java.net.InetAddress inetAddress18 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress18);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection22 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection14);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection22);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        int int11 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file12 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file12);
        tomcatEmbeddedServletContainerFactory0.setPort((-1));
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory16.getUriEncoding();
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.io.File file23 = tomcatEmbeddedServletContainerFactory16.getDocumentRoot();
        org.springframework.boot.context.embedded.Ssl ssl24 = tomcatEmbeddedServletContainerFactory16.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory28.setTldSkip("hi!");
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory28.getUriEncoding();
        tomcatEmbeddedServletContainerFactory28.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings34 = tomcatEmbeddedServletContainerFactory28.getMimeMappings();
        tomcatEmbeddedServletContainerFactory25.setMimeMappings(mimeMappings34);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection37 = tomcatEmbeddedServletContainerFactory36.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory25.setTomcatContextCustomizers(tomcatContextCustomizerCollection37);
        java.io.File file39 = null;
        tomcatEmbeddedServletContainerFactory25.setDocumentRoot(file39);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory41 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory41.setTldSkip("hi!");
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory41.getUriEncoding();
        tomcatEmbeddedServletContainerFactory41.setUriEncoding("hi!");
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory41.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = tomcatEmbeddedServletContainerFactory41.getErrorPages();
        tomcatEmbeddedServletContainerFactory41.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection51 = tomcatEmbeddedServletContainerFactory41.getValves();
        java.net.InetAddress inetAddress52 = null;
        tomcatEmbeddedServletContainerFactory41.setAddress(inetAddress52);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection54 = tomcatEmbeddedServletContainerFactory41.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection56 = tomcatEmbeddedServletContainerFactory55.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings57 = tomcatEmbeddedServletContainerFactory55.getMimeMappings();
        tomcatEmbeddedServletContainerFactory55.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl60 = null;
        tomcatEmbeddedServletContainerFactory55.setSsl(ssl60);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int63 = tomcatEmbeddedServletContainerFactory62.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray64 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList65 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList65, tomcatContextCustomizerArray64);
        tomcatEmbeddedServletContainerFactory62.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList65);
        tomcatEmbeddedServletContainerFactory62.setProtocol("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray70 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory62.addContextLifecycleListeners(lifecycleListenerArray70);
        tomcatEmbeddedServletContainerFactory55.addContextLifecycleListeners(lifecycleListenerArray70);
        tomcatEmbeddedServletContainerFactory41.addContextLifecycleListeners(lifecycleListenerArray70);
        tomcatEmbeddedServletContainerFactory25.addContextLifecycleListeners(lifecycleListenerArray70);
        tomcatEmbeddedServletContainerFactory25.setSessionTimeout((int) (short) 1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory77 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int78 = tomcatEmbeddedServletContainerFactory77.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray79 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList80 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList80, tomcatContextCustomizerArray79);
        tomcatEmbeddedServletContainerFactory77.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList80);
        java.util.Collection<org.apache.catalina.Valve> valveCollection83 = tomcatEmbeddedServletContainerFactory77.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory84 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory84.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory87 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory87.setTldSkip("hi!");
        java.lang.String str90 = tomcatEmbeddedServletContainerFactory87.getUriEncoding();
        tomcatEmbeddedServletContainerFactory87.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings93 = tomcatEmbeddedServletContainerFactory87.getMimeMappings();
        tomcatEmbeddedServletContainerFactory84.setMimeMappings(mimeMappings93);
        tomcatEmbeddedServletContainerFactory77.setMimeMappings(mimeMappings93);
        tomcatEmbeddedServletContainerFactory25.setMimeMappings(mimeMappings93);
        tomcatEmbeddedServletContainerFactory16.setMimeMappings(mimeMappings93);
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings93);
        java.io.File file99 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNull(file23);
        org.junit.Assert.assertNull(ssl24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-8" + "'", str31, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings34);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-8" + "'", str44, "UTF-8");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(errorPageSet48);
        org.junit.Assert.assertNotNull(valveCollection51);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection54);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection56);
        org.junit.Assert.assertNotNull(mimeMappings57);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(lifecycleListenerArray70);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(valveCollection83);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "UTF-8" + "'", str90, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings93);
        org.junit.Assert.assertNull(file99);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory7.getUriEncoding();
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        java.lang.Class<?> wildcardClass17 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        java.io.File file8 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        int int9 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.util.concurrent.TimeUnit timeUnit11 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) '#', timeUnit11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8080 + "'", int9 == 8080);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.io.File file13 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int15 = tomcatEmbeddedServletContainerFactory14.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray16 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory14.addAdditionalTomcatConnectors(connectorArray16);
        org.apache.catalina.Valve[] valveArray18 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory14.addContextValves(valveArray18);
        org.springframework.boot.context.embedded.Ssl ssl20 = tomcatEmbeddedServletContainerFactory14.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl21 = tomcatEmbeddedServletContainerFactory14.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings22 = tomcatEmbeddedServletContainerFactory14.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection23 = tomcatEmbeddedServletContainerFactory14.getTomcatConnectorCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection24 = tomcatEmbeddedServletContainerFactory14.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory25.setTldSkip("hi!");
        java.lang.String str28 = tomcatEmbeddedServletContainerFactory25.getUriEncoding();
        tomcatEmbeddedServletContainerFactory25.setUriEncoding("hi!");
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory25.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = tomcatEmbeddedServletContainerFactory25.getErrorPages();
        tomcatEmbeddedServletContainerFactory25.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection35 = tomcatEmbeddedServletContainerFactory25.getValves();
        java.net.InetAddress inetAddress36 = null;
        tomcatEmbeddedServletContainerFactory25.setAddress(inetAddress36);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setTldSkip("hi!");
        java.lang.String str41 = tomcatEmbeddedServletContainerFactory38.getUriEncoding();
        boolean boolean42 = tomcatEmbeddedServletContainerFactory38.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection44 = tomcatEmbeddedServletContainerFactory43.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings45 = tomcatEmbeddedServletContainerFactory43.getMimeMappings();
        tomcatEmbeddedServletContainerFactory38.setMimeMappings(mimeMappings45);
        tomcatEmbeddedServletContainerFactory38.setUriEncoding("UTF-8");
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection49 = tomcatEmbeddedServletContainerFactory38.getContextLifecycleListeners();
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray50 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory38.addContextLifecycleListeners(lifecycleListenerArray50);
        tomcatEmbeddedServletContainerFactory25.addContextLifecycleListeners(lifecycleListenerArray50);
        tomcatEmbeddedServletContainerFactory14.addContextLifecycleListeners(lifecycleListenerArray50);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray50);
        java.lang.String str55 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.core.io.ResourceLoader resourceLoader56 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader56);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(connectorArray16);
        org.junit.Assert.assertNotNull(valveArray18);
        org.junit.Assert.assertNull(ssl20);
        org.junit.Assert.assertNull(ssl21);
        org.junit.Assert.assertNotNull(mimeMappings22);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection23);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UTF-8" + "'", str28, "UTF-8");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertNotNull(valveCollection35);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-8" + "'", str41, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection44);
        org.junit.Assert.assertNotNull(mimeMappings45);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection49);
        org.junit.Assert.assertNotNull(lifecycleListenerArray50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.io.File file13 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setTldSkip("hi!");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory14.setMimeMappings(mimeMappings23);
        tomcatEmbeddedServletContainerFactory14.setRegisterJspServlet(true);
        java.io.File file27 = tomcatEmbeddedServletContainerFactory14.getDocumentRoot();
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setTldSkip("hi!");
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory30.getUriEncoding();
        tomcatEmbeddedServletContainerFactory30.setUriEncoding("hi!");
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory30.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = tomcatEmbeddedServletContainerFactory30.getErrorPages();
        tomcatEmbeddedServletContainerFactory30.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet40 = tomcatEmbeddedServletContainerFactory30.getErrorPages();
        int int41 = tomcatEmbeddedServletContainerFactory30.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage44 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray45 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage44 };
        tomcatEmbeddedServletContainerFactory42.addErrorPages(errorPageArray45);
        tomcatEmbeddedServletContainerFactory30.addErrorPages(errorPageArray45);
        tomcatEmbeddedServletContainerFactory14.addErrorPages(errorPageArray45);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray45);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings50 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection51 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(errorPageSet37);
        org.junit.Assert.assertNotNull(errorPageSet40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray45);
        org.junit.Assert.assertNotNull(mimeMappings50);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection51);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray4 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory2.addAdditionalTomcatConnectors(connectorArray4);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory2.getContextLifecycleListeners();
        org.apache.catalina.connector.Connector[] connectorArray7 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory2.addAdditionalTomcatConnectors(connectorArray7);
        tomcatEmbeddedServletContainerFactory1.addAdditionalTomcatConnectors(connectorArray7);
        java.io.File file10 = tomcatEmbeddedServletContainerFactory1.getDocumentRoot();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory1.getTomcatConnectorCustomizers();
        java.io.File file12 = null;
        tomcatEmbeddedServletContainerFactory1.setBaseDirectory(file12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int15 = tomcatEmbeddedServletContainerFactory14.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory14.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer22 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer22 };
        tomcatEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray23);
        tomcatEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray23);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory14.getContextPath();
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setTldSkip("hi!");
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory32.getUriEncoding();
        tomcatEmbeddedServletContainerFactory32.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        tomcatEmbeddedServletContainerFactory29.setMimeMappings(mimeMappings38);
        tomcatEmbeddedServletContainerFactory29.setJspServletClassName("hi!");
        java.util.List<org.apache.catalina.connector.Connector> connectorList42 = tomcatEmbeddedServletContainerFactory29.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int44 = tomcatEmbeddedServletContainerFactory43.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray45 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory43.addAdditionalTomcatConnectors(connectorArray45);
        org.apache.catalina.Valve[] valveArray47 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory43.addContextValves(valveArray47);
        org.springframework.boot.context.embedded.Ssl ssl49 = tomcatEmbeddedServletContainerFactory43.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory50.setTldSkip("hi!");
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory50.getUriEncoding();
        tomcatEmbeddedServletContainerFactory50.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = tomcatEmbeddedServletContainerFactory50.getMimeMappings();
        tomcatEmbeddedServletContainerFactory43.setMimeMappings(mimeMappings56);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory58.setTldSkip("hi!");
        boolean boolean61 = tomcatEmbeddedServletContainerFactory58.isRegisterDefaultServlet();
        int int62 = tomcatEmbeddedServletContainerFactory58.getSessionTimeout();
        java.lang.String str63 = tomcatEmbeddedServletContainerFactory58.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray64 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet65 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet65, errorPageArray64);
        tomcatEmbeddedServletContainerFactory58.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet65);
        tomcatEmbeddedServletContainerFactory43.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet65);
        tomcatEmbeddedServletContainerFactory29.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet65);
        tomcatEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet65);
        tomcatEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet65);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory72 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory72.setTldSkip("hi!");
        boolean boolean75 = tomcatEmbeddedServletContainerFactory72.isRegisterDefaultServlet();
        int int76 = tomcatEmbeddedServletContainerFactory72.getSessionTimeout();
        java.lang.String str77 = tomcatEmbeddedServletContainerFactory72.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray78 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet79 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet79, errorPageArray78);
        tomcatEmbeddedServletContainerFactory72.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet79);
        java.lang.String str82 = tomcatEmbeddedServletContainerFactory72.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int84 = tomcatEmbeddedServletContainerFactory83.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList85 = tomcatEmbeddedServletContainerFactory83.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory83.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory88 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory88.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer91 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray92 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer91 };
        tomcatEmbeddedServletContainerFactory88.addInitializers(servletContextInitializerArray92);
        tomcatEmbeddedServletContainerFactory83.addInitializers(servletContextInitializerArray92);
        tomcatEmbeddedServletContainerFactory72.addInitializers(servletContextInitializerArray92);
        tomcatEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray92);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(connectorArray4);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertNotNull(connectorArray7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-8" + "'", str35, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(connectorList42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(connectorArray45);
        org.junit.Assert.assertNotNull(valveArray47);
        org.junit.Assert.assertNull(ssl49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-8" + "'", str53, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-8" + "'", str63, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "UTF-8" + "'", str77, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(connectorList85);
        org.junit.Assert.assertNotNull(servletContextInitializerArray92);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(mimeMappings7);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection3 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection7 = tomcatEmbeddedServletContainerFactory6.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        tomcatEmbeddedServletContainerFactory6.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        tomcatEmbeddedServletContainerFactory6.setSsl(ssl11);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int14 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray15 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList16, tomcatContextCustomizerArray15);
        tomcatEmbeddedServletContainerFactory13.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList16);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray21 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory13.addContextLifecycleListeners(lifecycleListenerArray21);
        tomcatEmbeddedServletContainerFactory6.addContextLifecycleListeners(lifecycleListenerArray21);
        tomcatEmbeddedServletContainerFactory5.addContextLifecycleListeners(lifecycleListenerArray21);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray21);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int27 = tomcatEmbeddedServletContainerFactory26.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray28 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory26.addAdditionalTomcatConnectors(connectorArray28);
        org.apache.catalina.Valve[] valveArray30 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory26.addContextValves(valveArray30);
        org.springframework.boot.context.embedded.Ssl ssl32 = tomcatEmbeddedServletContainerFactory26.getSsl();
        java.io.File file33 = tomcatEmbeddedServletContainerFactory26.getDocumentRoot();
        java.io.File file34 = null;
        tomcatEmbeddedServletContainerFactory26.setDocumentRoot(file34);
        boolean boolean36 = tomcatEmbeddedServletContainerFactory26.isRegisterJspServlet();
        java.io.File file37 = null;
        tomcatEmbeddedServletContainerFactory26.setDocumentRoot(file37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int40 = tomcatEmbeddedServletContainerFactory39.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray41 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory39.addAdditionalTomcatConnectors(connectorArray41);
        org.apache.catalina.Valve[] valveArray43 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory39.addContextValves(valveArray43);
        tomcatEmbeddedServletContainerFactory26.addContextValves(valveArray43);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory46.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage48 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray49 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage48 };
        tomcatEmbeddedServletContainerFactory46.addErrorPages(errorPageArray49);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int52 = tomcatEmbeddedServletContainerFactory51.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray53 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory51.addAdditionalTomcatConnectors(connectorArray53);
        org.apache.catalina.Valve[] valveArray55 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory51.addContextValves(valveArray55);
        org.springframework.boot.context.embedded.Ssl ssl57 = tomcatEmbeddedServletContainerFactory51.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory58.setTldSkip("hi!");
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory58.getUriEncoding();
        tomcatEmbeddedServletContainerFactory58.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings64 = tomcatEmbeddedServletContainerFactory58.getMimeMappings();
        tomcatEmbeddedServletContainerFactory51.setMimeMappings(mimeMappings64);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory66.setTldSkip("hi!");
        boolean boolean69 = tomcatEmbeddedServletContainerFactory66.isRegisterDefaultServlet();
        int int70 = tomcatEmbeddedServletContainerFactory66.getSessionTimeout();
        java.lang.String str71 = tomcatEmbeddedServletContainerFactory66.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray72 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet73 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet73, errorPageArray72);
        tomcatEmbeddedServletContainerFactory66.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet73);
        tomcatEmbeddedServletContainerFactory51.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet73);
        tomcatEmbeddedServletContainerFactory46.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet73);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory78.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer81 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray82 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer81 };
        tomcatEmbeddedServletContainerFactory78.addInitializers(servletContextInitializerArray82);
        tomcatEmbeddedServletContainerFactory46.addInitializers(servletContextInitializerArray82);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory85 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int86 = tomcatEmbeddedServletContainerFactory85.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList87 = tomcatEmbeddedServletContainerFactory85.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory85.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory90 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory90.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer93 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray94 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer93 };
        tomcatEmbeddedServletContainerFactory90.addInitializers(servletContextInitializerArray94);
        tomcatEmbeddedServletContainerFactory85.addInitializers(servletContextInitializerArray94);
        tomcatEmbeddedServletContainerFactory46.addInitializers(servletContextInitializerArray94);
        tomcatEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray94);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray94);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection3);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(lifecycleListenerArray21);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(connectorArray28);
        org.junit.Assert.assertNotNull(valveArray30);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNull(file33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(connectorArray41);
        org.junit.Assert.assertNotNull(valveArray43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-8" + "'", str47, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(connectorArray53);
        org.junit.Assert.assertNotNull(valveArray55);
        org.junit.Assert.assertNull(ssl57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "UTF-8" + "'", str61, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "UTF-8" + "'", str71, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray82);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(connectorList87);
        org.junit.Assert.assertNotNull(servletContextInitializerArray94);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory5.getUriEncoding();
        tomcatEmbeddedServletContainerFactory5.setUriEncoding("hi!");
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory5.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory5.getErrorPages();
        tomcatEmbeddedServletContainerFactory5.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory5.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener16 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray17 = new org.apache.catalina.LifecycleListener[] { lifecycleListener16 };
        tomcatEmbeddedServletContainerFactory5.addContextLifecycleListeners(lifecycleListenerArray17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setTldSkip("hi!");
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory19.getUriEncoding();
        tomcatEmbeddedServletContainerFactory19.setUriEncoding("hi!");
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory19.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = tomcatEmbeddedServletContainerFactory19.getErrorPages();
        tomcatEmbeddedServletContainerFactory19.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet29 = tomcatEmbeddedServletContainerFactory19.getErrorPages();
        int int30 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory31.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage33 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray34 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage33 };
        tomcatEmbeddedServletContainerFactory31.addErrorPages(errorPageArray34);
        tomcatEmbeddedServletContainerFactory19.addErrorPages(errorPageArray34);
        tomcatEmbeddedServletContainerFactory5.addErrorPages(errorPageArray34);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray34);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNotNull(lifecycleListenerArray17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(errorPageSet26);
        org.junit.Assert.assertNotNull(errorPageSet29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-8" + "'", str32, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray34);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        java.net.InetAddress inetAddress4 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("hi!");
        boolean boolean9 = tomcatEmbeddedServletContainerFactory6.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory16.getUriEncoding();
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray22 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory16.addConnectorCustomizers(tomcatConnectorCustomizerArray22);
        tomcatEmbeddedServletContainerFactory10.addConnectorCustomizers(tomcatConnectorCustomizerArray22);
        tomcatEmbeddedServletContainerFactory6.addConnectorCustomizers(tomcatConnectorCustomizerArray22);
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray22);
        boolean boolean27 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.util.concurrent.TimeUnit timeUnit29 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 0, timeUnit29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.Ssl ssl7 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl7);
        java.util.Collection<org.apache.catalina.Valve> valveCollection9 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(valveCollection9);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer2 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray3 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer2 };
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray3);
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int9 = tomcatEmbeddedServletContainerFactory8.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList10 = tomcatEmbeddedServletContainerFactory8.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory8.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer16 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer16 };
        tomcatEmbeddedServletContainerFactory13.addInitializers(servletContextInitializerArray17);
        tomcatEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray17);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray17);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0);
        int int23 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(connectorList10);
        org.junit.Assert.assertNotNull(servletContextInitializerArray17);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8080 + "'", int23 == 8080);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer7 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray8 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer7 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.net.InetAddress inetAddress11 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.net.InetAddress inetAddress13 = tomcatEmbeddedServletContainerFactory0.getAddress();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray8);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertNull(inetAddress13);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList4 = tomcatEmbeddedServletContainerFactory2.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory2.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer10 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray11 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer10 };
        tomcatEmbeddedServletContainerFactory7.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray11);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(connectorList4);
        org.junit.Assert.assertNotNull(servletContextInitializerArray11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-8" + "'", str17, "UTF-8");
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage2 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray3 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage2 };
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray3);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int6 = tomcatEmbeddedServletContainerFactory5.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray7 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory5.addAdditionalTomcatConnectors(connectorArray7);
        org.apache.catalina.Valve[] valveArray9 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory5.addContextValves(valveArray9);
        org.springframework.boot.context.embedded.Ssl ssl11 = tomcatEmbeddedServletContainerFactory5.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setTldSkip("hi!");
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory12.getUriEncoding();
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        tomcatEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setTldSkip("hi!");
        boolean boolean23 = tomcatEmbeddedServletContainerFactory20.isRegisterDefaultServlet();
        int int24 = tomcatEmbeddedServletContainerFactory20.getSessionTimeout();
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray26 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27, errorPageArray26);
        tomcatEmbeddedServletContainerFactory20.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        tomcatEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer35 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer35 };
        tomcatEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray36);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray36);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection39 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection40 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        java.lang.Class<?> wildcardClass41 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(connectorArray7);
        org.junit.Assert.assertNotNull(valveArray9);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection39);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet11 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) -1);
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        tomcatEmbeddedServletContainerFactory17.setSessionTimeout((int) (short) 1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection21 = tomcatEmbeddedServletContainerFactory17.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory22 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory22.setTldSkip("hi!");
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory22.getUriEncoding();
        boolean boolean26 = tomcatEmbeddedServletContainerFactory22.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setTldSkip("hi!");
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory27.getUriEncoding();
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("hi!");
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory27.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet34 = tomcatEmbeddedServletContainerFactory27.getErrorPages();
        tomcatEmbeddedServletContainerFactory27.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection37 = tomcatEmbeddedServletContainerFactory27.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener38 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray39 = new org.apache.catalina.LifecycleListener[] { lifecycleListener38 };
        tomcatEmbeddedServletContainerFactory27.addContextLifecycleListeners(lifecycleListenerArray39);
        tomcatEmbeddedServletContainerFactory22.addContextLifecycleListeners(lifecycleListenerArray39);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int43 = tomcatEmbeddedServletContainerFactory42.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList44 = tomcatEmbeddedServletContainerFactory42.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory42.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory47.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer50 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray51 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer50 };
        tomcatEmbeddedServletContainerFactory47.addInitializers(servletContextInitializerArray51);
        tomcatEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray51);
        tomcatEmbeddedServletContainerFactory42.setSessionTimeout((int) '4');
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray56 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory42.addContextCustomizers(tomcatContextCustomizerArray56);
        tomcatEmbeddedServletContainerFactory22.addContextCustomizers(tomcatContextCustomizerArray56);
        tomcatEmbeddedServletContainerFactory17.addContextCustomizers(tomcatContextCustomizerArray56);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray56);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(errorPageSet11);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-8" + "'", str30, "UTF-8");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(errorPageSet34);
        org.junit.Assert.assertNotNull(valveCollection37);
        org.junit.Assert.assertNotNull(lifecycleListenerArray39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(connectorList44);
        org.junit.Assert.assertNotNull(servletContextInitializerArray51);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray56);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.io.File file5 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file5);
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        org.junit.Assert.assertNotNull(connectorList7);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setTldSkip("hi!");
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory11.getUriEncoding();
        tomcatEmbeddedServletContainerFactory11.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setTldSkip("hi!");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray23 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory17.addConnectorCustomizers(tomcatConnectorCustomizerArray23);
        tomcatEmbeddedServletContainerFactory11.addConnectorCustomizers(tomcatConnectorCustomizerArray23);
        boolean boolean26 = tomcatEmbeddedServletContainerFactory11.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setTldSkip("hi!");
        boolean boolean30 = tomcatEmbeddedServletContainerFactory27.isRegisterDefaultServlet();
        int int31 = tomcatEmbeddedServletContainerFactory27.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory27.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer34 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray35 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer34 };
        tomcatEmbeddedServletContainerFactory27.addConnectorCustomizers(tomcatConnectorCustomizerArray35);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = tomcatEmbeddedServletContainerFactory27.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection38 = tomcatEmbeddedServletContainerFactory27.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory11.setTomcatContextCustomizers(tomcatContextCustomizerCollection38);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection38);
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int45 = tomcatEmbeddedServletContainerFactory44.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList46 = tomcatEmbeddedServletContainerFactory44.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory44.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory49 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory49.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer52 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray53 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer52 };
        tomcatEmbeddedServletContainerFactory49.addInitializers(servletContextInitializerArray53);
        tomcatEmbeddedServletContainerFactory44.addInitializers(servletContextInitializerArray53);
        tomcatEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray53);
        tomcatEmbeddedServletContainerFactory42.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory59.setTldSkip("hi!");
        boolean boolean62 = tomcatEmbeddedServletContainerFactory59.isRegisterDefaultServlet();
        int int63 = tomcatEmbeddedServletContainerFactory59.getSessionTimeout();
        java.lang.String str64 = tomcatEmbeddedServletContainerFactory59.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray65 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet66 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet66, errorPageArray65);
        tomcatEmbeddedServletContainerFactory59.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet66);
        java.lang.String str69 = tomcatEmbeddedServletContainerFactory59.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory70 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection71 = tomcatEmbeddedServletContainerFactory70.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings72 = tomcatEmbeddedServletContainerFactory70.getMimeMappings();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection73 = tomcatEmbeddedServletContainerFactory70.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory70.setSessionTimeout((int) (short) 0);
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer76 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray77 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer76 };
        tomcatEmbeddedServletContainerFactory70.addInitializers(servletContextInitializerArray77);
        tomcatEmbeddedServletContainerFactory59.addInitializers(servletContextInitializerArray77);
        tomcatEmbeddedServletContainerFactory42.addInitializers(servletContextInitializerArray77);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray77);
        java.net.InetAddress inetAddress82 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress82);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-8" + "'", str14, "UTF-8");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray35);
        org.junit.Assert.assertNotNull(errorPageSet37);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection38);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(connectorList46);
        org.junit.Assert.assertNotNull(servletContextInitializerArray53);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "UTF-8" + "'", str64, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection71);
        org.junit.Assert.assertNotNull(mimeMappings72);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection73);
        org.junit.Assert.assertNotNull(servletContextInitializerArray77);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray6 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int9 = tomcatEmbeddedServletContainerFactory8.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray10 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList11 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList11, tomcatContextCustomizerArray10);
        tomcatEmbeddedServletContainerFactory8.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList11);
        tomcatEmbeddedServletContainerFactory8.setJspServletClassName("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int17 = tomcatEmbeddedServletContainerFactory16.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray18 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray18);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection20 = tomcatEmbeddedServletContainerFactory16.getContextLifecycleListeners();
        org.apache.catalina.connector.Connector[] connectorArray21 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray21);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection25 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.io.File file26 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.Ssl ssl27 = tomcatEmbeddedServletContainerFactory0.getSsl();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection28 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.lang.Class<?> wildcardClass29 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(connectorArray18);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection20);
        org.junit.Assert.assertNotNull(connectorArray21);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection25);
        org.junit.Assert.assertNull(file26);
        org.junit.Assert.assertNull(ssl27);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        int int2 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection3 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.Ssl ssl4 = tomcatEmbeddedServletContainerFactory0.getSsl();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection3);
        org.junit.Assert.assertNull(ssl4);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file5 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file5);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection7 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection7);
        org.junit.Assert.assertNotNull(mimeMappings8);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.util.Collection<org.apache.catalina.Valve> valveCollection13 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.springframework.core.io.ResourceLoader resourceLoader14 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader14);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory16.getUriEncoding();
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory16.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        tomcatEmbeddedServletContainerFactory16.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection26 = tomcatEmbeddedServletContainerFactory16.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener27 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray28 = new org.apache.catalina.LifecycleListener[] { lifecycleListener27 };
        tomcatEmbeddedServletContainerFactory16.addContextLifecycleListeners(lifecycleListenerArray28);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setTldSkip("hi!");
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory30.getUriEncoding();
        tomcatEmbeddedServletContainerFactory30.setUriEncoding("hi!");
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory30.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = tomcatEmbeddedServletContainerFactory30.getErrorPages();
        tomcatEmbeddedServletContainerFactory30.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet40 = tomcatEmbeddedServletContainerFactory30.getErrorPages();
        int int41 = tomcatEmbeddedServletContainerFactory30.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage44 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray45 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage44 };
        tomcatEmbeddedServletContainerFactory42.addErrorPages(errorPageArray45);
        tomcatEmbeddedServletContainerFactory30.addErrorPages(errorPageArray45);
        tomcatEmbeddedServletContainerFactory16.addErrorPages(errorPageArray45);
        java.io.File file49 = null;
        tomcatEmbeddedServletContainerFactory16.setBaseDirectory(file49);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int52 = tomcatEmbeddedServletContainerFactory51.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray53 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory51.addAdditionalTomcatConnectors(connectorArray53);
        org.apache.catalina.Valve[] valveArray55 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory51.addContextValves(valveArray55);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory57 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int58 = tomcatEmbeddedServletContainerFactory57.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray59 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory57.addAdditionalTomcatConnectors(connectorArray59);
        tomcatEmbeddedServletContainerFactory51.addAdditionalTomcatConnectors(connectorArray59);
        tomcatEmbeddedServletContainerFactory16.addAdditionalTomcatConnectors(connectorArray59);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray59);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(valveCollection13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(valveCollection26);
        org.junit.Assert.assertNotNull(lifecycleListenerArray28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(errorPageSet37);
        org.junit.Assert.assertNotNull(errorPageSet40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray45);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(connectorArray53);
        org.junit.Assert.assertNotNull(valveArray55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(connectorArray59);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage2 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray3 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage2 };
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray3);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int6 = tomcatEmbeddedServletContainerFactory5.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray7 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory5.addAdditionalTomcatConnectors(connectorArray7);
        org.apache.catalina.Valve[] valveArray9 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory5.addContextValves(valveArray9);
        org.springframework.boot.context.embedded.Ssl ssl11 = tomcatEmbeddedServletContainerFactory5.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setTldSkip("hi!");
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory12.getUriEncoding();
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        tomcatEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setTldSkip("hi!");
        boolean boolean23 = tomcatEmbeddedServletContainerFactory20.isRegisterDefaultServlet();
        int int24 = tomcatEmbeddedServletContainerFactory20.getSessionTimeout();
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray26 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27, errorPageArray26);
        tomcatEmbeddedServletContainerFactory20.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        tomcatEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer35 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer35 };
        tomcatEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray36);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray36);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection39 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int41 = tomcatEmbeddedServletContainerFactory40.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray42 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory40.addAdditionalTomcatConnectors(connectorArray42);
        org.apache.catalina.Valve[] valveArray44 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory40.addContextValves(valveArray44);
        org.springframework.boot.context.embedded.Ssl ssl46 = tomcatEmbeddedServletContainerFactory40.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory47.setTldSkip("hi!");
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory47.getUriEncoding();
        tomcatEmbeddedServletContainerFactory47.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings53 = tomcatEmbeddedServletContainerFactory47.getMimeMappings();
        tomcatEmbeddedServletContainerFactory40.setMimeMappings(mimeMappings53);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setTldSkip("hi!");
        boolean boolean58 = tomcatEmbeddedServletContainerFactory55.isRegisterDefaultServlet();
        int int59 = tomcatEmbeddedServletContainerFactory55.getSessionTimeout();
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory55.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray61 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet62 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet62, errorPageArray61);
        tomcatEmbeddedServletContainerFactory55.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet62);
        tomcatEmbeddedServletContainerFactory40.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet62);
        tomcatEmbeddedServletContainerFactory40.setPort((int) (short) 100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory68.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory71.setTldSkip("hi!");
        java.lang.String str74 = tomcatEmbeddedServletContainerFactory71.getUriEncoding();
        tomcatEmbeddedServletContainerFactory71.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings77 = tomcatEmbeddedServletContainerFactory71.getMimeMappings();
        tomcatEmbeddedServletContainerFactory68.setMimeMappings(mimeMappings77);
        int int79 = tomcatEmbeddedServletContainerFactory68.getSessionTimeout();
        boolean boolean80 = tomcatEmbeddedServletContainerFactory68.isRegisterJspServlet();
        org.apache.catalina.connector.Connector[] connectorArray81 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory68.addAdditionalTomcatConnectors(connectorArray81);
        tomcatEmbeddedServletContainerFactory40.addAdditionalTomcatConnectors(connectorArray81);
        tomcatEmbeddedServletContainerFactory40.setUriEncoding("hi!");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet86 = tomcatEmbeddedServletContainerFactory40.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet86);
        java.io.File file88 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file88);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(connectorArray7);
        org.junit.Assert.assertNotNull(valveArray9);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(connectorArray42);
        org.junit.Assert.assertNotNull(valveArray44);
        org.junit.Assert.assertNull(ssl46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-8" + "'", str50, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "UTF-8" + "'", str60, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "UTF-8" + "'", str74, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings77);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(connectorArray81);
        org.junit.Assert.assertNotNull(errorPageSet86);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7, errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7);
        java.net.InetAddress inetAddress10 = tomcatEmbeddedServletContainerFactory0.getAddress();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(100);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int14 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray15 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList16, tomcatContextCustomizerArray15);
        tomcatEmbeddedServletContainerFactory13.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList16);
        java.io.File file19 = null;
        tomcatEmbeddedServletContainerFactory13.setDocumentRoot(file19);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection22 = tomcatEmbeddedServletContainerFactory21.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory21.getMimeMappings();
        tomcatEmbeddedServletContainerFactory13.setMimeMappings(mimeMappings23);
        tomcatEmbeddedServletContainerFactory13.setRegisterDefaultServlet(false);
        org.apache.catalina.LifecycleListener lifecycleListener27 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray28 = new org.apache.catalina.LifecycleListener[] { lifecycleListener27 };
        tomcatEmbeddedServletContainerFactory13.addContextLifecycleListeners(lifecycleListenerArray28);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray28);
        java.util.List<org.apache.catalina.connector.Connector> connectorList31 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.net.InetAddress inetAddress33 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress33);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(inetAddress10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection22);
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNotNull(lifecycleListenerArray28);
        org.junit.Assert.assertNotNull(connectorList31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-8" + "'", str32, "UTF-8");
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl7 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int11 = tomcatEmbeddedServletContainerFactory10.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray12 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory10.addAdditionalTomcatConnectors(connectorArray12);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection14 = tomcatEmbeddedServletContainerFactory10.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int16 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int18 = tomcatEmbeddedServletContainerFactory17.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray19 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory17.addAdditionalTomcatConnectors(connectorArray19);
        org.apache.catalina.Valve[] valveArray21 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory17.addContextValves(valveArray21);
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray21);
        tomcatEmbeddedServletContainerFactory10.addContextValves(valveArray21);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray21);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection26 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("UTF-8");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(ssl7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertNotNull(errorPageSet9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(connectorArray12);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(connectorArray19);
        org.junit.Assert.assertNotNull(valveArray21);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection26);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection3 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection7 = tomcatEmbeddedServletContainerFactory6.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings8 = tomcatEmbeddedServletContainerFactory6.getMimeMappings();
        tomcatEmbeddedServletContainerFactory6.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl11 = null;
        tomcatEmbeddedServletContainerFactory6.setSsl(ssl11);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int14 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray15 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList16 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList16, tomcatContextCustomizerArray15);
        tomcatEmbeddedServletContainerFactory13.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList16);
        tomcatEmbeddedServletContainerFactory13.setProtocol("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray21 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory13.addContextLifecycleListeners(lifecycleListenerArray21);
        tomcatEmbeddedServletContainerFactory6.addContextLifecycleListeners(lifecycleListenerArray21);
        tomcatEmbeddedServletContainerFactory5.addContextLifecycleListeners(lifecycleListenerArray21);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray21);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet28 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection3);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection7);
        org.junit.Assert.assertNotNull(mimeMappings8);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(lifecycleListenerArray21);
        org.junit.Assert.assertNotNull(errorPageSet28);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet3 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.springframework.boot.context.embedded.Ssl ssl4 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection8 = tomcatEmbeddedServletContainerFactory6.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection8);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection10 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setUriEncoding("UTF-8");
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection14 = tomcatEmbeddedServletContainerFactory11.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection18 = tomcatEmbeddedServletContainerFactory17.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings19 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory17.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl22 = null;
        tomcatEmbeddedServletContainerFactory17.setSsl(ssl22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int25 = tomcatEmbeddedServletContainerFactory24.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray26 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList27 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList27, tomcatContextCustomizerArray26);
        tomcatEmbeddedServletContainerFactory24.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList27);
        tomcatEmbeddedServletContainerFactory24.setProtocol("hi!");
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray32 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory24.addContextLifecycleListeners(lifecycleListenerArray32);
        tomcatEmbeddedServletContainerFactory17.addContextLifecycleListeners(lifecycleListenerArray32);
        tomcatEmbeddedServletContainerFactory16.addContextLifecycleListeners(lifecycleListenerArray32);
        tomcatEmbeddedServletContainerFactory11.addContextLifecycleListeners(lifecycleListenerArray32);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray32);
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray38 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ErrorPages must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertNotNull(errorPageSet3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection8);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection14);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection18);
        org.junit.Assert.assertNotNull(mimeMappings19);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(lifecycleListenerArray32);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection4 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory5.getUriEncoding();
        boolean boolean9 = tomcatEmbeddedServletContainerFactory5.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        java.lang.String str16 = tomcatEmbeddedServletContainerFactory10.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet17 = tomcatEmbeddedServletContainerFactory10.getErrorPages();
        tomcatEmbeddedServletContainerFactory10.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection20 = tomcatEmbeddedServletContainerFactory10.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener21 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray22 = new org.apache.catalina.LifecycleListener[] { lifecycleListener21 };
        tomcatEmbeddedServletContainerFactory10.addContextLifecycleListeners(lifecycleListenerArray22);
        tomcatEmbeddedServletContainerFactory5.addContextLifecycleListeners(lifecycleListenerArray22);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int26 = tomcatEmbeddedServletContainerFactory25.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList27 = tomcatEmbeddedServletContainerFactory25.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory25.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer33 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray34 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer33 };
        tomcatEmbeddedServletContainerFactory30.addInitializers(servletContextInitializerArray34);
        tomcatEmbeddedServletContainerFactory25.addInitializers(servletContextInitializerArray34);
        tomcatEmbeddedServletContainerFactory25.setSessionTimeout((int) '4');
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray39 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory25.addContextCustomizers(tomcatContextCustomizerArray39);
        tomcatEmbeddedServletContainerFactory5.addContextCustomizers(tomcatContextCustomizerArray39);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray39);
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.util.Collection<org.apache.catalina.Valve> valveCollection44 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection45 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(errorPageSet17);
        org.junit.Assert.assertNotNull(valveCollection20);
        org.junit.Assert.assertNotNull(lifecycleListenerArray22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(connectorList27);
        org.junit.Assert.assertNotNull(servletContextInitializerArray34);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(valveCollection44);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection45);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        int int11 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7, errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int14 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int16 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray17 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory15.addAdditionalTomcatConnectors(connectorArray17);
        org.apache.catalina.Valve[] valveArray19 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray19);
        tomcatEmbeddedServletContainerFactory13.addContextValves(valveArray19);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray19);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader28 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader28);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int31 = tomcatEmbeddedServletContainerFactory30.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray32 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory30.addAdditionalTomcatConnectors(connectorArray32);
        tomcatEmbeddedServletContainerFactory30.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer36 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray37 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer36 };
        tomcatEmbeddedServletContainerFactory30.addContextCustomizers(tomcatContextCustomizerArray37);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray37);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(connectorArray17);
        org.junit.Assert.assertNotNull(valveArray19);
        org.junit.Assert.assertNotNull(errorPageSet25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(connectorArray32);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray37);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray4 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory2.addAdditionalTomcatConnectors(connectorArray4);
        org.apache.catalina.Valve[] valveArray6 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory2.addContextValves(valveArray6);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray6);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ErrorPages must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(connectorArray4);
        org.junit.Assert.assertNotNull(valveArray6);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        int int11 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file12 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file12);
        tomcatEmbeddedServletContainerFactory0.setPort((-1));
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory16.getUriEncoding();
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory16.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        tomcatEmbeddedServletContainerFactory16.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        tomcatEmbeddedServletContainerFactory16.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setTldSkip("hi!");
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory29.getUriEncoding();
        boolean boolean33 = tomcatEmbeddedServletContainerFactory29.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory34 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory34.setTldSkip("hi!");
        java.lang.String str37 = tomcatEmbeddedServletContainerFactory34.getUriEncoding();
        tomcatEmbeddedServletContainerFactory34.setUriEncoding("hi!");
        java.lang.String str40 = tomcatEmbeddedServletContainerFactory34.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet41 = tomcatEmbeddedServletContainerFactory34.getErrorPages();
        tomcatEmbeddedServletContainerFactory34.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection44 = tomcatEmbeddedServletContainerFactory34.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener45 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray46 = new org.apache.catalina.LifecycleListener[] { lifecycleListener45 };
        tomcatEmbeddedServletContainerFactory34.addContextLifecycleListeners(lifecycleListenerArray46);
        tomcatEmbeddedServletContainerFactory29.addContextLifecycleListeners(lifecycleListenerArray46);
        java.io.File file49 = null;
        tomcatEmbeddedServletContainerFactory29.setDocumentRoot(file49);
        java.io.File file51 = null;
        tomcatEmbeddedServletContainerFactory29.setDocumentRoot(file51);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int54 = tomcatEmbeddedServletContainerFactory53.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray55 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory53.addAdditionalTomcatConnectors(connectorArray55);
        org.apache.catalina.Valve[] valveArray57 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory53.addContextValves(valveArray57);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory59 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int60 = tomcatEmbeddedServletContainerFactory59.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray61 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory59.addAdditionalTomcatConnectors(connectorArray61);
        tomcatEmbeddedServletContainerFactory53.addAdditionalTomcatConnectors(connectorArray61);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet64 = tomcatEmbeddedServletContainerFactory53.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection65 = tomcatEmbeddedServletContainerFactory53.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection67 = tomcatEmbeddedServletContainerFactory66.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory53.setTomcatContextCustomizers(tomcatContextCustomizerCollection67);
        org.springframework.boot.context.embedded.Ssl ssl69 = null;
        tomcatEmbeddedServletContainerFactory53.setSsl(ssl69);
        tomcatEmbeddedServletContainerFactory53.setPort((int) (byte) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory73.setTldSkip("hi!");
        java.lang.String str76 = tomcatEmbeddedServletContainerFactory73.getUriEncoding();
        tomcatEmbeddedServletContainerFactory73.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray79 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory73.addConnectorCustomizers(tomcatConnectorCustomizerArray79);
        tomcatEmbeddedServletContainerFactory53.addConnectorCustomizers(tomcatConnectorCustomizerArray79);
        tomcatEmbeddedServletContainerFactory29.addConnectorCustomizers(tomcatConnectorCustomizerArray79);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory83 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int84 = tomcatEmbeddedServletContainerFactory83.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray85 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory83.addAdditionalTomcatConnectors(connectorArray85);
        tomcatEmbeddedServletContainerFactory83.setUriEncoding("UTF-8");
        tomcatEmbeddedServletContainerFactory83.setTldSkip("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray91 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory83.addContextCustomizers(tomcatContextCustomizerArray91);
        tomcatEmbeddedServletContainerFactory29.addContextCustomizers(tomcatContextCustomizerArray91);
        tomcatEmbeddedServletContainerFactory16.addContextCustomizers(tomcatContextCustomizerArray91);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray91);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(errorPageSet26);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-8" + "'", str32, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-8" + "'", str37, "UTF-8");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(errorPageSet41);
        org.junit.Assert.assertNotNull(valveCollection44);
        org.junit.Assert.assertNotNull(lifecycleListenerArray46);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(connectorArray55);
        org.junit.Assert.assertNotNull(valveArray57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(connectorArray61);
        org.junit.Assert.assertNotNull(errorPageSet64);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection65);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection67);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "UTF-8" + "'", str76, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray79);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(connectorArray85);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray91);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer8 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray9 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer8 };
        tomcatEmbeddedServletContainerFactory5.addInitializers(servletContextInitializerArray9);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray9);
        java.util.concurrent.TimeUnit timeUnit13 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 0, timeUnit13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertNotNull(servletContextInitializerArray9);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory5.setTldSkip("hi!");
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory5.getUriEncoding();
        tomcatEmbeddedServletContainerFactory5.setUriEncoding("hi!");
        java.lang.String str11 = tomcatEmbeddedServletContainerFactory5.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory5.getErrorPages();
        tomcatEmbeddedServletContainerFactory5.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory5.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener16 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray17 = new org.apache.catalina.LifecycleListener[] { lifecycleListener16 };
        tomcatEmbeddedServletContainerFactory5.addContextLifecycleListeners(lifecycleListenerArray17);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray17);
        boolean boolean20 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory21 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int22 = tomcatEmbeddedServletContainerFactory21.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray23 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory21.addAdditionalTomcatConnectors(connectorArray23);
        org.apache.catalina.Valve[] valveArray25 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory21.addContextValves(valveArray25);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int28 = tomcatEmbeddedServletContainerFactory27.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray29 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory27.addAdditionalTomcatConnectors(connectorArray29);
        tomcatEmbeddedServletContainerFactory21.addAdditionalTomcatConnectors(connectorArray29);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet32 = tomcatEmbeddedServletContainerFactory21.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection33 = tomcatEmbeddedServletContainerFactory21.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection33);
        org.springframework.core.io.ResourceLoader resourceLoader35 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader35);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        tomcatEmbeddedServletContainerFactory0.setPort(1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(valveCollection15);
        org.junit.Assert.assertNotNull(lifecycleListenerArray17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(connectorArray23);
        org.junit.Assert.assertNotNull(valveArray25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(connectorArray29);
        org.junit.Assert.assertNotNull(errorPageSet32);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection33);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.net.InetAddress inetAddress7 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress7);
        java.lang.Class<?> wildcardClass9 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        int int11 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl14 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer18 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray19 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer18 };
        tomcatEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray19);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray21 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray21);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection23 = tomcatEmbeddedServletContainerFactory15.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory24.getContextPath();
        java.util.List<org.apache.catalina.connector.Connector> connectorList26 = tomcatEmbeddedServletContainerFactory24.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setTldSkip("hi!");
        java.lang.String str30 = tomcatEmbeddedServletContainerFactory27.getUriEncoding();
        tomcatEmbeddedServletContainerFactory27.setUriEncoding("hi!");
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory27.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet34 = tomcatEmbeddedServletContainerFactory27.getErrorPages();
        tomcatEmbeddedServletContainerFactory27.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = tomcatEmbeddedServletContainerFactory27.getErrorPages();
        tomcatEmbeddedServletContainerFactory24.setErrorPages(errorPageSet37);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int40 = tomcatEmbeddedServletContainerFactory39.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory39.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory39.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer47 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray48 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer47 };
        tomcatEmbeddedServletContainerFactory44.addInitializers(servletContextInitializerArray48);
        tomcatEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray48);
        tomcatEmbeddedServletContainerFactory24.addInitializers(servletContextInitializerArray48);
        tomcatEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray48);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray48);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory54 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory54.setTldSkip("hi!");
        boolean boolean57 = tomcatEmbeddedServletContainerFactory54.isRegisterDefaultServlet();
        int int58 = tomcatEmbeddedServletContainerFactory54.getSessionTimeout();
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory54.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray60 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet61 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet61, errorPageArray60);
        tomcatEmbeddedServletContainerFactory54.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet61);
        java.lang.String str64 = tomcatEmbeddedServletContainerFactory54.getContextPath();
        tomcatEmbeddedServletContainerFactory54.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int68 = tomcatEmbeddedServletContainerFactory67.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int70 = tomcatEmbeddedServletContainerFactory69.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray71 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory69.addAdditionalTomcatConnectors(connectorArray71);
        org.apache.catalina.Valve[] valveArray73 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory69.addContextValves(valveArray73);
        tomcatEmbeddedServletContainerFactory67.addContextValves(valveArray73);
        tomcatEmbeddedServletContainerFactory54.addContextValves(valveArray73);
        tomcatEmbeddedServletContainerFactory54.setJspServletClassName("UTF-8");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet79 = tomcatEmbeddedServletContainerFactory54.getErrorPages();
        tomcatEmbeddedServletContainerFactory54.setUriEncoding("hi!");
        org.springframework.core.io.ResourceLoader resourceLoader82 = null;
        tomcatEmbeddedServletContainerFactory54.setResourceLoader(resourceLoader82);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory84 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int85 = tomcatEmbeddedServletContainerFactory84.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray86 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory84.addAdditionalTomcatConnectors(connectorArray86);
        tomcatEmbeddedServletContainerFactory84.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer90 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray91 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer90 };
        tomcatEmbeddedServletContainerFactory84.addContextCustomizers(tomcatContextCustomizerArray91);
        tomcatEmbeddedServletContainerFactory54.addContextCustomizers(tomcatContextCustomizerArray91);
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray91);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(ssl14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray21);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(connectorList26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-8" + "'", str30, "UTF-8");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(errorPageSet34);
        org.junit.Assert.assertNotNull(errorPageSet37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertNotNull(servletContextInitializerArray48);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "UTF-8" + "'", str59, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(connectorArray71);
        org.junit.Assert.assertNotNull(valveArray73);
        org.junit.Assert.assertNotNull(errorPageSet79);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(connectorArray86);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray91);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer6 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray7 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer6 };
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray7);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int10 = tomcatEmbeddedServletContainerFactory9.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList11 = tomcatEmbeddedServletContainerFactory9.getAdditionalTomcatConnectors();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet12 = tomcatEmbeddedServletContainerFactory9.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet12);
        java.util.List<org.apache.catalina.connector.Connector> connectorList14 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.Ssl ssl15 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl15);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(connectorList11);
        org.junit.Assert.assertNotNull(errorPageSet12);
        org.junit.Assert.assertNotNull(connectorList14);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray4 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory2.addAdditionalTomcatConnectors(connectorArray4);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory2.getContextLifecycleListeners();
        org.apache.catalina.connector.Connector[] connectorArray7 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory2.addAdditionalTomcatConnectors(connectorArray7);
        tomcatEmbeddedServletContainerFactory1.addAdditionalTomcatConnectors(connectorArray7);
        java.io.File file10 = tomcatEmbeddedServletContainerFactory1.getDocumentRoot();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection11 = tomcatEmbeddedServletContainerFactory1.getTomcatConnectorCustomizers();
        java.io.File file12 = null;
        tomcatEmbeddedServletContainerFactory1.setBaseDirectory(file12);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int15 = tomcatEmbeddedServletContainerFactory14.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList16 = tomcatEmbeddedServletContainerFactory14.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory14.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory19.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer22 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer22 };
        tomcatEmbeddedServletContainerFactory19.addInitializers(servletContextInitializerArray23);
        tomcatEmbeddedServletContainerFactory14.addInitializers(servletContextInitializerArray23);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory14.getContextPath();
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setTldSkip("hi!");
        java.lang.String str35 = tomcatEmbeddedServletContainerFactory32.getUriEncoding();
        tomcatEmbeddedServletContainerFactory32.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings38 = tomcatEmbeddedServletContainerFactory32.getMimeMappings();
        tomcatEmbeddedServletContainerFactory29.setMimeMappings(mimeMappings38);
        tomcatEmbeddedServletContainerFactory29.setJspServletClassName("hi!");
        java.util.List<org.apache.catalina.connector.Connector> connectorList42 = tomcatEmbeddedServletContainerFactory29.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory43 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int44 = tomcatEmbeddedServletContainerFactory43.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray45 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory43.addAdditionalTomcatConnectors(connectorArray45);
        org.apache.catalina.Valve[] valveArray47 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory43.addContextValves(valveArray47);
        org.springframework.boot.context.embedded.Ssl ssl49 = tomcatEmbeddedServletContainerFactory43.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory50.setTldSkip("hi!");
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory50.getUriEncoding();
        tomcatEmbeddedServletContainerFactory50.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings56 = tomcatEmbeddedServletContainerFactory50.getMimeMappings();
        tomcatEmbeddedServletContainerFactory43.setMimeMappings(mimeMappings56);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory58.setTldSkip("hi!");
        boolean boolean61 = tomcatEmbeddedServletContainerFactory58.isRegisterDefaultServlet();
        int int62 = tomcatEmbeddedServletContainerFactory58.getSessionTimeout();
        java.lang.String str63 = tomcatEmbeddedServletContainerFactory58.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray64 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet65 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet65, errorPageArray64);
        tomcatEmbeddedServletContainerFactory58.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet65);
        tomcatEmbeddedServletContainerFactory43.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet65);
        tomcatEmbeddedServletContainerFactory29.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet65);
        tomcatEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet65);
        tomcatEmbeddedServletContainerFactory1.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet65);
        tomcatEmbeddedServletContainerFactory1.setRegisterDefaultServlet(false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(connectorArray4);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertNotNull(connectorArray7);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(connectorList16);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-8" + "'", str35, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings38);
        org.junit.Assert.assertNotNull(connectorList42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(connectorArray45);
        org.junit.Assert.assertNotNull(valveArray47);
        org.junit.Assert.assertNull(ssl49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-8" + "'", str53, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-8" + "'", str63, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        java.net.InetAddress inetAddress5 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress5);
        java.io.File file7 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file7);
        java.io.File file9 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertNull(file9);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setTldSkip("hi!");
        boolean boolean16 = tomcatEmbeddedServletContainerFactory13.isRegisterDefaultServlet();
        int int17 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory13.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray19 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20, errorPageArray19);
        tomcatEmbeddedServletContainerFactory13.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(1);
        java.util.concurrent.TimeUnit timeUnit29 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0, timeUnit29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", (int) '#');
        java.lang.Class<?> wildcardClass3 = tomcatEmbeddedServletContainerFactory2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int9 = tomcatEmbeddedServletContainerFactory8.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray10 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList11 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList11, tomcatContextCustomizerArray10);
        tomcatEmbeddedServletContainerFactory8.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList11);
        tomcatEmbeddedServletContainerFactory8.setJspServletClassName("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection17 = tomcatEmbeddedServletContainerFactory16.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory16.getMimeMappings();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection19 = tomcatEmbeddedServletContainerFactory16.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory16.setSessionTimeout((int) (short) 0);
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer22 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray23 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer22 };
        tomcatEmbeddedServletContainerFactory16.addInitializers(servletContextInitializerArray23);
        tomcatEmbeddedServletContainerFactory8.addInitializers(servletContextInitializerArray23);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray23);
        java.util.concurrent.TimeUnit timeUnit28 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0, timeUnit28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection17);
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection19);
        org.junit.Assert.assertNotNull(servletContextInitializerArray23);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (byte) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory2.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer5 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray6 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer5 };
        tomcatEmbeddedServletContainerFactory2.addInitializers(servletContextInitializerArray6);
        tomcatEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory9 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory9.setTldSkip("hi!");
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory9.getUriEncoding();
        boolean boolean13 = tomcatEmbeddedServletContainerFactory9.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray14 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory9.addContextCustomizers(tomcatContextCustomizerArray14);
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer16 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray17 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer16 };
        tomcatEmbeddedServletContainerFactory9.addInitializers(servletContextInitializerArray17);
        tomcatEmbeddedServletContainerFactory1.addInitializers(servletContextInitializerArray17);
        java.lang.Class<?> wildcardClass20 = servletContextInitializerArray17.getClass();
        org.junit.Assert.assertNotNull(servletContextInitializerArray6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-8" + "'", str12, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray14);
        org.junit.Assert.assertNotNull(servletContextInitializerArray17);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout(8080);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet9 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ErrorPages must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer7 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray8 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer7 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray8);
        org.junit.Assert.assertNotNull(errorPageSet10);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7, errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int14 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int16 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray17 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory15.addAdditionalTomcatConnectors(connectorArray17);
        org.apache.catalina.Valve[] valveArray19 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray19);
        tomcatEmbeddedServletContainerFactory13.addContextValves(valveArray19);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray19);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet25 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(connectorArray17);
        org.junit.Assert.assertNotNull(valveArray19);
        org.junit.Assert.assertNotNull(errorPageSet25);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean5 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        java.lang.Class<?> wildcardClass6 = tomcatEmbeddedServletContainerFactory0.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("", 1);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        boolean boolean6 = tomcatEmbeddedServletContainerFactory3.isRegisterDefaultServlet();
        int int7 = tomcatEmbeddedServletContainerFactory3.getSessionTimeout();
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray9 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet10, errorPageArray9);
        tomcatEmbeddedServletContainerFactory3.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet10);
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory3.getContextPath();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int17 = tomcatEmbeddedServletContainerFactory16.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int19 = tomcatEmbeddedServletContainerFactory18.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray20 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory18.addAdditionalTomcatConnectors(connectorArray20);
        org.apache.catalina.Valve[] valveArray22 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory18.addContextValves(valveArray22);
        tomcatEmbeddedServletContainerFactory16.addContextValves(valveArray22);
        tomcatEmbeddedServletContainerFactory3.addContextValves(valveArray22);
        tomcatEmbeddedServletContainerFactory2.addContextValves(valveArray22);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection27 = tomcatEmbeddedServletContainerFactory2.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.Ssl ssl28 = tomcatEmbeddedServletContainerFactory2.getSsl();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(connectorArray20);
        org.junit.Assert.assertNotNull(valveArray22);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection27);
        org.junit.Assert.assertNull(ssl28);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int14 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray15 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory13.addAdditionalTomcatConnectors(connectorArray15);
        org.apache.catalina.Valve[] valveArray17 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory13.addContextValves(valveArray17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int20 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray21 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory19.addAdditionalTomcatConnectors(connectorArray21);
        tomcatEmbeddedServletContainerFactory13.addAdditionalTomcatConnectors(connectorArray21);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet24 = tomcatEmbeddedServletContainerFactory13.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int27 = tomcatEmbeddedServletContainerFactory26.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray28 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory26.addAdditionalTomcatConnectors(connectorArray28);
        org.apache.catalina.Valve[] valveArray30 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory26.addContextValves(valveArray30);
        org.springframework.boot.context.embedded.Ssl ssl32 = tomcatEmbeddedServletContainerFactory26.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl33 = tomcatEmbeddedServletContainerFactory26.getSsl();
        tomcatEmbeddedServletContainerFactory26.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory36 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory36.setTldSkip("hi!");
        java.lang.String str39 = tomcatEmbeddedServletContainerFactory36.getUriEncoding();
        tomcatEmbeddedServletContainerFactory36.setUriEncoding("hi!");
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory36.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet43 = tomcatEmbeddedServletContainerFactory36.getErrorPages();
        tomcatEmbeddedServletContainerFactory36.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection46 = tomcatEmbeddedServletContainerFactory36.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener47 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray48 = new org.apache.catalina.LifecycleListener[] { lifecycleListener47 };
        tomcatEmbeddedServletContainerFactory36.addContextLifecycleListeners(lifecycleListenerArray48);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory50.setTldSkip("hi!");
        java.lang.String str53 = tomcatEmbeddedServletContainerFactory50.getUriEncoding();
        tomcatEmbeddedServletContainerFactory50.setUriEncoding("hi!");
        java.lang.String str56 = tomcatEmbeddedServletContainerFactory50.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet57 = tomcatEmbeddedServletContainerFactory50.getErrorPages();
        tomcatEmbeddedServletContainerFactory50.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet60 = tomcatEmbeddedServletContainerFactory50.getErrorPages();
        int int61 = tomcatEmbeddedServletContainerFactory50.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str63 = tomcatEmbeddedServletContainerFactory62.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage64 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray65 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage64 };
        tomcatEmbeddedServletContainerFactory62.addErrorPages(errorPageArray65);
        tomcatEmbeddedServletContainerFactory50.addErrorPages(errorPageArray65);
        tomcatEmbeddedServletContainerFactory36.addErrorPages(errorPageArray65);
        tomcatEmbeddedServletContainerFactory26.addErrorPages(errorPageArray65);
        boolean boolean70 = tomcatEmbeddedServletContainerFactory26.isRegisterDefaultServlet();
        java.util.Collection<org.apache.catalina.Valve> valveCollection71 = tomcatEmbeddedServletContainerFactory26.getValves();
        java.lang.String str72 = tomcatEmbeddedServletContainerFactory26.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory73 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory73.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory73.setTldSkip("hi!");
        java.io.File file78 = null;
        tomcatEmbeddedServletContainerFactory73.setDocumentRoot(file78);
        java.util.Collection<org.apache.catalina.Valve> valveCollection80 = tomcatEmbeddedServletContainerFactory73.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory81.setTldSkip("hi!");
        java.lang.String str84 = tomcatEmbeddedServletContainerFactory81.getUriEncoding();
        tomcatEmbeddedServletContainerFactory81.setUriEncoding("hi!");
        java.lang.String str87 = tomcatEmbeddedServletContainerFactory81.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet88 = tomcatEmbeddedServletContainerFactory81.getErrorPages();
        tomcatEmbeddedServletContainerFactory81.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection91 = tomcatEmbeddedServletContainerFactory81.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener92 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray93 = new org.apache.catalina.LifecycleListener[] { lifecycleListener92 };
        tomcatEmbeddedServletContainerFactory81.addContextLifecycleListeners(lifecycleListenerArray93);
        tomcatEmbeddedServletContainerFactory73.addContextLifecycleListeners(lifecycleListenerArray93);
        tomcatEmbeddedServletContainerFactory26.addContextLifecycleListeners(lifecycleListenerArray93);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray93);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet98 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(connectorArray15);
        org.junit.Assert.assertNotNull(valveArray17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(connectorArray21);
        org.junit.Assert.assertNotNull(errorPageSet24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(connectorArray28);
        org.junit.Assert.assertNotNull(valveArray30);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertNull(ssl33);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-8" + "'", str39, "UTF-8");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(errorPageSet43);
        org.junit.Assert.assertNotNull(valveCollection46);
        org.junit.Assert.assertNotNull(lifecycleListenerArray48);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-8" + "'", str53, "UTF-8");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(errorPageSet57);
        org.junit.Assert.assertNotNull(errorPageSet60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-8" + "'", str63, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(valveCollection71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "UTF-8" + "'", str72, "UTF-8");
        org.junit.Assert.assertNotNull(valveCollection80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "UTF-8" + "'", str84, "UTF-8");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(errorPageSet88);
        org.junit.Assert.assertNotNull(valveCollection91);
        org.junit.Assert.assertNotNull(lifecycleListenerArray93);
        org.junit.Assert.assertNotNull(errorPageSet98);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str7 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory8.setTldSkip("hi!");
        boolean boolean11 = tomcatEmbeddedServletContainerFactory8.isRegisterDefaultServlet();
        int int12 = tomcatEmbeddedServletContainerFactory8.getSessionTimeout();
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory8.getUriEncoding();
        tomcatEmbeddedServletContainerFactory8.setPort((int) 'a');
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory16.getUriEncoding();
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        boolean boolean22 = tomcatEmbeddedServletContainerFactory16.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setTldSkip("hi!");
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory26.getUriEncoding();
        tomcatEmbeddedServletContainerFactory26.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings32 = tomcatEmbeddedServletContainerFactory26.getMimeMappings();
        tomcatEmbeddedServletContainerFactory23.setMimeMappings(mimeMappings32);
        tomcatEmbeddedServletContainerFactory23.setRegisterJspServlet(true);
        java.io.File file36 = tomcatEmbeddedServletContainerFactory23.getDocumentRoot();
        tomcatEmbeddedServletContainerFactory23.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory39.setTldSkip("hi!");
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory39.getUriEncoding();
        tomcatEmbeddedServletContainerFactory39.setUriEncoding("hi!");
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory39.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet46 = tomcatEmbeddedServletContainerFactory39.getErrorPages();
        tomcatEmbeddedServletContainerFactory39.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet49 = tomcatEmbeddedServletContainerFactory39.getErrorPages();
        int int50 = tomcatEmbeddedServletContainerFactory39.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str52 = tomcatEmbeddedServletContainerFactory51.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage53 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray54 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage53 };
        tomcatEmbeddedServletContainerFactory51.addErrorPages(errorPageArray54);
        tomcatEmbeddedServletContainerFactory39.addErrorPages(errorPageArray54);
        tomcatEmbeddedServletContainerFactory23.addErrorPages(errorPageArray54);
        tomcatEmbeddedServletContainerFactory16.addErrorPages(errorPageArray54);
        tomcatEmbeddedServletContainerFactory8.addErrorPages(errorPageArray54);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings60 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings60);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-8" + "'", str29, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings32);
        org.junit.Assert.assertNull(file36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-8" + "'", str42, "UTF-8");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(errorPageSet46);
        org.junit.Assert.assertNotNull(errorPageSet49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "UTF-8" + "'", str52, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray54);
        org.junit.Assert.assertNotNull(mimeMappings60);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.io.File file13 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory17 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory17.setTldSkip("hi!");
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory17.getUriEncoding();
        tomcatEmbeddedServletContainerFactory17.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings23 = tomcatEmbeddedServletContainerFactory17.getMimeMappings();
        tomcatEmbeddedServletContainerFactory14.setMimeMappings(mimeMappings23);
        tomcatEmbeddedServletContainerFactory14.setRegisterJspServlet(true);
        java.io.File file27 = tomcatEmbeddedServletContainerFactory14.getDocumentRoot();
        tomcatEmbeddedServletContainerFactory14.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setTldSkip("hi!");
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory30.getUriEncoding();
        tomcatEmbeddedServletContainerFactory30.setUriEncoding("hi!");
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory30.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = tomcatEmbeddedServletContainerFactory30.getErrorPages();
        tomcatEmbeddedServletContainerFactory30.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet40 = tomcatEmbeddedServletContainerFactory30.getErrorPages();
        int int41 = tomcatEmbeddedServletContainerFactory30.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage44 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray45 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage44 };
        tomcatEmbeddedServletContainerFactory42.addErrorPages(errorPageArray45);
        tomcatEmbeddedServletContainerFactory30.addErrorPages(errorPageArray45);
        tomcatEmbeddedServletContainerFactory14.addErrorPages(errorPageArray45);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray45);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int51 = tomcatEmbeddedServletContainerFactory50.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray52 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList53 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList53, tomcatContextCustomizerArray52);
        tomcatEmbeddedServletContainerFactory50.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList53);
        java.net.InetAddress inetAddress56 = null;
        tomcatEmbeddedServletContainerFactory50.setAddress(inetAddress56);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory58 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory58.setTldSkip("hi!");
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory58.getUriEncoding();
        tomcatEmbeddedServletContainerFactory58.setUriEncoding("hi!");
        java.lang.String str64 = tomcatEmbeddedServletContainerFactory58.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet65 = tomcatEmbeddedServletContainerFactory58.getErrorPages();
        tomcatEmbeddedServletContainerFactory58.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet68 = tomcatEmbeddedServletContainerFactory58.getErrorPages();
        tomcatEmbeddedServletContainerFactory58.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory71 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int72 = tomcatEmbeddedServletContainerFactory71.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray73 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory71.addAdditionalTomcatConnectors(connectorArray73);
        org.apache.catalina.Valve[] valveArray75 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory71.addContextValves(valveArray75);
        org.springframework.boot.context.embedded.Ssl ssl77 = tomcatEmbeddedServletContainerFactory71.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl78 = tomcatEmbeddedServletContainerFactory71.getSsl();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings79 = tomcatEmbeddedServletContainerFactory71.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet80 = tomcatEmbeddedServletContainerFactory71.getErrorPages();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory81 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int82 = tomcatEmbeddedServletContainerFactory81.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray83 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory81.addAdditionalTomcatConnectors(connectorArray83);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection85 = tomcatEmbeddedServletContainerFactory81.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory86 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int87 = tomcatEmbeddedServletContainerFactory86.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory88 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int89 = tomcatEmbeddedServletContainerFactory88.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray90 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory88.addAdditionalTomcatConnectors(connectorArray90);
        org.apache.catalina.Valve[] valveArray92 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory88.addContextValves(valveArray92);
        tomcatEmbeddedServletContainerFactory86.addContextValves(valveArray92);
        tomcatEmbeddedServletContainerFactory81.addContextValves(valveArray92);
        tomcatEmbeddedServletContainerFactory71.addContextValves(valveArray92);
        tomcatEmbeddedServletContainerFactory58.addContextValves(valveArray92);
        tomcatEmbeddedServletContainerFactory50.addContextValves(valveArray92);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray92);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings23);
        org.junit.Assert.assertNull(file27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(errorPageSet37);
        org.junit.Assert.assertNotNull(errorPageSet40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray45);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "UTF-8" + "'", str61, "UTF-8");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(errorPageSet65);
        org.junit.Assert.assertNotNull(errorPageSet68);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(connectorArray73);
        org.junit.Assert.assertNotNull(valveArray75);
        org.junit.Assert.assertNull(ssl77);
        org.junit.Assert.assertNull(ssl78);
        org.junit.Assert.assertNotNull(mimeMappings79);
        org.junit.Assert.assertNotNull(errorPageSet80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(connectorArray83);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(connectorArray90);
        org.junit.Assert.assertNotNull(valveArray92);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray5 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory0.addContextCustomizers(tomcatContextCustomizerArray5);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader9);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection11 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.util.concurrent.TimeUnit timeUnit13 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 10, timeUnit13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray5);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection11);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("hi!", (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        java.io.File file11 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file11);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage2 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray3 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage2 };
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray3);
        boolean boolean5 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int6 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.Valve[] valveArray7 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Valves must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection1 = tomcatEmbeddedServletContainerFactory0.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings2 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection3 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 0);
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        java.io.File file8 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.core.io.ResourceLoader resourceLoader9 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader9);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int12 = tomcatEmbeddedServletContainerFactory11.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray13 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory11.addAdditionalTomcatConnectors(connectorArray13);
        org.apache.catalina.Valve[] valveArray15 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory11.addContextValves(valveArray15);
        org.springframework.boot.context.embedded.Ssl ssl17 = tomcatEmbeddedServletContainerFactory11.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory18.setTldSkip("hi!");
        java.lang.String str21 = tomcatEmbeddedServletContainerFactory18.getUriEncoding();
        tomcatEmbeddedServletContainerFactory18.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings24 = tomcatEmbeddedServletContainerFactory18.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings24);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setTldSkip("hi!");
        boolean boolean29 = tomcatEmbeddedServletContainerFactory26.isRegisterDefaultServlet();
        int int30 = tomcatEmbeddedServletContainerFactory26.getSessionTimeout();
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory26.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray32 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet33 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet33, errorPageArray32);
        tomcatEmbeddedServletContainerFactory26.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet33);
        tomcatEmbeddedServletContainerFactory11.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet33);
        tomcatEmbeddedServletContainerFactory11.setContextPath("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((-1));
        int int41 = tomcatEmbeddedServletContainerFactory40.getPort();
        org.springframework.boot.context.embedded.Ssl ssl42 = null;
        tomcatEmbeddedServletContainerFactory40.setSsl(ssl42);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int45 = tomcatEmbeddedServletContainerFactory44.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray46 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory44.addAdditionalTomcatConnectors(connectorArray46);
        tomcatEmbeddedServletContainerFactory40.addAdditionalTomcatConnectors(connectorArray46);
        tomcatEmbeddedServletContainerFactory11.addAdditionalTomcatConnectors(connectorArray46);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray46);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection1);
        org.junit.Assert.assertNotNull(mimeMappings2);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection3);
        org.junit.Assert.assertNull(file8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(connectorArray13);
        org.junit.Assert.assertNotNull(valveArray15);
        org.junit.Assert.assertNull(ssl17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-8" + "'", str21, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-8" + "'", str31, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(connectorArray46);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        java.io.File file13 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory16.getUriEncoding();
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory16.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        tomcatEmbeddedServletContainerFactory16.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet26 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        int int27 = tomcatEmbeddedServletContainerFactory16.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str29 = tomcatEmbeddedServletContainerFactory28.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage30 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray31 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage30 };
        tomcatEmbeddedServletContainerFactory28.addErrorPages(errorPageArray31);
        tomcatEmbeddedServletContainerFactory16.addErrorPages(errorPageArray31);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray31);
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        java.util.concurrent.TimeUnit timeUnit38 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(52, timeUnit38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNull(file13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(errorPageSet26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-8" + "'", str29, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray31);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        java.net.InetAddress inetAddress7 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.io.File file8 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file8);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int13 = tomcatEmbeddedServletContainerFactory12.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray14 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory12.addAdditionalTomcatConnectors(connectorArray14);
        org.apache.catalina.Valve[] valveArray16 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory12.addContextValves(valveArray16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int19 = tomcatEmbeddedServletContainerFactory18.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray20 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory18.addAdditionalTomcatConnectors(connectorArray20);
        tomcatEmbeddedServletContainerFactory12.addAdditionalTomcatConnectors(connectorArray20);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = tomcatEmbeddedServletContainerFactory12.getErrorPages();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection24 = tomcatEmbeddedServletContainerFactory12.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection26 = tomcatEmbeddedServletContainerFactory25.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory12.setTomcatContextCustomizers(tomcatContextCustomizerCollection26);
        org.springframework.boot.context.embedded.Ssl ssl28 = null;
        tomcatEmbeddedServletContainerFactory12.setSsl(ssl28);
        boolean boolean30 = tomcatEmbeddedServletContainerFactory12.isRegisterJspServlet();
        java.lang.String str31 = tomcatEmbeddedServletContainerFactory12.getContextPath();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setPort((int) ' ');
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet35 = tomcatEmbeddedServletContainerFactory32.getErrorPages();
        tomcatEmbeddedServletContainerFactory12.setErrorPages(errorPageSet35);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet35);
        org.springframework.boot.context.embedded.Ssl ssl38 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl38);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection40 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(inetAddress7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(connectorArray14);
        org.junit.Assert.assertNotNull(valveArray16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(connectorArray20);
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection24);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(errorPageSet35);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection40);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str4 = tomcatEmbeddedServletContainerFactory3.getContextPath();
        java.util.List<org.apache.catalina.connector.Connector> connectorList5 = tomcatEmbeddedServletContainerFactory3.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory6.setTldSkip("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory6.getUriEncoding();
        tomcatEmbeddedServletContainerFactory6.setUriEncoding("hi!");
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory6.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = tomcatEmbeddedServletContainerFactory6.getErrorPages();
        tomcatEmbeddedServletContainerFactory6.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet16 = tomcatEmbeddedServletContainerFactory6.getErrorPages();
        tomcatEmbeddedServletContainerFactory3.setErrorPages(errorPageSet16);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory18 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int19 = tomcatEmbeddedServletContainerFactory18.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList20 = tomcatEmbeddedServletContainerFactory18.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory18.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory23 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory23.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer26 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray27 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer26 };
        tomcatEmbeddedServletContainerFactory23.addInitializers(servletContextInitializerArray27);
        tomcatEmbeddedServletContainerFactory18.addInitializers(servletContextInitializerArray27);
        tomcatEmbeddedServletContainerFactory3.addInitializers(servletContextInitializerArray27);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray27);
        org.springframework.boot.context.embedded.Ssl ssl32 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory33 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str34 = tomcatEmbeddedServletContainerFactory33.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage35 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray36 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage35 };
        tomcatEmbeddedServletContainerFactory33.addErrorPages(errorPageArray36);
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray36);
        java.io.File file39 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file39);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(connectorList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(errorPageSet13);
        org.junit.Assert.assertNotNull(errorPageSet16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(connectorList20);
        org.junit.Assert.assertNotNull(servletContextInitializerArray27);
        org.junit.Assert.assertNull(ssl32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-8" + "'", str34, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray36);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        java.io.File file6 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file6);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection9 = tomcatEmbeddedServletContainerFactory8.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings10 = tomcatEmbeddedServletContainerFactory8.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings10);
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection9);
        org.junit.Assert.assertNotNull(mimeMappings10);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.io.File file7 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        int int8 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setTldSkip("hi!");
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory12.getUriEncoding();
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        int int18 = tomcatEmbeddedServletContainerFactory12.getPort();
        java.util.List<org.apache.catalina.connector.Connector> connectorList19 = tomcatEmbeddedServletContainerFactory12.getAdditionalTomcatConnectors();
        java.io.File file20 = tomcatEmbeddedServletContainerFactory12.getDocumentRoot();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection21 = tomcatEmbeddedServletContainerFactory12.getContextLifecycleListeners();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection22 = tomcatEmbeddedServletContainerFactory12.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection22);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8080 + "'", int8 == 8080);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8080 + "'", int18 == 8080);
        org.junit.Assert.assertNotNull(connectorList19);
        org.junit.Assert.assertNull(file20);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection21);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection22);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.io.File file5 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file5);
        java.util.List<org.apache.catalina.connector.Connector> connectorList7 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory8 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int9 = tomcatEmbeddedServletContainerFactory8.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray10 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray10);
        tomcatEmbeddedServletContainerFactory8.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer tomcatContextCustomizer14 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray15 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] { tomcatContextCustomizer14 };
        tomcatEmbeddedServletContainerFactory8.addContextCustomizers(tomcatContextCustomizerArray15);
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory8.getUriEncoding();
        int int18 = tomcatEmbeddedServletContainerFactory8.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int20 = tomcatEmbeddedServletContainerFactory19.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray21 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList22 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList22, tomcatContextCustomizerArray21);
        tomcatEmbeddedServletContainerFactory19.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList22);
        tomcatEmbeddedServletContainerFactory19.setProtocol("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory27 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory27.setTldSkip("hi!");
        boolean boolean30 = tomcatEmbeddedServletContainerFactory27.isRegisterDefaultServlet();
        int int31 = tomcatEmbeddedServletContainerFactory27.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory27.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer34 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray35 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer34 };
        tomcatEmbeddedServletContainerFactory27.addConnectorCustomizers(tomcatConnectorCustomizerArray35);
        org.apache.catalina.connector.Connector connector37 = null;
        org.apache.catalina.connector.Connector[] connectorArray38 = new org.apache.catalina.connector.Connector[] { connector37 };
        tomcatEmbeddedServletContainerFactory27.addAdditionalTomcatConnectors(connectorArray38);
        tomcatEmbeddedServletContainerFactory19.addAdditionalTomcatConnectors(connectorArray38);
        tomcatEmbeddedServletContainerFactory8.addAdditionalTomcatConnectors(connectorArray38);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray38);
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("");
        org.junit.Assert.assertNotNull(connectorList7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(connectorArray10);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-8" + "'", str17, "UTF-8");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8080 + "'", int18 == 8080);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray35);
        org.junit.Assert.assertNotNull(connectorArray38);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings7);
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory10 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory10.setTldSkip("hi!");
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory10.getUriEncoding();
        tomcatEmbeddedServletContainerFactory10.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory16.getUriEncoding();
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray22 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] {};
        tomcatEmbeddedServletContainerFactory16.addConnectorCustomizers(tomcatConnectorCustomizerArray22);
        tomcatEmbeddedServletContainerFactory10.addConnectorCustomizers(tomcatConnectorCustomizerArray22);
        boolean boolean25 = tomcatEmbeddedServletContainerFactory10.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int27 = tomcatEmbeddedServletContainerFactory26.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList28 = tomcatEmbeddedServletContainerFactory26.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory26.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory31 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory31.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer34 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray35 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer34 };
        tomcatEmbeddedServletContainerFactory31.addInitializers(servletContextInitializerArray35);
        tomcatEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray35);
        tomcatEmbeddedServletContainerFactory26.setSessionTimeout((int) '4');
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray40 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        tomcatEmbeddedServletContainerFactory26.addContextCustomizers(tomcatContextCustomizerArray40);
        tomcatEmbeddedServletContainerFactory10.addContextCustomizers(tomcatContextCustomizerArray40);
        org.springframework.boot.context.embedded.Ssl ssl43 = null;
        tomcatEmbeddedServletContainerFactory10.setSsl(ssl43);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory45 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory45.setTldSkip("hi!");
        org.springframework.boot.context.embedded.Ssl ssl48 = tomcatEmbeddedServletContainerFactory45.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl49 = tomcatEmbeddedServletContainerFactory45.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection51 = tomcatEmbeddedServletContainerFactory50.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings52 = tomcatEmbeddedServletContainerFactory50.getMimeMappings();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet53 = tomcatEmbeddedServletContainerFactory50.getErrorPages();
        tomcatEmbeddedServletContainerFactory45.setErrorPages(errorPageSet53);
        tomcatEmbeddedServletContainerFactory10.setErrorPages(errorPageSet53);
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet53);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(true);
        org.springframework.boot.context.embedded.Ssl ssl59 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(connectorList28);
        org.junit.Assert.assertNotNull(servletContextInitializerArray35);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray40);
        org.junit.Assert.assertNull(ssl48);
        org.junit.Assert.assertNull(ssl49);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection51);
        org.junit.Assert.assertNotNull(mimeMappings52);
        org.junit.Assert.assertNotNull(errorPageSet53);
        org.junit.Assert.assertNull(ssl59);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.lang.String str5 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray6 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7, errorPageArray6);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet7);
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int14 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int16 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray17 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory15.addAdditionalTomcatConnectors(connectorArray17);
        org.apache.catalina.Valve[] valveArray19 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray19);
        tomcatEmbeddedServletContainerFactory13.addContextValves(valveArray19);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray19);
        tomcatEmbeddedServletContainerFactory0.setJspServletClassName("UTF-8");
        java.io.File file25 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(connectorArray17);
        org.junit.Assert.assertNotNull(valveArray19);
        org.junit.Assert.assertNull(file25);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection7 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.Ssl ssl8 = tomcatEmbeddedServletContainerFactory0.getSsl();
        java.net.InetAddress inetAddress9 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress9);
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 10);
        java.util.Collection<org.apache.catalina.Valve> valveCollection13 = tomcatEmbeddedServletContainerFactory0.getValves();
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        boolean boolean16 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection7);
        org.junit.Assert.assertNull(ssl8);
        org.junit.Assert.assertNotNull(valveCollection13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.List<org.apache.catalina.connector.Connector> connectorList2 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory3.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory3.getErrorPages();
        tomcatEmbeddedServletContainerFactory3.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet13 = tomcatEmbeddedServletContainerFactory3.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setErrorPages(errorPageSet13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int16 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList17 = tomcatEmbeddedServletContainerFactory15.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory15.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer23 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray24 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer23 };
        tomcatEmbeddedServletContainerFactory20.addInitializers(servletContextInitializerArray24);
        tomcatEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray24);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray24);
        java.io.File file28 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        java.net.InetAddress inetAddress29 = tomcatEmbeddedServletContainerFactory0.getAddress();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        tomcatEmbeddedServletContainerFactory0.setProtocol("UTF-8");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNotNull(connectorList2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNotNull(errorPageSet13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(connectorList17);
        org.junit.Assert.assertNotNull(servletContextInitializerArray24);
        org.junit.Assert.assertNull(file28);
        org.junit.Assert.assertNull(inetAddress29);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory(8080);
        org.springframework.boot.context.embedded.Ssl ssl2 = tomcatEmbeddedServletContainerFactory1.getSsl();
        java.net.InetAddress inetAddress3 = tomcatEmbeddedServletContainerFactory1.getAddress();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(ssl2);
        org.junit.Assert.assertNull(inetAddress3);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        java.util.concurrent.TimeUnit timeUnit10 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(8080, timeUnit10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        tomcatEmbeddedServletContainerFactory0.setRegisterJspServlet(false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet7 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        tomcatEmbeddedServletContainerFactory0.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection10 = tomcatEmbeddedServletContainerFactory0.getValves();
        java.net.InetAddress inetAddress11 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress11);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory13 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory13.setTldSkip("hi!");
        boolean boolean16 = tomcatEmbeddedServletContainerFactory13.isRegisterDefaultServlet();
        int int17 = tomcatEmbeddedServletContainerFactory13.getSessionTimeout();
        java.lang.String str18 = tomcatEmbeddedServletContainerFactory13.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray19 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet20 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20, errorPageArray19);
        tomcatEmbeddedServletContainerFactory13.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet20);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory24 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory24.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory24.setTldSkip("hi!");
        java.io.File file29 = null;
        tomcatEmbeddedServletContainerFactory24.setDocumentRoot(file29);
        java.util.Collection<org.apache.catalina.Valve> valveCollection31 = tomcatEmbeddedServletContainerFactory24.getValves();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory32.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage34 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray35 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage34 };
        tomcatEmbeddedServletContainerFactory32.addErrorPages(errorPageArray35);
        boolean boolean37 = tomcatEmbeddedServletContainerFactory32.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setTldSkip("hi!");
        boolean boolean41 = tomcatEmbeddedServletContainerFactory38.isRegisterDefaultServlet();
        int int42 = tomcatEmbeddedServletContainerFactory38.getSessionTimeout();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory38.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray44 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet45 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet45, errorPageArray44);
        tomcatEmbeddedServletContainerFactory38.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet45);
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory38.getContextPath();
        tomcatEmbeddedServletContainerFactory38.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory51 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int52 = tomcatEmbeddedServletContainerFactory51.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int54 = tomcatEmbeddedServletContainerFactory53.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray55 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory53.addAdditionalTomcatConnectors(connectorArray55);
        org.apache.catalina.Valve[] valveArray57 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory53.addContextValves(valveArray57);
        tomcatEmbeddedServletContainerFactory51.addContextValves(valveArray57);
        tomcatEmbeddedServletContainerFactory38.addContextValves(valveArray57);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory61 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int62 = tomcatEmbeddedServletContainerFactory61.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray63 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory61.addAdditionalTomcatConnectors(connectorArray63);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection65 = tomcatEmbeddedServletContainerFactory61.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory66 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int67 = tomcatEmbeddedServletContainerFactory66.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int69 = tomcatEmbeddedServletContainerFactory68.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray70 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory68.addAdditionalTomcatConnectors(connectorArray70);
        org.apache.catalina.Valve[] valveArray72 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory68.addContextValves(valveArray72);
        tomcatEmbeddedServletContainerFactory66.addContextValves(valveArray72);
        tomcatEmbeddedServletContainerFactory61.addContextValves(valveArray72);
        tomcatEmbeddedServletContainerFactory38.addContextValves(valveArray72);
        tomcatEmbeddedServletContainerFactory32.addContextValves(valveArray72);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection78 = tomcatEmbeddedServletContainerFactory32.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory24.setTomcatContextCustomizers(tomcatContextCustomizerCollection78);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection78);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings81 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection82 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setProtocol("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Protocol must not be empty");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(errorPageSet7);
        org.junit.Assert.assertNotNull(valveCollection10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-8" + "'", str18, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(valveCollection31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(connectorArray55);
        org.junit.Assert.assertNotNull(valveArray57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(connectorArray63);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(connectorArray70);
        org.junit.Assert.assertNotNull(valveArray72);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection78);
        org.junit.Assert.assertNotNull(mimeMappings81);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection82);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray8);
        java.io.File file11 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file11);
        java.lang.String str13 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        int int14 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.util.concurrent.TimeUnit timeUnit16 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (byte) 1, timeUnit16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-8" + "'", str13, "UTF-8");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory("UTF-8", (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        boolean boolean4 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection6 = tomcatEmbeddedServletContainerFactory5.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings7 = tomcatEmbeddedServletContainerFactory5.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings7);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection9 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        java.io.File file10 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory11.setTldSkip("hi!");
        java.lang.String str14 = tomcatEmbeddedServletContainerFactory11.getUriEncoding();
        tomcatEmbeddedServletContainerFactory11.setUriEncoding("hi!");
        java.lang.String str17 = tomcatEmbeddedServletContainerFactory11.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet18 = tomcatEmbeddedServletContainerFactory11.getErrorPages();
        tomcatEmbeddedServletContainerFactory11.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = tomcatEmbeddedServletContainerFactory11.getErrorPages();
        int int22 = tomcatEmbeddedServletContainerFactory11.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory11.setTldSkip("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl25 = tomcatEmbeddedServletContainerFactory11.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory26 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory26.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer29 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray30 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer29 };
        tomcatEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray30);
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray32 = new org.springframework.boot.context.embedded.ServletContextInitializer[] {};
        tomcatEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray32);
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection34 = tomcatEmbeddedServletContainerFactory26.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory35.getContextPath();
        java.util.List<org.apache.catalina.connector.Connector> connectorList37 = tomcatEmbeddedServletContainerFactory35.getAdditionalTomcatConnectors();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory38 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory38.setTldSkip("hi!");
        java.lang.String str41 = tomcatEmbeddedServletContainerFactory38.getUriEncoding();
        tomcatEmbeddedServletContainerFactory38.setUriEncoding("hi!");
        java.lang.String str44 = tomcatEmbeddedServletContainerFactory38.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet45 = tomcatEmbeddedServletContainerFactory38.getErrorPages();
        tomcatEmbeddedServletContainerFactory38.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet48 = tomcatEmbeddedServletContainerFactory38.getErrorPages();
        tomcatEmbeddedServletContainerFactory35.setErrorPages(errorPageSet48);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory50 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int51 = tomcatEmbeddedServletContainerFactory50.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList52 = tomcatEmbeddedServletContainerFactory50.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory50.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer58 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray59 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer58 };
        tomcatEmbeddedServletContainerFactory55.addInitializers(servletContextInitializerArray59);
        tomcatEmbeddedServletContainerFactory50.addInitializers(servletContextInitializerArray59);
        tomcatEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray59);
        tomcatEmbeddedServletContainerFactory26.addInitializers(servletContextInitializerArray59);
        tomcatEmbeddedServletContainerFactory11.addInitializers(servletContextInitializerArray59);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray59);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection6);
        org.junit.Assert.assertNotNull(mimeMappings7);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection9);
        org.junit.Assert.assertNull(file10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-8" + "'", str14, "UTF-8");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(errorPageSet18);
        org.junit.Assert.assertNotNull(errorPageSet21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(ssl25);
        org.junit.Assert.assertNotNull(servletContextInitializerArray30);
        org.junit.Assert.assertNotNull(servletContextInitializerArray32);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(connectorList37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-8" + "'", str41, "UTF-8");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(errorPageSet45);
        org.junit.Assert.assertNotNull(errorPageSet48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(connectorList52);
        org.junit.Assert.assertNotNull(servletContextInitializerArray59);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray2 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList3 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3, tomcatContextCustomizerArray2);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList3);
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        org.springframework.boot.context.embedded.Ssl ssl7 = null;
        tomcatEmbeddedServletContainerFactory0.setSsl(ssl7);
        boolean boolean9 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        org.springframework.core.io.ResourceLoader resourceLoader10 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray1 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList2 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList2, tomcatContextCustomizerArray1);
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList2);
        int int5 = tomcatEmbeddedServletContainerFactory0.getPort();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection10 = tomcatEmbeddedServletContainerFactory6.getContextLifecycleListeners();
        org.apache.catalina.connector.Connector[] connectorArray11 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray11);
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray11);
        tomcatEmbeddedServletContainerFactory0.setPort((int) (byte) 1);
        java.util.concurrent.TimeUnit timeUnit17 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout(0, timeUnit17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8080 + "'", int5 == 8080);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection10);
        org.junit.Assert.assertNotNull(connectorArray11);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory7.getUriEncoding();
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setTldSkip("hi!");
        boolean boolean18 = tomcatEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        int int19 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory15.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray21 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22, errorPageArray21);
        tomcatEmbeddedServletContainerFactory15.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        java.lang.String str26 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer> tomcatConnectorCustomizerCollection27 = tomcatEmbeddedServletContainerFactory0.getTomcatConnectorCustomizers();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int29 = tomcatEmbeddedServletContainerFactory28.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setTldSkip("hi!");
        org.apache.catalina.Valve[] valveArray33 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory30.addContextValves(valveArray33);
        tomcatEmbeddedServletContainerFactory28.addContextValves(valveArray33);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray33);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setTldSkip("hi!");
        boolean boolean40 = tomcatEmbeddedServletContainerFactory37.isRegisterDefaultServlet();
        int int41 = tomcatEmbeddedServletContainerFactory37.getSessionTimeout();
        java.lang.String str42 = tomcatEmbeddedServletContainerFactory37.getUriEncoding();
        int int43 = tomcatEmbeddedServletContainerFactory37.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory37.setRegisterDefaultServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory46 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str47 = tomcatEmbeddedServletContainerFactory46.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage48 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray49 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage48 };
        tomcatEmbeddedServletContainerFactory46.addErrorPages(errorPageArray49);
        boolean boolean51 = tomcatEmbeddedServletContainerFactory46.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory52 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory52.setTldSkip("hi!");
        boolean boolean55 = tomcatEmbeddedServletContainerFactory52.isRegisterDefaultServlet();
        int int56 = tomcatEmbeddedServletContainerFactory52.getSessionTimeout();
        java.lang.String str57 = tomcatEmbeddedServletContainerFactory52.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray58 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet59 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet59, errorPageArray58);
        tomcatEmbeddedServletContainerFactory52.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet59);
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory52.getContextPath();
        tomcatEmbeddedServletContainerFactory52.setTldSkip("");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory65 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int66 = tomcatEmbeddedServletContainerFactory65.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int68 = tomcatEmbeddedServletContainerFactory67.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray69 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory67.addAdditionalTomcatConnectors(connectorArray69);
        org.apache.catalina.Valve[] valveArray71 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory67.addContextValves(valveArray71);
        tomcatEmbeddedServletContainerFactory65.addContextValves(valveArray71);
        tomcatEmbeddedServletContainerFactory52.addContextValves(valveArray71);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory75 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int76 = tomcatEmbeddedServletContainerFactory75.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray77 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory75.addAdditionalTomcatConnectors(connectorArray77);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection79 = tomcatEmbeddedServletContainerFactory75.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory80 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int81 = tomcatEmbeddedServletContainerFactory80.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory82 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int83 = tomcatEmbeddedServletContainerFactory82.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray84 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory82.addAdditionalTomcatConnectors(connectorArray84);
        org.apache.catalina.Valve[] valveArray86 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory82.addContextValves(valveArray86);
        tomcatEmbeddedServletContainerFactory80.addContextValves(valveArray86);
        tomcatEmbeddedServletContainerFactory75.addContextValves(valveArray86);
        tomcatEmbeddedServletContainerFactory52.addContextValves(valveArray86);
        tomcatEmbeddedServletContainerFactory46.addContextValves(valveArray86);
        tomcatEmbeddedServletContainerFactory37.addContextValves(valveArray86);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray86);
        org.springframework.boot.context.embedded.MimeMappings mimeMappings94 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Mappings must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerCollection27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(valveArray33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-8" + "'", str42, "UTF-8");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-8" + "'", str47, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "UTF-8" + "'", str57, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(connectorArray69);
        org.junit.Assert.assertNotNull(valveArray71);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(connectorArray77);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection79);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(connectorArray84);
        org.junit.Assert.assertNotNull(valveArray86);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory7.setTldSkip("hi!");
        java.lang.String str10 = tomcatEmbeddedServletContainerFactory7.getUriEncoding();
        tomcatEmbeddedServletContainerFactory7.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings13 = tomcatEmbeddedServletContainerFactory7.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings13);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory15.setTldSkip("hi!");
        boolean boolean18 = tomcatEmbeddedServletContainerFactory15.isRegisterDefaultServlet();
        int int19 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        java.lang.String str20 = tomcatEmbeddedServletContainerFactory15.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray21 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet22 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22, errorPageArray21);
        tomcatEmbeddedServletContainerFactory15.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet22);
        java.lang.Class<?> wildcardClass26 = errorPageSet22.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-8" + "'", str20, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((int) (short) 10);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray4 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory2.addAdditionalTomcatConnectors(connectorArray4);
        org.apache.catalina.Valve[] valveArray6 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory2.addContextValves(valveArray6);
        org.springframework.boot.context.embedded.Ssl ssl8 = tomcatEmbeddedServletContainerFactory2.getSsl();
        tomcatEmbeddedServletContainerFactory2.setRegisterJspServlet(false);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int12 = tomcatEmbeddedServletContainerFactory11.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] tomcatContextCustomizerArray13 = new org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer[] {};
        java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerList14 = new java.util.ArrayList<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList14, tomcatContextCustomizerArray13);
        tomcatEmbeddedServletContainerFactory11.setTomcatContextCustomizers((java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer>) tomcatContextCustomizerList14);
        java.io.File file17 = null;
        tomcatEmbeddedServletContainerFactory11.setDocumentRoot(file17);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory19 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection20 = tomcatEmbeddedServletContainerFactory19.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings21 = tomcatEmbeddedServletContainerFactory19.getMimeMappings();
        tomcatEmbeddedServletContainerFactory11.setMimeMappings(mimeMappings21);
        tomcatEmbeddedServletContainerFactory11.setRegisterDefaultServlet(false);
        org.apache.catalina.LifecycleListener lifecycleListener25 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray26 = new org.apache.catalina.LifecycleListener[] { lifecycleListener25 };
        tomcatEmbeddedServletContainerFactory11.addContextLifecycleListeners(lifecycleListenerArray26);
        tomcatEmbeddedServletContainerFactory2.addContextLifecycleListeners(lifecycleListenerArray26);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory29 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory29.setTldSkip("hi!");
        java.lang.String str32 = tomcatEmbeddedServletContainerFactory29.getUriEncoding();
        tomcatEmbeddedServletContainerFactory29.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings35 = tomcatEmbeddedServletContainerFactory29.getMimeMappings();
        boolean boolean36 = tomcatEmbeddedServletContainerFactory29.isRegisterJspServlet();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory37 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory37.setTldSkip("hi!");
        boolean boolean40 = tomcatEmbeddedServletContainerFactory37.isRegisterDefaultServlet();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings41 = tomcatEmbeddedServletContainerFactory37.getMimeMappings();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory42.setTldSkip("hi!");
        java.lang.String str45 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        tomcatEmbeddedServletContainerFactory42.setUriEncoding("hi!");
        java.lang.String str48 = tomcatEmbeddedServletContainerFactory42.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet49 = tomcatEmbeddedServletContainerFactory42.getErrorPages();
        tomcatEmbeddedServletContainerFactory42.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection52 = tomcatEmbeddedServletContainerFactory42.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener53 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray54 = new org.apache.catalina.LifecycleListener[] { lifecycleListener53 };
        tomcatEmbeddedServletContainerFactory42.addContextLifecycleListeners(lifecycleListenerArray54);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory56 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory56.setTldSkip("hi!");
        java.lang.String str59 = tomcatEmbeddedServletContainerFactory56.getUriEncoding();
        tomcatEmbeddedServletContainerFactory56.setUriEncoding("hi!");
        java.lang.String str62 = tomcatEmbeddedServletContainerFactory56.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet63 = tomcatEmbeddedServletContainerFactory56.getErrorPages();
        tomcatEmbeddedServletContainerFactory56.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet66 = tomcatEmbeddedServletContainerFactory56.getErrorPages();
        int int67 = tomcatEmbeddedServletContainerFactory56.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory68 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str69 = tomcatEmbeddedServletContainerFactory68.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage70 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray71 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage70 };
        tomcatEmbeddedServletContainerFactory68.addErrorPages(errorPageArray71);
        tomcatEmbeddedServletContainerFactory56.addErrorPages(errorPageArray71);
        tomcatEmbeddedServletContainerFactory42.addErrorPages(errorPageArray71);
        tomcatEmbeddedServletContainerFactory37.addErrorPages(errorPageArray71);
        tomcatEmbeddedServletContainerFactory29.addErrorPages(errorPageArray71);
        tomcatEmbeddedServletContainerFactory2.addErrorPages(errorPageArray71);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory78 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection79 = tomcatEmbeddedServletContainerFactory78.getTomcatContextCustomizers();
        org.springframework.boot.context.embedded.MimeMappings mimeMappings80 = tomcatEmbeddedServletContainerFactory78.getMimeMappings();
        tomcatEmbeddedServletContainerFactory78.setProtocol("UTF-8");
        org.springframework.boot.context.embedded.Ssl ssl83 = null;
        tomcatEmbeddedServletContainerFactory78.setSsl(ssl83);
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray85 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory78.addContextLifecycleListeners(lifecycleListenerArray85);
        tomcatEmbeddedServletContainerFactory2.addContextLifecycleListeners(lifecycleListenerArray85);
        tomcatEmbeddedServletContainerFactory1.addContextLifecycleListeners(lifecycleListenerArray85);
        java.util.concurrent.TimeUnit timeUnit90 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory1.setSessionTimeout((int) '#', timeUnit90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(connectorArray4);
        org.junit.Assert.assertNotNull(valveArray6);
        org.junit.Assert.assertNull(ssl8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection20);
        org.junit.Assert.assertNotNull(mimeMappings21);
        org.junit.Assert.assertNotNull(lifecycleListenerArray26);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-8" + "'", str32, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(mimeMappings41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-8" + "'", str45, "UTF-8");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(errorPageSet49);
        org.junit.Assert.assertNotNull(valveCollection52);
        org.junit.Assert.assertNotNull(lifecycleListenerArray54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "UTF-8" + "'", str59, "UTF-8");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(errorPageSet63);
        org.junit.Assert.assertNotNull(errorPageSet66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "UTF-8" + "'", str69, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray71);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection79);
        org.junit.Assert.assertNotNull(mimeMappings80);
        org.junit.Assert.assertNotNull(lifecycleListenerArray85);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        java.io.File file5 = null;
        tomcatEmbeddedServletContainerFactory0.setBaseDirectory(file5);
        boolean boolean7 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        java.lang.String str8 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int1 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray2 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory0.addAdditionalTomcatConnectors(connectorArray2);
        org.apache.catalina.Valve[] valveArray4 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray4);
        org.springframework.boot.context.embedded.Ssl ssl6 = tomcatEmbeddedServletContainerFactory0.getSsl();
        java.io.File file7 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        java.io.File file8 = null;
        tomcatEmbeddedServletContainerFactory0.setDocumentRoot(file8);
        boolean boolean10 = tomcatEmbeddedServletContainerFactory0.isRegisterJspServlet();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(connectorArray2);
        org.junit.Assert.assertNotNull(valveArray4);
        org.junit.Assert.assertNull(ssl6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setRegisterDefaultServlet(false);
        tomcatEmbeddedServletContainerFactory0.setProtocol("hi!");
        java.util.concurrent.TimeUnit timeUnit6 = null;
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) 1, timeUnit6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: TimeUnit must not be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory3 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory3.setTldSkip("hi!");
        java.lang.String str6 = tomcatEmbeddedServletContainerFactory3.getUriEncoding();
        tomcatEmbeddedServletContainerFactory3.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings9 = tomcatEmbeddedServletContainerFactory3.getMimeMappings();
        tomcatEmbeddedServletContainerFactory0.setMimeMappings(mimeMappings9);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory11 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.util.Collection<org.springframework.boot.context.embedded.tomcat.TomcatContextCustomizer> tomcatContextCustomizerCollection12 = tomcatEmbeddedServletContainerFactory11.getTomcatContextCustomizers();
        tomcatEmbeddedServletContainerFactory0.setTomcatContextCustomizers(tomcatContextCustomizerCollection12);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection14 = tomcatEmbeddedServletContainerFactory0.getContextLifecycleListeners();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory15 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int16 = tomcatEmbeddedServletContainerFactory15.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray17 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory15.addAdditionalTomcatConnectors(connectorArray17);
        org.apache.catalina.Valve[] valveArray19 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray19);
        org.springframework.boot.context.embedded.Ssl ssl21 = tomcatEmbeddedServletContainerFactory15.getSsl();
        java.io.File file22 = tomcatEmbeddedServletContainerFactory15.getDocumentRoot();
        java.io.File file23 = null;
        tomcatEmbeddedServletContainerFactory15.setDocumentRoot(file23);
        boolean boolean25 = tomcatEmbeddedServletContainerFactory15.isRegisterJspServlet();
        java.io.File file26 = null;
        tomcatEmbeddedServletContainerFactory15.setDocumentRoot(file26);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory28 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int29 = tomcatEmbeddedServletContainerFactory28.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray30 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory28.addAdditionalTomcatConnectors(connectorArray30);
        org.apache.catalina.Valve[] valveArray32 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory28.addContextValves(valveArray32);
        tomcatEmbeddedServletContainerFactory15.addContextValves(valveArray32);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory35 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory35.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage37 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray38 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage37 };
        tomcatEmbeddedServletContainerFactory35.addErrorPages(errorPageArray38);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory40 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int41 = tomcatEmbeddedServletContainerFactory40.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray42 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory40.addAdditionalTomcatConnectors(connectorArray42);
        org.apache.catalina.Valve[] valveArray44 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory40.addContextValves(valveArray44);
        org.springframework.boot.context.embedded.Ssl ssl46 = tomcatEmbeddedServletContainerFactory40.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory47 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory47.setTldSkip("hi!");
        java.lang.String str50 = tomcatEmbeddedServletContainerFactory47.getUriEncoding();
        tomcatEmbeddedServletContainerFactory47.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings53 = tomcatEmbeddedServletContainerFactory47.getMimeMappings();
        tomcatEmbeddedServletContainerFactory40.setMimeMappings(mimeMappings53);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory55 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory55.setTldSkip("hi!");
        boolean boolean58 = tomcatEmbeddedServletContainerFactory55.isRegisterDefaultServlet();
        int int59 = tomcatEmbeddedServletContainerFactory55.getSessionTimeout();
        java.lang.String str60 = tomcatEmbeddedServletContainerFactory55.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray61 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet62 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet62, errorPageArray61);
        tomcatEmbeddedServletContainerFactory55.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet62);
        tomcatEmbeddedServletContainerFactory40.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet62);
        tomcatEmbeddedServletContainerFactory35.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet62);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory67 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory67.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer70 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray71 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer70 };
        tomcatEmbeddedServletContainerFactory67.addInitializers(servletContextInitializerArray71);
        tomcatEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray71);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory74 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int75 = tomcatEmbeddedServletContainerFactory74.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList76 = tomcatEmbeddedServletContainerFactory74.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory74.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory79 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory79.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer82 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray83 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer82 };
        tomcatEmbeddedServletContainerFactory79.addInitializers(servletContextInitializerArray83);
        tomcatEmbeddedServletContainerFactory74.addInitializers(servletContextInitializerArray83);
        tomcatEmbeddedServletContainerFactory35.addInitializers(servletContextInitializerArray83);
        tomcatEmbeddedServletContainerFactory15.addInitializers(servletContextInitializerArray83);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray83);
        // The following exception was thrown during execution in test generation
        try {
            tomcatEmbeddedServletContainerFactory0.setContextPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ContextPath must start with '/ and not end with '/'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings9);
        org.junit.Assert.assertNotNull(tomcatContextCustomizerCollection12);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(connectorArray17);
        org.junit.Assert.assertNotNull(valveArray19);
        org.junit.Assert.assertNull(ssl21);
        org.junit.Assert.assertNull(file22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(connectorArray30);
        org.junit.Assert.assertNotNull(valveArray32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-8" + "'", str36, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(connectorArray42);
        org.junit.Assert.assertNotNull(valveArray44);
        org.junit.Assert.assertNull(ssl46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-8" + "'", str50, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "UTF-8" + "'", str60, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray71);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(connectorList76);
        org.junit.Assert.assertNotNull(servletContextInitializerArray83);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str1 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage2 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray3 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage2 };
        tomcatEmbeddedServletContainerFactory0.addErrorPages(errorPageArray3);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory5 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int6 = tomcatEmbeddedServletContainerFactory5.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray7 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory5.addAdditionalTomcatConnectors(connectorArray7);
        org.apache.catalina.Valve[] valveArray9 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory5.addContextValves(valveArray9);
        org.springframework.boot.context.embedded.Ssl ssl11 = tomcatEmbeddedServletContainerFactory5.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory12 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory12.setTldSkip("hi!");
        java.lang.String str15 = tomcatEmbeddedServletContainerFactory12.getUriEncoding();
        tomcatEmbeddedServletContainerFactory12.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings18 = tomcatEmbeddedServletContainerFactory12.getMimeMappings();
        tomcatEmbeddedServletContainerFactory5.setMimeMappings(mimeMappings18);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory20 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory20.setTldSkip("hi!");
        boolean boolean23 = tomcatEmbeddedServletContainerFactory20.isRegisterDefaultServlet();
        int int24 = tomcatEmbeddedServletContainerFactory20.getSessionTimeout();
        java.lang.String str25 = tomcatEmbeddedServletContainerFactory20.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray26 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet27 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27, errorPageArray26);
        tomcatEmbeddedServletContainerFactory20.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        tomcatEmbeddedServletContainerFactory5.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        tomcatEmbeddedServletContainerFactory0.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet27);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory32 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory32.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer35 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray36 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer35 };
        tomcatEmbeddedServletContainerFactory32.addInitializers(servletContextInitializerArray36);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray36);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory39 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int40 = tomcatEmbeddedServletContainerFactory39.getSessionTimeout();
        java.util.List<org.apache.catalina.connector.Connector> connectorList41 = tomcatEmbeddedServletContainerFactory39.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory39.setJspServletClassName("hi!");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory44 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory44.setTldSkip("hi!");
        org.springframework.boot.context.embedded.ServletContextInitializer servletContextInitializer47 = null;
        org.springframework.boot.context.embedded.ServletContextInitializer[] servletContextInitializerArray48 = new org.springframework.boot.context.embedded.ServletContextInitializer[] { servletContextInitializer47 };
        tomcatEmbeddedServletContainerFactory44.addInitializers(servletContextInitializerArray48);
        tomcatEmbeddedServletContainerFactory39.addInitializers(servletContextInitializerArray48);
        tomcatEmbeddedServletContainerFactory0.addInitializers(servletContextInitializerArray48);
        org.springframework.core.io.ResourceLoader resourceLoader52 = null;
        tomcatEmbeddedServletContainerFactory0.setResourceLoader(resourceLoader52);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        java.util.List<org.apache.catalina.connector.Connector> connectorList56 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-8" + "'", str1, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(connectorArray7);
        org.junit.Assert.assertNotNull(valveArray9);
        org.junit.Assert.assertNull(ssl11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings18);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-8" + "'", str25, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(servletContextInitializerArray36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(connectorList41);
        org.junit.Assert.assertNotNull(servletContextInitializerArray48);
        org.junit.Assert.assertNotNull(connectorList56);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory0.setContextPath("");
        java.net.InetAddress inetAddress5 = null;
        tomcatEmbeddedServletContainerFactory0.setAddress(inetAddress5);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory7 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int8 = tomcatEmbeddedServletContainerFactory7.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray9 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory7.addAdditionalTomcatConnectors(connectorArray9);
        org.apache.catalina.Valve[] valveArray11 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory7.addContextValves(valveArray11);
        org.springframework.boot.context.embedded.Ssl ssl13 = tomcatEmbeddedServletContainerFactory7.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory14 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory14.setTldSkip("hi!");
        boolean boolean17 = tomcatEmbeddedServletContainerFactory14.isRegisterDefaultServlet();
        int int18 = tomcatEmbeddedServletContainerFactory14.getSessionTimeout();
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory14.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray20 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet21 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21, errorPageArray20);
        tomcatEmbeddedServletContainerFactory14.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21);
        tomcatEmbeddedServletContainerFactory7.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet21);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory25 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int26 = tomcatEmbeddedServletContainerFactory25.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray27 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory25.addAdditionalTomcatConnectors(connectorArray27);
        org.apache.catalina.Valve[] valveArray29 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory25.addContextValves(valveArray29);
        tomcatEmbeddedServletContainerFactory7.addContextValves(valveArray29);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray29);
        tomcatEmbeddedServletContainerFactory0.setTldSkip("");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(connectorArray9);
        org.junit.Assert.assertNotNull(valveArray11);
        org.junit.Assert.assertNull(ssl13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(connectorArray27);
        org.junit.Assert.assertNotNull(valveArray29);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory1 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory((-1));
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory2 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int3 = tomcatEmbeddedServletContainerFactory2.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray4 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory2.addAdditionalTomcatConnectors(connectorArray4);
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection6 = tomcatEmbeddedServletContainerFactory2.getContextLifecycleListeners();
        org.apache.catalina.connector.Connector[] connectorArray7 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory2.addAdditionalTomcatConnectors(connectorArray7);
        tomcatEmbeddedServletContainerFactory1.addAdditionalTomcatConnectors(connectorArray7);
        java.io.File file10 = tomcatEmbeddedServletContainerFactory1.getDocumentRoot();
        java.io.File file11 = null;
        tomcatEmbeddedServletContainerFactory1.setBaseDirectory(file11);
        org.springframework.core.io.ResourceLoader resourceLoader13 = null;
        tomcatEmbeddedServletContainerFactory1.setResourceLoader(resourceLoader13);
        java.net.InetAddress inetAddress15 = null;
        tomcatEmbeddedServletContainerFactory1.setAddress(inetAddress15);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(connectorArray4);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection6);
        org.junit.Assert.assertNotNull(connectorArray7);
        org.junit.Assert.assertNull(file10);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("UTF-8");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory6 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int7 = tomcatEmbeddedServletContainerFactory6.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray8 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory6.addAdditionalTomcatConnectors(connectorArray8);
        org.apache.catalina.Valve[] valveArray10 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory6.addContextValves(valveArray10);
        org.springframework.boot.context.embedded.Ssl ssl12 = tomcatEmbeddedServletContainerFactory6.getSsl();
        org.springframework.boot.context.embedded.Ssl ssl13 = tomcatEmbeddedServletContainerFactory6.getSsl();
        tomcatEmbeddedServletContainerFactory6.setRegisterDefaultServlet(true);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory16 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory16.setTldSkip("hi!");
        java.lang.String str19 = tomcatEmbeddedServletContainerFactory16.getUriEncoding();
        tomcatEmbeddedServletContainerFactory16.setUriEncoding("hi!");
        java.lang.String str22 = tomcatEmbeddedServletContainerFactory16.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet23 = tomcatEmbeddedServletContainerFactory16.getErrorPages();
        tomcatEmbeddedServletContainerFactory16.setPort(0);
        java.util.Collection<org.apache.catalina.Valve> valveCollection26 = tomcatEmbeddedServletContainerFactory16.getValves();
        org.apache.catalina.LifecycleListener lifecycleListener27 = null;
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray28 = new org.apache.catalina.LifecycleListener[] { lifecycleListener27 };
        tomcatEmbeddedServletContainerFactory16.addContextLifecycleListeners(lifecycleListenerArray28);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory30 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory30.setTldSkip("hi!");
        java.lang.String str33 = tomcatEmbeddedServletContainerFactory30.getUriEncoding();
        tomcatEmbeddedServletContainerFactory30.setUriEncoding("hi!");
        java.lang.String str36 = tomcatEmbeddedServletContainerFactory30.getContextPath();
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet37 = tomcatEmbeddedServletContainerFactory30.getErrorPages();
        tomcatEmbeddedServletContainerFactory30.setPort(0);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet40 = tomcatEmbeddedServletContainerFactory30.getErrorPages();
        int int41 = tomcatEmbeddedServletContainerFactory30.getSessionTimeout();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory42 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        java.lang.String str43 = tomcatEmbeddedServletContainerFactory42.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage errorPage44 = null;
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray45 = new org.springframework.boot.context.embedded.ErrorPage[] { errorPage44 };
        tomcatEmbeddedServletContainerFactory42.addErrorPages(errorPageArray45);
        tomcatEmbeddedServletContainerFactory30.addErrorPages(errorPageArray45);
        tomcatEmbeddedServletContainerFactory16.addErrorPages(errorPageArray45);
        tomcatEmbeddedServletContainerFactory6.addErrorPages(errorPageArray45);
        org.apache.catalina.LifecycleListener[] lifecycleListenerArray50 = new org.apache.catalina.LifecycleListener[] {};
        tomcatEmbeddedServletContainerFactory6.addContextLifecycleListeners(lifecycleListenerArray50);
        tomcatEmbeddedServletContainerFactory0.addContextLifecycleListeners(lifecycleListenerArray50);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory53 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory53.setTldSkip("hi!");
        java.lang.String str56 = tomcatEmbeddedServletContainerFactory53.getUriEncoding();
        tomcatEmbeddedServletContainerFactory53.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings59 = tomcatEmbeddedServletContainerFactory53.getMimeMappings();
        java.util.Collection<org.apache.catalina.LifecycleListener> lifecycleListenerCollection60 = tomcatEmbeddedServletContainerFactory53.getContextLifecycleListeners();
        java.lang.String str61 = tomcatEmbeddedServletContainerFactory53.getUriEncoding();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory62 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory62.setTldSkip("hi!");
        tomcatEmbeddedServletContainerFactory62.setContextPath("");
        java.net.InetAddress inetAddress67 = null;
        tomcatEmbeddedServletContainerFactory62.setAddress(inetAddress67);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory69 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int70 = tomcatEmbeddedServletContainerFactory69.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray71 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory69.addAdditionalTomcatConnectors(connectorArray71);
        org.apache.catalina.Valve[] valveArray73 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory69.addContextValves(valveArray73);
        org.springframework.boot.context.embedded.Ssl ssl75 = tomcatEmbeddedServletContainerFactory69.getSsl();
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory76 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory76.setTldSkip("hi!");
        boolean boolean79 = tomcatEmbeddedServletContainerFactory76.isRegisterDefaultServlet();
        int int80 = tomcatEmbeddedServletContainerFactory76.getSessionTimeout();
        java.lang.String str81 = tomcatEmbeddedServletContainerFactory76.getUriEncoding();
        org.springframework.boot.context.embedded.ErrorPage[] errorPageArray82 = new org.springframework.boot.context.embedded.ErrorPage[] {};
        java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage> errorPageSet83 = new java.util.LinkedHashSet<org.springframework.boot.context.embedded.ErrorPage>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet83, errorPageArray82);
        tomcatEmbeddedServletContainerFactory76.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet83);
        tomcatEmbeddedServletContainerFactory69.setErrorPages((java.util.Set<org.springframework.boot.context.embedded.ErrorPage>) errorPageSet83);
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory87 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        int int88 = tomcatEmbeddedServletContainerFactory87.getSessionTimeout();
        org.apache.catalina.connector.Connector[] connectorArray89 = new org.apache.catalina.connector.Connector[] {};
        tomcatEmbeddedServletContainerFactory87.addAdditionalTomcatConnectors(connectorArray89);
        org.apache.catalina.Valve[] valveArray91 = new org.apache.catalina.Valve[] {};
        tomcatEmbeddedServletContainerFactory87.addContextValves(valveArray91);
        tomcatEmbeddedServletContainerFactory69.addContextValves(valveArray91);
        tomcatEmbeddedServletContainerFactory62.addContextValves(valveArray91);
        tomcatEmbeddedServletContainerFactory53.addContextValves(valveArray91);
        tomcatEmbeddedServletContainerFactory0.addContextValves(valveArray91);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(connectorArray8);
        org.junit.Assert.assertNotNull(valveArray10);
        org.junit.Assert.assertNull(ssl12);
        org.junit.Assert.assertNull(ssl13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-8" + "'", str19, "UTF-8");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(errorPageSet23);
        org.junit.Assert.assertNotNull(valveCollection26);
        org.junit.Assert.assertNotNull(lifecycleListenerArray28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-8" + "'", str33, "UTF-8");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(errorPageSet37);
        org.junit.Assert.assertNotNull(errorPageSet40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray45);
        org.junit.Assert.assertNotNull(lifecycleListenerArray50);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "UTF-8" + "'", str56, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings59);
        org.junit.Assert.assertNotNull(lifecycleListenerCollection60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(connectorArray71);
        org.junit.Assert.assertNotNull(valveArray73);
        org.junit.Assert.assertNull(ssl75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "UTF-8" + "'", str81, "UTF-8");
        org.junit.Assert.assertNotNull(errorPageArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(connectorArray89);
        org.junit.Assert.assertNotNull(valveArray91);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        java.lang.String str3 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        tomcatEmbeddedServletContainerFactory0.setUriEncoding("hi!");
        org.springframework.boot.context.embedded.MimeMappings mimeMappings6 = tomcatEmbeddedServletContainerFactory0.getMimeMappings();
        java.io.File file7 = tomcatEmbeddedServletContainerFactory0.getDocumentRoot();
        int int8 = tomcatEmbeddedServletContainerFactory0.getPort();
        java.lang.String str9 = tomcatEmbeddedServletContainerFactory0.getContextPath();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("UTF-8");
        java.util.List<org.apache.catalina.connector.Connector> connectorList12 = tomcatEmbeddedServletContainerFactory0.getAdditionalTomcatConnectors();
        tomcatEmbeddedServletContainerFactory0.setPort((-1));
        java.util.Collection<org.apache.catalina.Valve> valveCollection15 = tomcatEmbeddedServletContainerFactory0.getValves();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-8" + "'", str3, "UTF-8");
        org.junit.Assert.assertNotNull(mimeMappings6);
        org.junit.Assert.assertNull(file7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8080 + "'", int8 == 8080);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(connectorList12);
        org.junit.Assert.assertNotNull(valveCollection15);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory tomcatEmbeddedServletContainerFactory0 = new org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory();
        tomcatEmbeddedServletContainerFactory0.setTldSkip("hi!");
        boolean boolean3 = tomcatEmbeddedServletContainerFactory0.isRegisterDefaultServlet();
        int int4 = tomcatEmbeddedServletContainerFactory0.getSessionTimeout();
        tomcatEmbeddedServletContainerFactory0.setSessionTimeout((int) (short) -1);
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer tomcatConnectorCustomizer7 = null;
        org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] tomcatConnectorCustomizerArray8 = new org.springframework.boot.context.embedded.tomcat.TomcatConnectorCustomizer[] { tomcatConnectorCustomizer7 };
        tomcatEmbeddedServletContainerFactory0.addConnectorCustomizers(tomcatConnectorCustomizerArray8);
        java.util.Set<org.springframework.boot.context.embedded.ErrorPage> errorPageSet10 = tomcatEmbeddedServletContainerFactory0.getErrorPages();
        java.net.InetAddress inetAddress11 = tomcatEmbeddedServletContainerFactory0.getAddress();
        java.lang.String str12 = tomcatEmbeddedServletContainerFactory0.getUriEncoding();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(tomcatConnectorCustomizerArray8);
        org.junit.Assert.assertNotNull(errorPageSet10);
        org.junit.Assert.assertNull(inetAddress11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-8" + "'", str12, "UTF-8");
    }
}

